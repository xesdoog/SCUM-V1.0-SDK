// Class ConZ.AbandonedBunkerConnectionSetup
// Size: 0x40 (Inherited: 0x30)
struct UAbandonedBunkerConnectionSetup : UDataAsset {
	struct TArray<struct FAbandonedBunkerConnectionBinding> Bindings; // 0x30(0x10)
};

// Class ConZ.ExamineMeshNotify
// Size: 0x28 (Inherited: 0x28)
struct UExamineMeshNotify : UObject {
};

// Class ConZ.ExamineMeshNotify_BoundToAbandonedBunkerActivation
// Size: 0x28 (Inherited: 0x28)
struct UExamineMeshNotify_BoundToAbandonedBunkerActivation : UExamineMeshNotify {
};

// Class ConZ.AbandonedBunker
// Size: 0x570 (Inherited: 0x220)
struct AAbandonedBunker : AActor {
	char pad_220[0xe8]; // 0x220(0xe8)
	struct UBillboardComponent* _sprite; // 0x308(0x08)
	bool _secretBunker; // 0x310(0x01)
	char pad_311[0x3]; // 0x311(0x03)
	float _reducedKeycardDurationSeconds; // 0x314(0x04)
	float _miuntesUntilResetAfterNoPlayersNearby; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct UDoorUnlockData* _masterKeycardUnlockData; // 0x320(0x08)
	struct TArray<struct FAbandonedBunkerFloorSetup> _floorSetup; // 0x328(0x10)
	struct UAbandonedBunkerConnectionSetup* _connectionSetup; // 0x338(0x08)
	struct FGameplayTagContainer _alwaysPoweredRooms; // 0x340(0x20)
	float _alarmDuration; // 0x360(0x04)
	struct TWeakObjectPtr<struct ABuilding> _killboxRoom; // 0x364(0x08)
	struct FGameplayTag _killboxRoomTag; // 0x36c(0x08)
	float _managerDescriptionReplicatedNoiseNormalized; // 0x374(0x04)
	struct TArray<uint16_t> _poweredRoomIds; // 0x378(0x10)
	struct TArray<uint16_t> _alarmedRoomIds; // 0x388(0x10)
	struct TArray<struct FTransform> _knockoutTeleportLocationTransforms; // 0x398(0x10)
	float _prisonerKnockoutDurationOnLock; // 0x3a8(0x04)
	char pad_3AC[0x8c]; // 0x3ac(0x8c)
	struct FActivationReservation _temporaryOverrideActivationReservation; // 0x438(0x18)
	struct FActivationReservation _currentActivationReservation; // 0x450(0x18)
	char pad_468[0x10]; // 0x468(0x10)
	struct UAbandonedBunkerZoneManagerComponent* _abandonedBunkerManagerComponent; // 0x478(0x08)
	struct UNavigationInvokerComponent* _razorNavigationInvokerComponent; // 0x480(0x08)
	char pad_488[0xe8]; // 0x488(0xe8)

	void OnRep_PoweredRoomIds(struct TArray<uint16_t>& oldPoweredRoomIds); // Function ConZ.AbandonedBunker.OnRep_PoweredRoomIds // (Final|Native|Private|HasOutParms) // @ game+0x2330400
	void OnRep_AlarmedRoomIds(struct TArray<uint16_t>& oldAlarmedRoomIds); // Function ConZ.AbandonedBunker.OnRep_AlarmedRoomIds // (Final|Native|Private|HasOutParms) // @ game+0x2330310
	void OnRep_ActivationReservationOverride(); // Function ConZ.AbandonedBunker.OnRep_ActivationReservationOverride // (Final|Native|Private) // @ game+0x23302f0
	void OnRep_ActivationReservation(); // Function ConZ.AbandonedBunker.OnRep_ActivationReservation // (Final|Native|Private) // @ game+0x23302f0
	void NetMulticast_SetPartialOpenRatioDoorComponent(struct UAbandonedBunkerDoorComponent* doorComponent, float Ratio); // Function ConZ.AbandonedBunker.NetMulticast_SetPartialOpenRatioDoorComponent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2330210
};

// Class ConZ.AbandonedBunkerActivationRegistry
// Size: 0x118 (Inherited: 0xb0)
struct UAbandonedBunkerActivationRegistry : UActorComponent {
	char pad_B0[0x68]; // 0xb0(0x68)
};

// Class ConZ.AbandonedBunkerBCUMemoryModuleTerminal
// Size: 0x278 (Inherited: 0x220)
struct AAbandonedBunkerBCUMemoryModuleTerminal : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _mesh; // 0x228(0x08)
	struct UStaticMeshComponent* _progressBarMesh; // 0x230(0x08)
	struct FTimespan _cooldown; // 0x238(0x08)
	struct FDateTime _lastDownloadTime; // 0x240(0x08)
	char pad_248[0x10]; // 0x248(0x10)
	float _downloadActionDuration; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct UAkAudioEvent* _downloadActionStartAudio; // 0x260(0x08)
	struct UAkAudioEvent* _downloadActionStopAudio; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)

	void OnRep_LastDownloadTime(); // Function ConZ.AbandonedBunkerBCUMemoryModuleTerminal.OnRep_LastDownloadTime // (Final|Native|Private) // @ game+0x23303e0
};

// Class ConZ.AbandonedBunkerDialPad
// Size: 0x2e8 (Inherited: 0x220)
struct AAbandonedBunkerDialPad : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct ADialPadMinigame* _minigameClass; // 0x228(0x08)
	struct UDialPadMinigameConfiguration* _minigameConfigurationClass; // 0x230(0x08)
	struct AMinigame* _hackingMinigameClass; // 0x238(0x08)
	struct UMinigameConfiguration* _hackingMinigameConfiguration; // 0x240(0x08)
	struct ADoor* _connectedDoor; // 0x248(0x08)
	struct FLinearColor _lockedColor; // 0x250(0x10)
	struct FLinearColor _unlockedColor; // 0x260(0x10)
	struct FLinearColor _offColor; // 0x270(0x10)
	int32_t _combinationLength; // 0x280(0x04)
	float _minigameBaseDuration; // 0x284(0x04)
	struct TArray<char> _wornButtons; // 0x288(0x10)
	char pad_298[0x50]; // 0x298(0x50)

	void OnRep_WornButtons(); // Function ConZ.AbandonedBunkerDialPad.OnRep_WornButtons // (Final|Native|Private) // @ game+0x23304b0
};

// Class ConZ.AbandonedBunkerDoorComponent
// Size: 0x580 (Inherited: 0x500)
struct UAbandonedBunkerDoorComponent : UStaticMeshComponent {
	struct ADoor* _outerDoor; // 0x500(0x08)
	enum class EDoorOpenMethod _doorOpenMethod; // 0x508(0x01)
	char pad_509[0x3]; // 0x509(0x03)
	int32_t _doorManualOpenMethod; // 0x50c(0x04)
	bool _canAlwaysBeOpenedDuringDay; // 0x510(0x01)
	char pad_511[0x3]; // 0x511(0x03)
	struct FVector _directionTowardsInside; // 0x514(0x0c)
	bool _canAlwaysBeOpenedFromInside; // 0x520(0x01)
	char pad_521[0x3]; // 0x521(0x03)
	struct FGameplayTag _roomId; // 0x524(0x08)
	float _manualOpenActionMovementAcceptanceRadius; // 0x52c(0x04)
	float _manualOpenActionBaseDuration; // 0x530(0x04)
	float _manualOpenDurationReductionPerStrengthPoint; // 0x534(0x04)
	float _manualOpenMinimumDuration; // 0x538(0x04)
	float _forceOpenCrowbarDamage; // 0x53c(0x04)
	float _manualOpenAutoCloseDelay; // 0x540(0x04)
	char pad_544[0x4]; // 0x544(0x04)
	struct AMinigame* _hackingMinigameClass; // 0x548(0x08)
	struct UMinigameConfiguration* _hackingMinigameConfiguration; // 0x550(0x08)
	char pad_558[0x28]; // 0x558(0x28)

	void Door_OnDoorOpened(); // Function ConZ.AbandonedBunkerDoorComponent.Door_OnDoorOpened // (Final|Native|Private) // @ game+0x2330010
};

// Class ConZ.ItemContainer
// Size: 0x330 (Inherited: 0x220)
struct AItemContainer : AActor {
	char pad_220[0x10]; // 0x220(0x10)
	struct USceneComponent* _rootComponent; // 0x230(0x08)
	bool _canBeForceUnlocked; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float _forceUnlockTime; // 0x23c(0x04)
	float _forceUnlockMovementAcceptanceRadius; // 0x240(0x04)
	char pad_244[0xc]; // 0x244(0x0c)
	struct FUnlockLocation _unlockPositionMarker; // 0x250(0x30)
	char pad_280[0x8]; // 0x280(0x08)
	struct TArray<struct UObject*> _upgradeItemsClasses; // 0x288(0x10)
	struct TArray<struct ULockData*> _lockData; // 0x298(0x10)
	char pad_2A8[0x10]; // 0x2a8(0x10)
	struct TArray<struct UObject*> _originalUpgradeItemClasses; // 0x2b8(0x10)
	struct TArray<struct ULockData*> _originalLockData; // 0x2c8(0x10)
	bool _ignoreServerSettings; // 0x2d8(0x01)
	char pad_2D9[0x28]; // 0x2d9(0x28)
	bool _disableSerialization; // 0x301(0x01)
	char pad_302[0x2]; // 0x302(0x02)
	struct FGameplayTag _famePointAwardTag; // 0x304(0x08)
	char pad_30C[0x24]; // 0x30c(0x24)
};

// Class ConZ.AbandonedBunkerItemContainerBoundToActivation
// Size: 0x340 (Inherited: 0x330)
struct AAbandonedBunkerItemContainerBoundToActivation : AItemContainer {
	char pad_330[0x10]; // 0x330(0x10)
};

// Class ConZ.AbandonedBunkerLightComponent
// Size: 0x170 (Inherited: 0xb0)
struct UAbandonedBunkerLightComponent : UActorComponent {
	enum class EBunkerLightControlType _controlType; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float _blinkPeriodWhenLowPower; // 0xb4(0x04)
	bool _autoFindLightComponents; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct TArray<struct ULightComponent*> _lightComponents; // 0xc0(0x10)
	char pad_D0[0x10]; // 0xd0(0x10)
	bool _autoFindMeshComponents; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct TArray<struct UStaticMeshComponent*> _meshComponents; // 0xe8(0x10)
	char pad_F8[0x10]; // 0xf8(0x10)
	bool _autoFindParticleComponents; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct TArray<struct UParticleSystemComponent*> _particleComponents; // 0x110(0x10)
	bool _autoFindNiagaraComponents; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct TArray<struct UNiagaraComponent*> _niagaraComponents; // 0x128(0x10)
	bool _autoFindAudioComponents; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct TArray<struct UAkComponent*> _audioComponents; // 0x140(0x10)
	struct UAkAudioEvent* _audioEventStart; // 0x150(0x08)
	struct UAkAudioEvent* _audioEventStop; // 0x158(0x08)
	char pad_160[0x10]; // 0x160(0x10)
};

// Class ConZ.LWObjectSetup
// Size: 0x30 (Inherited: 0x28)
struct ULWObjectSetup : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.EntitySystemObjectSetup
// Size: 0x40 (Inherited: 0x30)
struct UEntitySystemObjectSetup : ULWObjectSetup {
	bool TickEnabled; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float TickInterval; // 0x34(0x04)
	bool CanEverTickOnServer; // 0x38(0x01)
	bool CanEverTickOnClient; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// Class ConZ.EntitySetup
// Size: 0x80 (Inherited: 0x40)
struct UEntitySetup : UEntitySystemObjectSetup {
	bool Transient; // 0x40(0x01)
	bool Hidden; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	float BoundsRadius; // 0x44(0x04)
	struct TSoftClassPtr<UObject> Actor; // 0x48(0x28)
	struct TArray<struct FEntitySetup_Component> Components; // 0x70(0x10)
};

// Class ConZ.AbandonedBunkerManagerSetup
// Size: 0x80 (Inherited: 0x80)
struct UAbandonedBunkerManagerSetup : UEntitySetup {
};

// Class ConZ.AbandonedBunkerSwitchboard
// Size: 0x360 (Inherited: 0x220)
struct AAbandonedBunkerSwitchboard : AActor {
	char pad_220[0x50]; // 0x220(0x50)
	struct TArray<enum class ESwitchboardSwitch> _disabledSwitches; // 0x270(0x10)
	struct USwitchboardComponent* _switchboardComponent; // 0x280(0x08)
	struct UGaugeClusterComponent* _gaugeClusterComponent; // 0x288(0x08)
	bool _isMasterSwitchboard; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float _defaultLoadWhenPowered; // 0x294(0x04)
	float _defaultLoadDuringBlackout; // 0x298(0x04)
	float _fuseHealthLowPowerThreshold; // 0x29c(0x04)
	struct FGameplayTag _defaultFuseGaugeTag; // 0x2a0(0x08)
	struct FGameplayTag _attachedFuseGaugeTag; // 0x2a8(0x08)
	struct FName _fuseAttachmentSocketName; // 0x2b0(0x08)
	struct ASwitchboardMinigame* _masterSwitchboardMinigameClass; // 0x2b8(0x08)
	struct USwitchboardMinigameConfiguration* _masterSwitchboardMinigameConfigurationClass; // 0x2c0(0x08)
	struct ASwitchboardMinigame* _slaveSwitchboardMinigameClass; // 0x2c8(0x08)
	struct USwitchboardMinigameConfiguration* _slaveSwitchboardMinigameConfigurationClass; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct FTransform _decalTransform; // 0x2e0(0x30)
	struct UAkAudioEvent* _switchFlippedAudioEvent; // 0x310(0x08)
	struct UAkAudioEvent* _fuseAddedAudioEvent; // 0x318(0x08)
	struct UAkAudioEvent* _fuseBurnedAudioEvent; // 0x320(0x08)
	float _emissiveStrengthWhenPowered; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct AItem* _repAttachedFuseItem; // 0x330(0x08)
	struct AItem* _attachedFuseItem; // 0x338(0x08)
	char pad_340[0x20]; // 0x340(0x20)

	void OnRep_AttachedFuseItem(); // Function ConZ.AbandonedBunkerSwitchboard.OnRep_AttachedFuseItem // (Final|Native|Private) // @ game+0x23303c0
};

// Class ConZ.AbandonedBunkerZoneBoxComponent
// Size: 0x490 (Inherited: 0x480)
struct UAbandonedBunkerZoneBoxComponent : UBoxComponent {
	struct FGameplayTag _roomId; // 0x480(0x08)
	char pad_488[0x8]; // 0x488(0x08)
};

// Class ConZ.AbandonedBunkerZoneCommonData
// Size: 0x1b0 (Inherited: 0x30)
struct UAbandonedBunkerZoneCommonData : UDataAsset {
	float NoiseAccumulationLevels[0x3]; // 0x30(0x0c)
	float NoiseAccumulationLevelsExtraPerPlayer[0x3]; // 0x3c(0x0c)
	float NoiseLoudnessThreshold; // 0x48(0x04)
	float AccumulatedNoiseCap; // 0x4c(0x04)
	float RoomAlarmNoiseIncreasePerTick; // 0x50(0x04)
	float RoomAlarmNoiseIncreaseTickRate; // 0x54(0x04)
	struct TMap<struct FName, float> NoiseAccumulationMultiplierPerNoiseTag; // 0x58(0x50)
	float TimeToReleaseExtraResources; // 0xa8(0x04)
	float TimeForNoiseLevelToStartDropping; // 0xac(0x04)
	float TimeForNoiseLevelAfterEnemyActivationToStartDropping; // 0xb0(0x04)
	float NoiseDropRatePerSecond; // 0xb4(0x04)
	float TimeForPlayerNoiseToStartDropping; // 0xb8(0x04)
	float PlayerNoiseDropRatePerSecond; // 0xbc(0x04)
	float BunkerComponentResetTime; // 0xc0(0x04)
	float CommotionEventCooldownMin; // 0xc4(0x04)
	float CommotionEventCooldownMax; // 0xc8(0x04)
	float RazorSpawnPointEnemyActivationDistance; // 0xcc(0x04)
	struct FFloatRange EnemyActivationEventCooldownRange; // 0xd0(0x10)
	struct FFloatRange EnemyActivationEventRespawnCooldownRange; // 0xe0(0x10)
	float TimeAfterReturningFromEnemyActivationStateBeforeSpawnCooldownResets; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct TSoftClassPtr<UObject> RazorClass; // 0xf8(0x28)
	struct TSoftClassPtr<UObject> BrennerClass; // 0x120(0x28)
	struct FInt32Range NaturalRazorLimitRange; // 0x148(0x10)
	int32_t NaturalRazorLimitPlayerCap; // 0x158(0x04)
	int32_t ExtraNaturalRazorsPerPlayer; // 0x15c(0x04)
	float MinDistanceBetweenRazorsWhenSpawning; // 0x160(0x04)
	struct FInt32Range VentilationRazorLimitRange; // 0x164(0x10)
	struct FInt32Interval VentilationRazorsSpawnedPerAlarmEvent; // 0x174(0x08)
	int32_t VentilationRazorLimitPlayerCap; // 0x17c(0x04)
	int32_t ExtraVentilationRazorsPerPlayer; // 0x180(0x04)
	int32_t MaxRazorCorpsesPerZone; // 0x184(0x04)
	float RazorCorpseRemovalCheckInterval; // 0x188(0x04)
	float TimeToNormalRazorSpawnRazorRespawn; // 0x18c(0x04)
	struct UEncounterSpawnAirborneCharacters* DropshipSentryEncounterClass; // 0x190(0x08)
	struct AActor* SentryNavigationInvokerClass; // 0x198(0x08)
	float EncounterSpawnChanceUponAlarmTrigger; // 0x1a0(0x04)
	float MinDistanceBetweenEnemyAndPlayerWhenSpawning; // 0x1a4(0x04)
	struct FGameplayTag VaultRoomId; // 0x1a8(0x08)
};

// Class ConZ.AbandonedBunkerZoneManagerComponent
// Size: 0x250 (Inherited: 0x200)
struct UAbandonedBunkerZoneManagerComponent : USceneComponent {
	char pad_200[0x8]; // 0x200(0x08)
	struct TArray<struct FTransform> _razorNormalSpawnTransforms; // 0x208(0x10)
	struct TArray<struct ARazorSpawnPoint*> _razorSpawnPoints; // 0x218(0x10)
	struct TArray<struct FTransform> _brennerSpawnPoints; // 0x228(0x10)
	struct FVector _dropshipSentryEncounterSpawnLocation; // 0x238(0x0c)
	float _sentryNavigationInvokerGenerationRadius; // 0x244(0x04)
	char pad_248[0x8]; // 0x248(0x08)
};

// Class ConZ.AchievementsManagerClient
// Size: 0x2b8 (Inherited: 0x220)
struct AAchievementsManagerClient : AActor {
	char pad_220[0x98]; // 0x220(0x98)
};

// Class ConZ.AchievementsManagerServer
// Size: 0x298 (Inherited: 0x220)
struct AAchievementsManagerServer : AActor {
	char pad_220[0x78]; // 0x220(0x78)
};

// Class ConZ.ActionProgressWidget
// Size: 0x2e0 (Inherited: 0x268)
struct UActionProgressWidget : UUserWidget {
	struct FMulticastInlineDelegate ActionProgressFinishedEvent; // 0x268(0x10)
	struct FMulticastInlineDelegate ActionProgressCancelledEvent; // 0x278(0x10)
	bool CanCancel; // 0x288(0x01)
	char pad_289[0xb]; // 0x289(0x0b)
	float _currentTime; // 0x294(0x04)
	float _duration; // 0x298(0x04)
	bool _manualMode; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	struct UImage* Progress; // 0x2a0(0x08)
	struct UImage* Cancel; // 0x2a8(0x08)
	struct UTextBlock* PercentageText; // 0x2b0(0x08)
	struct UTextBlock* Percent; // 0x2b8(0x08)
	char pad_2C0[0x20]; // 0x2c0(0x20)

	void UnPauseProgress(); // Function ConZ.ActionProgressWidget.UnPauseProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x2330570
	void SetProgress(float Progress); // Function ConZ.ActionProgressWidget.SetProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x23304f0
	void PauseProgress(); // Function ConZ.ActionProgressWidget.PauseProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x23304d0
	void OnActionProgressFinishedEvent__DelegateSignature(); // DelegateFunction ConZ.ActionProgressWidget.OnActionProgressFinishedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnActionProgressCancelledEvent__DelegateSignature(); // DelegateFunction ConZ.ActionProgressWidget.OnActionProgressCancelledEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void ExecuteAction(); // Function ConZ.ActionProgressWidget.ExecuteAction // (Final|Native|Public|BlueprintCallable) // @ game+0x2330030
	void CancelAction(); // Function ConZ.ActionProgressWidget.CancelAction // (Final|Native|Public|BlueprintCallable) // @ game+0x232fff0
};

// Class ConZ.ActorStatics
// Size: 0x28 (Inherited: 0x28)
struct UActorStatics : UBlueprintFunctionLibrary {

	struct UActorComponent* GetActorComponentByName(struct AActor* Actor, struct FName& Name); // Function ConZ.ActorStatics.GetActorComponentByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2330130
	struct FVector GetActorBoundsCenter(struct AActor* Actor, bool onlyCollidingComponents); // Function ConZ.ActorStatics.GetActorBoundsCenter // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2330050
};

// Class ConZ.ActorWithRepGraphPolicy_RelevantToSomeConnections
// Size: 0x28 (Inherited: 0x28)
struct UActorWithRepGraphPolicy_RelevantToSomeConnections : UInterface {
};

// Class ConZ.AdjustableSeparator
// Size: 0x288 (Inherited: 0x268)
struct UAdjustableSeparator : UUserWidget {
	struct USizeBox* _slotSizeBox; // 0x268(0x08)
	struct UNamedSlot* _divider; // 0x270(0x08)
	float _slotMinHeight; // 0x278(0x04)
	float _slotMaxHeight; // 0x27c(0x04)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.AdminCommand
// Size: 0xa0 (Inherited: 0x28)
struct UAdminCommand : UObject {
	struct FString _verb; // 0x28(0x10)
	struct TArray<struct FAdminCommandArgumentDescription> _argumentDescriptions; // 0x38(0x10)
	int32_t _numberOfRequiredArguments; // 0x48(0x04)
	int32_t _numberOfRepeatingArguments; // 0x4c(0x04)
	bool _isEnabled; // 0x50(0x01)
	bool _isEnabledInShippingBuild; // 0x51(0x01)
	enum class EExecutorStatus _requiredExecutorLevel; // 0x52(0x01)
	bool _shouldExecuteOnServer; // 0x53(0x01)
	bool _shouldExecuteOnClient; // 0x54(0x01)
	bool _shouldDisableSingleplayerAchievementsIfExecuted; // 0x55(0x01)
	bool _hasCooldown; // 0x56(0x01)
	char pad_57[0x1]; // 0x57(0x01)
	float _cooldown; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct FText _description; // 0x60(0x18)
	char pad_78[0x28]; // 0x78(0x28)
};

// Class ConZ.AdminCommand_AddOrRemoveWidget
// Size: 0xf0 (Inherited: 0xa0)
struct UAdminCommand_AddOrRemoveWidget : UAdminCommand {
	struct TMap<struct FName, struct UUserWidget*> _widgetClassesByName; // 0xa0(0x50)
};

// Class ConZ.AdminCommand_AddPrisonerBodyEffect
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_AddPrisonerBodyEffect : UAdminCommand {
	struct UPrisonerBodyEffect* _bodyEffectClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_AdminLight
// Size: 0xb0 (Inherited: 0xa0)
struct UAdminCommand_AdminLight : UAdminCommand {
	struct UAdminLight* _adminLightComponent; // 0xa0(0x08)
	float _maxIntensityMultiplier; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class ConZ.AdminCommand_Announce
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Announce : UAdminCommand {
};

// Class ConZ.AdminCommand_BanPlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_BanPlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_BoatDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_BoatDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_CancelVote
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_CancelVote : UAdminCommand {
};

// Class ConZ.AdminCommand_ChangeCurrencyBalance
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ChangeCurrencyBalance : UAdminCommand {
};

// Class ConZ.AdminCommand_ChangeCurrencyBalanceToAll
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ChangeCurrencyBalanceToAll : UAdminCommand {
};

// Class ConZ.AdminCommand_ChangeCurrencyBalanceToAllOnline
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ChangeCurrencyBalanceToAllOnline : UAdminCommand {
};

// Class ConZ.AdminCommand_ChangeFamePoints
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ChangeFamePoints : UAdminCommand {
};

// Class ConZ.AdminCommand_CheckServerTime
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_CheckServerTime : UAdminCommand {
};

// Class ConZ.AdminCommand_ClearEncounterCooldowns
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ClearEncounterCooldowns : UAdminCommand {
};

// Class ConZ.AdminCommand_ClearFakeName
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ClearFakeName : UAdminCommand {
};

// Class ConZ.AdminCommand_CookRecipe
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_CookRecipe : UAdminCommand {
	struct UCookingRecipe* _recipe; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_CrashMajestically
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_CrashMajestically : UAdminCommand {
};

// Class ConZ.AdminCommand_CreateEntity
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_CreateEntity : UAdminCommand {
};

// Class ConZ.AdminCommand_DebugWeapon
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DebugWeapon : UAdminCommand {
};

// Class ConZ.AdminCommand_DemolitionSkillDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DemolitionSkillDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyAllFlagsForPlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyAllFlagsForPlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyAllItemsWithinRadius
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyAllItemsWithinRadius : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyAllRazorsWithinRadius
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyAllRazorsWithinRadius : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyAllVehicles
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyAllVehicles : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyCorpsesWithinRadius
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyCorpsesWithinRadius : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyEncountersAtPlayerLocation
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyEncountersAtPlayerLocation : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyEntity
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyEntity : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyFlag
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyFlag : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyVehicle
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyVehicle : UAdminCommand {
};

// Class ConZ.AdminCommand_DestroyZombiesWithinRadius
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DestroyZombiesWithinRadius : UAdminCommand {
};

// Class ConZ.AdminCommand_DisablePrisonerBodyEffects
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DisablePrisonerBodyEffects : UAdminCommand {
};

// Class ConZ.AdminCommand_DistanceDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DistanceDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_DoorDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DoorDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_DrawDebugZombieCapsulesOnLegacySpawnPoints
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DrawDebugZombieCapsulesOnLegacySpawnPoints : UAdminCommand {
};

// Class ConZ.AdminCommand_DrawNearbyEncounters
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DrawNearbyEncounters : UAdminCommand {
};

// Class ConZ.AdminCommand_DrawSentryHealthBar
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DrawSentryHealthBar : UAdminCommand {
};

// Class ConZ.AdminCommand_DumpAllSquadsInfoList
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DumpAllSquadsInfoList : UAdminCommand {
};

// Class ConZ.AdminCommand_DumpEncounterManagerData
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DumpEncounterManagerData : UAdminCommand {
};

// Class ConZ.AdminCommand_DumpWetnessDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_DumpWetnessDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_GrantElevatedStatus
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_GrantElevatedStatus : UAdminCommand {
};

// Class ConZ.AdminCommand_RevokeElevatedStatus
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_RevokeElevatedStatus : UAdminCommand {
};

// Class ConZ.AdminCommand_EnableAdminViolations
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_EnableAdminViolations : UAdminCommand {
};

// Class ConZ.AdminCommand_EnableHuntingClueDebugArrow
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_EnableHuntingClueDebugArrow : UAdminCommand {
};

// Class ConZ.AdminCommand_EnableOrDisableServer
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_EnableOrDisableServer : UAdminCommand {
	bool _shouldEnableServer; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class ConZ.AdminCommand_EndTournamentMode
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_EndTournamentMode : UAdminCommand {
};

// Class ConZ.AdminCommand_EnhancedPhotoMode
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_EnhancedPhotoMode : UAdminCommand {
};

// Class ConZ.AdminCommand_EquipParachute
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_EquipParachute : UAdminCommand {
	struct AClothesItem* _parachuteClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_ExecuteConsoleCommand
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExecuteConsoleCommand : UAdminCommand {
};

// Class ConZ.AdminCommand_ExecutePrisonerBodyConditionInteraction
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExecutePrisonerBodyConditionInteraction : UAdminCommand {
};

// Class ConZ.AdminCommand_ExportDefaultItemSpawnerPresets
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExportDefaultItemSpawnerPresets : UAdminCommand {
};

// Class ConZ.AdminCommand_ExportDefaultItemSpawningCooldownGroups
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExportDefaultItemSpawningCooldownGroups : UAdminCommand {
};

// Class ConZ.AdminCommand_ExportDefaultItemSpawningParameters
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExportDefaultItemSpawningParameters : UAdminCommand {
};

// Class ConZ.AdminCommand_ExportItemLootTree
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_ExportItemLootTree : UAdminCommand {
	enum class EItemLootTreeToExport _lootTreeToExport; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class ConZ.AdminCommand_ExportItemSpawnerPresetsInZone
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExportItemSpawnerPresetsInZone : UAdminCommand {
};

// Class ConZ.AdminCommand_ExportQuests
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ExportQuests : UAdminCommand {
};

// Class ConZ.AdminCommand_FindSquadMember
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_FindSquadMember : UAdminCommand {
};

// Class ConZ.AdminCommand_ForceBBEncounterOnNearbyOwnedBase
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ForceBBEncounterOnNearbyOwnedBase : UAdminCommand {
};

// Class ConZ.AdminCommand_ForceEncounterAtPlayerLocation
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_ForceEncounterAtPlayerLocation : UAdminCommand {
	struct UEncounterBase* _encounterClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_GetMeshInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_GetMeshInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_GetUserID
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_GetUserID : UAdminCommand {
};

// Class ConZ.AdminCommand_GetUserIDByRank
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_GetUserIDByRank : UAdminCommand {
};

// Class ConZ.AdminCommand_KickPlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_KickPlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_KnockoutPrisoner
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_KnockoutPrisoner : UAdminCommand {
};

// Class ConZ.AdminCommand_LeaveCorpse
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_LeaveCorpse : UAdminCommand {
};

// Class ConZ.AdminCommand_ListActiveAbandonedBunkers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListActiveAbandonedBunkers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListActiveHunts
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListActiveHunts : UAdminCommand {
};

// Class ConZ.AdminCommand_ListActiveSecretBunkers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListActiveSecretBunkers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListFlags
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListFlags : UAdminCommand {
};

// Class ConZ.AdminCommand_ListItemsSpawnLocations
// Size: 0xe0 (Inherited: 0xa0)
struct UAdminCommand_ListItemsSpawnLocations : UAdminCommand {
	struct FSearchItemSpawnerPresetArray _itemSpawnerPresets[0x2]; // 0xa0(0x20)
	struct FSearchItemClassesArray _itemClasses[0x2]; // 0xc0(0x20)
};

// Class ConZ.AdminCommand_ListMutedPlayers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListMutedPlayers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListPlayers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListPlayers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListPrimaryAssets
// Size: 0xf8 (Inherited: 0xa0)
struct UAdminCommand_ListPrimaryAssets : UAdminCommand {
	struct FPrimaryAssetType _primaryAssetType; // 0xa0(0x08)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude; // 0xa8(0x50)
};

// Class ConZ.AdminCommand_ListPrisonerBodyConditionInteractions
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListPrisonerBodyConditionInteractions : UAdminCommand {
};

// Class ConZ.AdminCommand_ListPrisonerBodyEffects
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_ListPrisonerBodyEffects : UAdminCommand {
	struct UPrisonerBodyEffect* _bodyEffectClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_ListPrisonerForeignSubstances
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListPrisonerForeignSubstances : UAdminCommand {
};

// Class ConZ.AdminCommand_ListSilencedPlayers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListSilencedPlayers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListSpawnedAnimals
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListSpawnedAnimals : UAdminCommand {
};

// Class ConZ.AdminCommand_ListSpawnedVehicles
// Size: 0x1a0 (Inherited: 0xa0)
struct UAdminCommand_ListSpawnedVehicles : UAdminCommand {
	struct FGameplayTagContainer _vehicleSpawnGroupsByCategory[0x8]; // 0xa0(0x100)
};

// Class ConZ.AdminCommand_ListSquadMembers
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListSquadMembers : UAdminCommand {
};

// Class ConZ.AdminCommand_ListSquads
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListSquads : UAdminCommand {
};

// Class ConZ.AdminCommand_ListWeatherControllerOverrides
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ListWeatherControllerOverrides : UAdminCommand {
};

// Class ConZ.AdminCommand_Location
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Location : UAdminCommand {
};

// Class ConZ.AdminCommand_Loot
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Loot : UAdminCommand {
};

// Class ConZ.AdminCommand_MapTeleport
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_MapTeleport : UAdminCommand {
};

// Class ConZ.AdminCommand_MutePlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_MutePlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_PlacementDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_PlacementDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_PlayerInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_PlayerInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_PrintEntities
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_PrintEntities : UAdminCommand {
};

// Class ConZ.AdminCommand_PrintGlobalRaidProtectionRaidTimes
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_PrintGlobalRaidProtectionRaidTimes : UAdminCommand {
};

// Class ConZ.AdminCommand_Quests
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Quests : UAdminCommand {
};

// Class ConZ.AdminCommand_RandomizePriceDeltas
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_RandomizePriceDeltas : UAdminCommand {
};

// Class ConZ.AdminCommand_ReloadCustomMapConfig
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ReloadCustomMapConfig : UAdminCommand {
};

// Class ConZ.AdminCommand_ReloadLootCustomizationsAndResetSpawners
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ReloadLootCustomizationsAndResetSpawners : UAdminCommand {
};

// Class ConZ.AdminCommand_RemovePrisonerBodyEffect
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_RemovePrisonerBodyEffect : UAdminCommand {
	struct UPrisonerBodyEffect* _bodyEffectClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_RenameVehicle
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_RenameVehicle : UAdminCommand {
};

// Class ConZ.AdminCommand_ReportDesync
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ReportDesync : UAdminCommand {
};

// Class ConZ.AdminCommand_ResetAchievements
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ResetAchievements : UAdminCommand {
};

// Class ConZ.AdminCommand_ResetEconomy
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ResetEconomy : UAdminCommand {
};

// Class ConZ.AdminCommand_ResetSquadInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ResetSquadInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_ScheduleCargoDrop
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ScheduleCargoDrop : UAdminCommand {
};

// Class ConZ.AdminCommand_ScheduleWorldEvent
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ScheduleWorldEvent : UAdminCommand {
};

// Class ConZ.AdminCommand_SendNotification
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SendNotification : UAdminCommand {
};

// Class ConZ.AdminCommand_SetAchievementUnlocked
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetAchievementUnlocked : UAdminCommand {
};

// Class ConZ.AdminCommand_SetAIInvisibility
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetAIInvisibility : UAdminCommand {
};

// Class ConZ.AdminCommand_SetAirplaneMaxVelocity
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetAirplaneMaxVelocity : UAdminCommand {
};

// Class ConZ.AdminCommand_SetAllInventoryAccess
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetAllInventoryAccess : UAdminCommand {
};

// Class ConZ.AdminCommand_SetCraftingSearch
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetCraftingSearch : UAdminCommand {
};

// Class ConZ.AdminCommand_SetCurrencyBalance
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetCurrencyBalance : UAdminCommand {
};

// Class ConZ.AdminCommand_SetCurrencyBalanceToAll
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetCurrencyBalanceToAll : UAdminCommand {
};

// Class ConZ.AdminCommand_SetCurrencyBalanceToAllOnline
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetCurrencyBalanceToAllOnline : UAdminCommand {
};

// Class ConZ.AdminCommand_SetDecayTimeDilation
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetDecayTimeDilation : UAdminCommand {
};

// Class ConZ.AdminCommand_SetDeluxeVersion
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetDeluxeVersion : UAdminCommand {
};

// Class ConZ.AdminCommand_SetFakeName
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetFakeName : UAdminCommand {
};

// Class ConZ.AdminCommand_SetFamePoints
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetFamePoints : UAdminCommand {
};

// Class ConZ.AdminCommand_SetFamePointsToAll
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetFamePointsToAll : UAdminCommand {
};

// Class ConZ.AdminCommand_SetFamePointsToAllOnline
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetFamePointsToAllOnline : UAdminCommand {
};

// Class ConZ.AdminCommand_SetFarmingSimulationSpeed
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetFarmingSimulationSpeed : UAdminCommand {
};

// Class ConZ.AdminCommand_SetGardenNutrientsHigh
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetGardenNutrientsHigh : UAdminCommand {
};

// Class ConZ.AdminCommand_SetGardenPlantGrowthStage
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetGardenPlantGrowthStage : UAdminCommand {
};

// Class ConZ.AdminCommand_SetGardenPlantingTime
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetGardenPlantingTime : UAdminCommand {
};

// Class ConZ.AdminCommand_SetGender
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetGender : UAdminCommand {
};

// Class ConZ.AdminCommand_SetGodMode
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetGodMode : UAdminCommand {
};

// Class ConZ.AdminCommand_SetHealthToItemInHands
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetHealthToItemInHands : UAdminCommand {
};

// Class ConZ.AdminCommand_SetInfiniteAmmo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetInfiniteAmmo : UAdminCommand {
};

// Class ConZ.AdminCommand_SetItemDebugMode
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetItemDebugMode : UAdminCommand {
};

// Class ConZ.AdminCommand_SetMalfunctionProbability
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetMalfunctionProbability : UAdminCommand {
};

// Class ConZ.AdminCommand_SetMountedVehicleProperty
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetMountedVehicleProperty : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerAttributes
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerAttributes : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerBladderVolume
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerBladderVolume : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerExhaustion
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerExhaustion : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerImmortality
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerImmortality : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerInfiniteOxygen
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerInfiniteOxygen : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerInfiniteStamina
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerInfiniteStamina : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerMetabolismSimulationSpeed
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerMetabolismSimulationSpeed : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerStamina
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerStamina : UAdminCommand {
};

// Class ConZ.AdminCommand_SetPrisonerStomachVolume
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetPrisonerStomachVolume : UAdminCommand {
};

// Class ConZ.AdminCommand_SetReplishableResourceAmount
// Size: 0xb0 (Inherited: 0xa0)
struct UAdminCommand_SetReplishableResourceAmount : UAdminCommand {
	float _defaultAreaOfEffect; // 0xa0(0x04)
	float _minAreaOfEffect; // 0xa4(0x04)
	float _maxAreaOfEffect; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class ConZ.AdminCommand_SetShouldPrintExamineSpawnerPresets
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetShouldPrintExamineSpawnerPresets : UAdminCommand {
};

// Class ConZ.AdminCommand_SetSkillLevel
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetSkillLevel : UAdminCommand {
};

// Class ConZ.AdminCommand_SetSuperJump
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetSuperJump : UAdminCommand {
};

// Class ConZ.AdminCommand_SetTime
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetTime : UAdminCommand {
};

// Class ConZ.AdminCommand_SetTimeSpeed
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetTimeSpeed : UAdminCommand {
};

// Class ConZ.AdminCommand_SetWeather
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetWeather : UAdminCommand {
};

// Class ConZ.AdminCommand_SetWeatherControllerOverrideActive
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetWeatherControllerOverrideActive : UAdminCommand {
};

// Class ConZ.AdminCommand_SetWeatherControllerOverrideValue
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SetWeatherControllerOverrideValue : UAdminCommand {
};

// Class ConZ.AdminCommand_ShouldShowOtherPlayerInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShouldShowOtherPlayerInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_ShouldShowOtherPlayerLocations
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShouldShowOtherPlayerLocations : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowBaseBuildingDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowBaseBuildingDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowFlagInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowFlagInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowFlagLocations
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowFlagLocations : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowNameplates
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowNameplates : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowRespawnTimes
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowRespawnTimes : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowVehicleDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowVehicleDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowVehicleInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowVehicleInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowVehicleLocations
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowVehicleLocations : UAdminCommand {
};

// Class ConZ.AdminCommand_ShowWeaponInfo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShowWeaponInfo : UAdminCommand {
};

// Class ConZ.AdminCommand_ShutdownServer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ShutdownServer : UAdminCommand {
};

// Class ConZ.AdminCommand_SilencePlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SilencePlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_Sleep
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Sleep : UAdminCommand {
};

// Class ConZ.AdminCommand_SpawnAllItems
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SpawnAllItems : UAdminCommand {
};

// Class ConZ.AdminCommand_SpawnPrimaryActorAsset
// Size: 0x120 (Inherited: 0xa0)
struct UAdminCommand_SpawnPrimaryActorAsset : UAdminCommand {
	struct FPrimaryAssetType _primaryAssetType; // 0xa0(0x08)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude; // 0xa8(0x50)
	int32_t _countArgumentMinValue; // 0xf8(0x04)
	int32_t _countArgumentMaxValue; // 0xfc(0x04)
	struct FVector _spawnOffset; // 0x100(0x0c)
	bool _isSpawnedActorCapableOfFalling; // 0x10c(0x01)
	char pad_10D[0x13]; // 0x10d(0x13)
};

// Class ConZ.AdminCommand_SpawnAnimal
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnAnimal : UAdminCommand_SpawnPrimaryActorAsset {
};

// Class ConZ.AdminCommand_SpawnArmedNPC
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnArmedNPC : UAdminCommand_SpawnPrimaryActorAsset {
};

// Class ConZ.AdminCommand_SpawnBrenner
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SpawnBrenner : UAdminCommand {
};

// Class ConZ.AdminCommand_SpawnDebugAnimalTrack
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_SpawnDebugAnimalTrack : UAdminCommand {
	struct FPrimaryAssetType _primaryAssetType; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_SpawnInventoryFullOf
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SpawnInventoryFullOf : UAdminCommand {
};

// Class ConZ.AdminCommand_SpawnItem
// Size: 0x170 (Inherited: 0x120)
struct UAdminCommand_SpawnItem : UAdminCommand_SpawnPrimaryActorAsset {
	char pad_120[0x50]; // 0x120(0x50)
};

// Class ConZ.AdminCommand_SpawnRandomAnimal
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnRandomAnimal : UAdminCommand_SpawnAnimal {
};

// Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnRandomPrimaryActorAsset : UAdminCommand_SpawnPrimaryActorAsset {
};

// Class ConZ.AdminCommand_SpawnZombie
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnZombie : UAdminCommand_SpawnPrimaryActorAsset {
};

// Class ConZ.AdminCommand_SpawnRandomZombie
// Size: 0x120 (Inherited: 0x120)
struct UAdminCommand_SpawnRandomZombie : UAdminCommand_SpawnZombie {
};

// Class ConZ.AdminCommand_SpawnRazor
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_SpawnRazor : UAdminCommand {
};

// Class ConZ.AdminCommand_SpawnReflectionSphere
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_SpawnReflectionSphere : UAdminCommand {
	struct UObject* _actorClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_SpawnVehicle
// Size: 0x128 (Inherited: 0x120)
struct UAdminCommand_SpawnVehicle : UAdminCommand_SpawnPrimaryActorAsset {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.AdminCommand_StartTournamentMode
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_StartTournamentMode : UAdminCommand {
};

// Class ConZ.AdminCommand_Teleport
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Teleport : UAdminCommand {
};

// Class ConZ.AdminCommand_TeleportTo
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TeleportTo : UAdminCommand {
};

// Class ConZ.AdminCommand_TeleportTo3pm
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TeleportTo3pm : UAdminCommand {
};

// Class ConZ.AdminCommand_TeleportToMe
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TeleportToMe : UAdminCommand {
};

// Class ConZ.AdminCommand_TeleportToVehicle
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TeleportToVehicle : UAdminCommand {
};

// Class ConZ.AdminCommand_ToggleFamePointsDebugVisualization
// Size: 0xa8 (Inherited: 0xa0)
struct UAdminCommand_ToggleFamePointsDebugVisualization : UAdminCommand {
	struct UFamePointDebugComponent* _famePointDebugComponentClass; // 0xa0(0x08)
};

// Class ConZ.AdminCommand_ToggleZombieNavigationLogging
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_ToggleZombieNavigationLogging : UAdminCommand {
};

// Class ConZ.AdminCommand_TrackShotsFired
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TrackShotsFired : UAdminCommand {
};

// Class ConZ.AdminCommand_TrapsDebug
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_TrapsDebug : UAdminCommand {
};

// Class ConZ.AdminCommand_UnbanPlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_UnbanPlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_UnmutePlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_UnmutePlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_UnsilencePlayer
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_UnsilencePlayer : UAdminCommand {
};

// Class ConZ.AdminCommand_UpgradeBaseBuildingElementsWithinRadius
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_UpgradeBaseBuildingElementsWithinRadius : UAdminCommand {
};

// Class ConZ.AdminCommand_VehicleCheat
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VehicleCheat : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizeAnimalLocation
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizeAnimalLocation : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizeArmedNPCLocation
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizeArmedNPCLocation : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizeBulletTrajectories
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizeBulletTrajectories : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizePlayerAiming
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizePlayerAiming : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizeVehicleTrajectory
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizeVehicleTrajectory : UAdminCommand {
};

// Class ConZ.AdminCommand_VisualizeZombieLocation
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_VisualizeZombieLocation : UAdminCommand {
};

// Class ConZ.AdminCommand_Vote
// Size: 0xa0 (Inherited: 0xa0)
struct UAdminCommand_Vote : UAdminCommand {
};

// Class ConZ.AdminCommandArgumentCompletion
// Size: 0x38 (Inherited: 0x28)
struct UAdminCommandArgumentCompletion : UObject {
	bool _canCompletionValuesBeCached; // 0x28(0x01)
	char pad_29[0xf]; // 0x29(0x0f)

	void GetCompletionValues(struct TArray<struct FString>& Result); // Function ConZ.AdminCommandArgumentCompletion.GetCompletionValues // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x2343ab0
};

// Class ConZ.AdminCommandArgumentCompletion_Achievements
// Size: 0x38 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Achievements : UAdminCommandArgumentCompletion {
};

// Class ConZ.AdminCommandArgumentCompletion_Constant
// Size: 0x48 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Constant : UAdminCommandArgumentCompletion {
	struct TArray<struct FString> _completionValues; // 0x38(0x10)
};

// Class ConZ.AdminCommandArgumentCompletion_Enum
// Size: 0x98 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Enum : UAdminCommandArgumentCompletion {
	struct FName _enum; // 0x38(0x08)
	bool _excludeNoneEnumerator; // 0x40(0x01)
	bool _excludeCountEnumerator; // 0x41(0x01)
	bool _excludeAutoGeneratedEnumerator; // 0x42(0x01)
	char pad_43[0x5]; // 0x43(0x05)
	struct TSet<struct FName> _additionalEnumeratorsToExclude; // 0x48(0x50)
};

// Class ConZ.AdminCommandArgumentCompletion_Player
// Size: 0x38 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Player : UAdminCommandArgumentCompletion {
};

// Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset
// Size: 0x90 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_PrimaryAsset : UAdminCommandArgumentCompletion {
	struct FPrimaryAssetType _primaryAssetType; // 0x38(0x08)
	struct TSet<struct FPrimaryAssetId> _primaryAssetsToExclude; // 0x40(0x50)
};

// Class ConZ.AdminCommandArgumentCompletion_QuestSetup
// Size: 0x38 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_QuestSetup : UAdminCommandArgumentCompletion {
};

// Class ConZ.AdminCommandArgumentCompletion_Skill
// Size: 0x38 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Skill : UAdminCommandArgumentCompletion {
};

// Class ConZ.AdminCommandArgumentCompletion_Squad
// Size: 0x38 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Squad : UAdminCommandArgumentCompletion {
};

// Class ConZ.AdminCommandArgumentCompletion_Widget
// Size: 0x40 (Inherited: 0x38)
struct UAdminCommandArgumentCompletion_Widget : UAdminCommandArgumentCompletion {
	struct UAdminCommand_AddOrRemoveWidget* _commandClass; // 0x38(0x08)
};

// Class ConZ.AdminCommandArgumentDataTypeBase
// Size: 0x108 (Inherited: 0x30)
struct UAdminCommandArgumentDataTypeBase : UDataAsset {
	struct FText DataTypeName; // 0x30(0x18)
	struct UAdminCommandArgumentCompletion* ArgumentCompletion; // 0x48(0x08)
	char pad_50[0xb8]; // 0x50(0xb8)
};

// Class ConZ.AdminCommandArgumentDataType_Bool
// Size: 0x110 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_Bool : UAdminCommandArgumentDataTypeBase {
	bool _defaultValue; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
};

// Class ConZ.AdminCommandArgumentDataType_Location
// Size: 0x118 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_Location : UAdminCommandArgumentDataTypeBase {
	struct FVector _defaultValue; // 0x108(0x0c)
	char pad_114[0x4]; // 0x114(0x04)
};

// Class ConZ.AdminCommandArgumentDataType_Numeric
// Size: 0x110 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_Numeric : UAdminCommandArgumentDataTypeBase {
	float _defaultValue; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
};

// Class ConZ.AdminCommandArgumentDataType_String
// Size: 0x120 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_String : UAdminCommandArgumentDataTypeBase {
	struct FString _defaultValue; // 0x108(0x10)
	bool _caseSensitive; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// Class ConZ.AdminCommandArgumentDataType_Transform
// Size: 0x140 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_Transform : UAdminCommandArgumentDataTypeBase {
	char pad_108[0x8]; // 0x108(0x08)
	struct FTransform _defaultValue; // 0x110(0x30)
};

// Class ConZ.AdminCommandArgumentDataType_TransformOrLocation
// Size: 0x118 (Inherited: 0x108)
struct UAdminCommandArgumentDataType_TransformOrLocation : UAdminCommandArgumentDataTypeBase {
	struct FVector _defaultLocationValue; // 0x108(0x0c)
	char pad_114[0x4]; // 0x114(0x04)
};

// Class ConZ.AdminCommandCompletionManager
// Size: 0x138 (Inherited: 0x28)
struct UAdminCommandCompletionManager : UObject {
	struct TMap<struct FString, struct UAdminCommand*> _commands; // 0x28(0x50)
	char pad_78[0xc0]; // 0x78(0xc0)
};

// Class ConZ.AdminCommandExecutor
// Size: 0x28 (Inherited: 0x28)
struct UAdminCommandExecutor : UInterface {
};

// Class ConZ.AdminCommandRegistry
// Size: 0x98 (Inherited: 0x28)
struct UAdminCommandRegistry : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<struct UAdminCommand*> _commands; // 0x38(0x10)
	char pad_48[0x50]; // 0x48(0x50)
};

// Class ConZ.AdminCommandsStatics
// Size: 0x28 (Inherited: 0x28)
struct UAdminCommandsStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.AdminLight
// Size: 0x370 (Inherited: 0x360)
struct UAdminLight : UPointLightComponent {
	struct UCurveFloat* _intensityVersusTimeOfDay; // 0x360(0x08)
	char pad_368[0x8]; // 0x368(0x08)
};

// Class ConZ.AdminPlantPanel
// Size: 0x2b8 (Inherited: 0x268)
struct UAdminPlantPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UButton* _seedingButton; // 0x270(0x08)
	struct UButton* _vegetatingButton; // 0x278(0x08)
	struct UButton* _floweringButton; // 0x280(0x08)
	struct UButton* _ripeningButton; // 0x288(0x08)
	struct UButton* _killButton; // 0x290(0x08)
	struct UButton* _addWeedButton; // 0x298(0x08)
	struct UButton* _removeWeedButton; // 0x2a0(0x08)
	struct UButton* _removePlantButton; // 0x2a8(0x08)
	struct UButton* _addWaterButton; // 0x2b0(0x08)

	void OnClickVegetating(); // Function ConZ.AdminPlantPanel.OnClickVegetating // (Final|Native|Private) // @ game+0x2343c80
	void OnClickSeeding(); // Function ConZ.AdminPlantPanel.OnClickSeeding // (Final|Native|Private) // @ game+0x2343c60
	void OnClickRipening(); // Function ConZ.AdminPlantPanel.OnClickRipening // (Final|Native|Private) // @ game+0x2343c40
	void OnClickRemoveWeed(); // Function ConZ.AdminPlantPanel.OnClickRemoveWeed // (Final|Native|Private) // @ game+0x2343c20
	void OnClickRemovePlant(); // Function ConZ.AdminPlantPanel.OnClickRemovePlant // (Final|Native|Private) // @ game+0x2343c00
	void OnClickKill(); // Function ConZ.AdminPlantPanel.OnClickKill // (Final|Native|Private) // @ game+0x2343be0
	void OnClickFlowering(); // Function ConZ.AdminPlantPanel.OnClickFlowering // (Final|Native|Private) // @ game+0x2343bc0
	void OnClickAddWeed(); // Function ConZ.AdminPlantPanel.OnClickAddWeed // (Final|Native|Private) // @ game+0x2343ba0
	void OnClickAddWater(); // Function ConZ.AdminPlantPanel.OnClickAddWater // (Final|Native|Private) // @ game+0x2343b80
};

// Class ConZ.AdvancedBuoyancyComponent
// Size: 0x560 (Inherited: 0x500)
struct UAdvancedBuoyancyComponent : UStaticMeshComponent {
	char pad_500[0x4]; // 0x500(0x04)
	float _waterKinematicViscosity; // 0x504(0x04)
	float _cPD1; // 0x508(0x04)
	float _cPD2; // 0x50c(0x04)
	float _fP; // 0x510(0x04)
	float _cSD1; // 0x514(0x04)
	float _cSD2; // 0x518(0x04)
	float _fS; // 0x51c(0x04)
	float _maxAcceleration; // 0x520(0x04)
	float _p; // 0x524(0x04)
	float _maxHydrodynamicVelocity; // 0x528(0x04)
	char pad_52C[0x34]; // 0x52c(0x34)
};

// Class ConZ.AIDetectionTimerHandler
// Size: 0x270 (Inherited: 0x220)
struct AAIDetectionTimerHandler : AActor {
	char pad_220[0x50]; // 0x220(0x50)

	void OnDestroyedEvent(struct AActor* DestroyedActor); // Function ConZ.AIDetectionTimerHandler.OnDestroyedEvent // (Final|Native|Private) // @ game+0x2343ca0
};

// Class ConZ.AIManager
// Size: 0x1b0 (Inherited: 0x28)
struct UAIManager : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct FAITeamAttitudeData _teamAttitudes[0xb]; // 0x40(0x16b)
	char pad_1AB[0x5]; // 0x1ab(0x05)
};

// Class ConZ.VehicleBase
// Size: 0x12f0 (Inherited: 0x280)
struct AVehicleBase : APawn {
	char pad_280[0x1f8]; // 0x280(0x1f8)
	struct UVehicleMeshComponent* _vehicleMeshComponent; // 0x478(0x08)
	char pad_480[0x1c]; // 0x480(0x1c)
	bool _shouldApplyWaterDrag; // 0x49c(0x01)
	char pad_49D[0x3]; // 0x49d(0x03)
	float _waterDragForceCoefficient; // 0x4a0(0x04)
	struct FFloatInterval _submergedInWaterDamagePerSecond; // 0x4a4(0x08)
	char pad_4AC[0x54]; // 0x4ac(0x54)
	struct AVehicleItemContainer* _itemContainer; // 0x500(0x08)
	struct TArray<struct UVehicleAttachment*> _vehicleAttachments; // 0x508(0x10)
	struct TArray<struct UVehicleAttachment*> _repVehicleAttachments; // 0x518(0x10)
	char pad_528[0x10]; // 0x528(0x10)
	struct FVehicleAttachmentSlot _chassisSlot; // 0x538(0x58)
	char pad_590[0x8]; // 0x590(0x08)
	struct FGameplayTagContainer _lockInfluencingAttachmentSlotTags; // 0x598(0x20)
	struct FGameplayTagContainer _lockingAttachmentSlotTags; // 0x5b8(0x20)
	struct TArray<struct UVehicleSystem*> _vehicleSystems; // 0x5d8(0x10)
	char pad_5E8[0x18]; // 0x5e8(0x18)
	struct FPackedEntitySetupAndId _repServerEntitySetupAndId; // 0x600(0x08)
	char pad_608[0x4c0]; // 0x608(0x4c0)
	struct UVehicleForcePushComponent* _forcePushComponent; // 0xac8(0x08)
	struct TMap<struct UVehicleAttachment*, struct UWidgetComponent*> _attachmentHealthWidgets; // 0xad0(0x50)
	struct UVehicleAttachmentHealthWidget* _attachmentHealthWidget; // 0xb20(0x08)
	struct UEntityOverlapDetectionComponent* _entityOverlapDetection; // 0xb28(0x08)
	struct UNetworkPredictionComponent* _networkPrediction; // 0xb30(0x08)
	struct FCollisionProfileName _serverCollisionProfileName; // 0xb38(0x08)
	char pad_B40[0x18]; // 0xb40(0x18)
	float _netUpdateFrequencyWhenStationary; // 0xb58(0x04)
	struct FGameplayTag SpawnGroup; // 0xb5c(0x08)
	float _linearSpeedThresholdSqr; // 0xb64(0x04)
	float _angularSpeedThresholdSqr; // 0xb68(0x04)
	char pad_B6C[0xc]; // 0xb6c(0x0c)
	struct AVehicleItemContainer* _itemContainerClass; // 0xb78(0x08)
	char pad_B80[0x10]; // 0xb80(0x10)
	struct FRepairableParams _repairableParams; // 0xb90(0x38)
	char pad_BC8[0x1]; // 0xbc8(0x01)
	bool _repIsSimulatingPhysics; // 0xbc9(0x01)
	char pad_BCA[0x2]; // 0xbca(0x02)
	struct FVector _repLocationWhenNotSimulatingPhysics; // 0xbcc(0x0c)
	struct FRotator _repRotationWhenNotSimulatingPhysics; // 0xbd8(0x0c)
	char pad_BE4[0x4]; // 0xbe4(0x04)
	float _physicsDormancyTimeout; // 0xbe8(0x04)
	char pad_BEC[0x50]; // 0xbec(0x50)
	bool _shouldPeriodicallyWakeOtherVehicles; // 0xc3c(0x01)
	char pad_C3D[0x3]; // 0xc3d(0x03)
	float _wakePingInterval; // 0xc40(0x04)
	char pad_C44[0x24]; // 0xc44(0x24)
	struct UVehicleServiceComponent* _serviceComponent; // 0xc68(0x08)
	char pad_C70[0x1]; // 0xc70(0x01)
	bool _isInQuickService; // 0xc71(0x01)
	char pad_C72[0xd6]; // 0xc72(0xd6)
	struct UVehicleCameraStabilizerComponent* _cameraStabilizer; // 0xd48(0x08)
	char pad_D50[0x4]; // 0xd50(0x04)
	uint32_t _previewMeshTimePerMesh; // 0xd54(0x04)
	char pad_D58[0x8]; // 0xd58(0x08)
	struct FText _healthBarCaption; // 0xd60(0x18)
	struct FVehicleImpactEffects _impactEffects[0x5]; // 0xd78(0x118)
	struct UParticleSystem* _instantDestructionExplosionEffect; // 0xe90(0x08)
	struct UAkAudioEvent* _instantDestructionExplosionAudioEvent; // 0xe98(0x08)
	char pad_EA0[0x60]; // 0xea0(0x60)
	float _maxSpeedForInteraction; // 0xf00(0x04)
	float _maxSpeedForForceUnmount; // 0xf04(0x04)
	bool _shouldUnmountWhenTilted; // 0xf08(0x01)
	char pad_F09[0x3]; // 0xf09(0x03)
	float _maxAngleForForceUnmount; // 0xf0c(0x04)
	bool _shouldDisableClimbingDependingOnVelocity; // 0xf10(0x01)
	char pad_F11[0x3]; // 0xf11(0x03)
	float _maxSpeedForClimbingKmH; // 0xf14(0x04)
	int32_t _climbingPermissions; // 0xf18(0x04)
	char pad_F1C[0xc]; // 0xf1c(0x0c)
	float _maxSubmergedTime; // 0xf28(0x04)
	float _maxSubmersionFactor; // 0xf2c(0x04)
	char pad_F30[0x8]; // 0xf30(0x08)
	struct UUserWidget* _mountSlotIndicatorsWidget; // 0xf38(0x08)
	char pad_F40[0x8]; // 0xf40(0x08)
	float _inWaterDestructionTimeInSeconds; // 0xf48(0x04)
	float _outOfWaterDestructionTimeInSeconds; // 0xf4c(0x04)
	struct UVehicleHandlingSkill* _vehicleHandlingSkill; // 0xf50(0x08)
	bool _isInWater; // 0xf58(0x01)
	char pad_F59[0x3]; // 0xf59(0x03)
	float _navigationRelevancyVelocitySquared; // 0xf5c(0x04)
	bool _disableAIClimbingWhenMounteesExist; // 0xf60(0x01)
	char pad_F61[0x3]; // 0xf61(0x03)
	float _aiNoiseFrequencyPerHour; // 0xf64(0x04)
	enum class ENoiseLevel _aiNoiseLevel; // 0xf68(0x01)
	char pad_F69[0xb]; // 0xf69(0x0b)
	struct FVector _aiNoiseOffset; // 0xf74(0x0c)
	char pad_F80[0x8]; // 0xf80(0x08)
	struct FNavAgentSelector _supportedNavAgents; // 0xf88(0x04)
	char pad_F8C[0x1c]; // 0xf8c(0x1c)
	struct UParticleSystem* _smokeParticlesLow; // 0xfa8(0x08)
	struct UParticleSystem* _smokeParticlesMedium; // 0xfb0(0x08)
	struct UParticleSystem* _smokeParticlesHigh; // 0xfb8(0x08)
	char pad_FC0[0x8]; // 0xfc0(0x08)
	struct UParticleSystemComponent* _smokeParticleSystemComponent; // 0xfc8(0x08)
	struct FVector _smokeParticlesOffset; // 0xfd0(0x0c)
	bool _shouldVehicleBurnWhenDestroyed; // 0xfdc(0x01)
	char pad_FDD[0x3]; // 0xfdd(0x03)
	struct FHeatSourceParameters _transientHeatSourceParameters; // 0xfe0(0x24)
	struct FVector _transientHeatSourceOffset; // 0x1004(0x0c)
	char pad_1010[0x8]; // 0x1010(0x08)
	enum class EConZPxDominanceGroup _physicsDominanceGroup; // 0x1018(0x01)
	char pad_1019[0x7]; // 0x1019(0x07)
	struct TArray<struct FGameplayTag> _mountSlotsBySwitchSeatIndex; // 0x1020(0x10)
	struct TArray<struct UBaseMountPathBlocker*> _mountPathBlockers; // 0x1030(0x10)
	struct FGameplayTag _toggleMainLightsDeviceControlTag; // 0x1040(0x08)
	struct FGameplayTag _toggleRadioDeviceControlTag; // 0x1048(0x08)
	struct FGameplayTag _changeRadioStationDeviceControlTag; // 0x1050(0x08)
	struct FGameplayTag _increaseRadioVolumeDeviceControlTag; // 0x1058(0x08)
	struct FGameplayTag _decreaseRadioVolumeDeviceControlTag; // 0x1060(0x08)
	char pad_1068[0x8]; // 0x1068(0x08)
	struct FTransform _unlockTransform; // 0x1070(0x30)
	float _forceUnlockMovementAcceptanceRadius; // 0x10a0(0x04)
	float _absoluteSpeedLimitKmh; // 0x10a4(0x04)
	enum class EAITeam _aiTeam; // 0x10a8(0x01)
	char pad_10A9[0x67]; // 0x10a9(0x67)
	struct FVehicleDamageHandlerParams _damageHandlerParams; // 0x1110(0x10)
	struct TMap<enum class ECollisionDamageType, float> _damageRatios; // 0x1120(0x50)
	float _explosionDamageRatio; // 0x1170(0x04)
	float _minCollisionDamageThatCausesKnockout; // 0x1174(0x04)
	struct FRuntimeFloatCurve _passengerDamageVsCollisionDamage; // 0x1178(0x88)
	float _collisionDamageKnockoutDuration; // 0x1200(0x04)
	float _spawnGracePeriod; // 0x1204(0x04)
	float _postServiceGracePeriod; // 0x1208(0x04)
	char pad_120C[0x14]; // 0x120c(0x14)
	struct TArray<char> _damageHandlerSerializedData; // 0x1220(0x10)
	char pad_1230[0x28]; // 0x1230(0x28)
	struct APrisoner* _driver; // 0x1258(0x08)
	struct APrisoner* _driverRep; // 0x1260(0x08)
	char pad_1268[0x10]; // 0x1268(0x10)
	float _additionalMassPhysicsMultiplier; // 0x1278(0x04)
	char pad_127C[0x21]; // 0x127c(0x21)
	bool _canFlyingViolationChecksBeMade; // 0x129d(0x01)
	char pad_129E[0x52]; // 0x129e(0x52)

	void Server_CollideWithVehicle(struct FGameplayTag myRegion, struct AVehicleBase* otherVehicle, struct FGameplayTag otherRegion, float impactSpeed); // Function ConZ.VehicleBase.Server_CollideWithVehicle // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x251efd0
	void Server_ApplyDamageToRegion(struct FGameplayTag region, float Damage, float armorPenetration, enum class ECollisionDamageType collisionDamageType); // Function ConZ.VehicleBase.Server_ApplyDamageToRegion // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x251ee80
	void Server_ApplyDamageToAttachment(struct UVehicleAttachment* Attachment, float Damage, float armorPenetration, enum class ECollisionDamageType collisionDamageType); // Function ConZ.VehicleBase.Server_ApplyDamageToAttachment // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x251ed30
	void OnRep_VehicleAttachments(); // Function ConZ.VehicleBase.OnRep_VehicleAttachments // (Final|Native|Private) // @ game+0x251ed10
	void OnRep_ServiceComponent(); // Function ConZ.VehicleBase.OnRep_ServiceComponent // (Final|Native|Private) // @ game+0x251ecf0
	void OnRep_ServerEntitySetupAndId(); // Function ConZ.VehicleBase.OnRep_ServerEntitySetupAndId // (Final|Native|Private) // @ game+0x251ecd0
	void OnRep_ItemContainer(); // Function ConZ.VehicleBase.OnRep_ItemContainer // (Final|Native|Private) // @ game+0x251ec20
	void OnRep_Driver(); // Function ConZ.VehicleBase.OnRep_Driver // (Final|Native|Private) // @ game+0x251ec00
	void NetMulticast_PlayInstantDestructionEffectsAtLocation(struct FVector Location); // Function ConZ.VehicleBase.NetMulticast_PlayInstantDestructionEffectsAtLocation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x251eb70
};

// Class ConZ.DcxWheeledVehicle
// Size: 0x15a0 (Inherited: 0x12f0)
struct ADcxWheeledVehicle : AVehicleBase {
	char pad_12F0[0x28]; // 0x12f0(0x28)
	struct UDcxVehicleDriveComponent* _driveComponent; // 0x1318(0x08)
	struct UVehicleDoorsComponent* _doorsComponent; // 0x1320(0x08)
	struct UDcxWheeledVehicleEffectsComponent* _effectsComponent; // 0x1328(0x08)
	char pad_1330[0x40]; // 0x1330(0x40)
	struct FGameplayTag _ignitionStartEventDeviceControlTag; // 0x1370(0x08)
	struct FGameplayTag _ignitionEndEventDeviceControlTag; // 0x1378(0x08)
	struct FGameplayTag _brakeLightsEnableDeviceControlTag; // 0x1380(0x08)
	struct FGameplayTag _brakeLightsDisableDeviceControlTag; // 0x1388(0x08)
	struct FGameplayTag _reverseLightsEnableDeviceControlTag; // 0x1390(0x08)
	struct FGameplayTag _reverseLightsDisableDeviceControlTag; // 0x1398(0x08)
	char pad_13A0[0x4]; // 0x13a0(0x04)
	int32_t _minimumNumberOfWheelsToBeDriven; // 0x13a4(0x04)
	int32_t _minimumNumberOfWheelsToBePushed; // 0x13a8(0x04)
	float _minPushStartVelocity; // 0x13ac(0x04)
	float _minPushStartVelocityIgnition; // 0x13b0(0x04)
	char pad_13B4[0x4]; // 0x13b4(0x04)
	float _hornAiLoudness; // 0x13b8(0x04)
	char pad_13BC[0x4]; // 0x13bc(0x04)
	struct UAkAudioEvent* _hornStartAudioEvent; // 0x13c0(0x08)
	struct UAkAudioEvent* _hornStopAudioEvent; // 0x13c8(0x08)
	float _maxPushForce; // 0x13d0(0x04)
	char pad_13D4[0x4]; // 0x13d4(0x04)
	float _minPushForce; // 0x13d8(0x04)
	float _maxPushForcePerPusher; // 0x13dc(0x04)
	float _minPushStartForce; // 0x13e0(0x04)
	char pad_13E4[0x4]; // 0x13e4(0x04)
	struct UCurveFloat* _speedToPushForceCurve; // 0x13e8(0x08)
	float _maxLinearVelocityWhenPushing; // 0x13f0(0x04)
	float _maxTotalVelocityWhenPushingBeforeUnmount; // 0x13f4(0x04)
	float _maxAllowedDistanceFromPushStartingPlayer; // 0x13f8(0x04)
	char pad_13FC[0x4]; // 0x13fc(0x04)
	struct FRuntimeFloatCurve _pusherActionDifficultyVsSpeed; // 0x1400(0x88)
	struct FRuntimeFloatCurve _pusherBaseStrengthChangeRateSpeedInfluenceVsSpeed; // 0x1488(0x88)
	struct FRuntimeFloatCurve _pusherBaseConstitutionChangeRateModifierVsSpeed; // 0x1510(0x88)
	float _terminalVelocityConstant; // 0x1598(0x04)
	char pad_159C[0x4]; // 0x159c(0x04)

	void UpdateHandlingParametersOnClient(float WheelSteeringLerpSpeedMultiplier, float engineIgnitionDurationMultiplier, float engineIgnitionFailureChance, float gearboxGearChangeDelayMultiplier, float gearboxGearUpRatioMultiplier, float gearboxGearDownRatioMultiplier); // Function ConZ.DcxWheeledVehicle.UpdateHandlingParametersOnClient // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23be850
};

// Class ConZ.DcxWheeledVehicle4W
// Size: 0x15b0 (Inherited: 0x15a0)
struct ADcxWheeledVehicle4W : ADcxWheeledVehicle {
	char pad_15A0[0x10]; // 0x15a0(0x10)
};

// Class ConZ.Airplane
// Size: 0x19f0 (Inherited: 0x15b0)
struct AAirplane : ADcxWheeledVehicle4W {
	char pad_15B0[0x18]; // 0x15b0(0x18)
	struct ULiftComponent* _physicsLiftComponent; // 0x15c8(0x08)
	struct TMap<enum class EAerodynamicSurfaceType, struct FAerodynamicSurfaceControlData> _aerodynamicSurfaceMap; // 0x15d0(0x50)
	char pad_1620[0x10]; // 0x1620(0x10)
	float _airFlowParticlesSpeedKmhThreshold; // 0x1630(0x04)
	float _reverseTaxiingForce; // 0x1634(0x04)
	float _maxReverseTaxiingVelocity; // 0x1638(0x04)
	float _airplaneHeightToStallInMeters; // 0x163c(0x04)
	float _propellerForce; // 0x1640(0x04)
	float _maxVelocity; // 0x1644(0x04)
	char pad_1648[0x8]; // 0x1648(0x08)
	float _inAirSweepDistance; // 0x1650(0x04)
	char pad_1654[0x8]; // 0x1654(0x08)
	struct FInt32Range _throttleLevelRange; // 0x165c(0x10)
	char pad_166C[0x4]; // 0x166c(0x04)
	struct FRuntimeFloatCurve _throttlePerLevel; // 0x1670(0x88)
	char pad_16F8[0x4]; // 0x16f8(0x04)
	float _throttleLerpAmount; // 0x16fc(0x04)
	char pad_1700[0x8]; // 0x1700(0x08)
	struct TMap<enum class ESkillLevel, float> _brakeLerpAmountPerSkillLevel; // 0x1708(0x50)
	char pad_1758[0x8]; // 0x1758(0x08)
	struct TMap<enum class ESkillLevel, float> _rollLerpAmountPerSkillLevel; // 0x1760(0x50)
	char pad_17B0[0x8]; // 0x17b0(0x08)
	struct TMap<enum class ESkillLevel, float> _yawLerpAmountPerSkillLevel; // 0x17b8(0x50)
	char pad_1808[0x8]; // 0x1808(0x08)
	struct TMap<enum class ESkillLevel, float> _pitchLerpAmountPerSkillLevel; // 0x1810(0x50)
	char pad_1860[0x8]; // 0x1860(0x08)
	struct TMap<enum class ESkillLevel, float> _controlResetLerpAmountPerSkillLevel; // 0x1868(0x50)
	char pad_18B8[0x8]; // 0x18b8(0x08)
	struct FRuntimeFloatCurve _handbrakeFactorVsVelocity; // 0x18c0(0x88)
	char pad_1948[0x8]; // 0x1948(0x08)
	struct FGameplayTagContainer _criticalAttachmentSlotTags; // 0x1950(0x20)
	float _damagePerSecondWhenMissingCriticalAttachments; // 0x1970(0x04)
	char pad_1974[0x4]; // 0x1974(0x04)
	struct UStaticMeshComponent* _propellerMesh; // 0x1978(0x08)
	struct UMaterialInterface* _propellerMaterial; // 0x1980(0x08)
	struct UMaterialInstanceDynamic* _propellerMaterialDynamic; // 0x1988(0x08)
	struct TArray<struct UObject*> _classesToIgnorePropellerDamage; // 0x1990(0x10)
	float _EMInterferenceMaxDisabledTime; // 0x19a0(0x04)
	char pad_19A4[0x4]; // 0x19a4(0x04)
	float _deathExplosionDamage; // 0x19a8(0x04)
	float _deathExplosionForce; // 0x19ac(0x04)
	float _deathExplosionInnerRadius; // 0x19b0(0x04)
	float _deathExplosionOuterRadius; // 0x19b4(0x04)
	struct FTargetTypeDamageMultiplier _explosionTargetTypeMultiplier; // 0x19b8(0x10)
	struct UAkAudioEvent* _deathExplosionAudioEvent; // 0x19c8(0x08)
	struct UParticleSystem* _deathExplosionParticleSystem; // 0x19d0(0x08)
	struct FVector _deathExplosionParticleSystemScale; // 0x19d8(0x0c)
	char pad_19E4[0xc]; // 0x19e4(0x0c)

	void OnPropellerHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComponent, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Airplane.OnPropellerHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x2343d30
};

// Class ConZ.DcxWheeledVehicleAnimInstance
// Size: 0xa80 (Inherited: 0xa50)
struct UDcxWheeledVehicleAnimInstance : UDcxVehicleAnimInstance {
	enum class EVehicleEngineState EngineState; // 0xa48(0x01)
	bool IsEngineRunning; // 0xa49(0x01)
	float EngineRpm; // 0xa4c(0x04)
	float EngineRpmInterpSpeed; // 0xa50(0x04)
	float MaxSteeringWheelSteerAngle; // 0xa54(0x04)
	float SteeringWheelSteerAngleInterpSpeed; // 0xa58(0x04)
	float CurrentSteeringWheelSteerAngle; // 0xa5c(0x04)
	struct TArray<float> DoorOpenPercentage; // 0xa60(0x10)
	struct TArray<float> DoorWindowOpenPercentage; // 0xa70(0x10)
};

// Class ConZ.AirplaneAnimInstance
// Size: 0xae0 (Inherited: 0xa80)
struct UAirplaneAnimInstance : UDcxWheeledVehicleAnimInstance {
	bool IsAnyoneMounted; // 0xa80(0x01)
	char pad_A81[0x3]; // 0xa81(0x03)
	float Speed; // 0xa84(0x04)
	float SpeedKph; // 0xa88(0x04)
	float PropellerRotationAngle; // 0xa8c(0x04)
	float RudderAngle; // 0xa90(0x04)
	bool IsMounteeDriver; // 0xa94(0x01)
	char pad_A95[0x3]; // 0xa95(0x03)
	float clockMinuteRotation; // 0xa98(0x04)
	float clockHourRotation; // 0xa9c(0x04)
	float altimeterTensRotation; // 0xaa0(0x04)
	float altimeterHundredsRotation; // 0xaa4(0x04)
	float altimeterThousandsRotation; // 0xaa8(0x04)
	float airSpeedRotation; // 0xaac(0x04)
	float rpmRotation; // 0xab0(0x04)
	float verticalSpeedRotation; // 0xab4(0x04)
	float throttleLeverRotation; // 0xab8(0x04)
	float leftYawPedalRotation; // 0xabc(0x04)
	float rightYawPedalRotation; // 0xac0(0x04)
	struct FRotator stickRotator; // 0xac4(0x0c)
	struct FRotator headingRotator; // 0xad0(0x0c)
	bool shouldHidePropellerBone; // 0xadc(0x01)
	char pad_ADD[0x3]; // 0xadd(0x03)
};

// Class ConZ.AirplaneLeftWingAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UAirplaneLeftWingAnimInstance : UAnimInstance {
	float LeftAileronsAngle; // 0x2b8(0x04)
};

// Class ConZ.AirplaneRightWingAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UAirplaneRightWingAnimInstance : UAnimInstance {
	float RightAileronsAngle; // 0x2b8(0x04)
};

// Class ConZ.AirplaneElevatorsAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UAirplaneElevatorsAnimInstance : UAnimInstance {
	float ElevatorsAngle; // 0x2b8(0x04)
};

// Class ConZ.AirplaneLegsFrontAnimInstance
// Size: 0x2e0 (Inherited: 0x2c0)
struct UAirplaneLegsFrontAnimInstance : UAnimInstance {
	float LeftWheelRotation; // 0x2b8(0x04)
	float RightWheelRotation; // 0x2bc(0x04)
	struct UDcxVehicleWheelsComponent* _vehicleWheels; // 0x2c0(0x08)
	struct FName _leftWheelDcxBoneName; // 0x2c8(0x08)
	struct FName _rightWheelDcxBoneName; // 0x2d0(0x08)
};

// Class ConZ.AirplaneLegsRearInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UAirplaneLegsRearInstance : UAnimInstance {
	float RearWheelRotation; // 0x2b8(0x04)
	struct UDcxVehicleWheelsComponent* _vehicleWheels; // 0x2c0(0x08)
	struct FName _rearWheelDcxBoneName; // 0x2c8(0x08)
};

// Class ConZ.AIStatics
// Size: 0x28 (Inherited: 0x28)
struct UAIStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.AkComponentClientOnly
// Size: 0x3d0 (Inherited: 0x3d0)
struct UAkComponentClientOnly : UAkComponent {
};

// Class ConZ.AmbientSounds
// Size: 0x2f8 (Inherited: 0x220)
struct AAmbientSounds : AActor {
	float MinCameraLocationDeltaForUpdate; // 0x220(0x04)
	struct FGameplayTag ForestMask; // 0x224(0x08)
	float ForestMaskSearchRadius; // 0x22c(0x04)
	struct UAkAudioEvent* CoastalForestAudioEvent; // 0x230(0x08)
	struct UAkAudioEvent* ContinentalForest1AudioEvent; // 0x238(0x08)
	struct UAkAudioEvent* ContinentalForest2AudioEvent; // 0x240(0x08)
	struct UAkAudioEvent* ContinentalForest3AudioEvent; // 0x248(0x08)
	struct UAkAudioEvent* UndergroundAudioEvent; // 0x250(0x08)
	struct FGameplayTag CityMask; // 0x258(0x08)
	float CityMaskSearchRadius; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct UAkAudioEvent* CityAudioEvent; // 0x268(0x08)
	struct UAkAudioEvent* LargeVillageAudioEvent; // 0x270(0x08)
	struct UAkAudioEvent* SmallVillageAudioEvent; // 0x278(0x08)
	struct UAkAudioEvent* IndustrialAreaAudioEvent; // 0x280(0x08)
	char pad_288[0x70]; // 0x288(0x70)
};

// Class ConZ.Item
// Size: 0x9b0 (Inherited: 0x220)
struct AItem : AActor {
	char pad_220[0x98]; // 0x220(0x98)
	struct FMulticastInlineDelegate DebugTextChanged; // 0x2b8(0x10)
	struct FMulticastInlineDelegate PickedUpState; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnStaticMeshChanged; // 0x2d8(0x10)
	char pad_2E8[0x28]; // 0x2e8(0x28)
	struct UStaticMeshComponent* Mesh; // 0x310(0x08)
	char pad_318[0x110]; // 0x318(0x110)
	struct FGenericTeamId _genericTeamId; // 0x428(0x10)
	struct UThrowingComponent* ThrowingComponent; // 0x438(0x08)
	struct FText _caption; // 0x440(0x18)
	struct FText _description; // 0x458(0x18)
	int32_t _uses; // 0x470(0x04)
	float _health; // 0x474(0x04)
	float _maxHealth; // 0x478(0x04)
	float _maxHealthPercentageAfterReachingBadQuality; // 0x47c(0x04)
	float _weight; // 0x480(0x04)
	float _initialWeightUsed; // 0x484(0x04)
	float _maxWaterWeightAsRatioOfWeight; // 0x488(0x04)
	float _radiationDecreaseRate; // 0x48c(0x04)
	float _maxRadiationAmountPerWeight; // 0x490(0x04)
	float _baseRadiationPropagationFactor; // 0x494(0x04)
	bool _canEverDecontaminate; // 0x498(0x01)
	char pad_499[0x7]; // 0x499(0x07)
	struct UChoppingRecipeDataAsset* _choppingRecipeDataAsset; // 0x4a0(0x08)
	bool _shouldBeMaintained; // 0x4a8(0x01)
	bool _canBeDropped; // 0x4a9(0x01)
	bool _canTakeInHands; // 0x4aa(0x01)
	bool _canBeVisibleInVicinity; // 0x4ab(0x01)
	bool _canPlaceItemsOn; // 0x4ac(0x01)
	enum class EItemBlueprintPlacementBlockingType _blueprintPlacementBlockingType; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct TArray<struct TSoftClassPtr<UObject>> _blacklistedPlacementItems; // 0x4b0(0x10)
	bool _canPlaceBlueprintsOn; // 0x4c0(0x01)
	char pad_4C1[0x7]; // 0x4c1(0x07)
	struct USkeletalMesh* _overrideSkeletalMesh; // 0x4c8(0x08)
	struct FTransform _overrideSkeletalMeshRelativeTransform; // 0x4d0(0x30)
	enum class EItemExhausted _ifExhausted; // 0x500(0x01)
	char pad_501[0x3]; // 0x501(0x03)
	float _resourceAmountUsedPerWash; // 0x504(0x04)
	bool _shouldDoServerCheckBeforeDropping; // 0x508(0x01)
	bool _shouldBlockVisibilityForAISight; // 0x509(0x01)
	enum class EDeluxeVersion _requiredDLC; // 0x50a(0x01)
	char pad_50B[0x5]; // 0x50b(0x05)
	struct TSoftObjectPtr<UTexture2D> _inventoryIcon; // 0x510(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconInHands; // 0x538(0x28)
	struct TSoftObjectPtr<UTexture2D> _outsideInventoryIcon; // 0x560(0x28)
	uint32_t _sizeX; // 0x588(0x04)
	uint32_t _sizeY; // 0x58c(0x04)
	struct TArray<struct UBaseItemTag*> _inventoryWhiteList; // 0x590(0x10)
	struct TArray<struct UBaseItemTag*> _inventoryBlackList; // 0x5a0(0x10)
	float _maxContainedWeight; // 0x5b0(0x04)
	bool _canContainNonEmptyItems; // 0x5b4(0x01)
	bool _canBeContainedIfNonEmpty; // 0x5b5(0x01)
	char pad_5B6[0x2]; // 0x5b6(0x02)
	struct UUIRepresentationSubobject* _uiRepresentationSubobject; // 0x5b8(0x08)
	struct UUIContainerSubobject* _uiContainerSubobject; // 0x5c0(0x08)
	bool _isIgnoredBySpawners; // 0x5c8(0x01)
	char pad_5C9[0x3]; // 0x5c9(0x03)
	struct FFloatInterval _spawnTimeoutPerPlayer; // 0x5cc(0x08)
	struct FItemLocation _itemLocation; // 0x5d4(0x0f)
	enum class EItemRarity _rarity; // 0x5e3(0x01)
	char pad_5E4[0x4]; // 0x5e4(0x04)
	struct FGameplayTagContainer _itemSpawnTypes; // 0x5e8(0x20)
	struct FGameplayTag _itemSpawnGroup; // 0x608(0x08)
	struct FVector _spawnLocationOffset; // 0x610(0x0c)
	struct FRotator _spawnRotationOffset; // 0x61c(0x0c)
	float _spawnRotationRandomization; // 0x628(0x04)
	float _placementCollisionUpOffset; // 0x62c(0x04)
	bool _shouldOverrideUsageWhenSpawnedBySpawners; // 0x630(0x01)
	char pad_631[0x3]; // 0x631(0x03)
	float _initialUsageWhenSpawnedBySpawners; // 0x634(0x04)
	float _randomizeUsageWhenSpawnedBySpawners; // 0x638(0x04)
	char pad_63C[0x4]; // 0x63c(0x04)
	struct TArray<struct UBaseItemTag*> _itemTags; // 0x640(0x10)
	struct TArray<struct UBaseItemTag*> _ownedItemTags; // 0x650(0x10)
	enum class ENoiseLevel _noiseLevel; // 0x660(0x01)
	char pad_661[0x7]; // 0x661(0x07)
	struct FItemMotionNoise _motionNoise; // 0x668(0x08)
	struct UAkAudioEvent* _inventoryHandlingSound; // 0x670(0x08)
	struct UAkAudioEvent* _destroyedSound; // 0x678(0x08)
	struct TArray<struct FCraftingPart> _defaultCraftingParts; // 0x680(0x10)
	float _damageOnUse; // 0x690(0x04)
	float _damageOverTime; // 0x694(0x04)
	float _autoDestructTime; // 0x698(0x04)
	bool _allowContainedItemsDecay; // 0x69c(0x01)
	char pad_69D[0x7]; // 0x69d(0x07)
	bool _shouldDestroyContainedItemsOnDestroyEvent; // 0x6a4(0x01)
	char pad_6A5[0x3]; // 0x6a5(0x03)
	float _minTemperatureForHeatDamage; // 0x6a8(0x04)
	float _containedDamageStartPercentage; // 0x6ac(0x04)
	float _damageResponseFactor; // 0x6b0(0x04)
	char pad_6B4[0x4]; // 0x6b4(0x04)
	struct UAttachmentSocketMountType* _attachmentSocketMountType; // 0x6b8(0x08)
	struct TArray<struct FAttachmentSocket> _attachmentSockets; // 0x6c0(0x10)
	struct UAttachmentSocketMountType* _holsterAttachmentSocketMountType; // 0x6d0(0x08)
	struct TMap<struct UAttachmentSocketMountType*, struct FAttachmentSocketOffset> _attachmentSocketsOffset; // 0x6d8(0x50)
	bool _enableGlowOnBeginPlay; // 0x728(0x01)
	bool _enableAwarenessGlow; // 0x729(0x01)
	bool _enableHoverGlow; // 0x72a(0x01)
	char pad_72B[0x5]; // 0x72b(0x05)
	struct UStaticMesh* _placementMeshOverride; // 0x730(0x08)
	struct UStaticMesh* _staticMeshHolsterOverride; // 0x738(0x08)
	struct USkeletalMesh* _skeletalMeshHolsterOverride; // 0x740(0x08)
	bool _hasHighLoadPriorityInVirtualization; // 0x748(0x01)
	char pad_749[0x3]; // 0x749(0x03)
	float _virtualizationDistanceOffset; // 0x74c(0x04)
	bool _canEverBeVirtualized; // 0x750(0x01)
	bool _shouldBeRemovedFromVirtualizationOnOwnerSet; // 0x751(0x01)
	char pad_752[0x2]; // 0x752(0x02)
	float _resultHealthMultiplierWhenCraftingIngredient; // 0x754(0x04)
	float _preferredDamagePerUpdate; // 0x758(0x04)
	bool _useHandCorrections; // 0x75c(0x01)
	char pad_75D[0x3]; // 0x75d(0x03)
	float _vicinityCheckDistance; // 0x760(0x04)
	float _reachabilityTestZOffset; // 0x764(0x04)
	struct TArray<struct UObject*> _stackableClasses; // 0x768(0x10)
	int32_t _maxNumOfStacks; // 0x778(0x04)
	float _bloodDryingSpeed; // 0x77c(0x04)
	struct TArray<struct FCraftingIngredientInstance> _craftingIngredientInstances; // 0x780(0x10)
	struct USkeletalMeshComponent* _skeletalMeshComponent; // 0x790(0x08)
	char pad_798[0x4]; // 0x798(0x04)
	float _weightUsed; // 0x79c(0x04)
	char pad_7A0[0x18]; // 0x7a0(0x18)
	struct FPackedEntitySetupAndId _repServerEntitySetupAndId; // 0x7b8(0x08)
	struct TArray<struct UItemComponent*> _itemComponents; // 0x7c0(0x10)
	struct AActor* _attachParentObject; // 0x7d0(0x08)
	struct FVisibilityReplication _visibilityReplication; // 0x7d8(0x08)
	char pad_7E0[0x48]; // 0x7e0(0x48)
	float _radiationAmount; // 0x828(0x04)
	float _uncraftTime; // 0x82c(0x04)
	uint64_t _replicatedState; // 0x830(0x08)
	char pad_838[0x1]; // 0x838(0x01)
	char _flagsReplicated; // 0x839(0x01)
	char pad_83A[0x26]; // 0x83a(0x26)
	struct UItemRootComponent* _rootComponent; // 0x860(0x08)
	char pad_868[0x8]; // 0x868(0x08)
	int64_t _expirationTime; // 0x870(0x08)
	struct TArray<struct FInventoryStackData> _stacks; // 0x878(0x10)
	struct AItem* _stackExhaustedSuccessorItem; // 0x888(0x08)
	struct TScriptInterface<IInventoryContainer> _parentContainer; // 0x890(0x10)
	struct TScriptInterface<IInventoryNode> _parentInventoryNode; // 0x8a0(0x10)
	char pad_8B0[0x70]; // 0x8b0(0x70)
	struct TArray<struct FCraftingPart> _craftingParts; // 0x920(0x10)
	char pad_930[0x3c]; // 0x930(0x3c)
	struct FName _survivalTipToShowOnPickup; // 0x96c(0x08)
	struct FName _survivalTipToShowOnEquip; // 0x974(0x08)
	char pad_97C[0x34]; // 0x97c(0x34)

	void UpdateVisuals(bool shouldHandleAging); // Function ConZ.Item.UpdateVisuals // (Native|Public) // @ game+0x240b830
	void StopBlinking(); // Function ConZ.Item.StopBlinking // (Final|Native|Public) // @ game+0x240b810
	void StaticMeshChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.StaticMeshChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void StateChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.StateChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void SetInventoryIconInHands(struct TSoftObjectPtr<UTexture2D> Value); // Function ConZ.Item.SetInventoryIconInHands // (Final|Native|Public|BlueprintCallable) // @ game+0x240b700
	void SetInventoryIcon(struct TSoftObjectPtr<UTexture2D> Value); // Function ConZ.Item.SetInventoryIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x240b5f0
	void SetHealth(float health); // Function ConZ.Item.SetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x240b570
	void Server_Throw(struct FVector ZeroBasedStartPosition, struct FRotator StartRotation, struct FVector StartVelocity); // Function ConZ.Item.Server_Throw // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x240b470
	void PickedUpStateDelegate__DelegateSignature(struct AItem* Item, bool pickedUp); // DelegateFunction ConZ.Item.PickedUpStateDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnRightClicked(); // Function ConZ.Item.OnRightClicked // (Final|Native|Private) // @ game+0xbbc480
	void OnRep_WeightUsed(); // Function ConZ.Item.OnRep_WeightUsed // (Native|Protected) // @ game+0x240b450
	void OnRep_Visibility(); // Function ConZ.Item.OnRep_Visibility // (Native|Protected) // @ game+0x240b430
	void OnRep_Stacks(); // Function ConZ.Item.OnRep_Stacks // (Final|Native|Private) // @ game+0xbbc480
	void OnRep_ServerEntitySetupAndId(); // Function ConZ.Item.OnRep_ServerEntitySetupAndId // (Native|Protected) // @ game+0x240b410
	void OnRep_ReplicatedState(); // Function ConZ.Item.OnRep_ReplicatedState // (Final|Native|Private) // @ game+0x240b3f0
	void OnRep_Health(); // Function ConZ.Item.OnRep_Health // (Native|Protected) // @ game+0x240b3d0
	void OnRep_FlagsReplicated(); // Function ConZ.Item.OnRep_FlagsReplicated // (Final|Native|Private) // @ game+0x240b3b0
	void OnDetachedFromItem(struct AItem* Item); // Function ConZ.Item.OnDetachedFromItem // (Native|Event|Protected|BlueprintEvent) // @ game+0x23e73f0
	void OnDestroyedEvent(struct AActor* Self); // Function ConZ.Item.OnDestroyedEvent // (Native|Public) // @ game+0x240b200
	void OnContainedItemDestroyed(struct AActor* containedItem); // Function ConZ.Item.OnContainedItemDestroyed // (Final|Native|Public) // @ game+0x240b170
	void OnAttachedToItem(struct AItem* Item); // Function ConZ.Item.OnAttachedToItem // (Native|Event|Protected|BlueprintEvent) // @ game+0x15377a0
	void NetMulticast_SpawnDestroyedEffects(); // Function ConZ.Item.NetMulticast_SpawnDestroyedEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x236c4d0
	void NetMulticast_SpawnAndInteractOnOwningClient(struct APrisoner* User, enum class EInteractionType interactionType, struct FInteractionData InteractionData); // Function ConZ.Item.NetMulticast_SpawnAndInteractOnOwningClient // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x240afd0
	void NetMulticast_EnsureSpawned(); // Function ConZ.Item.NetMulticast_EnsureSpawned // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x15376c0
	void NetMulticast_Drop(struct APawn* dropper, bool wasThrown, bool dropDown, bool resetRotation); // Function ConZ.Item.NetMulticast_Drop // (Net|Native|Event|NetMulticast|Public) // @ game+0x240ae60
	void Multicast_Throw(struct FVector ZeroBasedStartPosition, struct FRotator StartRotation, struct FVector StartVelocity); // Function ConZ.Item.Multicast_Throw // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x240ad60
	bool HasPriorityForContainerItem(struct AItem* containerItem); // Function ConZ.Item.HasPriorityForContainerItem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240acc0
	struct FWidgetDisplayInfo GetWidgetDisplayInfo(); // Function ConZ.Item.GetWidgetDisplayInfo // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240ac80
	float GetWaterWeight(); // Function ConZ.Item.GetWaterWeight // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240ac40
	float GetTotalWeight(); // Function ConZ.Item.GetTotalWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240ac10
	struct FVector GetSupportingHandIKLocation(); // Function ConZ.Item.GetSupportingHandIKLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x240abd0
	enum class EPrisonerAnimationSet GetPrisonerAnimationSet(); // Function ConZ.Item.GetPrisonerAnimationSet // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240aba0
	struct TSoftObjectPtr<UTexture2D> GetOutsideInventoryIcon(); // Function ConZ.Item.GetOutsideInventoryIcon // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240ab30
	struct UMeshComponent* GetMeshComponent(); // Function ConZ.Item.GetMeshComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x240ab00
	float GetMaxHealth(); // Function ConZ.Item.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240aad0
	struct TSoftObjectPtr<UTexture2D> GetInventoryIconInHands(); // Function ConZ.Item.GetInventoryIconInHands // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240aa60
	struct TSoftObjectPtr<UTexture2D> GetInventoryIcon(); // Function ConZ.Item.GetInventoryIcon // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240a9f0
	bool GetIgnoreSupportingHandIK(); // Function ConZ.Item.GetIgnoreSupportingHandIK // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240a9c0
	float GetHealth(); // Function ConZ.Item.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240a990
	struct FText GetDescription(); // Function ConZ.Item.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240a950
	struct FCharacterAndItemAnimation FindCharacterAndItemAnimation(struct UObject* Context, enum class EPrisonerMontage prisonerMontageType); // Function ConZ.Item.FindCharacterAndItemAnimation // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240a870
	struct UAnimMontage* FindAnimationMontage(struct UObject* Context, enum class EPrisonerMontage prisonerMontageType); // Function ConZ.Item.FindAnimationMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240a7a0
	bool DropAround(struct AActor* Actor, struct APawn* dropper, float zOffset); // Function ConZ.Item.DropAround // (Final|Native|Public|BlueprintCallable) // @ game+0x240a680
	void DestroyInternal(); // Function ConZ.Item.DestroyInternal // (Native|Protected|BlueprintCallable) // @ game+0x240a660
	void DebugTextChangedDelegate__DelegateSignature(struct AItem* Item); // DelegateFunction ConZ.Item.DebugTextChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	bool CanBeMeleeWeapon(); // Function ConZ.Item.CanBeMeleeWeapon // (Native|Event|Public|BlueprintEvent|Const) // @ game+0xaceaf0
	bool CanBeCraftedByCharactrer(struct ACharacter* Character); // Function ConZ.Item.CanBeCraftedByCharactrer // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240a5c0
	bool CanAutoAddItem(struct AItem* Item, char& column, char& row); // Function ConZ.Item.CanAutoAddItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x240a490
	bool AutoAddItemToInventoryNode(struct TScriptInterface<IInventoryNode> Item); // Function ConZ.Item.AutoAddItemToInventoryNode // (Native|Public|BlueprintCallable) // @ game+0x240a3e0
};

// Class ConZ.AmmunitionItem
// Size: 0xa00 (Inherited: 0x9b0)
struct AAmmunitionItem : AItem {
	struct FGameplayTag AmmunitionTag; // 0x9a8(0x08)
	struct FString AmmunitionTypeString; // 0x9b0(0x10)
	struct AProjectile* projectileClass; // 0x9c0(0x08)
	struct UStaticMesh* CartridgeMesh; // 0x9c8(0x08)
	struct UStaticMesh* CasingMesh; // 0x9d0(0x08)
	struct UStaticMesh* UsedBadRoundMesh; // 0x9d8(0x08)
	float WeaponSpreadMultiplier; // 0x9e0(0x04)
	int32_t MaxAmmoCount; // 0x9e4(0x04)
	int32_t _ammoCount; // 0x9e8(0x04)
	int32_t _ammoCountOwnerHelper; // 0x9ec(0x04)
	char pad_9F8[0x8]; // 0x9f8(0x08)

	void SetAmmoCount(int32_t Count, enum class ERPCType broadcastRPCType); // Function ConZ.AmmunitionItem.SetAmmoCount // (Final|Native|Public|BlueprintCallable) // @ game+0x2347130
	void OnRep_AmmoCountOwnerHelper(); // Function ConZ.AmmunitionItem.OnRep_AmmoCountOwnerHelper // (Final|Native|Private) // @ game+0x2347010
	void OnRep_AmmoCount(); // Function ConZ.AmmunitionItem.OnRep_AmmoCount // (Final|Native|Private|Const) // @ game+0x2346ff0
	void NetMulticast_SetAmmoCount(int32_t Count); // Function ConZ.AmmunitionItem.NetMulticast_SetAmmoCount // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2346f60
	float GetSpreadMultiplierForWeapon(struct AWeapon* Weapon); // Function ConZ.AmmunitionItem.GetSpreadMultiplierForWeapon // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2346e40
	int32_t GetAmmoCount(); // Function ConZ.AmmunitionItem.GetAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2346e10
	void Client_SetAmmoCount(int32_t Count); // Function ConZ.AmmunitionItem.Client_SetAmmoCount // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2346d50
};

// Class ConZ.AmmunitionArrow
// Size: 0xa20 (Inherited: 0xa00)
struct AAmmunitionArrow : AAmmunitionItem {
	bool DestroyOnHit; // 0x9f8(0x01)
	struct ABrokenArrow* BrokenArrowClass; // 0xa00(0x08)
	float _muzzleVelocityMultiplier; // 0xa08(0x04)
	float _stiffnessFactor; // 0xa0c(0x04)
	float _flightRotationCorrectionSpeed; // 0xa10(0x04)
	float _elasticityFactorSpread; // 0xa14(0x04)
	char pad_A19[0x7]; // 0xa19(0x07)
};

// Class ConZ.AmmunitionBoneListAssetData
// Size: 0x38 (Inherited: 0x28)
struct UAmmunitionBoneListAssetData : UAssetUserData {
	struct TArray<struct FName> CartridgeBoneNames; // 0x28(0x10)
};

// Class ConZ.AmmunitionBoxItem
// Size: 0x9c0 (Inherited: 0x9b0)
struct AAmmunitionBoxItem : AItem {
	struct AAmmunitionItem* AmmunitionItemClass; // 0x9a8(0x08)
	int32_t MaxAmmoCount; // 0x9b0(0x04)
	int32_t _ammoCount; // 0x9b4(0x04)

	void OnRep_AmmoCount(); // Function ConZ.AmmunitionBoxItem.OnRep_AmmoCount // (Final|Native|Private) // @ game+0x2346ff0
};

// Class ConZ.AmmunitionExplosiveArrow
// Size: 0xa80 (Inherited: 0xa20)
struct AAmmunitionExplosiveArrow : AAmmunitionArrow {
	struct UAkAudioEvent* _startBeepingEvent; // 0xa18(0x08)
	struct UAkAudioEvent* _stopBeepingEvent; // 0xa20(0x08)
	float _startOfBeepingBeforeDetonation; // 0xa28(0x04)
	float _innerExplosionRadius; // 0xa2c(0x04)
	float _outerExplosionRadius; // 0xa30(0x04)
	float _explosionBaseDamage; // 0xa34(0x04)
	float _explosionMinDamage; // 0xa38(0x04)
	float _explosionDistanceFalloff; // 0xa3c(0x04)
	float _explosionTimerTime; // 0xa40(0x04)
	float _explosionForce; // 0xa44(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0xa48(0x10)
	struct FName _detonationPointSocketName; // 0xa58(0x08)
	struct AReplicatedExplosionEffectsActor* _effectsActorClass; // 0xa60(0x08)
	char pad_A70[0x8]; // 0xa70(0x08)
	bool _shouldStartCountdown; // 0xa78(0x01)
	char pad_A79[0x7]; // 0xa79(0x07)

	void Server_Explode(); // Function ConZ.AmmunitionExplosiveArrow.Server_Explode // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2347110
};

// Class ConZ.ConZCharacter
// Size: 0x830 (Inherited: 0x4d0)
struct AConZCharacter : ACharacter {
	char pad_4D0[0x70]; // 0x4d0(0x70)
	struct UChoppingRecipeDataAsset* ChoppingRecipeDataAsset; // 0x540(0x08)
	bool IterativeChopping; // 0x548(0x01)
	char pad_549[0x7]; // 0x549(0x07)
	struct AItem* ItemRepresentation; // 0x550(0x08)
	struct FName HeadBoneName; // 0x558(0x08)
	struct TMap<struct FName, enum class EBodyPart> BodyPartByBoneName; // 0x560(0x50)
	float HeadHeight; // 0x5b0(0x04)
	float TorsoHeight; // 0x5b4(0x04)
	bool ShouldAutoUpdateEnvironmentDescription; // 0x5b8(0x01)
	char pad_5B9[0x3]; // 0x5b9(0x03)
	float EnvironmentDescriptionAutoUpdateInterval; // 0x5bc(0x04)
	struct UAkAudioEvent* EnteredIndoorEnvironmentAudioEvent; // 0x5c0(0x08)
	struct UAkAudioEvent* EnteredOutdoorEnvironmentAudioEvent; // 0x5c8(0x08)
	struct UAkAudioEvent* EnteredUndergroundAudioEvent; // 0x5d0(0x08)
	struct UAkAudioEvent* LeftUndergroundAudioEvent; // 0x5d8(0x08)
	char pad_5E0[0x18]; // 0x5e0(0x18)
	struct UVoiceChatComponent* VoiceChatComponent; // 0x5f8(0x08)
	char pad_600[0x8]; // 0x600(0x08)
	float _kockoutChanceModifier; // 0x608(0x04)
	enum class EConZGender _gender; // 0x60c(0x01)
	char pad_60D[0x3]; // 0x60d(0x03)
	struct FGenericTeamId _genericTeamId; // 0x610(0x10)
	struct UCharacterSoundComponent* SoundComponent; // 0x620(0x08)
	char pad_628[0x38]; // 0x628(0x38)
	enum class EConZPxDominanceGroup _physicsDominanceGroup; // 0x660(0x01)
	char pad_661[0x3]; // 0x661(0x03)
	float _activeHitTimeToLive; // 0x664(0x04)
	struct UCurveFloat* _hitDamageVsVehicleSpeedInKph; // 0x668(0x08)
	struct FHitEffects _effectsOnVehicleHit[0x5]; // 0x670(0x118)
	char pad_788[0x10]; // 0x788(0x10)
	bool _allowMultipleDamageReportsFromProjectile; // 0x798(0x01)
	char pad_799[0x7]; // 0x799(0x07)
	struct UPhysicsAsset* _physicsAssetOnServer; // 0x7a0(0x08)
	enum class EAITeam _aiTeam; // 0x7a8(0x01)
	char pad_7A9[0x7]; // 0x7a9(0x07)
	struct TArray<struct UCharacterAction*> _actionsList; // 0x7b0(0x10)
	char pad_7C0[0x24]; // 0x7c0(0x24)
	float _characterActionPlayRateMultiplier; // 0x7e4(0x04)
	struct UGrappleActionComponent* _grappleActionComponent; // 0x7e8(0x08)
	bool _isSubjectToEncounterManager; // 0x7f0(0x01)
	bool _isPartOfHorde; // 0x7f1(0x01)
	char pad_7F2[0x1]; // 0x7f2(0x01)
	bool _canReceiveForcedStimulusAfterHordeActivation; // 0x7f3(0x01)
	bool _canLeaveOnEncounterEnd; // 0x7f4(0x01)
	char pad_7F5[0x3]; // 0x7f5(0x03)
	float _rogueCharacterRemovalDistance; // 0x7f8(0x04)
	char pad_7FC[0x10]; // 0x7fc(0x10)
	bool _shouldPerformLoadedLevelsCheck; // 0x80c(0x01)
	char pad_80D[0x1]; // 0x80d(0x01)
	enum class ECharacterHiddenSpawnType _hiddenSpawnType; // 0x80e(0x01)
	char pad_80F[0x1]; // 0x80f(0x01)
	float _fadeTime; // 0x810(0x04)
	bool _canUseDoorNavlink; // 0x814(0x01)
	bool _canOpenLockedDoors; // 0x815(0x01)
	bool _canOpenUnpoweredDoors; // 0x816(0x01)
	bool _canUseWindowNavlink; // 0x817(0x01)
	char pad_818[0x18]; // 0x818(0x18)

	void SetGender(enum class EConZGender Value); // Function ConZ.ConZCharacter.SetGender // (Final|Native|Public|BlueprintCallable) // @ game+0x23921c0
	void SetEnvironmentDescription(struct FEnvironmentDescription& Value); // Function ConZ.ConZCharacter.SetEnvironmentDescription // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2392120
	void Server_SetEnvironmentDescription(struct FEnvironmentDescription Value); // Function ConZ.ConZCharacter.Server_SetEnvironmentDescription // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2392000
	void Server_RequestCharacterAction(struct FCharacterActionReplicationHelper Value); // Function ConZ.ConZCharacter.Server_RequestCharacterAction // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2391f70
	void Server_HandleMeleeAttackCapsuleHit(struct AConZCharacter* attacker, struct FMeleeAttackCapsuleHitInfo HitInfo); // Function ConZ.ConZCharacter.Server_HandleMeleeAttackCapsuleHit // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2391e30
	void Server_CharacterActionAck(struct FCharacterActionAck ack); // Function ConZ.ConZCharacter.Server_CharacterActionAck // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2391da0
	void OnRep_HiddenSpawnType(); // Function ConZ.ConZCharacter.OnRep_HiddenSpawnType // (Final|Native|Private) // @ game+0x2391d60
	void OnRep_GrappleActionComponent(); // Function ConZ.ConZCharacter.OnRep_GrappleActionComponent // (Final|Native|Private) // @ game+0x2391d40
	void OnRep_Gender(enum class EConZGender oldGender); // Function ConZ.ConZCharacter.OnRep_Gender // (Final|Native|Private) // @ game+0x2391cc0
	void NetMulticast_RequestCharacterAction(struct FCharacterActionReplicationHelper Value, int32_t characterActionSet, bool ignoreAutonomousProxy); // Function ConZ.ConZCharacter.NetMulticast_RequestCharacterAction // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391530
	void NetMulticast_PlayAudioEventWithTag(struct FGameplayTag audioEventTag); // Function ConZ.ConZCharacter.NetMulticast_PlayAudioEventWithTag // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23914a0
	void NetMulticast_HandleMeleeAttackCapsuleHit(struct AConZCharacter* attacker, struct FMeleeAttackCapsuleHitInfo HitInfo); // Function ConZ.ConZCharacter.NetMulticast_HandleMeleeAttackCapsuleHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391360
	void NetMulticast_CharacterActionAck(struct FCharacterActionAck ack, bool ignoreAutonomousProxy); // Function ConZ.ConZCharacter.NetMulticast_CharacterActionAck // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391280
	bool IsHeadBone(struct FName BoneName); // Function ConZ.ConZCharacter.IsHeadBone // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23911b0
	bool IsConscious(); // Function ConZ.ConZCharacter.IsConscious // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2391180
	bool IsAlive(); // Function ConZ.ConZCharacter.IsAlive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2391150
	bool HasCharacterAction(); // Function ConZ.ConZCharacter.HasCharacterAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2391120
	struct UCharacterSoundComponent* GetSoundComponent(); // Function ConZ.ConZCharacter.GetSoundComponent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390f80
	enum class EDetectHitCollisionType GetHitReactBodyPartFromHitResult(struct FHitResult& HitResult); // Function ConZ.ConZCharacter.GetHitReactBodyPartFromHitResult // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390dc0
	enum class EDetectHitCollisionType GetHitReactBodyPartFromBodyPart(enum class EBodyPart Value); // Function ConZ.ConZCharacter.GetHitReactBodyPartFromBodyPart // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390d30
	enum class EConZGender GetGender(); // Function ConZ.ConZCharacter.GetGender // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390d00
	struct FEnvironmentDescription GetEnvironmentDescription(); // Function ConZ.ConZCharacter.GetEnvironmentDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390cd0
	struct UCharacterAction* GetCharacterAction(); // Function ConZ.ConZCharacter.GetCharacterAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390be0
	enum class EBodyPart GetBodyPartFromBoneName(struct FName BoneName); // Function ConZ.ConZCharacter.GetBodyPartFromBoneName // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390b40
	void Client_RequestCharacterAction(struct FCharacterActionReplicationHelper Value, bool cancelExecutingAction); // Function ConZ.ConZCharacter.Client_RequestCharacterAction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2390a60
	void CharacterAction_EndHandle(struct UCharacterAction* action); // Function ConZ.ConZCharacter.CharacterAction_EndHandle // (Final|Native|Private) // @ game+0x23909d0
	void CharacterAction_BeginHandle(struct UCharacterAction* action); // Function ConZ.ConZCharacter.CharacterAction_BeginHandle // (Final|Native|Private) // @ game+0x2390940
	void ActorHitCallback(struct AActor* Actor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.ConZCharacter.ActorHitCallback // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x23906f0
};

// Class ConZ.Animal2
// Size: 0x9d0 (Inherited: 0x830)
struct AAnimal2 : AConZCharacter {
	struct FText SpeciesName; // 0x830(0x18)
	enum class EAnimalSpecies SpeciesType; // 0x848(0x01)
	enum class EAnimalActivityCycle ActivityCycle; // 0x849(0x01)
	char pad_84A[0x2]; // 0x84a(0x02)
	float MaxHealth; // 0x84c(0x04)
	struct UHitReactComponent* HitReactComponent; // 0x850(0x08)
	struct FGameplayTag HitReactType; // 0x858(0x08)
	struct FName EyesViewPointSocketName; // 0x860(0x08)
	struct FName TargetLocationSocketName; // 0x868(0x08)
	float BleedingSpeed; // 0x870(0x04)
	float LightWoundDamageAmount; // 0x874(0x04)
	float MeleeBleedingThreshold; // 0x878(0x04)
	float StuckCheckDuration; // 0x87c(0x04)
	float StuckRadius; // 0x880(0x04)
	char UnstuckMode; // 0x884(0x01)
	char pad_885[0x3]; // 0x885(0x03)
	struct FMulticastInlineDelegate OnDamageTaken; // 0x888(0x10)
	float HeadBoneRotationSendToServerInterval; // 0x898(0x04)
	float SightRange; // 0x89c(0x04)
	bool TiltMeshOnSlopes; // 0x8a0(0x01)
	bool AdjustMeshHeightOnSlopes; // 0x8a1(0x01)
	char pad_8A2[0x2]; // 0x8a2(0x02)
	float MeshPositionLerpSpeed; // 0x8a4(0x04)
	float BleedInterval; // 0x8a8(0x04)
	bool ShouldGoToRagdolIfTakenDamage; // 0x8ac(0x01)
	char pad_8AD[0x3]; // 0x8ad(0x03)
	float RagdollDuration; // 0x8b0(0x04)
	float _health; // 0x8b4(0x04)
	char pad_8B8[0x4]; // 0x8b8(0x04)
	bool _canBeModifiedWithServerSettings; // 0x8bc(0x01)
	char pad_8BD[0xf]; // 0x8bd(0x0f)
	int32_t _packSizeMin; // 0x8cc(0x04)
	int32_t _packSizeMax; // 0x8d0(0x04)
	char pad_8D4[0x34]; // 0x8d4(0x34)
	enum class EAnimalStance _animalStance; // 0x908(0x01)
	char pad_909[0x7]; // 0x909(0x07)
	bool _shouldUpdateMovementSpeedRTPCValue; // 0x910(0x01)
	char pad_911[0x47]; // 0x911(0x47)
	bool _doNotCrumble; // 0x958(0x01)
	char pad_959[0x3]; // 0x959(0x03)
	float _collisionDamageMultiplierPerBodyPart[0xc]; // 0x95c(0x30)
	char pad_98C[0x4]; // 0x98c(0x04)
	float _delayBetweenTakeDamageSounds; // 0x990(0x04)
	bool _canDrown; // 0x994(0x01)
	char pad_995[0x3]; // 0x995(0x03)
	float _drownDamageCycleLength; // 0x998(0x04)
	float _drownDamagePerCycle; // 0x99c(0x04)
	char pad_9A0[0x4]; // 0x9a0(0x04)
	float _baseEyeForwardDistance; // 0x9a4(0x04)
	bool _isSearched; // 0x9a8(0x01)
	char pad_9A9[0x3]; // 0x9a9(0x03)
	float _corpseSearchDuration; // 0x9ac(0x04)
	float _corpseMaxLifeTimeInMinutes; // 0x9b0(0x04)
	float _destroyCorpseTimerInterval; // 0x9b4(0x04)
	float _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse; // 0x9b8(0x04)
	char pad_9BC[0x14]; // 0x9bc(0x14)

	void UnpackUint8(char pack, struct TArray<bool>& B); // Function ConZ.Animal2.UnpackUint8 // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x23472a0
	char PackBoolsIntoUint8(struct TArray<bool>& B); // Function ConZ.Animal2.PackBoolsIntoUint8 // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2347050
	void OnRep_Health(); // Function ConZ.Animal2.OnRep_Health // (Native|Protected) // @ game+0x2347030
	void NetMulticast_PlaySoundOnClients(enum class EAnimal2Sound SoundToPlay); // Function ConZ.Animal2.NetMulticast_PlaySoundOnClients // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2346ee0
	struct APrisoner* ClosestPrisoner(); // Function ConZ.Animal2.ClosestPrisoner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2346de0
};

// Class ConZ.ConZCharacterMovementComponent
// Size: 0xda0 (Inherited: 0xb40)
struct UConZCharacterMovementComponent : UCharacterMovementComponent {
	enum class ECollisionResponse _navWalkingCollisionResponseToWorldStatic; // 0xb40(0x01)
	enum class ECollisionResponse _navWalkingCollisionResponseToWorldDynamic; // 0xb41(0x01)
	char pad_B42[0x2]; // 0xb42(0x02)
	float _maxClimbHeight; // 0xb44(0x04)
	float _obstacleDetectionInterval; // 0xb48(0x04)
	char pad_B4C[0x5]; // 0xb4c(0x05)
	bool _queryWaterSplinesEveryFrame; // 0xb51(0x01)
	char pad_B52[0xfe]; // 0xb52(0xfe)
	float _angularVelocityFilteringInterpolationSpeed; // 0xc50(0x04)
	char pad_C54[0x14c]; // 0xc54(0x14c)
};

// Class ConZ.Animal2MovementComponent
// Size: 0xdc0 (Inherited: 0xda0)
struct UAnimal2MovementComponent : UConZCharacterMovementComponent {
	float GroundSlopeRotationSpeedDegrees; // 0xda0(0x04)
	bool CorrectServerReceivedZ; // 0xda4(0x01)
	char pad_DA5[0x1b]; // 0xda5(0x1b)
};

// Class ConZ.CharacterSoundComponent
// Size: 0x128 (Inherited: 0xb0)
struct UCharacterSoundComponent : UActorComponent {
	struct FName AttachedSoundsAttachPointName; // 0xb0(0x08)
	struct UCharacterImpactSoundsData* ImpactSounds; // 0xb8(0x08)
	struct UCharacterPainSoundsData* PainSounds; // 0xc0(0x08)
	float MinDurationBetweenPainSounds; // 0xc8(0x04)
	float MaxDurationBetweenPainSounds; // 0xcc(0x04)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct TMap<struct FGameplayTag, struct FConZCharacterTagSoundArray> _audioEventsPerTag; // 0xd8(0x50)
};

// Class ConZ.Animal2SoundComponent
// Size: 0x1a0 (Inherited: 0x128)
struct UAnimal2SoundComponent : UCharacterSoundComponent {
	struct UAkAudioEvent* IdleAudioEvent; // 0x128(0x08)
	struct UAkAudioEvent* AngryAudioEvent; // 0x130(0x08)
	struct UAkAudioEvent* AttackAudioEvent; // 0x138(0x08)
	struct UAkAudioEvent* ScaredAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* AlertedAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* TakeDamageAudioEvent; // 0x150(0x08)
	struct UAkAudioEvent* KillAudioEvent; // 0x158(0x08)
	struct UAkAudioEvent* AnimalFootstep; // 0x160(0x08)
	float FootstepSoundOverlap; // 0x168(0x04)
	float FixedFootstepVolume; // 0x16c(0x04)
	float SpeedFootstepVolume; // 0x170(0x04)
	float MinSilenceTimeout; // 0x174(0x04)
	float MaxSilenceTimeout; // 0x178(0x04)
	char pad_17C[0x24]; // 0x17c(0x24)
};

// Class ConZ.Animal2AnimInstance
// Size: 0x2f0 (Inherited: 0x2c0)
struct UAnimal2AnimInstance : UAnimInstance {
	struct UCurveFloat* InverseLocomotionBias; // 0x2b8(0x08)
	float MaximumLeaningAngle; // 0x2c0(0x04)
	int32_t IdleStanceIndex; // 0x2c4(0x04)
	enum class EAnimalStance stance; // 0x2c8(0x01)
	struct FRotator SlopeRootTiltRotation; // 0x2cc(0x0c)
	float ABPSpeed; // 0x2d8(0x04)
	float ABPTurn; // 0x2dc(0x04)
	float MoveVelocity; // 0x2e0(0x04)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	bool _isRagdolled; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)

	void AnimNotify_RFootDownRear(); // Function ConZ.Animal2AnimInstance.AnimNotify_RFootDownRear // (Native|Event|Public|BlueprintEvent) // @ game+0x2346d30
	void AnimNotify_RFootDown(); // Function ConZ.Animal2AnimInstance.AnimNotify_RFootDown // (Native|Event|Public|BlueprintEvent) // @ game+0x2346d30
	void AnimNotify_LFootDownRear(); // Function ConZ.Animal2AnimInstance.AnimNotify_LFootDownRear // (Native|Event|Public|BlueprintEvent) // @ game+0x2346d30
	void AnimNotify_LFootDown(); // Function ConZ.Animal2AnimInstance.AnimNotify_LFootDown // (Native|Event|Public|BlueprintEvent) // @ game+0x2346d30
	void AnimNotify_IntroEnd(); // Function ConZ.Animal2AnimInstance.AnimNotify_IntroEnd // (Native|Event|Public|BlueprintEvent) // @ game+0x2346d10
	void AnimNotify_IdleEnd(); // Function ConZ.Animal2AnimInstance.AnimNotify_IdleEnd // (Native|Event|Public|BlueprintEvent) // @ game+0x2346cf0
};

// Class ConZ.ConZAIController
// Size: 0x450 (Inherited: 0x330)
struct AConZAIController : AAIController {
	char pad_330[0x10]; // 0x330(0x10)
	bool _useConZFlyingNavigation; // 0x340(0x01)
	char pad_341[0x53]; // 0x341(0x53)
	float _turningSpeed; // 0x394(0x04)
	float _turningSpeedRestore; // 0x398(0x04)
	float _brakingDecelerationFlyingMovementRestore; // 0x39c(0x04)
	char pad_3A0[0x8]; // 0x3a0(0x08)
	float _boundsInflation; // 0x3a8(0x04)
	bool _shouldUseBypassAccelerationAndTurning; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)
	float _bypassAccelerationScale; // 0x3b0(0x04)
	float _bypassTurningSpeed; // 0x3b4(0x04)
	float _findPathBypassMultiplier; // 0x3b8(0x04)
	float _maxTimePerDestinationMultiplier; // 0x3bc(0x04)
	char pad_3C0[0x4]; // 0x3c0(0x04)
	struct FVector _flyingRandomMovementExtent; // 0x3c4(0x0c)
	float _flyingRepeatChooseLocationTime; // 0x3d0(0x04)
	float _speedToTurnOffOrientRotationToMovement; // 0x3d4(0x04)
	struct TArray<struct UObject*> _classesToIgnoreWhenFlyMoving; // 0x3d8(0x10)
	char pad_3E8[0x68]; // 0x3e8(0x68)
};

// Class ConZ.ComplexAnimalAIController
// Size: 0x620 (Inherited: 0x450)
struct AComplexAnimalAIController : AConZAIController {
	enum class EAnimalAgressivness Agressivness; // 0x450(0x01)
	char pad_451[0x3]; // 0x451(0x03)
	float SightIntimidateRadius; // 0x454(0x04)
	float SightAttackRadius; // 0x458(0x04)
	float FoeChargeVelocity; // 0x45c(0x04)
	bool ShouldForceChargeRotation; // 0x460(0x01)
	char pad_461[0x3]; // 0x461(0x03)
	float AnimalVelocityThatMakesThisAnimalFlee; // 0x464(0x04)
	float FleeDistance; // 0x468(0x04)
	float FleeTime; // 0x46c(0x04)
	float TrotTime; // 0x470(0x04)
	float TimeToAttackWhenAggro; // 0x474(0x04)
	float TimeToQuitObserve; // 0x478(0x04)
	float MinReactionTime; // 0x47c(0x04)
	float MaxReactionTime; // 0x480(0x04)
	float MovingUpdateInterval; // 0x484(0x04)
	float AttackingUpdateInetrval; // 0x488(0x04)
	float PathSegmentLength_OBSOLETE; // 0x48c(0x04)
	float MinPaceDuration_OBSOLETE; // 0x490(0x04)
	int32_t MaxNumWalks_OBSOLETE; // 0x494(0x04)
	int32_t MaxNumTrots_OBSOLETE; // 0x498(0x04)
	float PathDirectionCounterResetTime_OBOLETE; // 0x49c(0x04)
	float MoveSegmentLength; // 0x4a0(0x04)
	float BackOffDistance; // 0x4a4(0x04)
	float AttackTrackingDistance; // 0x4a8(0x04)
	float PredictionFactor; // 0x4ac(0x04)
	bool BackAndForthStuckCheck; // 0x4b0(0x01)
	char AttackAttempts; // 0x4b1(0x01)
	char pad_4B2[0x2]; // 0x4b2(0x02)
	float ActionChangedDelay; // 0x4b4(0x04)
	float CloseAttackRepeatDelay; // 0x4b8(0x04)
	float AttackChainDelay; // 0x4bc(0x04)
	int32_t BlockedPathRetryAttempts; // 0x4c0(0x04)
	float DirectionLockTime; // 0x4c4(0x04)
	float MinWalkTimeDuringRoaming; // 0x4c8(0x04)
	float MaxWalkTimeDuringRoaming; // 0x4cc(0x04)
	float MinStandTimeDuringRoaming; // 0x4d0(0x04)
	float MaxStandTimeDuringRoaming; // 0x4d4(0x04)
	float IntimidateTime; // 0x4d8(0x04)
	float IntimidateAnimationEndTime; // 0x4dc(0x04)
	float AlertActionTime; // 0x4e0(0x04)
	float AlertStartupTime; // 0x4e4(0x04)
	float AlertAllowedAgainTime; // 0x4e8(0x04)
	float DoNotDespawnTime; // 0x4ec(0x04)
	struct UAISenseConfig_Sight* NormalAISenseSight; // 0x4f0(0x08)
	struct UAISenseConfig_Hearing* NormalAISenseHearing; // 0x4f8(0x08)
	struct UAISenseConfig_Hearing* RelaxedAISenseHearing; // 0x500(0x08)
	struct UAISenseConfig_Hearing* AlertedAISenseHearing; // 0x508(0x08)
	struct UAISenseConfig_Sight* SleepAISenseSight; // 0x510(0x08)
	struct AComplexAnimal2* _animal; // 0x518(0x08)
	char pad_520[0x88]; // 0x520(0x88)
	float _roamRadius; // 0x5a8(0x04)
	float _healthPercentageToFlee; // 0x5ac(0x04)
	float _damageMagnitudeHealthPercentageToFlee; // 0x5b0(0x04)
	float _distanceFromFoeToStartIgnoring; // 0x5b4(0x04)
	char pad_5B8[0x68]; // 0x5b8(0x68)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPerceived); // Function ConZ.ComplexAnimalAIController.UpdatePerception // (Final|Native|Private|HasOutParms) // @ game+0x2384220
	void StartFullAlert(); // Function ConZ.ComplexAnimalAIController.StartFullAlert // (Final|Native|Public) // @ game+0x2383f60
	void QuitObserve(); // Function ConZ.ComplexAnimalAIController.QuitObserve // (Final|Native|Public) // @ game+0x2383d60
	void OnTakeDamageHandler(struct AActor* damageActor, float Damage, struct FVector HitLocation, struct APawn* eventInstigator); // Function ConZ.ComplexAnimalAIController.OnTakeDamageHandler // (Final|Native|Private|HasDefaults) // @ game+0x2383b00
	void OnActionChangedHandler(enum class EAnimalAction CurrentAction, enum class EAnimalAction PrevAction); // Function ConZ.ComplexAnimalAIController.OnActionChangedHandler // (Native|Protected) // @ game+0x23839f0
	enum class EAnimalMode GetMode(); // Function ConZ.ComplexAnimalAIController.GetMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11450c0
	void ChangeMode(enum class EAnimalMode newMode); // Function ConZ.ComplexAnimalAIController.ChangeMode // (Native|Public|BlueprintCallable) // @ game+0x23833c0
};

// Class ConZ.AnimalContinuousChargeAttackAIController
// Size: 0x638 (Inherited: 0x620)
struct AAnimalContinuousChargeAttackAIController : AComplexAnimalAIController {
	float LockAttackDirectionDistance; // 0x620(0x04)
	float ContinueAttackDistance; // 0x624(0x04)
	char pad_628[0x10]; // 0x628(0x10)
};

// Class ConZ.BaseItemTag
// Size: 0x30 (Inherited: 0x30)
struct UBaseItemTag : UDataAsset {
};

// Class ConZ.AnimalHandlingItemTag
// Size: 0x30 (Inherited: 0x30)
struct UAnimalHandlingItemTag : UBaseItemTag {
};

// Class ConZ.Skill
// Size: 0xb0 (Inherited: 0x30)
struct USkill : UDataAsset {
	struct FText Caption; // 0x30(0x18)
	enum class ESkillReplicationID ReplicationID; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float ComboBonus; // 0x4c(0x04)
	float NoSkillBonus; // 0x50(0x04)
	float BasicBonus; // 0x54(0x04)
	float MediumBonus; // 0x58(0x04)
	float AdvancedBonus; // 0x5c(0x04)
	float DisplayActionMessages; // 0x60(0x04)
	bool IsAvailableInCharacterCreation; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct UTexture2D* _skillIcon; // 0x68(0x08)
	char pad_70[0x34]; // 0x70(0x34)
	float _skillFamePointsMultiplier; // 0xa4(0x04)
	struct UPrisonerSkillUIData* _uiDataClass; // 0xa8(0x08)
};

// Class ConZ.IntelligenceSkill
// Size: 0xb0 (Inherited: 0xb0)
struct UIntelligenceSkill : USkill {
};

// Class ConZ.AnimalHandlingSkill
// Size: 0xc0 (Inherited: 0xb0)
struct UAnimalHandlingSkill : UIntelligenceSkill {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class ConZ.AnimNotify_CharacterActionEnd
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_CharacterActionEnd : UAnimNotify {
};

// Class ConZ.AnimNotify_CharacterActionMarker
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_CharacterActionMarker : UAnimNotify {
};

// Class ConZ.AnimNotify_CharacterActionNotify
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_CharacterActionNotify : UAnimNotify {
	enum class ECharacterActionNotifyType CharacterActionNotifyType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_ClimbingFinished
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_ClimbingFinished : UAnimNotify {
};

// Class ConZ.AnimNotify_ConditionalPlayParticleEffectForItem
// Size: 0x90 (Inherited: 0x38)
struct UAnimNotify_ConditionalPlayParticleEffectForItem : UAnimNotify {
	struct UParticleSystem* PSTemplate; // 0x38(0x08)
	struct FVector LocationOffset; // 0x40(0x0c)
	struct FRotator RotationOffset; // 0x4c(0x0c)
	struct FVector Scale; // 0x58(0x0c)
	char pad_64[0x1c]; // 0x64(0x1c)
	char Attached : 1; // 0x80(0x01)
	char pad_80_1 : 7; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	struct FName SocketName; // 0x84(0x08)
	char pad_8C[0x4]; // 0x8c(0x04)

	bool ShouldPlayParticleEffectForItem(struct AItem* Item); // Function ConZ.AnimNotify_ConditionalPlayParticleEffectForItem.ShouldPlayParticleEffectForItem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2347200
};

// Class ConZ.AnimNotify_FishingActionNotify
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_FishingActionNotify : UAnimNotify {
	enum class EFishingActionNotifyType FishingActionNotifyType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_MagazineUpdateAmmunitionMeshes
// Size: 0x50 (Inherited: 0x38)
struct UAnimNotify_MagazineUpdateAmmunitionMeshes : UAnimNotify {
	bool showReversed; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TArray<int32_t> ammoIndices; // 0x40(0x10)
};

// Class ConZ.AnimNotify_MakeNoise
// Size: 0x48 (Inherited: 0x38)
struct UAnimNotify_MakeNoise : UAnimNotify {
	enum class ENoiseLevel noiseLevel; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName NoiseTag; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.AnimNotify_PaddlingSwitchHands
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_PaddlingSwitchHands : UAnimNotify {
	enum class EBoatPaddlingState _newState; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_PlaySoundBySurface
// Size: 0x48 (Inherited: 0x38)
struct UAnimNotify_PlaySoundBySurface : UAnimNotify {
	struct UAkAudioEvent* AudioEvent; // 0x38(0x08)
	enum class ECollisionChannel TraceChannel; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.AnimNotify_PlaySoundOnOwner
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_PlaySoundOnOwner : UAnimNotify {
	struct UAkAudioEvent* AudioEvent; // 0x38(0x08)
};

// Class ConZ.AnimNotify_PlaySubtitledSound
// Size: 0x58 (Inherited: 0x38)
struct UAnimNotify_PlaySubtitledSound : UAnimNotify {
	struct UAkAudioEvent* AudioEvent; // 0x38(0x08)
	struct FText Subtitles; // 0x40(0x18)
};

// Class ConZ.AnimNotify_QuestBookMinigameNotify
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_QuestBookMinigameNotify : UAnimNotify {
	enum class EQuestBookMinigameNotifyType _type; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_SmokableItemEquip
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_SmokableItemEquip : UAnimNotify {
};

// Class ConZ.AnimNotify_SmokableItemSwitchMeshParent
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_SmokableItemSwitchMeshParent : UAnimNotify {
	enum class EDesiredParent DesiredParentSocket; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_SmokableItemUnequip
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_SmokableItemUnequip : UAnimNotify {
};

// Class ConZ.AnimNotify_SpawnDefecationEffects
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_SpawnDefecationEffects : UAnimNotify {
};

// Class ConZ.AnimNotify_SpawnDiarrheaEffects
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_SpawnDiarrheaEffects : UAnimNotify {
};

// Class ConZ.AnimNotify_VehicleDoorOpenOrClose
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_VehicleDoorOpenOrClose : UAnimNotify {
};

// Class ConZ.AnimNotify_WaterPaddle
// Size: 0x60 (Inherited: 0x38)
struct UAnimNotify_WaterPaddle : UAnimNotify {
	struct UParticleSystem* ParticleSystem; // 0x38(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x40(0x08)
	float VolumeMultiplier; // 0x48(0x04)
	float PitchMultiplier; // 0x4c(0x04)
	bool IsUnderwater; // 0x50(0x01)
	bool IsAttached; // 0x51(0x01)
	char pad_52[0x2]; // 0x52(0x02)
	struct FName AttachPointName; // 0x54(0x08)
	bool DebugMode; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class ConZ.AnimNotify_WeaponActionNotify
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_WeaponActionNotify : UAnimNotify {
	enum class EWeaponActionNotifyType WeaponActionNotifyType; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.AnimNotify_WeaponChamberBullet
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_WeaponChamberBullet : UAnimNotify {
};

// Class ConZ.AnimNotify_WeaponChamberBulletInternal
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_WeaponChamberBulletInternal : UAnimNotify {
};

// Class ConZ.AnimNotify_WeaponEjectCasing
// Size: 0x48 (Inherited: 0x38)
struct UAnimNotify_WeaponEjectCasing : UAnimNotify {
	struct FName EmitterSocketName; // 0x38(0x08)
	bool AttachEmitter; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes
// Size: 0x50 (Inherited: 0x38)
struct UAnimNotify_WeaponUpdateAmmunitionMeshes : UAnimNotify {
	bool showReversed; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TArray<int32_t> ammoIndices; // 0x40(0x10)
};

// Class ConZ.AnimNotifyState_BoatRow
// Size: 0x30 (Inherited: 0x30)
struct UAnimNotifyState_BoatRow : UAnimNotifyState {
};

// Class ConZ.AnimNotifyState_ChamberWeapon
// Size: 0x30 (Inherited: 0x30)
struct UAnimNotifyState_ChamberWeapon : UAnimNotifyState {
};

// Class ConZ.AnimNotifyState_DrainStamina
// Size: 0x48 (Inherited: 0x30)
struct UAnimNotifyState_DrainStamina : UAnimNotifyState {
	enum class EAnimNotifyStaminDrainType DrainType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float AmountToDrain; // 0x34(0x04)
	float Duration; // 0x38(0x04)
	float RecoveryDelay; // 0x3c(0x04)
	float RatioToRecover; // 0x40(0x04)
	float RecoveryTime; // 0x44(0x04)
};

// Class ConZ.AnimNotifyState_Fade
// Size: 0x50 (Inherited: 0x30)
struct UAnimNotifyState_Fade : UAnimNotifyState {
	float _fadeOutRatio; // 0x30(0x04)
	float _fadeInRatio; // 0x34(0x04)
	enum class AnimNotifyState_FadeForAction _forAction; // 0x38(0x01)
	char pad_39[0x17]; // 0x39(0x17)
};

// Class ConZ.AnimNotifyState_IgnoreUsingHandCorrections
// Size: 0x38 (Inherited: 0x30)
struct UAnimNotifyState_IgnoreUsingHandCorrections : UAnimNotifyState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.AnimNotifyState_Melee
// Size: 0x70 (Inherited: 0x30)
struct UAnimNotifyState_Melee : UAnimNotifyState {
	struct FGameplayTag _attackCapsuleAttachment; // 0x30(0x08)
	float _damageMultiplier; // 0x38(0x04)
	enum class EHitSeverity _hitSeverity; // 0x3c(0x01)
	bool _stopOnHit; // 0x3d(0x01)
	bool _ignoreLandscape; // 0x3e(0x01)
	enum class EAttackType _attackType; // 0x3f(0x01)
	struct FName _hitDetectionMarkersRootBoneParentName; // 0x40(0x08)
	struct TArray<struct FMeleeHitDetectionMarker> _hitDetectionMarkers; // 0x48(0x10)
	int32_t _hitDetectionSamplingRate; // 0x58(0x04)
	char pad_5C[0x14]; // 0x5c(0x14)
};

// Class ConZ.AnimNotifyState_NoScopingAllowed
// Size: 0x38 (Inherited: 0x30)
struct UAnimNotifyState_NoScopingAllowed : UAnimNotifyState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.AnimNotifyState_PaniniOverride
// Size: 0x30 (Inherited: 0x30)
struct UAnimNotifyState_PaniniOverride : UAnimNotifyState {
};

// Class ConZ.AnimNotifyState_PhysicalAnimation
// Size: 0x60 (Inherited: 0x30)
struct UAnimNotifyState_PhysicalAnimation : UAnimNotifyState {
	bool GotoRagdollOnEnd; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FName BodyProfileName; // 0x34(0x08)
	struct FName ConstraintProfileName; // 0x3c(0x08)
	struct FName BoneName; // 0x44(0x08)
	struct FName StrengthBlendCurveName; // 0x4c(0x08)
	struct FName PhysicsBlendCurveName; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class ConZ.AnimNotifyState_PlaySoundOnOwnerRanged
// Size: 0x40 (Inherited: 0x30)
struct UAnimNotifyState_PlaySoundOnOwnerRanged : UAnimNotifyState {
	struct UAkAudioEvent* BeginAudioEvent; // 0x30(0x08)
	struct UAkAudioEvent* EndAudioEvent; // 0x38(0x08)
};

// Class ConZ.AnimNotifyState_ShowAmmunitionMeshes
// Size: 0x60 (Inherited: 0x30)
struct UAnimNotifyState_ShowAmmunitionMeshes : UAnimNotifyState {
	bool GenerateCustomMeshComponents; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<struct FName> CustomMeshComponentsBoneNames; // 0x38(0x10)
	bool showReversed; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct TArray<int32_t> ammoIndices; // 0x50(0x10)
};

// Class ConZ.AnimNotifyState_WeaponHideMagazine
// Size: 0x40 (Inherited: 0x30)
struct UAnimNotifyState_WeaponHideMagazine : UAnimNotifyState {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.AnimNotifyState_WeaponRevolverDrumRotationDirection
// Size: 0x38 (Inherited: 0x30)
struct UAnimNotifyState_WeaponRevolverDrumRotationDirection : UAnimNotifyState {
	enum class ERotationDirection RotationDirection; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.AnimNotifyState_WeaponRevolverIgnoreDrumRotation
// Size: 0x30 (Inherited: 0x30)
struct UAnimNotifyState_WeaponRevolverIgnoreDrumRotation : UAnimNotifyState {
};

// Class ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes
// Size: 0x48 (Inherited: 0x30)
struct UAnimNotifyState_WeaponShowAmmunitionMeshes : UAnimNotifyState {
	bool showReversed; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<int32_t> ammoIndices; // 0x38(0x10)
};

// Class ConZ.AnimStatics
// Size: 0x28 (Inherited: 0x28)
struct UAnimStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.AquaticLifeSpawningVolume
// Size: 0x2a8 (Inherited: 0x258)
struct AAquaticLifeSpawningVolume : AVolume {
	enum class EWaterZoneType _waterZoneType; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
	struct UFishSpeciesPreset* _fishSpeciesPreset; // 0x260(0x08)
	struct UFishSpawningPreset* _fishSpawningPreset; // 0x268(0x08)
	float _requiredDepthForSpawning; // 0x270(0x04)
	float _fishSchoolManagerSpawningExtent; // 0x274(0x04)
	int32_t _maxSchoolsPerFishSchoolManager; // 0x278(0x04)
	float _fishingZoneIndicatorMinSpawnTime; // 0x27c(0x04)
	float _fishingZoneIndicatorMaxSpawnTime; // 0x280(0x04)
	float _fishingZoneIndicatorMinLifetime; // 0x284(0x04)
	float _fishingZoneIndicatorMaxLifetime; // 0x288(0x04)
	int32_t _maxFishingZoneIndicatorPerPlayer; // 0x28c(0x04)
	float _fishingZoneIndicatorMinSpawningExtent; // 0x290(0x04)
	float _fishingZoneIndicatorMaxSpawningExtent; // 0x294(0x04)
	float _fishingZoneIndicatorMinRadius; // 0x298(0x04)
	float _fishingZoneIndicatorMaxRadius; // 0x29c(0x04)
	float _requiredDepthForFishingIndicator; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
};

// Class ConZ.StrengthSkill
// Size: 0xb0 (Inherited: 0xb0)
struct UStrengthSkill : USkill {
};

// Class ConZ.RangedWeaponsSkill
// Size: 0x218 (Inherited: 0xb0)
struct URangedWeaponsSkill : UStrengthSkill {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct FRangedWeaponSkillExperienceAwards NoSkillExperienceAwards; // 0xc0(0x40)
	struct FRangedWeaponSkillExperienceAwards BasicSkillExperienceAwards; // 0x100(0x40)
	struct FRangedWeaponSkillExperienceAwards MediumSkillExperienceAwards; // 0x140(0x40)
	struct FRangedWeaponSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x180(0x40)
	struct FRangedWeaponSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x1c0(0x40)
	struct FRangedWeaponSkillParametersPerSkillLevel NoSkillParameters; // 0x200(0x04)
	struct FRangedWeaponSkillParametersPerSkillLevel BasicSkillParameters; // 0x204(0x04)
	struct FRangedWeaponSkillParametersPerSkillLevel MediumSkillParameters; // 0x208(0x04)
	struct FRangedWeaponSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x20c(0x04)
	struct FRangedWeaponSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
};

// Class ConZ.ArcherySkill
// Size: 0x280 (Inherited: 0x218)
struct UArcherySkill : URangedWeaponsSkill {
	float _drawWeightNoSkillValue; // 0x218(0x04)
	float _drawWeightBasicSkillValue; // 0x21c(0x04)
	float _drawWeightMediumSkillValue; // 0x220(0x04)
	float _drawWeightAdvancedSkillValue; // 0x224(0x04)
	float _drawWeightAboveAvancedSkillValue; // 0x228(0x04)
	float _holdTimeInFullDrawNoSkillValue; // 0x22c(0x04)
	float _holdTimeInFullDrawBasicSkillValue; // 0x230(0x04)
	float _holdTimeInFullDrawMediumSkillValue; // 0x234(0x04)
	float _holdTimeInFullDrawAdvancedSkillValue; // 0x238(0x04)
	float _holdTimeInFullDrawAboveAvancedSkillValue; // 0x23c(0x04)
	float _armsShakeMultiplierNoSkillValue; // 0x240(0x04)
	float _armsShakeMultiplierBasicSkillValue; // 0x244(0x04)
	float _armsShakeMultiplierMediumSkillValue; // 0x248(0x04)
	float _armsShakeMultiplierAdvancedSkillValue; // 0x24c(0x04)
	float _armsShakeMultiplierAboveAvancedSkillValue; // 0x250(0x04)
	float _tuneBowDurationNoSkillValue; // 0x254(0x04)
	float _tuneBowDurationBasicSkillValue; // 0x258(0x04)
	float _tuneBowDurationMediumSkillValue; // 0x25c(0x04)
	float _tuneBowDurationAdvancedSkillValue; // 0x260(0x04)
	float _tuneBowDurationAboveAvancedSkillValue; // 0x264(0x04)
	float _drawCenterDotExtraTimeLimitNoSkillValue; // 0x268(0x04)
	float _drawCenterDotExtraTimeLimitBasicSkillValue; // 0x26c(0x04)
	float _drawCenterDotExtraTimeLimitMediumSkillValue; // 0x270(0x04)
	float _drawCenterDotExtraTimeLimitAdvancedSkillValue; // 0x274(0x04)
	float _drawCenterDotExtraTimeLimitAboveAvancedSkillValue; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class ConZ.ClothesItem
// Size: 0xa50 (Inherited: 0x9b0)
struct AClothesItem : AItem {
	struct UCharacterMesh* _characterMesh; // 0x9a8(0x08)
	uint32_t _warmth; // 0x9b0(0x04)
	uint32_t _waterResistance; // 0x9b4(0x04)
	float _inwardsWaterPropagationFactor; // 0x9b8(0x04)
	float _outwardsWaterPropagationFactor; // 0x9bc(0x04)
	float _camouflageBonus; // 0x9c0(0x04)
	float _damageWhenEquipped; // 0x9c4(0x04)
	float _dirtinessWhenEquipped; // 0x9c8(0x04)
	float _thermalConductivityFactor; // 0x9cc(0x04)
	float _burnDamageResistanceFactor; // 0x9d0(0x04)
	bool _overrideTemperatureResistanceThreshold; // 0x9d4(0x01)
	float _temperatureResistanceThreshold; // 0x9d8(0x04)
	bool _canBeEquipped; // 0x9dc(0x01)
	enum class EPrisonerMovementPace _maxPaceWhenEquipped; // 0x9dd(0x01)
	float _dirtiness; // 0x9e0(0x04)
	float _baseBodyPartMultiplier; // 0x9e4(0x04)
	float _baseBodyPartMultiplierWhileProne; // 0x9e8(0x04)
	float _smallMaterialDamageLimit; // 0x9ec(0x04)
	float _bigMaterialDamageLimit; // 0x9f0(0x04)
	float _maxFemaleHairLength; // 0x9f4(0x04)
	float _maxMaleHairLength; // 0x9f8(0x04)
	float _maxFacialHairLength; // 0x9fc(0x04)
	float _bellyJiggleMultiplier; // 0xa00(0x04)
	float _breastJiggleMultiplier; // 0xa04(0x04)
	uint32_t _armor; // 0xa08(0x04)
	float _hardness; // 0xa0c(0x04)
	float _projectileHitEnergyAbsorption; // 0xa10(0x04)
	float _projectileHitEnergyDamagedAbsorption; // 0xa14(0x04)
	float _energyThroughputRatio; // 0xa18(0x04)
	float _totalEnergyAbsorption; // 0xa1c(0x04)
	float _sharpMeleeDamageReduction; // 0xa20(0x04)
	float _bluntMeleeDamageReduction; // 0xa24(0x04)
	uint32_t _capacityX; // 0xa28(0x04)
	uint32_t _capacityY; // 0xa2c(0x04)
	char _materialParametersReplicated; // 0xa30(0x01)
	char pad_A34[0xc]; // 0xa34(0x0c)
	struct UInventoryContainer2D* _inventoryContainer2D; // 0xa40(0x08)
	char pad_A48[0x8]; // 0xa48(0x08)

	void SetDirtiness(float dirtiness); // Function ConZ.ClothesItem.SetDirtiness // (Final|Native|Public|BlueprintCallable) // @ game+0x23808d0
	void OnRep_MaterialParameters(); // Function ConZ.ClothesItem.OnRep_MaterialParameters // (Final|Native|Protected) // @ game+0x2380890
	void NetMulticast_UpdateMaterialParamsOnClients(); // Function ConZ.ClothesItem.NetMulticast_UpdateMaterialParamsOnClients // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2380830
	int32_t GetWarmth(); // Function ConZ.ClothesItem.GetWarmth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2380420
	int32_t GetCapacityY(); // Function ConZ.ClothesItem.GetCapacityY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2380220
	int32_t GetCapacityX(); // Function ConZ.ClothesItem.GetCapacityX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23801f0
};

// Class ConZ.Armband
// Size: 0xa50 (Inherited: 0xa50)
struct AArmband : AClothesItem {
	uint64_t _replicatedSquadEmblem; // 0xa48(0x08)

	void OnRep_SquadEmblem(); // Function ConZ.Armband.OnRep_SquadEmblem // (Final|Native|Private) // @ game+0x234bee0
};

// Class ConZ.CharacterAction
// Size: 0x108 (Inherited: 0x28)
struct UCharacterAction : UObject {
	char pad_28[0x30]; // 0x28(0x30)
	struct TArray<struct UCharacterActionDescription*> PreActionsDescriptions; // 0x58(0x10)
	struct TArray<struct UCharacterActionDescription*> PostActionsDescriptions; // 0x68(0x10)
	struct UCharacterAction* ParentAction; // 0x78(0x08)
	struct TArray<struct UCharacterAction*> _preActions; // 0x80(0x10)
	struct TArray<struct UCharacterAction*> _postActions; // 0x90(0x10)
	struct UActionProgressWidget* _progressWidget; // 0xa0(0x08)
	char pad_A8[0x18]; // 0xa8(0x18)
	struct UCharacterActionDescription* _description; // 0xc0(0x08)
	char pad_C8[0x40]; // 0xc8(0x40)

	float PlayMontage(struct UAnimMontage* Montage, float PlayRate, struct FName& startSection, bool assignCallbacks); // Function ConZ.CharacterAction.PlayMontage // (Final|Native|Protected|HasOutParms) // @ game+0x236ca90
	void OnProgressWidgetFinished(); // Function ConZ.CharacterAction.OnProgressWidgetFinished // (Native|Protected) // @ game+0x236c9a0
	void OnProgressWidgetCanceled(); // Function ConZ.CharacterAction.OnProgressWidgetCanceled // (Native|Protected) // @ game+0x236c980
	void OnPreActionEnd(struct UCharacterAction* action); // Function ConZ.CharacterAction.OnPreActionEnd // (Native|Protected) // @ game+0x236c8f0
	void OnPreActionBegin(struct UCharacterAction* action); // Function ConZ.CharacterAction.OnPreActionBegin // (Native|Protected) // @ game+0x236c860
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.CharacterAction.OnMontageEnded // (Native|Protected) // @ game+0x236c790
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.CharacterAction.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x236c6c0
};

// Class ConZ.ArmedNPCActionInsertArrow
// Size: 0x108 (Inherited: 0x108)
struct UArmedNPCActionInsertArrow : UCharacterAction {
};

// Class ConZ.CharacterActionDescription
// Size: 0x38 (Inherited: 0x28)
struct UCharacterActionDescription : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.ArmedNPCActionInsertArrowDescription
// Size: 0x40 (Inherited: 0x38)
struct UArmedNPCActionInsertArrowDescription : UCharacterActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.ArmedNPCActionReloadWeapon
// Size: 0x110 (Inherited: 0x108)
struct UArmedNPCActionReloadWeapon : UCharacterAction {
	char pad_108[0x8]; // 0x108(0x08)
};

// Class ConZ.ArmedNPCActionReloadWeaponDescription
// Size: 0x70 (Inherited: 0x38)
struct UArmedNPCActionReloadWeaponDescription : UCharacterActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.ArmedNPCAimCorrectionsData
// Size: 0x2c0 (Inherited: 0x30)
struct UArmedNPCAimCorrectionsData : UDataAsset {
	struct FArmedNPCAimCorrection HandgunCorrections; // 0x30(0x120)
	struct FArmedNPCAimCorrection RifleCorrections; // 0x150(0x120)
	struct TMap<struct AWeapon*, struct FArmedNPCAimCorrection> CorrectionsPerWeapon; // 0x270(0x50)
};

// Class ConZ.ConZCharacterEncounterSaveState
// Size: 0x38 (Inherited: 0x28)
struct UConZCharacterEncounterSaveState : UObject {
	struct TArray<char> AIControllerData; // 0x28(0x10)
};

// Class ConZ.ArmedNPCBaseEncounterSaveState
// Size: 0x50 (Inherited: 0x38)
struct UArmedNPCBaseEncounterSaveState : UConZCharacterEncounterSaveState {
	int32_t Version; // 0x38(0x04)
	float health; // 0x3c(0x04)
	int32_t BodyMeshIndex; // 0x40(0x04)
	int32_t ItemInHandsIndex; // 0x44(0x04)
	bool IsSearched; // 0x48(0x01)
	enum class EArmedNPCPersonality Personality; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
};

// Class ConZ.ArmedNPCBase
// Size: 0xa00 (Inherited: 0x830)
struct AArmedNPCBase : AConZCharacter {
	char pad_830[0x50]; // 0x830(0x50)
	struct UEntityOverlapDetectionComponent* _trapOverlapDetection; // 0x880(0x08)
	struct UBaseInteractionComponent* _baseInteractionComponent; // 0x888(0x08)
	struct UNavigationInvokerComponent* _navigationInvokerComponent; // 0x890(0x08)
	struct UMeleeCombatComponent* _meleeCombatComponent; // 0x898(0x08)
	struct UNPCInventoryComponent* _inventoryComponent; // 0x8a0(0x08)
	struct FAttachmentSocket RightHandAttachmentSocket; // 0x8a8(0x10)
	struct FAttachmentSocket LeftHandAttachmentSocket; // 0x8b8(0x10)
	bool _enableBaseInteraction; // 0x8c8(0x01)
	bool _isInCombatMode; // 0x8c9(0x01)
	char pad_8CA[0x6]; // 0x8ca(0x06)
	struct AActor* _meleeTarget; // 0x8d0(0x08)
	struct AItem* _itemInHands; // 0x8d8(0x08)
	char pad_8E0[0x18]; // 0x8e0(0x18)
	struct UHitReactComponent* _hitReactComponent; // 0x8f8(0x08)
	enum class EArmedNPCBaseMovementPace _pace; // 0x900(0x01)
	char pad_901[0x7]; // 0x901(0x07)
	struct UArmedNPCBaseCommonData* _armedNPCBaseCommonData; // 0x908(0x08)
	bool _canEverBeSearched; // 0x910(0x01)
	char pad_911[0x3]; // 0x911(0x03)
	float _corpseSearchDuration; // 0x914(0x04)
	float _drownDamageCycleLength; // 0x918(0x04)
	float _drownDamagePerCycle; // 0x91c(0x04)
	char pad_920[0x30]; // 0x920(0x30)
	struct AActor* _aimLocationTargetForSimulatedProxy; // 0x950(0x08)
	bool _assignAimLocationOnSimulatedProxy; // 0x958(0x01)
	char pad_959[0x7]; // 0x959(0x07)
	struct UArmedNPCWeaponManual* _weaponManual; // 0x960(0x08)
	char pad_968[0x8]; // 0x968(0x08)
	struct UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPreset; // 0x970(0x08)
	char pad_978[0x24]; // 0x978(0x24)
	float _health; // 0x99c(0x04)
	bool _isSearched; // 0x9a0(0x01)
	char pad_9A1[0x3]; // 0x9a1(0x03)
	int32_t _bodyMeshIndex; // 0x9a4(0x04)
	int32_t _itemInHandsIndex; // 0x9a8(0x04)
	char pad_9AC[0x10]; // 0x9ac(0x10)
	bool _checkSurroundings; // 0x9bc(0x01)
	char pad_9BD[0x43]; // 0x9bd(0x43)

	void OnRep_Pace(); // Function ConZ.ArmedNPCBase.OnRep_Pace // (Final|Native|Private) // @ game+0x234bec0
	void OnRep_MeleeTarget(); // Function ConZ.ArmedNPCBase.OnRep_MeleeTarget // (Final|Native|Private) // @ game+0x234bea0
	void OnRep_IsSearched(bool oldValue); // Function ConZ.ArmedNPCBase.OnRep_IsSearched // (Native|Protected) // @ game+0x234be10
	void OnRep_IsInCombatMode(); // Function ConZ.ArmedNPCBase.OnRep_IsInCombatMode // (Final|Native|Private) // @ game+0x234bdf0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.ArmedNPCBase.OnMontageEnded // (Final|Native|Private) // @ game+0x234bd20
	void NetMulticast_StopAnimation(enum class EArmedNPCAnimation Animation); // Function ConZ.ArmedNPCBase.NetMulticast_StopAnimation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bca0
	void NetMulticast_PlayVoiceLine(enum class EArmedNPCVoiceLine line); // Function ConZ.ArmedNPCBase.NetMulticast_PlayVoiceLine // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x234bc20
	void NetMulticast_PlayAnimation(enum class EArmedNPCAnimation Animation); // Function ConZ.ArmedNPCBase.NetMulticast_PlayAnimation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bba0
	void NetMulticast_OnConZCharacterKilled(); // Function ConZ.ArmedNPCBase.NetMulticast_OnConZCharacterKilled // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bb80
	void BaseInteractionComponent_OnBaseInteractionEvent(struct UBaseInteractionComponent* Component, struct FBaseInteractionEvent& BaseInteractionEvent); // Function ConZ.ArmedNPCBase.BaseInteractionComponent_OnBaseInteractionEvent // (Final|Native|Private|HasOutParms) // @ game+0x234ba90
};

// Class ConZ.ArmedNPCBaseAIController
// Size: 0x598 (Inherited: 0x450)
struct AArmedNPCBaseAIController : AConZAIController {
	struct UAISenseConfig_Sight* _sightSenseConfigCombat; // 0x450(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigCombat; // 0x458(0x08)
	struct UAISenseConfig_Touch* _touchSenseConfig; // 0x460(0x08)
	struct TMap<struct FName, float> _noiseAccumulationMultiplierPerNoiseTag; // 0x468(0x50)
	float _genericAcceptanceRadius; // 0x4b8(0x04)
	char pad_4BC[0xdc]; // 0x4bc(0xdc)

	void SensingComponent_OnActorSensed(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.ArmedNPCBaseAIController.SensingComponent_OnActorSensed // (Final|Native|Private|HasOutParms) // @ game+0x234f8a0
};

// Class ConZ.ArmedNPCBaseAnimInstance
// Size: 0x510 (Inherited: 0x2c0)
struct UArmedNPCBaseAnimInstance : UAnimInstance {
	char pad_2C0[0x8]; // 0x2c0(0x08)
	enum class EArmedNPCBaseMovementPace _desiredMovementPace; // 0x2c8(0x01)
	enum class EPrisonerGroundStance _stance; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	float _desiredCourseAngle; // 0x2cc(0x04)
	float _groundStartAnimPlayRate; // 0x2d0(0x04)
	struct FVector _acceleration; // 0x2d4(0x0c)
	struct FVector _velocity; // 0x2e0(0x0c)
	float _speedXY; // 0x2ec(0x04)
	bool _wantsToMove; // 0x2f0(0x01)
	bool _wantsToWalk; // 0x2f1(0x01)
	char pad_2F2[0x2]; // 0x2f2(0x02)
	float _stoppingDistance; // 0x2f4(0x04)
	bool _shouldUseLUGroundStopAnimation; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	float _legsPoseBeforeGroundStop; // 0x2fc(0x04)
	enum class ECardinalDirection _movementDirectionBeforeGroundStop; // 0x300(0x01)
	bool _wantsToJog; // 0x301(0x01)
	bool _wantsToRun; // 0x302(0x01)
	enum class EPrisonerAnimationSet _animationSet; // 0x303(0x01)
	enum class EPrisonerAnimationSet _animationSetBeforeGroundStop; // 0x304(0x01)
	bool _shouldUseWeaponAnimationPose; // 0x305(0x01)
	enum class EPrisonerCombatMode _combatMode; // 0x306(0x01)
	enum class EWeaponType _weaponType; // 0x307(0x01)
	float _weaponAimYaw; // 0x308(0x04)
	float _weaponAimPitch; // 0x30c(0x04)
	bool _hasAimLocation; // 0x310(0x01)
	char pad_311[0x3]; // 0x311(0x03)
	struct FVector _handRAimLocation; // 0x314(0x0c)
	struct FVector _supportingHandIKLocation; // 0x320(0x0c)
	bool _shouldIgnoreSupportingHandIK; // 0x32c(0x01)
	char pad_32D[0x3]; // 0x32d(0x03)
	float _leftHandIKAmount; // 0x330(0x04)
	bool _isAimingBow; // 0x334(0x01)
	bool _shouldSkipStandWalkOrJogOrRunStart; // 0x335(0x01)
	char pad_336[0x2]; // 0x336(0x02)
	struct UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimation; // 0x338(0x08)
	struct UAnimSequenceBase* _meleeSkill_TiredIdleAnimation; // 0x340(0x08)
	struct UAnimSequenceBase* _meleeSkill_WalkingIdleAnimation; // 0x348(0x08)
	struct UAnimSequenceBase* _meleeSkill_BlockIdleAnimation; // 0x350(0x08)
	struct UBlendSpace* _meleeSkill_AimOffsetBlendSpace; // 0x358(0x08)
	float _meleeSkill_IdleToBlockBlendDuration; // 0x360(0x04)
	float _meleeSkill_BlockToIdleBlendDuration; // 0x364(0x04)
	float _meleeSkill_ExhaustionFactor; // 0x368(0x04)
	bool _shouldUseUnarmedCombatWalk; // 0x36c(0x01)
	bool _isHoldingBlock; // 0x36d(0x01)
	char pad_36E[0x2]; // 0x36e(0x02)
	struct FRotator _handAimCorrectionRotator; // 0x370(0x0c)
	char pad_37C[0x194]; // 0x37c(0x194)

	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle); // Function ConZ.ArmedNPCBaseAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f5a0
	struct UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(enum class EWeaponAnimationPose animationPose, enum class EPrisonerGroundStance stance); // Function ConZ.ArmedNPCBaseAnimInstance.GetWeaponAnimationPoseOnWorkerThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f4a0
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate); // Function ConZ.ArmedNPCBaseAnimInstance.GetPlayRateFromSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f350
	void GetLeanBlendWeights(float& Left, float& Right, float Multiplier, struct UCurveFloat* strengthBySpeedCurve); // Function ConZ.ArmedNPCBaseAnimInstance.GetLeanBlendWeights // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f1d0
	float GetKnownCurveValueOnWorkerThread(enum class EPrisonerAnimationCurve Curve); // Function ConZ.ArmedNPCBaseAnimInstance.GetKnownCurveValueOnWorkerThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f140
	float GetInPlaceTurningElapsedTimeRight(enum class EPrisonerGroundStance stance); // Function ConZ.ArmedNPCBaseAnimInstance.GetInPlaceTurningElapsedTimeRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f0b0
	float GetInPlaceTurningElapsedTimeLeft(enum class EPrisonerGroundStance stance); // Function ConZ.ArmedNPCBaseAnimInstance.GetInPlaceTurningElapsedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f020
	float GetInPlaceTurningDirectionBlendAlpha(enum class EPrisonerGroundStance stance); // Function ConZ.ArmedNPCBaseAnimInstance.GetInPlaceTurningDirectionBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ef90
	float GetInPlaceTurningBlendAlpha(enum class EPrisonerGroundStance stance); // Function ConZ.ArmedNPCBaseAnimInstance.GetInPlaceTurningBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ef00
	enum class ECardinalDirection GetCardinalDirectionFromCourseAngle(float Value); // Function ConZ.ArmedNPCBaseAnimInstance.GetCardinalDirectionFromCourseAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ee40
	float GetBoxingInPlaceTurningElapsedTimeRight(); // Function ConZ.ArmedNPCBaseAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ee10
	float GetBoxingInPlaceTurningElapsedTimeLeft(); // Function ConZ.ArmedNPCBaseAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ede0
	float GetBoxingInPlaceTurningDirectionBlendAlpha(); // Function ConZ.ArmedNPCBaseAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234edb0
	float GetBoxingInPlaceTurningBlendAlpha(); // Function ConZ.ArmedNPCBaseAnimInstance.GetBoxingInPlaceTurningBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ed80
	void AnimNotify_RFootDown(); // Function ConZ.ArmedNPCBaseAnimInstance.AnimNotify_RFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed60
	void AnimNotify_LFootDown(); // Function ConZ.ArmedNPCBaseAnimInstance.AnimNotify_LFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed40
};

// Class ConZ.ArmedNPCBaseCommonData
// Size: 0x160 (Inherited: 0x30)
struct UArmedNPCBaseCommonData : UDataAsset {
	float MaxHealth; // 0x30(0x04)
	struct FFloatInterval SightAndAwarenessRange; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UArmedNPCVariationsData* Variations; // 0x40(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> PossibleItemInHands; // 0x48(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> PossibleItemsOnSearch; // 0x58(0x10)
	struct UArmedNPCDifficultyLevelSettings* DifficultyLevelSettings; // 0x68(0x08)
	struct UArmedNPCDamageCustomizationData* DamageCustomizationData; // 0x70(0x08)
	float TimeForItemsToGetSoakedOnRain; // 0x78(0x04)
	float TimeForItemsToGetDry; // 0x7c(0x04)
	struct UPhysicalSurfacesData* PhysicalSurfacesData; // 0x80(0x08)
	struct FName HeadBoneName; // 0x88(0x08)
	enum class ESkillLevel MeleSkillLevel; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UMeleeSkillAnimationsPreset* BoxingSkillAnimationsPreset; // 0x98(0x08)
	struct FArmedNPCMeleeAttackTypes MeleeAttackTypes; // 0xa0(0x88)
	struct FGameplayTag MeleeAttackCapsulesAttachmentForItemInRHand; // 0x128(0x08)
	struct FGameplayTag HitReactTypeWhenStanding; // 0x130(0x08)
	struct FGameplayTag HitReactTypeWhenStandingInCombatMode; // 0x138(0x08)
	struct FGameplayTag HitReactTypeWhenCrouching; // 0x140(0x08)
	struct FGameplayTag HitReactTypeWhenProne; // 0x148(0x08)
	struct UAnimMontage* AnimationsForEvents[0x2]; // 0x150(0x10)
};

// Class ConZ.ArmedNPCBaseMovementComponent
// Size: 0xdd0 (Inherited: 0xda0)
struct UArmedNPCBaseMovementComponent : UConZCharacterMovementComponent {
	char pad_DA0[0x4]; // 0xda0(0x04)
	float _speed[0x4]; // 0xda4(0x10)
	float _acceleration[0x4]; // 0xdb4(0x10)
	float _turnRate[0x2]; // 0xdc4(0x08)
	char pad_DCC[0x4]; // 0xdcc(0x04)

	float GetDesiredCourseAngle(); // Function ConZ.ArmedNPCBaseMovementComponent.GetDesiredCourseAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234eed0
};

// Class ConZ.ArmedNPCDamageCustomizationData
// Size: 0x98 (Inherited: 0x30)
struct UArmedNPCDamageCustomizationData : UDataAsset {
	float PointDamageMultiplierPerBodyPart[0xc]; // 0x30(0x30)
	float MeleeDamageMultiplierPerBodyPart[0xc]; // 0x60(0x30)
	float HeadshotInstantKillEnergyThreshold; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class ConZ.ArmedNPCDifficultyLevelSettings
// Size: 0x40 (Inherited: 0x30)
struct UArmedNPCDifficultyLevelSettings : UDataAsset {
	struct TArray<struct FArmedNPCDifficultyLevelSettingProperties> Levels; // 0x30(0x10)
};

// Class ConZ.ArmedNPCSoundComponent
// Size: 0x1e0 (Inherited: 0x128)
struct UArmedNPCSoundComponent : UCharacterSoundComponent {
	char pad_128[0x10]; // 0x128(0x10)
	struct UAkAudioEvent* RelaxedStanceEnteredAudioEvent; // 0x138(0x08)
	struct UAkAudioEvent* AlertedStanceEnteredAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* CombatStanceEnteredAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* FootstepAudioEvent; // 0x150(0x08)
	struct UAkAudioEvent* StopAllAudioEvent; // 0x158(0x08)
	struct UAkAudioEvent* DeathAudioEvent; // 0x160(0x08)
	struct UAkAudioEvent* StartSearchCorpseAudioEvent; // 0x168(0x08)
	struct UAkAudioEvent* StopSearchCorpseAudioEvent; // 0x170(0x08)
	struct UAkAudioEvent* FootstepsAudioEvent; // 0x178(0x08)
	struct UArmedNPCVoiceLinesData* VoiceLinesByPersonality[0x9]; // 0x180(0x48)
	char pad_1C8[0x18]; // 0x1c8(0x18)

	void PlayFootstepSounds(enum class EPhysicalSurface inPhysicalSurface); // Function ConZ.ArmedNPCSoundComponent.PlayFootstepSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x234f820
	void OnAkPostEventCallback(enum class EAkCallbackType CallbackType, struct UAkCallbackInfo* CallbackInfo); // Function ConZ.ArmedNPCSoundComponent.OnAkPostEventCallback // (Final|Native|Private) // @ game+0x234f630
};

// Class ConZ.ArmedNPCVariationsData
// Size: 0x40 (Inherited: 0x30)
struct UArmedNPCVariationsData : UDataAsset {
	struct TArray<struct FArmedNPCVariation> Physical; // 0x30(0x10)
};

// Class ConZ.ArmedNPCVoiceLinesData
// Size: 0x60 (Inherited: 0x30)
struct UArmedNPCVoiceLinesData : UDataAsset {
	struct UAkAudioEvent* Lines[0x6]; // 0x30(0x30)
};

// Class ConZ.ArmedNPCWeaponManual
// Size: 0x28 (Inherited: 0x28)
struct UArmedNPCWeaponManual : UObject {

	void Tick(float DeltaTime); // Function ConZ.ArmedNPCWeaponManual.Tick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x234f950
	void OnCharacterActionEnded(struct UCharacterAction* action); // Function ConZ.ArmedNPCWeaponManual.OnCharacterActionEnded // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x234f790
	void OnArmedNPCDifficultyLevelChanged(int32_t Level); // Function ConZ.ArmedNPCWeaponManual.OnArmedNPCDifficultyLevelChanged // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x234f700
	bool IsOutOfAmmo(); // Function ConZ.ArmedNPCWeaponManual.IsOutOfAmmo // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x9a5e70
	void Initialize(); // Function ConZ.ArmedNPCWeaponManual.Initialize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x234f580
	struct AWeapon* GetWeapon(); // Function ConZ.ArmedNPCWeaponManual.GetWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f470
};

// Class ConZ.ArmedNPCWeaponManualBow
// Size: 0x88 (Inherited: 0x28)
struct UArmedNPCWeaponManualBow : UArmedNPCWeaponManual {
	char pad_28[0x18]; // 0x28(0x18)
	struct AAmmunitionArrow* AmmoClass; // 0x40(0x08)
	char pad_48[0x40]; // 0x48(0x40)
};

// Class ConZ.ArmedNPCWeaponManualCrossbow
// Size: 0x68 (Inherited: 0x28)
struct UArmedNPCWeaponManualCrossbow : UArmedNPCWeaponManual {
	char pad_28[0x10]; // 0x28(0x10)
	struct AAmmunitionArrow* AmmoClass; // 0x38(0x08)
	char pad_40[0x28]; // 0x40(0x28)
};

// Class ConZ.ArmedNPCWeaponManualHandgun
// Size: 0x80 (Inherited: 0x28)
struct UArmedNPCWeaponManualHandgun : UArmedNPCWeaponManual {
	char pad_28[0x58]; // 0x28(0x58)
};

// Class ConZ.ArmedNPCWeaponManualRifleAutomatic
// Size: 0x70 (Inherited: 0x28)
struct UArmedNPCWeaponManualRifleAutomatic : UArmedNPCWeaponManual {
	char pad_28[0x48]; // 0x28(0x48)
};

// Class ConZ.ArmedNPCWeaponManualRifleManual
// Size: 0x70 (Inherited: 0x28)
struct UArmedNPCWeaponManualRifleManual : UArmedNPCWeaponManual {
	char pad_28[0x48]; // 0x28(0x48)
};

// Class ConZ.ArrayStatics
// Size: 0x28 (Inherited: 0x28)
struct UArrayStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ReplenishableResourceBaseComponent
// Size: 0x640 (Inherited: 0x5a0)
struct UReplenishableResourceBaseComponent : UInstancedStaticMeshComponent {
	char pad_5A0[0x8]; // 0x5a0(0x08)
	struct FReplenishableResourceDescription _replenishableResourceDescription; // 0x5a8(0x88)
	struct FName _replenishableResourceAmountMaterialParameterName; // 0x630(0x08)
	char pad_638[0x8]; // 0x638(0x08)
};

// Class ConZ.ATMReplenishableResourceComponent
// Size: 0x640 (Inherited: 0x640)
struct UATMReplenishableResourceComponent : UReplenishableResourceBaseComponent {
};

// Class ConZ.ItemComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UItemComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.AttachableItemComponent
// Size: 0x170 (Inherited: 0xc8)
struct UAttachableItemComponent : UItemComponent {
	char pad_C8[0x18]; // 0xc8(0x18)
	struct FTransform _attachRelativeTransform; // 0xe0(0x30)
	float _damage; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct FText _interactionText; // 0x118(0x18)
	char pad_130[0x40]; // 0x130(0x40)

	void OnGardenDestroyed(uint16_t GardenId); // Function ConZ.AttachableItemComponent.OnGardenDestroyed // (Final|Native|Private) // @ game+0x2353f10
	void OnFortificationDestroyed(struct FEntityComponentId fortificationEntityComponentId); // Function ConZ.AttachableItemComponent.OnFortificationDestroyed // (Final|Native|Private) // @ game+0x2353e80
	void OnBaseElementDestroyed(struct FDbIntegerId BaseElementId); // Function ConZ.AttachableItemComponent.OnBaseElementDestroyed // (Final|Native|Private) // @ game+0x2353e00
	void NetMulticast_OnAttachActorDestroyed(); // Function ConZ.AttachableItemComponent.NetMulticast_OnAttachActorDestroyed // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2353de0
};

// Class ConZ.AttachmentSocketMountType
// Size: 0x28 (Inherited: 0x28)
struct UAttachmentSocketMountType : UObject {
};

// Class ConZ.AttachmentSocketMountTypePrisonerHand
// Size: 0x28 (Inherited: 0x28)
struct UAttachmentSocketMountTypePrisonerHand : UAttachmentSocketMountType {
};

// Class ConZ.AudibleButtonComponent
// Size: 0x78 (Inherited: 0x28)
struct UAudibleButtonComponent : UObject {
	struct TMap<enum class EButtonEventType, struct UAkAudioEvent*> _audioEvents; // 0x28(0x50)
};

// Class ConZ.AudioDeviceDisplay
// Size: 0x270 (Inherited: 0x268)
struct UAudioDeviceDisplay : UUserWidget {
	struct UTextBlock* _deviceName; // 0x268(0x08)
};

// Class ConZ.AudioSettingsManager
// Size: 0x28 (Inherited: 0x28)
struct UAudioSettingsManager : UObject {
};

// Class ConZ.AudioStatics
// Size: 0x28 (Inherited: 0x28)
struct UAudioStatics : UBlueprintFunctionLibrary {

	void StopAkActor(struct AActor* Actor); // Function ConZ.AudioStatics.StopAkActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23545c0
	void SetAkRTPCValue(struct FName RTPC, float Value, int32_t InterpolationTimeMs, struct AActor* Actor); // Function ConZ.AudioStatics.SetAkRTPCValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2354470
	int32_t PostAndWaitForEndOfAkEvent(struct UAkAudioEvent* akEvent, struct AActor* Actor, bool bStopWhenAttachedToDestroyed, struct FLatentActionInfo LatentInfo); // Function ConZ.AudioStatics.PostAndWaitForEndOfAkEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23542f0
	int32_t PostAkEventAtLocation(struct UAkAudioEvent* akEvent, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject); // Function ConZ.AudioStatics.PostAkEventAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2354170
	int32_t PostAkAudioEventToAudioComponent(struct UAkAudioEvent* akEvent, struct UAkComponent* AkComponent); // Function ConZ.AudioStatics.PostAkAudioEventToAudioComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23540a0
	int32_t PostAkAudioEvent(struct UAkAudioEvent* akEvent, struct AActor* Actor, bool bStopWhenAttachedToDestroyed); // Function ConZ.AudioStatics.PostAkAudioEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353fa0
	struct FName GetMovementPaceSwitchValue(enum class EPrisonerMovementPace Value); // Function ConZ.AudioStatics.GetMovementPaceSwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353d50
	struct FName GetMovementPaceSwitchName(); // Function ConZ.AudioStatics.GetMovementPaceSwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353d10
	struct FName GetMotionIntensitySwitchValue(enum class EMotionIntensity Value); // Function ConZ.AudioStatics.GetMotionIntensitySwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353c80
	struct FName GetMotionIntensitySwitchName(); // Function ConZ.AudioStatics.GetMotionIntensitySwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353c40
	struct FName GetMaterialSwitchValue(enum class EPhysicalSurface Value); // Function ConZ.AudioStatics.GetMaterialSwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353bb0
	struct FName GetMaterialSwitchName(); // Function ConZ.AudioStatics.GetMaterialSwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353b70
	struct FName GetImpactSeveritySwitchName(); // Function ConZ.AudioStatics.GetImpactSeveritySwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353b30
	struct FName GetHitSeveritySwitchValue(enum class EHitSeverity Value); // Function ConZ.AudioStatics.GetHitSeveritySwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353aa0
	struct FName GetGenderSwitchValue(enum class EConZGender Value); // Function ConZ.AudioStatics.GetGenderSwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353a10
	struct FName GetGenderSwitchName(); // Function ConZ.AudioStatics.GetGenderSwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23539d0
	struct FName GetEnvironmentSwitchValue(enum class EEnvironmentClass Value); // Function ConZ.AudioStatics.GetEnvironmentSwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353940
	struct FName GetEnvironmentSwitchName(); // Function ConZ.AudioStatics.GetEnvironmentSwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353900
	struct FName GetCharacterPainSeveritySwitchValue(enum class ECharacterPainSoundSeverity Value); // Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchValue // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353870
	struct FName GetCharacterPainSeveritySwitchName(); // Function ConZ.AudioStatics.GetCharacterPainSeveritySwitchName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2353830
	void GetAkRTPCValue(struct FName RTPC, float& OutValue, enum class ERTPCValueType& outValueType, struct AActor* Actor); // Function ConZ.AudioStatics.GetAkRTPCValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x23536c0
};

// Class ConZ.ItemAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UItemAnimInstance : UAnimInstance {
	enum class EPrisonerGroundStance _owningPrisonerStance; // 0x2c0(0x01)
	bool _isOwningPrisonerInFirstPersonView; // 0x2c1(0x01)
	char pad_2C2[0xe]; // 0x2c2(0x0e)
};

// Class ConZ.WeaponAttachmentMagazineAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct UWeaponAttachmentMagazineAnimInstance : UItemAnimInstance {
	int32_t _ammoCount; // 0x2d0(0x04)
	bool _hasAmmo; // 0x2d4(0x01)
	bool _isAttachedToWeapon; // 0x2d5(0x01)
	enum class EMagazineAmmoCountType _ammoCountType; // 0x2d6(0x01)
	bool ShouldPlayIdleEmpty; // 0x2d7(0x01)
	char pad_2D8[0x8]; // 0x2d8(0x08)
};

// Class ConZ.AutoCrossbowMagazineAnimInstance
// Size: 0x2f0 (Inherited: 0x2e0)
struct UAutoCrossbowMagazineAnimInstance : UWeaponAttachmentMagazineAnimInstance {
	float _followerBoneLocationOffset; // 0x2e0(0x04)
	char pad_2E4[0xc]; // 0x2e4(0x0c)
};

// Class ConZ.AvailabilityGrid
// Size: 0x225578 (Inherited: 0x28)
struct UAvailabilityGrid : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct FGameplayTag _waterImageAssetTag; // 0x48(0x08)
	char pad_50[0x225528]; // 0x50(0x225528)
};

// Class ConZ.DexteritySkill
// Size: 0xb0 (Inherited: 0xb0)
struct UDexteritySkill : USkill {
};

// Class ConZ.VehicleHandlingSkill
// Size: 0xb0 (Inherited: 0xb0)
struct UVehicleHandlingSkill : UDexteritySkill {
};

// Class ConZ.AviationSkill
// Size: 0x5d8 (Inherited: 0xb0)
struct UAviationSkill : UVehicleHandlingSkill {
	struct FVehicleHandlingExperienceAwards NoSkillExperienceAwards; // 0xb0(0x08)
	struct FVehicleHandlingExperienceAwards BasicSkillExperienceAwards; // 0xb8(0x08)
	struct FVehicleHandlingExperienceAwards MediumSkillExperienceAwards; // 0xc0(0x08)
	struct FVehicleHandlingExperienceAwards AdvancedSkillExperienceAwards; // 0xc8(0x08)
	struct FVehicleHandlingExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xd0(0x08)
	struct FAviationSkillParametersPerSkillLevel NoSkillParameters; // 0xd8(0x100)
	struct FAviationSkillParametersPerSkillLevel BasicSkillParameters; // 0x1d8(0x100)
	struct FAviationSkillParametersPerSkillLevel MediumSkillParameters; // 0x2d8(0x100)
	struct FAviationSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x3d8(0x100)
	struct FAviationSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x4d8(0x100)
};

// Class ConZ.AwarenessSkill
// Size: 0x3c0 (Inherited: 0xb0)
struct UAwarenessSkill : UIntelligenceSkill {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct UAkAudioEvent* EnterFocusModeAudioEvent; // 0xc0(0x08)
	struct UAkAudioEvent* LeaveFocusModeAudioEvent; // 0xc8(0x08)
	float _updateTime; // 0xd0(0x04)
	float _serverUpdateTime; // 0xd4(0x04)
	float _staminaConsumption; // 0xd8(0x04)
	float _focusModeActivationTime; // 0xdc(0x04)
	struct FAwarenessSkillExperienceAwards NoSkillExperienceAwards; // 0xe0(0x0c)
	struct FAwarenessSkillExperienceAwards BasicSkillExperienceAwards; // 0xec(0x0c)
	struct FAwarenessSkillExperienceAwards MediumSkillExperienceAwards; // 0xf8(0x0c)
	struct FAwarenessSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x104(0x0c)
	struct FAwarenessSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x110(0x0c)
	struct FAwarenessSkillParametersPerSkillLevel NoSkillParameters; // 0x11c(0x54)
	struct FAwarenessSkillParametersPerSkillLevel BasicSkillParameters; // 0x170(0x54)
	struct FAwarenessSkillParametersPerSkillLevel MediumSkillParameters; // 0x1c4(0x54)
	struct FAwarenessSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x218(0x54)
	struct FAwarenessSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x26c(0x54)
	char pad_2C0[0x100]; // 0x2c0(0x100)

	void EnterFocusMode(); // Function ConZ.AwarenessSkill.EnterFocusMode // (Final|Native|Public) // @ game+0x23536a0
};

// Class ConZ.BadAdjustableSeparator
// Size: 0x278 (Inherited: 0x268)
struct UBadAdjustableSeparator : UUserWidget {
	struct USizeBox* UpperSizeBox; // 0x268(0x08)
	float HeightOverride; // 0x270(0x04)
	bool TradingRelated; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
};

// Class ConZ.BankAccountRegistry
// Size: 0x1c8 (Inherited: 0xb0)
struct UBankAccountRegistry : UActorComponent {
	char pad_B0[0x118]; // 0xb0(0x118)

	void ResetDailyTransactionLimitsOnAllAccounts(); // Function ConZ.BankAccountRegistry.ResetDailyTransactionLimitsOnAllAccounts // (Final|Native|Private) // @ game+0x2354450
};

// Class ConZ.PlayerRpcChannelServerRequest
// Size: 0x28 (Inherited: 0x28)
struct UPlayerRpcChannelServerRequest : UObject {
};

// Class ConZ.BankAccountRegistryRequest
// Size: 0x48 (Inherited: 0x28)
struct UBankAccountRegistryRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.PlayerRpcChannelServerResponse
// Size: 0x28 (Inherited: 0x28)
struct UPlayerRpcChannelServerResponse : UObject {
};

// Class ConZ.BankAccountRegistryResponse
// Size: 0x30 (Inherited: 0x28)
struct UBankAccountRegistryResponse : UPlayerRpcChannelServerResponse {
	struct UBankAccountRegistryResponseDataObject* _payload; // 0x28(0x08)
};

// Class ConZ.BankAccountRegistryResponseDataObject
// Size: 0xa0 (Inherited: 0x28)
struct UBankAccountRegistryResponseDataObject : UObject {
	char pad_28[0x78]; // 0x28(0x78)
};

// Class ConZ.BankAccountRegistryStatics
// Size: 0x28 (Inherited: 0x28)
struct UBankAccountRegistryStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.BankATMAccountInfo
// Size: 0x308 (Inherited: 0x268)
struct UBankATMAccountInfo : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UTextBlock* _accountNumber; // 0x280(0x08)
	struct UTextBlock* _accountName; // 0x288(0x08)
	struct UTextBlock* _cardType; // 0x290(0x08)
	struct UTextBlock* _renewalAmount; // 0x298(0x08)
	struct UHorizontalBox* _goldAmountHorizontalBox; // 0x2a0(0x08)
	struct UTextBlock* _goldAmount; // 0x2a8(0x08)
	struct UBankATMPointingButton* _btnReturn; // 0x2b0(0x08)
	struct TMap<enum class EBankCardType, struct FSlateColor> _cardTypeFontColor; // 0x2b8(0x50)
};

// Class ConZ.BankATMAccountSummary
// Size: 0x290 (Inherited: 0x268)
struct UBankATMAccountSummary : UUserWidget {
	struct UTextBlock* _accountBalance; // 0x268(0x08)
	struct UHorizontalBox* _ATMOperationalTransactionLimitHorizontalBox; // 0x270(0x08)
	struct UTextBlock* _ATMOperationalTransactionLimit; // 0x278(0x08)
	struct UHorizontalBox* _cardOperationalTransactionLimitHorizontalBox; // 0x280(0x08)
	struct UTextBlock* _cardOperationalTransactionLimit; // 0x288(0x08)
};

// Class ConZ.BankATMBoughtCard
// Size: 0x3c8 (Inherited: 0x268)
struct UBankATMBoughtCard : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	enum class EBankATMCardUIType _cardQualityType; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct TMap<enum class EBankATMCardUIType, struct FSlateBrush> _cardBrushes; // 0x288(0x50)
	struct FBankATMBoughtCardStateVisual _normalVisuals; // 0x2d8(0x40)
	struct FBankATMBoughtCardStateVisual _hoveredVisuals; // 0x318(0x40)
	struct FBankATMBoughtCardStateVisual _pressedVisuals; // 0x358(0x40)
	struct UOverlay* _visualOverlay; // 0x398(0x08)
	struct UImage* _imgCardBackground; // 0x3a0(0x08)
	struct UTextBlock* _textCardType; // 0x3a8(0x08)
	struct UTextBlock* _textCardNumber; // 0x3b0(0x08)
	struct UWidgetSwitcher* _optionsCircleSwitcher; // 0x3b8(0x08)
	char pad_3C0[0x8]; // 0x3c0(0x08)
};

// Class ConZ.BankATMBuyableCard
// Size: 0x2f0 (Inherited: 0x268)
struct UBankATMBuyableCard : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	enum class EBankATMCardUIType _cardQualityType; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FBankATMBuyableCardStateVisual _normalVisuals; // 0x284(0x0c)
	struct FBankATMBuyableCardStateVisual _hoveredAndPressedVisuals; // 0x290(0x0c)
	struct FBankATMBuyableCardStateVisual _disabledVisuals; // 0x29c(0x0c)
	struct UWidgetSwitcher* _visualStateSwitcher; // 0x2a8(0x08)
	struct UImage* _toggleablePlusCircle; // 0x2b0(0x08)
	struct UTextBlock* _textCardType; // 0x2b8(0x08)
	struct UTextBlock* _textFreeRenewals; // 0x2c0(0x08)
	struct UTextBlock* _textDigitsOfPin; // 0x2c8(0x08)
	struct UTextBlock* _textOperationalTransactionLimit; // 0x2d0(0x08)
	struct UTextBlock* _textGoldPurchaseAvailable; // 0x2d8(0x08)
	struct UTextBlock* _textCardCost; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
};

// Class ConZ.BankATMCardManagementOptionsScreen
// Size: 0x2d8 (Inherited: 0x268)
struct UBankATMCardManagementOptionsScreen : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UBankATMPointingButton* _btnRenew; // 0x2b8(0x08)
	struct UBankATMPointingButton* _btnDelete; // 0x2c0(0x08)
	struct UBankATMPointingButton* _btnReturn; // 0x2c8(0x08)
	struct UBankATMErrorPopup* _popupMessage; // 0x2d0(0x08)
};

// Class ConZ.BankATMCarouselCard
// Size: 0x2f0 (Inherited: 0x268)
struct UBankATMCarouselCard : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UWidgetSwitcher* _typeSwitcher; // 0x280(0x08)
	struct UTextBlock* _numberLabel; // 0x288(0x08)
	struct UImage* _ownershipIcon; // 0x290(0x08)
	struct UPanelWidget* _expirationNotice; // 0x298(0x08)
	struct FColor _stolenCardColor; // 0x2a0(0x04)
	char pad_2A4[0x8]; // 0x2a4(0x08)
	struct FBankATMCarouselCardStateVisual _normalVisuals; // 0x2ac(0x10)
	struct FBankATMCarouselCardStateVisual _hoveredVisuals; // 0x2bc(0x10)
	struct FBankATMCarouselCardStateVisual _pressedVisuals; // 0x2cc(0x10)
	struct FBankATMCarouselCardStateVisual _disabledVisuals; // 0x2dc(0x10)
	char pad_2EC[0x4]; // 0x2ec(0x04)
};

// Class ConZ.BankATMChooseTransaction
// Size: 0x318 (Inherited: 0x268)
struct UBankATMChooseTransaction : UUserWidget {
	char pad_268[0x78]; // 0x268(0x78)
	struct UBankATMPointingButton* _btnWithdraw; // 0x2e0(0x08)
	struct UBankATMPointingButton* _btnDeposit; // 0x2e8(0x08)
	struct UBankATMPointingButton* _btnTransfer; // 0x2f0(0x08)
	struct UBankATMPointingButton* _btnEjectCard; // 0x2f8(0x08)
	struct UBankATMPointingButton* _btnAccountInfo; // 0x300(0x08)
	struct UBankATMPointingButton* _btnBuyGold; // 0x308(0x08)
	struct UBankATMPointingButton* _btnSellGold; // 0x310(0x08)
};

// Class ConZ.BankATMEnterPin
// Size: 0x2e0 (Inherited: 0x268)
struct UBankATMEnterPin : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UWidgetSwitcher* _pinEnteringSwitcher; // 0x288(0x08)
	struct UTextBlock* _enterPinTitleMessage; // 0x290(0x08)
	struct UPanelWidget* _pinSlotsPanel; // 0x298(0x08)
	struct UBankATMPinSlot* _pinSlotClass; // 0x2a0(0x08)
	struct UPanelWidget* _incorrectPinWarning; // 0x2a8(0x08)
	struct UTextBlock* _remainingAttemptsLabel; // 0x2b0(0x08)
	struct UBankATMPointingButton* _btnReturn; // 0x2b8(0x08)
	struct UBankATMPointingButton* _btnSubmit; // 0x2c0(0x08)
	char pad_2C8[0x18]; // 0x2c8(0x18)
};

// Class ConZ.BankATMErrorPopup
// Size: 0x288 (Inherited: 0x268)
struct UBankATMErrorPopup : UUserWidget {
	struct UTextBlock* _popupMessage; // 0x268(0x08)
	char pad_270[0x4]; // 0x270(0x04)
	float _fadeInTime; // 0x274(0x04)
	float _displayHoldTime; // 0x278(0x04)
	float _fadeOutTime; // 0x27c(0x04)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.BankATMGoldTrading
// Size: 0x370 (Inherited: 0x268)
struct UBankATMGoldTrading : UUserWidget {
	char pad_268[0x58]; // 0x268(0x58)
	struct UConZCustomInteractionButton* _btnEjectCard; // 0x2c0(0x08)
	struct UWidgetSwitcher* _buttonSwitcher; // 0x2c8(0x08)
	struct UBankATMPointingButton* _btnReturn; // 0x2d0(0x08)
	struct UBankATMPointingButton* _btnSubmit; // 0x2d8(0x08)
	struct UBankATMPointingButton* _btnNo; // 0x2e0(0x08)
	struct UBankATMPointingButton* _btnYes; // 0x2e8(0x08)
	struct UWidgetSwitcher* _subsectionSwitcher; // 0x2f0(0x08)
	struct UTextBlock* _goldBuyConversionLabel; // 0x2f8(0x08)
	struct UBankATMVirtualEditbox* _editBuyAmount; // 0x300(0x08)
	struct UTextBlock* _creditsLostLabel; // 0x308(0x08)
	struct UTextBlock* _goldSellConversionLabel; // 0x310(0x08)
	struct UBankATMVirtualEditbox* _editSellAmount; // 0x318(0x08)
	struct UTextBlock* _creditsGainedLabel; // 0x320(0x08)
	struct UTextBlock* _questionLabel; // 0x328(0x08)
	struct UTextBlock* _errorLabel; // 0x330(0x08)
	struct UBankATMGoldValueGraph* _goldValueGraph; // 0x338(0x08)
	struct UTextBlock* _goldBalanceTextBlock; // 0x340(0x08)
	struct UTextBlock* _fundsSourceWarning; // 0x348(0x08)
	char pad_350[0x20]; // 0x350(0x20)

	void HandleOnEjectClicked(); // Function ConZ.BankATMGoldTrading.HandleOnEjectClicked // (Final|Native|Private) // @ game+0x2359070
};

// Class ConZ.BankATMGoldValueGraph
// Size: 0x288 (Inherited: 0x268)
struct UBankATMGoldValueGraph : UUserWidget {
	struct UVerticalBox* _yAxisVerticalBox; // 0x268(0x08)
	struct UImage* _graphShadedAreaImg; // 0x270(0x08)
	struct UHorizontalBox* _xAxisHorizontalBox; // 0x278(0x08)
	struct UTextBlock* _graphDescriptionTextBox; // 0x280(0x08)
};

// Class ConZ.BankATMMainPanel
// Size: 0x2e8 (Inherited: 0x268)
struct UBankATMMainPanel : UUserWidget {
	struct FDelegate OnMouseMoveEvent; // 0x268(0x10)
	struct UWidget* _virtualMouseCursorWidget; // 0x278(0x08)
	char pad_280[0x10]; // 0x280(0x10)
	struct UWidgetSwitcher* _panelSwitcher; // 0x290(0x08)
	struct UBankATMWelcomeScreen* _welcomeScreen; // 0x298(0x08)
	struct UBankATMEnterPin* _enterPinScreen; // 0x2a0(0x08)
	struct UBankATMChooseTransaction* _chooseTransactionScreen; // 0x2a8(0x08)
	struct UBankATMMoneyTransfer* _moneyTransferScreen; // 0x2b0(0x08)
	struct UBankATMGoldTrading* _goldTradingScreen; // 0x2b8(0x08)
	struct UBankATMManageCards* _manageCardsScreen; // 0x2c0(0x08)
	struct UBankATMAccountInfo* _accountInfoScreen; // 0x2c8(0x08)
	struct UBankATMAccountSummary* _accountSummaryHeader; // 0x2d0(0x08)
	struct UPanelWidget* _loadingOverlay; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)
};

// Class ConZ.BankATMManageCards
// Size: 0x318 (Inherited: 0x268)
struct UBankATMManageCards : UUserWidget {
	char pad_268[0x28]; // 0x268(0x28)
	struct UWidgetSwitcher* _screenSwitcher; // 0x290(0x08)
	struct UHorizontalBox* _boughtCardsHorizontalBox; // 0x298(0x08)
	struct UBankATMBoughtCard* _boughtCardStarter; // 0x2a0(0x08)
	struct UBankATMBoughtCard* _boughtCardGold; // 0x2a8(0x08)
	struct UBankATMBoughtCard* _boughtCardClassic; // 0x2b0(0x08)
	struct UTextBlock* _textNoCards; // 0x2b8(0x08)
	struct UHorizontalBox* _buyableCardsHorizontalBox; // 0x2c0(0x08)
	struct UBankATMBuyableCard* _buyableCardClassic; // 0x2c8(0x08)
	struct UBankATMBuyableCard* _buyableCardGold; // 0x2d0(0x08)
	struct UTextBlock* _textInventoryBalance; // 0x2d8(0x08)
	struct UTextBlock* _textAccountBalance; // 0x2e0(0x08)
	struct UBankATMPointingButton* _btnBack; // 0x2e8(0x08)
	struct UBankATMCardManagementOptionsScreen* _cardManagementOptionsScreen; // 0x2f0(0x08)
	struct UBankATMYesNoConfirmationScreen* _purchaseConfirmationScreen; // 0x2f8(0x08)
	struct UBankATMYesNoConfirmationScreen* _cancellationConfirmationScreen; // 0x300(0x08)
	struct UBankATMYesNoConfirmationScreen* _renewalConfirmationScreen; // 0x308(0x08)
	char pad_310[0x8]; // 0x310(0x08)
};

// Class ConZ.Minigame
// Size: 0x340 (Inherited: 0x220)
struct AMinigame : AActor {
	char pad_220[0x30]; // 0x220(0x30)
	int32_t _testingMode; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct USceneComponent* _rootComponent; // 0x258(0x08)
	struct USceneCaptureComponent2D* _captureCam; // 0x260(0x08)
	struct USceneCaptureComponent2D* _captureMaskCam; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	struct UMinigameWidget* _minigameWidget; // 0x278(0x08)
	struct UMinigameWidget* _minigameWidgetClass; // 0x280(0x08)
	char pad_288[0x28]; // 0x288(0x28)
	float _introDuration; // 0x2b0(0x04)
	float _outroDurationOnFail; // 0x2b4(0x04)
	float _outroDurationOnSuccess; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct TArray<struct UBaseMinigameAnimator*> _introAnimatorClasses; // 0x2c0(0x10)
	struct TArray<struct UBaseMinigameAnimator*> _outroAnimatorClasses; // 0x2d0(0x10)
	bool _canBeCanceled; // 0x2e0(0x01)
	enum class EPrisonerMontage _simulatedMontage; // 0x2e1(0x01)
	char pad_2E2[0x6]; // 0x2e2(0x06)
	struct UAkAudioEvent* _simulatedAudioStart; // 0x2e8(0x08)
	struct UAkAudioEvent* _simulatedAudioStop; // 0x2f0(0x08)
	struct TArray<struct UBaseItemTag*> _takeInHandsItemTagClasses; // 0x2f8(0x10)
	char pad_308[0x8]; // 0x308(0x08)
	struct TArray<struct TWeakObjectPtr<struct AItem>> _currentlyUsedTools; // 0x310(0x10)
	struct TArray<struct UBaseMinigameAnimator*> _introAnimators; // 0x320(0x10)
	struct TArray<struct UBaseMinigameAnimator*> _outroAnimators; // 0x330(0x10)
};

// Class ConZ.BankATMMinigame
// Size: 0x3a0 (Inherited: 0x340)
struct ABankATMMinigame : AMinigame {
	struct UBankATMUIController* _uiController; // 0x340(0x08)
	struct UStaticMeshComponent* _bankATMMesh; // 0x348(0x08)
	struct UWidgetComponent* _bankATMWidget; // 0x350(0x08)
	struct FVector _zoomStartLocation; // 0x358(0x0c)
	struct FVector _zoomEndLocation; // 0x364(0x0c)
	struct UCurveFloat* _zoomCurve; // 0x370(0x08)
	float _virtualMouseMinSensitivityModifier; // 0x378(0x04)
	float _virtualMouseMaxSensitivityModifier; // 0x37c(0x04)
	char pad_380[0x10]; // 0x380(0x10)
	struct UStaticMesh* _atmMesh; // 0x390(0x08)
	struct UStaticMesh* _tabletMesh; // 0x398(0x08)
};

// Class ConZ.MinigameConfiguration
// Size: 0x50 (Inherited: 0x28)
struct UMinigameConfiguration : UObject {
	struct AMinigame* minigameClass; // 0x28(0x08)
	char pad_30[0x20]; // 0x30(0x20)
};

// Class ConZ.BankATMMinigameConfiguration
// Size: 0x68 (Inherited: 0x50)
struct UBankATMMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x18]; // 0x50(0x18)
};

// Class ConZ.BankATMMoneyTransfer
// Size: 0x368 (Inherited: 0x268)
struct UBankATMMoneyTransfer : UUserWidget {
	char pad_268[0x40]; // 0x268(0x40)
	struct UButton* _btnEjectCard; // 0x2a8(0x08)
	struct UWidgetSwitcher* _buttonSwitcher; // 0x2b0(0x08)
	struct UBankATMPointingButton* _btnReturn; // 0x2b8(0x08)
	struct UBankATMPointingButton* _btnSubmit; // 0x2c0(0x08)
	struct UBankATMPointingButton* _btnNo; // 0x2c8(0x08)
	struct UBankATMPointingButton* _btnYes; // 0x2d0(0x08)
	struct UWidgetSwitcher* _subsectionSwitcher; // 0x2d8(0x08)
	struct UBankATMVirtualEditbox* _editAccountNumber; // 0x2e0(0x08)
	struct UBankATMVirtualEditbox* _editTransferAmount; // 0x2e8(0x08)
	struct UBankATMVirtualEditbox* _editDepositAmount; // 0x2f0(0x08)
	struct UBankATMVirtualEditbox* _editWithdrawAmount; // 0x2f8(0x08)
	struct UTextBlock* _questionLabel; // 0x300(0x08)
	struct UTextBlock* _errorLabel; // 0x308(0x08)
	struct UTextBlock* _commissionPercentageTextBlock; // 0x310(0x08)
	struct UTextBlock* _inventoryBalanceTextBlock; // 0x318(0x08)
	char pad_320[0x48]; // 0x320(0x48)

	void HandleOnEjectCardButtonClicked(); // Function ConZ.BankATMMoneyTransfer.HandleOnEjectCardButtonClicked // (Final|Native|Private) // @ game+0x2359050
};

// Class ConZ.BankATMMyCardsButton
// Size: 0x728 (Inherited: 0x268)
struct UBankATMMyCardsButton : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _background; // 0x280(0x08)
	struct UImage* _cardIcon; // 0x288(0x08)
	struct UTextBlock* _labelMy; // 0x290(0x08)
	struct UTextBlock* _labelCards; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
	struct FBankATMMyCardsButtonStateVisual _normalVisuals; // 0x2a8(0x120)
	struct FBankATMMyCardsButtonStateVisual _hoveredVisuals; // 0x3c8(0x120)
	struct FBankATMMyCardsButtonStateVisual _pressedVisuals; // 0x4e8(0x120)
	struct FBankATMMyCardsButtonStateVisual _disabledVisuals; // 0x608(0x120)
};

// Class ConZ.BankATMPinSlot
// Size: 0x2b8 (Inherited: 0x268)
struct UBankATMPinSlot : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UWidgetSwitcher* _pinNumberTypeSwitcher; // 0x278(0x08)
	struct UTextBlock* _pinNumber; // 0x280(0x08)
	struct UImage* _animatedEntryBar; // 0x288(0x08)
	struct UWidgetAnimation* _enterNumber; // 0x290(0x08)
	struct UWidgetAnimation* _enterNumberLast; // 0x298(0x08)
	char pad_2A0[0x10]; // 0x2a0(0x10)
	float _caretBlinkSeconds; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)

	void OnCaretSettles(); // Function ConZ.BankATMPinSlot.OnCaretSettles // (Final|Native|Private) // @ game+0x23590b0
	void OnCaretCoversNumber(); // Function ConZ.BankATMPinSlot.OnCaretCoversNumber // (Final|Native|Private) // @ game+0x2359090
};

// Class ConZ.BankATMPointingButton
// Size: 0x528 (Inherited: 0x268)
struct UBankATMPointingButton : UUserWidget {
	char pad_268[0x28]; // 0x268(0x28)
	struct FText _titleText; // 0x290(0x18)
	bool _isPointingRight; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UImage* _backgroundImage; // 0x2b0(0x08)
	struct UTextBlock* _titleLabel; // 0x2b8(0x08)
	char pad_2C0[0x8]; // 0x2c0(0x08)
	struct FBankATMPointingButtonStateVisual _normalVisuals; // 0x2c8(0x98)
	struct FBankATMPointingButtonStateVisual _hoveredVisuals; // 0x360(0x98)
	struct FBankATMPointingButtonStateVisual _pressedVisuals; // 0x3f8(0x98)
	struct FBankATMPointingButtonStateVisual _disabledVisuals; // 0x490(0x98)
};

// Class ConZ.BankATMUIController
// Size: 0x120 (Inherited: 0x28)
struct UBankATMUIController : UObject {
	char pad_28[0xf8]; // 0x28(0xf8)
};

// Class ConZ.BankATMVirtualEditbox
// Size: 0x2e8 (Inherited: 0x268)
struct UBankATMVirtualEditbox : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct FText _hintText; // 0x280(0x18)
	struct UImage* _outline; // 0x298(0x08)
	struct UTextBlock* _hintLabel; // 0x2a0(0x08)
	struct UTextBlock* _editboxLabel; // 0x2a8(0x08)
	char pad_2B0[0x4]; // 0x2b0(0x04)
	struct FBankATMVirtualEditboxStateVisual _inactiveVisuals; // 0x2b4(0x10)
	struct FBankATMVirtualEditboxStateVisual _activeVisuals; // 0x2c4(0x10)
	struct FBankATMVirtualEditboxStateVisual _disabledVisuals; // 0x2d4(0x10)
	char pad_2E4[0x4]; // 0x2e4(0x04)
};

// Class ConZ.BankATMWelcomeScreen
// Size: 0x2c0 (Inherited: 0x268)
struct UBankATMWelcomeScreen : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UButton* _btnCardsPrevious; // 0x288(0x08)
	struct UButton* _btnCardsNext; // 0x290(0x08)
	struct UPanelWidget* _cardCarousel; // 0x298(0x08)
	struct UBankATMMyCardsButton* _btnMyCards; // 0x2a0(0x08)
	char pad_2A8[0x18]; // 0x2a8(0x18)

	void HandleOnCardsPreviousClicked(); // Function ConZ.BankATMWelcomeScreen.HandleOnCardsPreviousClicked // (Final|Native|Private) // @ game+0x2359030
	void HandleOnCardsNextClicked(); // Function ConZ.BankATMWelcomeScreen.HandleOnCardsNextClicked // (Final|Native|Private) // @ game+0x2359010
};

// Class ConZ.BankATMYesNoConfirmationScreen
// Size: 0x2a0 (Inherited: 0x268)
struct UBankATMYesNoConfirmationScreen : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UTextBlock* _textDialog; // 0x288(0x08)
	struct UBankATMPointingButton* _btnCancel; // 0x290(0x08)
	struct UBankATMPointingButton* _btnYes; // 0x298(0x08)
};

// Class ConZ.BankCardItemComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UBankCardItemComponent : UItemComponent {
	struct FDbIntegerId _ownerUserProfileId; // 0xc8(0x08)
	int64_t _bankAccountNumber; // 0xd0(0x08)
	enum class EBankCardType _bankCardType; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
};

// Class ConZ.BankCardOperationRequest
// Size: 0x40 (Inherited: 0x28)
struct UBankCardOperationRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.BankCardOperationResponse
// Size: 0x30 (Inherited: 0x28)
struct UBankCardOperationResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BankCardOwnershipRequest
// Size: 0x30 (Inherited: 0x28)
struct UBankCardOwnershipRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BankCardOwnershipResponse
// Size: 0x80 (Inherited: 0x28)
struct UBankCardOwnershipResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x58]; // 0x28(0x58)
};

// Class ConZ.SedentaryNPC
// Size: 0x9a0 (Inherited: 0x830)
struct ASedentaryNPC : AConZCharacter {
	struct USkeletalMeshComponent* _headMesh; // 0x828(0x08)
	struct FVector _originalLocation; // 0x830(0x0c)
	struct ATradeOutpostBuilding* _tradeOutpostBuilding; // 0x840(0x08)
	char pad_84C[0x34]; // 0x84c(0x34)
	struct FVector _animationHeadScale; // 0x880(0x0c)
	char pad_88C[0x4]; // 0x88c(0x04)
	struct UAnimSequenceBase* _faceIdleAnimation; // 0x890(0x08)
	struct FFloatRange _headYawClampValues; // 0x898(0x10)
	struct FFloatRange _headPitchClampValues; // 0x8a8(0x10)
	float _headPitchClampCorrectionValueLower; // 0x8b8(0x04)
	float _headPitchClampCorrectionValueUpper; // 0x8bc(0x04)
	float _headRotationSpeedLerpFactor; // 0x8c0(0x04)
	struct FFloatRange _eyesYawAngleRange; // 0x8c4(0x10)
	struct FFloatRange _eyesPitchAngleRange; // 0x8d4(0x10)
	float _eyesPitchClampCorrectionValueLower; // 0x8e4(0x04)
	float _eyesPitchClampCorrectionValueUpper; // 0x8e8(0x04)
	float _eyesRotationSpeedLerpFactor; // 0x8ec(0x04)
	struct FFloatRange _blinkingPeriodRange; // 0x8f0(0x10)
	float _timeToBlinkInSeconds; // 0x900(0x04)
	char pad_904[0x4]; // 0x904(0x04)
	struct TArray<struct USedentaryNPCBackgroundInteraction*> _backgroundInteractions; // 0x908(0x10)
	struct USedentaryNPCBackgroundInteraction* _activeBackgroundInteraction; // 0x918(0x08)
	float _interactionDistance; // 0x920(0x04)
	float _timeWithoutFocusPawnToClearBackgroundInteractions; // 0x924(0x04)
	char pad_928[0x58]; // 0x928(0x58)
	float _backgroundInteractionCooldownTime; // 0x980(0x04)
	char pad_984[0x1c]; // 0x984(0x1c)

	void OnRep_TradeOutpostBuilding(); // Function ConZ.SedentaryNPC.OnRep_TradeOutpostBuilding // (Final|Native|Private) // @ game+0x24e9000
};

// Class ConZ.Banker
// Size: 0x9c0 (Inherited: 0x9a0)
struct ABanker : ASedentaryNPC {
	float _bankTransactionCooldownTime; // 0x9a0(0x04)
	char pad_9A4[0x4]; // 0x9a4(0x04)
	struct ABankATMMinigame* _bankMinigameClass; // 0x9a8(0x08)
	char pad_9B0[0x10]; // 0x9b0(0x10)
};

// Class ConZ.InteractionAssetData
// Size: 0x30 (Inherited: 0x28)
struct UInteractionAssetData : UAssetUserData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BankTransactionAssetData
// Size: 0x38 (Inherited: 0x30)
struct UBankTransactionAssetData : UInteractionAssetData {
	struct ABankATMMinigame* BankATMMinigame; // 0x30(0x08)
};

// Class ConZ.BankTransactionRequest
// Size: 0x60 (Inherited: 0x28)
struct UBankTransactionRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class ConZ.BankTransactionResponse
// Size: 0x30 (Inherited: 0x28)
struct UBankTransactionResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BaseMenu
// Size: 0x268 (Inherited: 0x268)
struct UBaseMenu : UUserWidget {
};

// Class ConZ.BarberShopMenuWidget
// Size: 0x458 (Inherited: 0x268)
struct UBarberShopMenuWidget : UBaseMenu {
	char pad_268[0x8]; // 0x268(0x08)
	struct UOverlay* _overlayMenu; // 0x270(0x08)
	struct UTrashNamedSliderWidget* _sliderHairStyle; // 0x278(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _hairStyleUpgradeConditionDisplay; // 0x280(0x08)
	struct UVerticalBox* _facialHairVerticalBox; // 0x288(0x08)
	struct UTrashNamedSliderWidget* _sliderMoustacheStyle; // 0x290(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _moustacheStyleUpgradeConditionDisplay; // 0x298(0x08)
	struct UTrashNamedSliderWidget* _sliderBeardStyle; // 0x2a0(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _beardStyleUpgradeConditionDisplay; // 0x2a8(0x08)
	struct UPresetColorPicker* _presetColorPickerHairColor; // 0x2b0(0x08)
	struct UCollapsableColorPicker* _dropdownColorPickerEyeshadow; // 0x2b8(0x08)
	struct UCollapsableColorPicker* _dropdownColorPickerEyeliner; // 0x2c0(0x08)
	struct UVerticalBox* _makeupVerticalBox; // 0x2c8(0x08)
	struct UTrashNamedSliderWidget* _sliderEyesMakeupMetalness; // 0x2d0(0x08)
	struct UTrashNamedSliderWidget* _sliderEyesMakeupIntensity; // 0x2d8(0x08)
	struct UCollapsableColorPicker* _dropdownColorPickerLipstickColor; // 0x2e0(0x08)
	struct UTrashNamedSliderWidget* _sliderLipstickGlossiness; // 0x2e8(0x08)
	struct UTrashNamedSliderWidget* _sliderLipstickIntensity; // 0x2f0(0x08)
	struct UConZStandardButton* _buttonRandomize; // 0x2f8(0x08)
	struct UConZStandardButton* _buttonApply; // 0x300(0x08)
	struct UOverlay* _overlayConfirmation; // 0x308(0x08)
	struct UConZStandardButton* _buttonCancelConfirmation; // 0x310(0x08)
	struct UConZStandardButton* _buttonContinueConfirmation; // 0x318(0x08)
	struct UScrollBox* _faceOptionsScrollbox; // 0x320(0x08)
	char pad_328[0x130]; // 0x328(0x130)

	void OnRandomizeClicked(); // Function ConZ.BarberShopMenuWidget.OnRandomizeClicked // (Final|Native|Private) // @ game+0x235d0a0
	void OnContinueClickedInConfirmationPanel(); // Function ConZ.BarberShopMenuWidget.OnContinueClickedInConfirmationPanel // (Final|Native|Private) // @ game+0x235cbb0
	void OnCancelClickedInConfirmationPanel(); // Function ConZ.BarberShopMenuWidget.OnCancelClickedInConfirmationPanel // (Final|Native|Private) // @ game+0x235cb90
	void OnApplyClicked(); // Function ConZ.BarberShopMenuWidget.OnApplyClicked // (Final|Native|Private) // @ game+0x235cb70
};

// Class ConZ.BaseBuildingBaseEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UBaseBuildingBaseEntitySetup : UEntitySetup {
};

// Class ConZ.BaseBuildingComponent
// Size: 0x750 (Inherited: 0x500)
struct UBaseBuildingComponent : UStaticMeshComponent {
	struct FString _name; // 0x4f8(0x10)
	enum class EBaseElementType _baseElementType; // 0x508(0x04)
	bool _forbidPlacementOfOtherElements; // 0x50c(0x01)
	bool _useBoxOverlapTypeWhitelist; // 0x50d(0x01)
	int32_t _boxOverlapTypeWhitelist; // 0x510(0x04)
	bool _isClimbable; // 0x514(0x01)
	bool _isBlockingItemPlacement; // 0x515(0x01)
	struct TArray<struct UStaticMesh*> _staticMeshVariations; // 0x518(0x10)
	struct UChoppingRecipeDataAsset* _choppingRecipeAsset; // 0x528(0x08)
	float _healthPoints; // 0x530(0x04)
	bool _canBeDamaged; // 0x534(0x01)
	float _hoursToDecay; // 0x538(0x04)
	float _hoursToDecayOutsideFlagArea; // 0x53c(0x04)
	int32_t _startDecayingIfFlagAreaHasMoreThan; // 0x540(0x04)
	bool _isUsedForRespawn; // 0x544(0x01)
	char pad_546[0x2]; // 0x546(0x02)
	float _explosionResistance; // 0x548(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
	struct UCurveFloat* _collisionDamageModifierFromEnergy; // 0x550(0x08)
	struct UStaticMesh* _weatherMaskMesh; // 0x558(0x08)
	bool _canBePlacedWithoutFlag; // 0x560(0x01)
	bool _canBePlacedInBuilding; // 0x561(0x01)
	bool _canBePlacedInRestrictedArea; // 0x562(0x01)
	bool _canBePlacedInAbandonedBunker; // 0x563(0x01)
	bool _canBePainted; // 0x564(0x01)
	char pad_565[0x3]; // 0x565(0x03)
	int32_t _maxInstancesPerFlagArea; // 0x568(0x04)
	struct FGameplayTag _maxInstancesServerSettingTag; // 0x56c(0x08)
	bool _shouldUseParentClassForMaxInstances; // 0x574(0x01)
	char pad_575[0x3]; // 0x575(0x03)
	struct UPlaceableCraftingRecipe* _upgradeRecipe; // 0x578(0x08)
	bool _cascadeDestroySnappedElementsOnUpgrade; // 0x580(0x01)
	bool _checkOverlapsBelowOnUpgrade; // 0x581(0x01)
	bool _ignoreDisabledBaseBuildingFlag; // 0x582(0x01)
	bool _isTileable; // 0x583(0x01)
	bool _mustBePlacedOnFoundation; // 0x584(0x01)
	bool _canEverBePlacedOnFoundation; // 0x585(0x01)
	bool _canBePlacedOnOtherBaseElements; // 0x586(0x01)
	bool _canBePlacedWithoutSnapping; // 0x587(0x01)
	bool _shouldIgnoreSelfWhilePlacing; // 0x588(0x01)
	bool _canBeGroundedOnOtherElements; // 0x589(0x01)
	char _maxHeightLevel; // 0x58a(0x01)
	char pad_58B[0x1]; // 0x58b(0x01)
	float _maxHeightDifference; // 0x58c(0x04)
	bool _addRandomRotation; // 0x590(0x01)
	bool _mustGroundAllPoints; // 0x591(0x01)
	bool _mustBePlacedUpright; // 0x592(0x01)
	enum class EConZPlacementHeightType _placementHeightType; // 0x593(0x01)
	bool _useSimpleCollisionForOverlaps; // 0x594(0x01)
	bool _markedForBoundsBoundsCheck; // 0x595(0x01)
	char pad_596[0x2]; // 0x596(0x02)
	struct FRotator _maxRotationWhilePlacing; // 0x598(0x0c)
	bool _useEncapsulationTestWhenSnapping; // 0x5a4(0x01)
	char pad_5A5[0x3]; // 0x5a5(0x03)
	struct TArray<struct FElementSnapMarker> _elementSnapMarkers; // 0x5a8(0x10)
	struct TArray<struct FBaseBuildingSizeVariation> _sizeVariations; // 0x5b8(0x10)
	char pad_5C8[0x4]; // 0x5c8(0x04)
	float _sizeVariationsSpacing; // 0x5cc(0x04)
	float _repairTime; // 0x5d0(0x04)
	char pad_5D4[0x4]; // 0x5d4(0x04)
	struct FRepairableParams _repairableParams; // 0x5d8(0x38)
	float _experienceAwardForBuilding; // 0x610(0x04)
	char pad_614[0x4]; // 0x614(0x04)
	struct TArray<struct UParticleSystem*> _destructionParticles; // 0x618(0x10)
	struct TArray<struct FTransform> _destructionParticlesSpawnTransforms; // 0x628(0x10)
	struct UAkAudioEvent* _destructionSound; // 0x638(0x08)
	bool _isDoor; // 0x640(0x01)
	char pad_641[0x7]; // 0x641(0x07)
	struct ADoor* _doorClass; // 0x648(0x08)
	bool _hasLadder; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct TArray<struct FLadderMarker> _ladderMarkers; // 0x658(0x10)
	bool _hasWindows; // 0x668(0x01)
	char pad_669[0x7]; // 0x669(0x07)
	struct TArray<struct FWindowMarker> _windowMarkers; // 0x670(0x10)
	struct TArray<struct FBaseElementDamageZone> _damageZones; // 0x680(0x10)
	bool _shouldDestroyElementsOnTopWhenDestroyed; // 0x690(0x01)
	bool _disableBeingDestroyedByOtherElement; // 0x691(0x01)
	char pad_692[0x2]; // 0x692(0x02)
	float _destructionTime; // 0x694(0x04)
	bool _shouldRemoveIntersectingElementsOnDestroy; // 0x698(0x01)
	char pad_699[0x7]; // 0x699(0x07)
	struct TArray<struct FBaseElementDestructionZone> _destructionZones; // 0x6a0(0x10)
	bool _useAsReplenishableResource; // 0x6b0(0x01)
	char pad_6B1[0x7]; // 0x6b1(0x07)
	struct FReplenishableResourceDescription _replenishableResourceDescription; // 0x6b8(0x88)
	bool _shouldCheckBaseBuildingElementsInFirstBoxOverlap; // 0x740(0x01)
	bool _shouldLogStateChanges; // 0x741(0x01)
	char pad_742[0x2]; // 0x742(0x02)
	struct FName _collisionChannelName; // 0x744(0x08)
	char pad_74C[0x4]; // 0x74c(0x04)
};

// Class ConZ.BaseBuildingItemComponent
// Size: 0x760 (Inherited: 0x750)
struct UBaseBuildingItemComponent : UBaseBuildingComponent {
	struct AItem* _itemClass; // 0x750(0x08)
	bool _shouldDestroyAssociatedItemWhenMovedOutOfFlag; // 0x758(0x01)
	bool _shouldDestroyElementWhenMovedOutOfFlag; // 0x759(0x01)
	char pad_75A[0x6]; // 0x75a(0x06)
};

// Class ConZ.ModularBaseBuildingComponent
// Size: 0x7b0 (Inherited: 0x750)
struct UModularBaseBuildingComponent : UBaseBuildingComponent {
	struct TArray<struct FRotator> _availableOrientations; // 0x750(0x10)
	float MinStabilityForPlacement; // 0x760(0x04)
	char pad_764[0x4]; // 0x764(0x04)
	struct TArray<struct FElementQueryMarker> _elementStabilityMarkers; // 0x768(0x10)
	struct TArray<struct FModularElementSnapMarker> _modularElementSnapMarkers; // 0x778(0x10)
	struct TArray<struct FElementMorphQuery> _elementMorphQueries; // 0x788(0x10)
	struct TArray<struct FVector> _floatingCheckLocations; // 0x798(0x10)
	bool _adjustSnappingLocation; // 0x7a8(0x01)
	bool _canBePlacedOverOtherModularElement; // 0x7a9(0x01)
	char pad_7AA[0x6]; // 0x7aa(0x06)

	struct TArray<struct FName> GetModularMarkerNameOptions(); // Function ConZ.ModularBaseBuildingComponent.GetModularMarkerNameOptions // (Final|Native|Protected|Const) // @ game+0x235c630
};

// Class ConZ.BaseBuildingDetailsPanel
// Size: 0x360 (Inherited: 0x268)
struct UBaseBuildingDetailsPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UBigItemCraftingButton* _bigItemCraftingButton; // 0x270(0x08)
	struct UTextBlock* _descriptionTextBlock; // 0x278(0x08)
	struct UCheckBox* _expandIngredientsCheckBox; // 0x280(0x08)
	struct UWrapBox* _recipeIngredientButtonsWrapBox; // 0x288(0x08)
	struct UOverlay* _possibleIngredientsOverlay; // 0x290(0x08)
	struct UWrapBox* _possibleRecipeIngredientButtonsWrapBox; // 0x298(0x08)
	struct URecipeIngredientButton* _recipeIngredientButtonClass; // 0x2a0(0x08)
	struct URecipeIngredientButton* _possibleRecipeIngredientButtonClass; // 0x2a8(0x08)
	char pad_2B0[0xb0]; // 0x2b0(0xb0)

	void OnDropdownStateChanged(bool isCollapsed); // Function ConZ.BaseBuildingDetailsPanel.OnDropdownStateChanged // (Final|Native|Private) // @ game+0x235cff0
};

// Class ConZ.BaseBuildingPanel
// Size: 0x398 (Inherited: 0x268)
struct UBaseBuildingPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UCraftingCategoriesTabButtonsContainer* _craftingCategoriesTabButtonsContainer; // 0x270(0x08)
	struct USearchBox* _searchBox; // 0x278(0x08)
	struct UWidgetSwitcher* _categoriesDetailsSwitcher; // 0x280(0x08)
	struct UTextBlock* _selectedCategoryTitle; // 0x288(0x08)
	struct UScrollBox* _categoriesScrollBox; // 0x290(0x08)
	struct UBaseBuildingDetailsPanel* _baseBuildingDetailsPanel; // 0x298(0x08)
	struct UPrimaryButton* _detailsAndBackButton; // 0x2a0(0x08)
	struct FText _detailsTooltipText; // 0x2a8(0x18)
	struct FText _backTooltipText; // 0x2c0(0x18)
	struct UPrimaryButton* _placeButton; // 0x2d8(0x08)
	struct FText _placeTooltipText; // 0x2e0(0x18)
	struct UPlacedPlaceableWidget* _placedPlaceablesContainer; // 0x2f8(0x08)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x300(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x308(0x08)
	struct UCraftingRecipeButtonsContainer* _craftingRecipeButtonsContainerClass; // 0x310(0x08)
	struct FMargin _categoriesPadding; // 0x318(0x10)
	struct UTextOnlyTooltip* _tooltipClass; // 0x328(0x08)
	char pad_330[0x68]; // 0x330(0x68)

	void OnPlaceButtonClicked(); // Function ConZ.BaseBuildingPanel.OnPlaceButtonClicked // (Final|Native|Private) // @ game+0x235d080
	void OnDetailsAndBackButtonClicked(); // Function ConZ.BaseBuildingPanel.OnDetailsAndBackButtonClicked // (Final|Native|Private) // @ game+0x235cbd0
	void OnAnyButtonHovered(); // Function ConZ.BaseBuildingPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void HandleOnExpandAllClicked(); // Function ConZ.BaseBuildingPanel.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x235ca90
	void HandleOnCollapseAllClicked(); // Function ConZ.BaseBuildingPanel.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x235ca70
};

// Class ConZ.BaseBuildingStatics
// Size: 0x28 (Inherited: 0x28)
struct UBaseBuildingStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.UIContext
// Size: 0x28 (Inherited: 0x28)
struct UUIContext : UObject {
};

// Class ConZ.BaseBuildingUIContext
// Size: 0x28 (Inherited: 0x28)
struct UBaseBuildingUIContext : UUIContext {
};

// Class ConZ.CraftingUIControllerBase
// Size: 0x390 (Inherited: 0x28)
struct UCraftingUIControllerBase : UObject {
	char pad_28[0x90]; // 0x28(0x90)
	struct FCraftingRecipeAndIngredientButtonVisualData _craftingRecipeAndIngredientButtonVisualData; // 0xb8(0x278)
	char pad_330[0x58]; // 0x330(0x58)
	struct UCraftingUIData* _dataAsset; // 0x388(0x08)
};

// Class ConZ.BaseBuildingUIController
// Size: 0x3c0 (Inherited: 0x390)
struct UBaseBuildingUIController : UCraftingUIControllerBase {
	char pad_390[0x30]; // 0x390(0x30)
};

// Class ConZ.BaseInteractionComponent
// Size: 0x220 (Inherited: 0x200)
struct UBaseInteractionComponent : USceneComponent {
	char pad_200[0x8]; // 0x200(0x08)
	float _capsuleRadius; // 0x208(0x04)
	float _capsuleHalfHeight; // 0x20c(0x04)
	char pad_210[0x10]; // 0x210(0x10)
};

// Class ConZ.BaseItemContainerWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UBaseItemContainerWidget : UUserWidget {
	struct FMulticastInlineDelegate ObjectAddedToContainer; // 0x268(0x10)
	char pad_278[0x4]; // 0x278(0x04)
	int32_t Columns; // 0x27c(0x04)
	int32_t Rows; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UGridPanel* GridPanel; // 0x288(0x08)
	struct UUserWidget* HighlightBorder; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)

	void RefreshSize(); // Function ConZ.BaseItemContainerWidget.RefreshSize // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
	void OnObjectAddedToContainerEvent__DelegateSignature(struct UObject* Object); // DelegateFunction ConZ.BaseItemContainerWidget.OnObjectAddedToContainerEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnDropEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Item); // Function ConZ.BaseItemContainerWidget.OnDropEvent // (Native|Public|BlueprintCallable) // @ game+0x235cf20
	void OnDragStartEvent(struct UBaseItemWidget* Widget, struct FGeometry& Geometry); // Function ConZ.BaseItemContainerWidget.OnDragStartEvent // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x235ce20
	void OnDragLeaveEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragLeaveEvent // (Native|Public|BlueprintCallable) // @ game+0x235cd50
	void OnDragEnterEvent(struct UInventorySlotUserWidget* inventorySlot, struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragEnterEvent // (Native|Public|BlueprintCallable) // @ game+0x235cc80
	void OnDragCancelledEvent(struct UBaseItemWidget* Widget); // Function ConZ.BaseItemContainerWidget.OnDragCancelledEvent // (Native|Public|BlueprintCallable) // @ game+0x235cbf0
	void InitGrid(struct FMargin& gridPadding); // Function ConZ.BaseItemContainerWidget.InitGrid // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x235cab0
	bool GetSlotsForPanel(struct UGridSlot* GridSlot, int32_t Width, int32_t Height, struct TArray<struct UInventorySlotUserWidget*>& Slots, struct UGridPanel* panel, int32_t numColumns, int32_t numRows); // Function ConZ.BaseItemContainerWidget.GetSlotsForPanel // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x235c830
	bool GetSlots(struct UGridSlot* GridSlot, int32_t Width, int32_t Height, struct TArray<struct UInventorySlotUserWidget*>& Slots); // Function ConZ.BaseItemContainerWidget.GetSlots // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x235c6b0
	struct TArray<struct UItemUserWidget*> GetItemWidgets(); // Function ConZ.BaseItemContainerWidget.GetItemWidgets // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x235c5b0
};

// Class ConZ.BaseItemWidget
// Size: 0x288 (Inherited: 0x268)
struct UBaseItemWidget : UUserWidget {
	struct UBaseItemContainerWidget* ParentInventory; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	int32_t Width; // 0x278(0x04)
	int32_t Height; // 0x27c(0x04)
	struct UImage* _imageWidget; // 0x280(0x08)

	void SetStacksCount(int32_t Count); // Function ConZ.BaseItemWidget.SetStacksCount // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	int32_t GetStacksCount(); // Function ConZ.BaseItemWidget.GetStacksCount // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void GetDragImage(struct FGeometry Geometry, struct UInventorySlotUserWidget* widgetImage); // Function ConZ.BaseItemWidget.GetDragImage // (Final|Native|Protected|BlueprintCallable) // @ game+0x235c480
	void DragCancelled(); // Function ConZ.BaseItemWidget.DragCancelled // (Final|Native|Public|BlueprintCallable) // @ game+0x235c460
};

// Class ConZ.BaseMountPathBlocker
// Size: 0x30 (Inherited: 0x28)
struct UBaseMountPathBlocker : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BasicGameResourceContainerComponent
// Size: 0x1f0 (Inherited: 0xc8)
struct UBasicGameResourceContainerComponent : UItemComponent {
	char pad_C8[0x20]; // 0xc8(0x20)
	struct UGameResourceType* _repResourceType; // 0xe8(0x08)
	float _repResourceAmount; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct FGameplayTagContainer _resourceFillingInSocketTypes; // 0xf8(0x20)
	struct FGameplayTagContainer _resourceFillingOutSocketTypes; // 0x118(0x20)
	struct TArray<struct UBaseItemTag*> _requiredItemTagsForFilling; // 0x138(0x10)
	bool _shouldUpdateOwningItemUses; // 0x148(0x01)
	bool _amountDependsOnItemWeight; // 0x149(0x01)
	bool _canDrink; // 0x14a(0x01)
	bool _canSpill; // 0x14b(0x01)
	bool _canCheck; // 0x14c(0x01)
	bool _canFill; // 0x14d(0x01)
	bool _showResourcePercentageOnCheck; // 0x14e(0x01)
	bool _shouldUncraftWhenEmpty; // 0x14f(0x01)
	bool _shouldSpillWhenPickedUp; // 0x150(0x01)
	bool _shouldSpillWhenAddedToContainer; // 0x151(0x01)
	bool _shouldTakeInHandsWhenDrinking; // 0x152(0x01)
	char pad_153[0x5]; // 0x153(0x05)
	struct FText _interactionText; // 0x158(0x18)
	struct UAnimMontage* _resourceFillingMontage; // 0x170(0x08)
	struct UAkAudioEvent* _resourceStartFillingAudioEvent; // 0x178(0x08)
	struct UAkAudioEvent* _resourceStopFillingAudioEvent; // 0x180(0x08)
	float _resourceFillingDurationPerAmountFilled; // 0x188(0x04)
	float _resourceFillingExperiencePerAmount; // 0x18c(0x04)
	enum class EPrisonerGroundStance _targetStanceWhenFilling; // 0x190(0x01)
	bool _shouldTakeInHandsWhenFilling; // 0x191(0x01)
	char pad_192[0x6]; // 0x192(0x06)
	struct UAkAudioEvent* _spillStartAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* _spillStopAudioEvent; // 0x1a0(0x08)
	struct UAnimMontage* _spillMontage; // 0x1a8(0x08)
	struct UAnimMontage* _spillMontageEnd; // 0x1b0(0x08)
	struct UParticleSystem* _particles; // 0x1b8(0x08)
	float _minSpillTime; // 0x1c0(0x04)
	float _maxSpillTime; // 0x1c4(0x04)
	float _spillTimePerKg; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct UAkAudioEvent* _drinkStartAudioEvent; // 0x1d0(0x08)
	struct UAkAudioEvent* _drinkStopAudioEvent; // 0x1d8(0x08)
	float _EMInterferenceDisabledTime; // 0x1e0(0x04)
	char pad_1E4[0xc]; // 0x1e4(0x0c)

	void OnRep_ResourceType(); // Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceType // (Final|Native|Private) // @ game+0x2361430
	void OnRep_ResourceAmount(); // Function ConZ.BasicGameResourceContainerComponent.OnRep_ResourceAmount // (Final|Native|Private) // @ game+0x2361430
};

// Class ConZ.BasicGameResourceSlotItemComponent
// Size: 0x120 (Inherited: 0xc8)
struct UBasicGameResourceSlotItemComponent : UItemComponent {
	char pad_C8[0x38]; // 0xc8(0x38)
	float _EMInterferenceDisabledTime; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	bool _disableInteractions; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct AItem* _repResourceClass; // 0x110(0x08)
	float _repResourceAmountRatio; // 0x118(0x04)
	float _repResourceUsageRateNormalized; // 0x11c(0x04)

	void OnRep_RepResourceAmountRatio(); // Function ConZ.BasicGameResourceSlotItemComponent.OnRep_RepResourceAmountRatio // (Final|Native|Private) // @ game+0x2361410
};

// Class ConZ.EntityComponentSetup
// Size: 0x48 (Inherited: 0x40)
struct UEntityComponentSetup : UEntitySystemObjectSetup {
	float BoundsRadius; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.BasicItemDecayEntityComponentSetup
// Size: 0x50 (Inherited: 0x48)
struct UBasicItemDecayEntityComponentSetup : UEntityComponentSetup {
	float LifeTime; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.BasicLadder
// Size: 0x248 (Inherited: 0x220)
struct ABasicLadder : AActor {
	struct UStaticMeshComponent* _mesh; // 0x220(0x08)
	struct TArray<struct FLadderMarker> _ladderMarkers; // 0x228(0x10)
	char pad_238[0x10]; // 0x238(0x10)
};

// Class ConZ.ConZNotification
// Size: 0x30 (Inherited: 0x28)
struct UConZNotification : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BasicNotification
// Size: 0x30 (Inherited: 0x30)
struct UBasicNotification : UConZNotification {
};

// Class ConZ.NotificationDescription
// Size: 0x40 (Inherited: 0x28)
struct UNotificationDescription : UObject {
	enum class ENotificationTarget Target; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FDbIntegerId TargetUserProfileId; // 0x30(0x08)
	bool ShouldSendIfClientOffline; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.BasicNotificationDescription
// Size: 0x78 (Inherited: 0x40)
struct UBasicNotificationDescription : UNotificationDescription {
	struct FText Message; // 0x40(0x18)
	int32_t FontSize; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct UTexture2D* Icon; // 0x60(0x08)
	int32_t IconSize; // 0x68(0x04)
	float Duration; // 0x6c(0x04)
	bool Ping; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class ConZ.BasicTextWidget
// Size: 0x270 (Inherited: 0x268)
struct UBasicTextWidget : UUserWidget {
	int32_t MaxTextRows; // 0x268(0x04)
	int32_t MaxCharactersPerTextRow; // 0x26c(0x04)

	void SetCurrentText(struct FText& Text); // Function ConZ.BasicTextWidget.SetCurrentText // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.FueledHeatSource
// Size: 0x220 (Inherited: 0x28)
struct UFueledHeatSource : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FHeatSourceParameters _heatSourceParams; // 0x30(0x24)
	char pad_54[0x4]; // 0x54(0x04)
	struct UStaticMeshComponent* _interactionHitComponent; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)
	struct UParticleSystemComponent* _fireParticlesComponent; // 0x68(0x08)
	struct UNiagaraComponent* _niagaraFireParticlesComponent; // 0x70(0x08)
	struct TArray<struct FParameterInt32> _particleParametersInt32; // 0x78(0x10)
	struct TArray<struct FParameterFloat> _particleParametersFloat; // 0x88(0x10)
	struct TArray<struct FParameterVector> _particleParametersVector; // 0x98(0x10)
	struct TArray<struct FParameterVector4> _particleParametersVector4; // 0xa8(0x10)
	struct UPointLightComponent* _fireLightComponent; // 0xb8(0x08)
	float _maxFireLightIntensity; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UAkAudioEvent* _startBurningAudioEvent; // 0xc8(0x08)
	struct UAkAudioEvent* _stopBurningAudioEvent; // 0xd0(0x08)
	struct UAkComponent* _fireAudioComponent; // 0xd8(0x08)
	struct FTransform _fireTransform; // 0xe0(0x30)
	char pad_110[0x8]; // 0x110(0x08)
	struct UStaticMeshComponent* _meshComponent; // 0x118(0x08)
	struct TArray<struct UStaticMesh*> _swapMeshes; // 0x120(0x10)
	int32_t _materialSwitchIndex; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct UMaterialInterface* _litMaterial; // 0x138(0x08)
	struct UMaterialInterface* _unlitMaterial; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)
	struct FTransform _meshTransform; // 0x150(0x30)
	char pad_180[0x4]; // 0x180(0x04)
	float _fireDamageProcessingPeriod; // 0x184(0x04)
	char pad_188[0x4]; // 0x188(0x04)
	float _fireBaseDamageToItemsPerSecond; // 0x18c(0x04)
	uint16_t _repTemperature; // 0x190(0x02)
	char pad_192[0x6]; // 0x192(0x06)
	char _isAvailableForCooking; // 0x198(0x01)
	bool _yieldStateControlToDisableableComponent; // 0x199(0x01)
	char pad_19A[0xa]; // 0x19a(0x0a)
	float _temperatureReplicationInterval; // 0x1a4(0x04)
	char pad_1A8[0x4]; // 0x1a8(0x04)
	float _temperatureReplicationRadius; // 0x1ac(0x04)
	char pad_1B0[0x70]; // 0x1b0(0x70)

	void OnRep_Temperature(); // Function ConZ.FueledHeatSource.OnRep_Temperature // (Final|Native|Private) // @ game+0x23e7cf0
};

// Class ConZ.BatchFuelHeatSource
// Size: 0x260 (Inherited: 0x220)
struct UBatchFuelHeatSource : UFueledHeatSource {
	float _fuelMassCapacity; // 0x220(0x04)
	struct FCombustibleItemParams _initialFuelCombustionParams; // 0x224(0x08)
	float _initialFuelMass; // 0x22c(0x04)
	float _temperatureMultiplierRain; // 0x230(0x04)
	enum class EBlowAirAnimHeight _heightForBlowAirAnimation; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
	float _distanceForBlowAirAnimation; // 0x238(0x04)
	bool _isBurning; // 0x23c(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
	int32_t _burningStage; // 0x240(0x04)
	float _repFuelMass; // 0x244(0x04)
	char pad_248[0x18]; // 0x248(0x18)

	void OnRep_IsBurning(); // Function ConZ.BatchFuelHeatSource.OnRep_IsBurning // (Final|Native|Private) // @ game+0x23613d0
	void OnRep_BurningStage(); // Function ConZ.BatchFuelHeatSource.OnRep_BurningStage // (Final|Native|Private) // @ game+0x2361390
};

// Class ConZ.EquipmentItem
// Size: 0x9c0 (Inherited: 0x9b0)
struct AEquipmentItem : AItem {
	uint32_t MinRange; // 0x9a8(0x04)
	uint32_t MaxRange; // 0x9ac(0x04)
	uint32_t MinDamage; // 0x9b0(0x04)
	uint32_t MaxDamage; // 0x9b4(0x04)
	uint32_t AP; // 0x9b8(0x04)
};

// Class ConZ.BatteryChargerItem
// Size: 0x9e0 (Inherited: 0x9c0)
struct ABatteryChargerItem : AEquipmentItem {
	struct UInventoryContainer2D* _inventoryContainer2D; // 0x9c0(0x08)
	struct URangedResourceConsumerComponentMultipleProviders* _rangedResourceConsumerComponent; // 0x9c8(0x08)
	uint32_t _capacityX; // 0x9d0(0x04)
	uint32_t _capacityY; // 0x9d4(0x04)
	float _chargingRate; // 0x9d8(0x04)
	char pad_9DC[0x4]; // 0x9dc(0x04)

	void OnRangedResourceConsumerComponentDeactivated(struct UActorComponent* Component); // Function ConZ.BatteryChargerItem.OnRangedResourceConsumerComponentDeactivated // (Final|Native|Private) // @ game+0x2361300
};

// Class ConZ.GameResourceContainerEntityComponentSave
// Size: 0x40 (Inherited: 0x28)
struct UGameResourceContainerEntityComponentSave : UObject {
	struct UGameResourceType* ResourceType; // 0x28(0x08)
	float ResourceAmount; // 0x30(0x04)
	float MaxResourceAmount; // 0x34(0x04)
	float ResourceUsageRate; // 0x38(0x04)
	bool ResourceUsageEnabled; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class ConZ.BatteryEntityComponentSave
// Size: 0x40 (Inherited: 0x40)
struct UBatteryEntityComponentSave : UGameResourceContainerEntityComponentSave {
};

// Class ConZ.GameResourceContainerEntityComponentSetup
// Size: 0x70 (Inherited: 0x48)
struct UGameResourceContainerEntityComponentSetup : UEntityComponentSetup {
	struct UGameResourceType* AcceptedResourceType; // 0x48(0x08)
	struct UGameResourceType* DefaultResourceType; // 0x50(0x08)
	float MaxResourceAmount; // 0x58(0x04)
	float ResourceAmount; // 0x5c(0x04)
	float ResourceUsageRate; // 0x60(0x04)
	float MinTickInterval; // 0x64(0x04)
	float MinResourceAmountRatioChangeToTick; // 0x68(0x04)
	bool ShouldRemoveResourceTypeWhenEmptied; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class ConZ.BatteryEntityComponentSetup
// Size: 0x80 (Inherited: 0x70)
struct UBatteryEntityComponentSetup : UGameResourceContainerEntityComponentSetup {
	float Voltage; // 0x70(0x04)
	float BaseDrainRate; // 0x74(0x04)
	bool IsRechargeable; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class ConZ.BatteryItemComponent
// Size: 0x1f8 (Inherited: 0x1f0)
struct UBatteryItemComponent : UBasicGameResourceContainerComponent {
	float _repResourceUsageRate; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)

	void OnRep_ResourceUsageRate(); // Function ConZ.BatteryItemComponent.OnRep_ResourceUsageRate // (Final|Native|Private) // @ game+0x2361450
};

// Class ConZ.BCULockable
// Size: 0x28 (Inherited: 0x28)
struct UBCULockable : UInterface {
};

// Class ConZ.BCULockItem
// Size: 0x9c0 (Inherited: 0x9b0)
struct ABCULockItem : AItem {
	struct UBasicGameResourceSlotItemComponent* _batterySlot; // 0x9b0(0x08)
	struct FDbIntegerId _connectedServerUserProfileId; // 0x9b8(0x08)

	void OnResourceObjectDeactivated(struct UActorComponent* containerComponent); // Function ConZ.BCULockItem.OnResourceObjectDeactivated // (Final|Native|Private) // @ game+0x2361490
	void OnRep_ConnectionPrisonerId(); // Function ConZ.BCULockItem.OnRep_ConnectionPrisonerId // (Final|Native|Private) // @ game+0x23613b0
};

// Class ConZ.BCULockRegistry
// Size: 0x2a0 (Inherited: 0x220)
struct ABCULockRegistry : AActor {
	char pad_220[0x80]; // 0x220(0x80)

	void UpdateBCULockRegistryOnClientWithUserProfileId(struct FDbIntegerId ServerUserProfileId); // Function ConZ.BCULockRegistry.UpdateBCULockRegistryOnClientWithUserProfileId // (Final|Native|Private|Const) // @ game+0x2361660
};

// Class ConZ.BCUMemoryModuleItem
// Size: 0xa00 (Inherited: 0x9b0)
struct ABCUMemoryModuleItem : AItem {
	float _intelligenceReward; // 0x9a8(0x04)
	struct UAkAudioEvent* _upgradeStartAudio; // 0x9b0(0x08)
	struct UAkAudioEvent* _upgradeStopAudio; // 0x9b8(0x08)
	struct UAkAudioEvent* _upgradeSuccessAudio; // 0x9c0(0x08)
	struct UAkAudioEvent* _upgradeFailureAudio; // 0x9c8(0x08)
	float _upgradeActionDuration; // 0x9d0(0x04)
	struct TSoftClassPtr<UObject> _tradeableServiceClass; // 0x9d8(0x28)
};

// Class ConZ.TraderService
// Size: 0x38 (Inherited: 0x28)
struct UTraderService : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UTexture2D* _storeIcon; // 0x30(0x08)
};

// Class ConZ.BCUUpgradeService
// Size: 0x38 (Inherited: 0x38)
struct UBCUUpgradeService : UTraderService {
};

// Class ConZ.VirtualizedItemUserData
// Size: 0x28 (Inherited: 0x28)
struct UVirtualizedItemUserData : UObject {
};

// Class ConZ.BedrollVirtualizedItemUserData
// Size: 0x48 (Inherited: 0x28)
struct UBedrollVirtualizedItemUserData : UVirtualizedItemUserData {
	struct FDbIntegerId Occupant; // 0x28(0x08)
	struct FDateTime TimerStart; // 0x30(0x08)
	struct FTimespan TimerDuration; // 0x38(0x08)
	bool ShouldLoad; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.Bedroll
// Size: 0xab0 (Inherited: 0xa50)
struct ABedroll : AClothesItem {
	struct FDbIntegerId _occupiedUserProfileId; // 0xa48(0x08)
	bool _occupantOnline; // 0xa50(0x01)
	bool _isRolledUpRep; // 0xa51(0x01)
	struct UStaticMesh* _meshInHands; // 0xa58(0x08)
	struct UMaterialInterface* _materialInHands; // 0xa60(0x08)
	struct UStaticMesh* _meshOnGround; // 0xa68(0x08)
	struct UMaterialInterface* _materialOnGround; // 0xa70(0x08)
	float _maxRestHeight; // 0xa78(0x04)
	float _damageOverTimeWhenOccupied; // 0xa7c(0x04)
	float _autoDestructTimeWhenOccupied; // 0xa80(0x04)
	char pad_A86[0x2a]; // 0xa86(0x2a)

	void VirtualizeTimerCallback(); // Function ConZ.Bedroll.VirtualizeTimerCallback // (Final|Native|Private) // @ game+0x2361790
	void SetOccupantOfflineTimerCallback(); // Function ConZ.Bedroll.SetOccupantOfflineTimerCallback // (Final|Native|Private) // @ game+0x2361640
	void OnUserLogout(struct FDbIntegerId UserId); // Function ConZ.Bedroll.OnUserLogout // (Native|Protected) // @ game+0x23615b0
	void OnUserLogin(struct FDbIntegerId UserId); // Function ConZ.Bedroll.OnUserLogin // (Native|Protected) // @ game+0x2361520
	void OnRep_IsRolledUpRep(); // Function ConZ.Bedroll.OnRep_IsRolledUpRep // (Final|Native|Private) // @ game+0x23613f0
	void OnOccupantRemoved(); // Function ConZ.Bedroll.OnOccupantRemoved // (Native|Protected) // @ game+0x23612e0
	void OnOccupantKilled(struct AConZCharacter* ConZCharacter); // Function ConZ.Bedroll.OnOccupantKilled // (Native|Protected) // @ game+0x2361250
};

// Class ConZ.BedrollItemEntitySave
// Size: 0x30 (Inherited: 0x28)
struct UBedrollItemEntitySave : UObject {
	bool IsRolledUp; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class ConZ.ItemEntitySetup
// Size: 0x90 (Inherited: 0x80)
struct UItemEntitySetup : UEntitySetup {
	float MaxHealth; // 0x80(0x04)
	float MaxHealthRatioAfterReachingBadQuality; // 0x84(0x04)
	bool ShouldCarryStopOnOwnerLeavingGame; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class ConZ.BedrollItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UBedrollItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.BigItemCraftingButton
// Size: 0x330 (Inherited: 0x268)
struct UBigItemCraftingButton : UUserWidget {
	char pad_268[0x78]; // 0x268(0x78)
	struct UCheckBox* _favouriteStar; // 0x2e0(0x08)
	struct UOverlay* _quantityDataOverlay; // 0x2e8(0x08)
	struct UImage* _icon; // 0x2f0(0x08)
	struct UTextBlock* _title; // 0x2f8(0x08)
	struct UTextBlock* _quantity; // 0x300(0x08)
	struct UTextBlock* _quantityFadeout; // 0x308(0x08)
	struct UImage* _quantityBackground; // 0x310(0x08)
	struct UImage* _quantityBackgroundFadeout; // 0x318(0x08)
	struct UWidgetAnimation* _changeQuantity; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)

	void OnFavouritesStateChanged(bool IsChecked); // Function ConZ.BigItemCraftingButton.OnFavouritesStateChanged // (Final|Native|Private) // @ game+0x23611c0
	void OnChangeQuantityAnimationMidway(); // Function ConZ.BigItemCraftingButton.OnChangeQuantityAnimationMidway // (Final|Native|Private) // @ game+0x23611a0
	void OnChangeQuantityAnimationEnded(); // Function ConZ.BigItemCraftingButton.OnChangeQuantityAnimationEnded // (Final|Native|Private) // @ game+0x2361180
};

// Class ConZ.BioChemSkill
// Size: 0xb0 (Inherited: 0xb0)
struct UBioChemSkill : UIntelligenceSkill {
};

// Class ConZ.Biome
// Size: 0x270 (Inherited: 0x220)
struct ABiome : AActor {
	struct USceneComponent* _root; // 0x220(0x08)
	struct UStaticMeshComponent* _visualizationSphere; // 0x228(0x08)
	float _radius; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct FHuntingBiomeParameters _parameters; // 0x238(0x38)
};

// Class ConZ.BiomeData
// Size: 0x90 (Inherited: 0x30)
struct UBiomeData : UDataAsset {
	struct FGameplayTag BiomeTag; // 0x30(0x08)
	struct UMaterialInstance* VisualizationMaterial; // 0x38(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, struct FAnimalSpawnData> AnimalSpawnData; // 0x40(0x50)
};

// Class ConZ.Bird2
// Size: 0xa00 (Inherited: 0x9d0)
struct ABird2 : AAnimal2 {
	bool IsStaringPerched; // 0x9c8(0x01)
	float MinFlightAltitude; // 0x9cc(0x04)
	float MaxFlightAltitude; // 0x9d0(0x04)
	bool _isLanding; // 0x9d4(0x01)
	bool _isTakingOff; // 0x9d5(0x01)
	bool _isPerched; // 0x9d6(0x01)
	bool _isFlying; // 0x9d7(0x01)
	struct TArray<bool> _states; // 0x9d8(0x10)
	char _repStates; // 0x9e8(0x01)
	char pad_9EE[0x12]; // 0x9ee(0x12)

	void OnRep_States(); // Function ConZ.Bird2.OnRep_States // (Native|Protected) // @ game+0x2361470
	bool GetIsTakingOff(); // Function ConZ.Bird2.GetIsTakingOff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2361150
	bool GetIsStaringPerched(); // Function ConZ.Bird2.GetIsStaringPerched // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2361120
	bool GetIsPerched(); // Function ConZ.Bird2.GetIsPerched // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23610f0
	bool GetIsLanding(); // Function ConZ.Bird2.GetIsLanding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23610c0
	bool GetIsFlying(); // Function ConZ.Bird2.GetIsFlying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2361090
	void CapsuleComponent_OnComponentHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Bird2.CapsuleComponent_OnComponentHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x2360ea0
};

// Class ConZ.Bird2AIController
// Size: 0x4a8 (Inherited: 0x450)
struct ABird2AIController : AConZAIController {
	float FlyDurationMin; // 0x450(0x04)
	float FlyDurationMax; // 0x454(0x04)
	float RemainOnGroundDurationMin; // 0x458(0x04)
	float RemainOnGroundDurationMax; // 0x45c(0x04)
	float TurnSpeed; // 0x460(0x04)
	float FlightSegmentDistance; // 0x464(0x04)
	float LandingDistance; // 0x468(0x04)
	char pad_46C[0x3c]; // 0x46c(0x3c)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.Bird2AIController.UpdatePerception // (Final|Native|Private|HasOutParms) // @ game+0x23616e0
};

// Class ConZ.Bird2AnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UBird2AnimInstance : UAnimInstance {
	float ABPSpeed; // 0x2b8(0x04)
	bool IsLanding; // 0x2bc(0x01)
	bool IsTakingOff; // 0x2bd(0x01)
	bool IsPerched; // 0x2be(0x01)
	bool IsFlying; // 0x2bf(0x01)
	bool IsStaringPerched; // 0x2c0(0x01)
	struct FRotator SlopeRootTiltRotation; // 0x2c4(0x0c)
};

// Class ConZ.BirdTargetPoint
// Size: 0x228 (Inherited: 0x220)
struct ABirdTargetPoint : AActor {
	bool IsOccupied; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
};

// Class ConZ.BloodStain
// Size: 0x2b8 (Inherited: 0x220)
struct ABloodStain : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _mesh; // 0x228(0x08)
	struct FText _name; // 0x230(0x18)
	struct FText _sampleExtractionText; // 0x248(0x18)
	struct AItem* _sampleExtractionTool; // 0x260(0x08)
	struct AItem* _sampleExtractionProduct; // 0x268(0x08)
	struct UAnimMontage* _sampleExtractionMontage; // 0x270(0x08)
	struct UAkAudioEvent* _sampleExtractionStartAudioEvent; // 0x278(0x08)
	struct UAkAudioEvent* _sampleExtractionStopAudioEvent; // 0x280(0x08)
	float _sampleExtractionBaseDuration; // 0x288(0x04)
	bool _isSampleBeingExtracted; // 0x28c(0x01)
	char pad_28D[0x13]; // 0x28d(0x13)
	float _timeBeforeDecayStarts; // 0x2a0(0x04)
	float _decayDuration; // 0x2a4(0x04)
	float _fallThroughGroundRateWhenDecaying; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	bool _isDecaying; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)
};

// Class ConZ.BluntMeleeWeaponItemTag
// Size: 0x30 (Inherited: 0x30)
struct UBluntMeleeWeaponItemTag : UBaseItemTag {
};

// Class ConZ.Boat
// Size: 0x1b60 (Inherited: 0x12f0)
struct ABoat : AVehicleBase {
	char pad_12F0[0x10]; // 0x12f0(0x10)
	struct UAdvancedBuoyancyComponent* _advancedBuoyancyComponent; // 0x1300(0x08)
	struct UVehiclePowertrainComponent* _powertrainComponent; // 0x1308(0x08)
	struct UParticleSystemComponent* _motorWaterSplashParticleComponent; // 0x1310(0x08)
	char pad_1318[0x4]; // 0x1318(0x04)
	float _throttleForceMagnitude; // 0x131c(0x04)
	struct FVector _forcePosition; // 0x1320(0x0c)
	float _yawImpulse; // 0x132c(0x04)
	float _rollImpulse; // 0x1330(0x04)
	float _pitchImpulse; // 0x1334(0x04)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeed; // 0x1338(0x88)
	struct FRuntimeFloatCurve _driverActionDifficultyVsForce; // 0x13c0(0x88)
	struct FRuntimeFloatCurve _driverConstitutionChangeRateModifierVsSpeed; // 0x1448(0x88)
	struct FRuntimeFloatCurve _driverStrengthChangeRateModifierVsSpeed; // 0x14d0(0x88)
	struct FBoatParametersPerMovementPace _parametersPerMovementPace[0x3]; // 0x1558(0x48)
	struct FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity; // 0x15a0(0x08)
	float _throttleInterpSpeed; // 0x15a8(0x04)
	char pad_15AC[0x4]; // 0x15ac(0x04)
	float _brakeInterpSpeed; // 0x15b0(0x04)
	char pad_15B4[0x4]; // 0x15b4(0x04)
	float _steerInterpSpeed; // 0x15b8(0x04)
	char pad_15BC[0x4]; // 0x15bc(0x04)
	float _maxSteeringAngle; // 0x15c0(0x04)
	float _motorSteeringForce; // 0x15c4(0x04)
	float _motorSteerTurnMultiplier; // 0x15c8(0x04)
	float _maxSpeedForBase; // 0x15cc(0x04)
	struct FRuntimeFloatCurve _rudderEfficiencyBySpeedKmH; // 0x15d0(0x88)
	struct FRuntimeFloatCurve _sidewaysVelocityFalloff; // 0x1658(0x88)
	struct FRuntimeFloatCurve _speedKmhVsDensityMultiplier; // 0x16e0(0x88)
	float _maxMotorSpeed; // 0x1768(0x04)
	float _throttleToRpmMultiplier; // 0x176c(0x04)
	char pad_1770[0x10]; // 0x1770(0x10)
	enum class EBoatPaddlingState _paddlingState; // 0x1780(0x01)
	char pad_1781[0x3]; // 0x1781(0x03)
	float _maxRowingSpeed; // 0x1784(0x04)
	float _rowingForce; // 0x1788(0x04)
	char pad_178C[0x4]; // 0x178c(0x04)
	struct FRuntimeFloatCurve _rowForceMultiplierPerKph; // 0x1790(0x88)
	float _rowTurnMultiplier; // 0x1818(0x04)
	char pad_181C[0x4]; // 0x181c(0x04)
	struct FRuntimeFloatCurve _rowTurnMultiplierPerKph; // 0x1820(0x88)
	struct UAkAudioEvent* _rowingAudioEvent; // 0x18a8(0x08)
	float _desiredDriftMultiplier; // 0x18b0(0x04)
	float _paddleDriftSteerMultiplier; // 0x18b4(0x04)
	uint32_t _numPaddleSwingsInOneHand; // 0x18b8(0x04)
	bool _hasSails; // 0x18bc(0x01)
	char pad_18BD[0x3]; // 0x18bd(0x03)
	struct FName _sailCollisionShapeName; // 0x18c0(0x08)
	float _sailingForceMultiplier; // 0x18c8(0x04)
	struct FFloatInterval _windIntensityInterval; // 0x18cc(0x08)
	char pad_18D4[0x4]; // 0x18d4(0x04)
	struct FRuntimeFloatCurve _sailingForceMultiplierPerKph; // 0x18d8(0x88)
	float _sailingTurnMultiplier; // 0x1960(0x04)
	char pad_1964[0x4]; // 0x1964(0x04)
	struct FRuntimeFloatCurve _sailingTurnMultiplierPerKph; // 0x1968(0x88)
	struct UAkAudioEvent* _sailingRudderStartAudioEvent; // 0x19f0(0x08)
	struct UAkAudioEvent* _sailingRudderEndAudioEvent; // 0x19f8(0x08)
	struct UAkAudioEvent* _sailsTautAudioEvent; // 0x1a00(0x08)
	int32_t _sailsDeploySteps; // 0x1a08(0x04)
	float _sailsDeploySpeedMultiplier; // 0x1a0c(0x04)
	uint32_t _sailsTurnSteps; // 0x1a10(0x04)
	float _sailsTurnSpeedMultiplier; // 0x1a14(0x04)
	float _sailsMaxTurnAngle; // 0x1a18(0x04)
	float _maxSailingSpeed; // 0x1a1c(0x04)
	struct FRuntimeFloatCurve _sailsDeploymentRatioVsForceMultiplier; // 0x1a20(0x88)
	float _sailingSteerSoundMultiplier; // 0x1aa8(0x04)
	char pad_1AAC[0x20]; // 0x1aac(0x20)
	enum class EBoatSDFType _sdfType; // 0x1acc(0x04)
	struct UParticleSystemComponent* _LOarWaterParticles; // 0x1ad0(0x08)
	struct UParticleSystemComponent* _ROarWaterParticles; // 0x1ad8(0x08)
	struct FBox _dryVolume; // 0x1ae0(0x1c)
	float _EMInterferenceMaxDisabledTime; // 0x1afc(0x04)
	char pad_1B00[0x60]; // 0x1b00(0x60)
};

// Class ConZ.VehicleBaseMountSlot
// Size: 0x190 (Inherited: 0x28)
struct UVehicleBaseMountSlot : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UVehicleAttachment* AttachmentOwner; // 0x30(0x08)
	struct FName MountSocketName; // 0x38(0x08)
	struct FName MountedCollisionShapeName; // 0x40(0x08)
	enum class EVehicleMountType Type; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UPhysicalMaterial* InteractionMaterial; // 0x50(0x08)
	struct UAnimInstance* MountedAnimInstanceClass; // 0x58(0x08)
	struct UAnimSequenceBase* MountedAnimation; // 0x60(0x08)
	struct UBlendSpace* MountedBlendspace; // 0x68(0x08)
	struct UBlendSpace* MountedBlendspaceFP; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)
	struct FPrisonerRestingParameters DefaultPrisonerRestingParameters; // 0x80(0x60)
	struct FGameplayTag SlotId; // 0xe0(0x08)
	struct FText MountInteractionCaption; // 0xe8(0x18)
	float ForceUnmountDuration; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct UObject* _mountee; // 0x108(0x08)
	struct UObject* _reservee; // 0x110(0x08)
	char pad_118[0x8]; // 0x118(0x08)
	struct UVehicleWeaponAimingParameters* _weaponAimingParametersClass; // 0x120(0x08)
	float _forceUnmountAngle; // 0x128(0x04)
	struct FGameplayTag _reachabilityFromSkyStateTag; // 0x12c(0x08)
	bool _shouldHideAttachedItems; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
	struct FVector _prisonerViewpointOffset; // 0x138(0x0c)
	struct FVector _prisonerFeetOffset; // 0x144(0x0c)
	struct TArray<struct UExternalMountPath*> _externalMountPaths; // 0x150(0x10)
	struct TArray<struct UExternalMountPath*> _emergencyMountPaths; // 0x160(0x10)
	struct TArray<struct UInternalMountPath*> _internalMountPaths; // 0x170(0x10)
	char pad_180[0x10]; // 0x180(0x10)

	void OnRep_AttachmentOwner(struct UVehicleAttachment* oldAttachmentOwner); // Function ConZ.VehicleBaseMountSlot.OnRep_AttachmentOwner // (Final|Native|Private) // @ game+0x2522c20
};

// Class ConZ.BoatMountSlot
// Size: 0x1b0 (Inherited: 0x190)
struct UBoatMountSlot : UVehicleBaseMountSlot {
	enum class EBoatControlType _controlType; // 0x188(0x01)
	struct UAnimSequence* _startEngineStartAnimation; // 0x190(0x08)
	struct UAnimSequence* _startEngineLoopAnimation; // 0x198(0x08)
	struct UAnimSequence* _startEngineLongLoopAnimation; // 0x1a0(0x08)
	struct UAnimSequence* _startEngineEndAnimation; // 0x1a8(0x08)
};

// Class ConZ.BombDefusalMinigameBase
// Size: 0x530 (Inherited: 0x340)
struct ABombDefusalMinigameBase : AMinigame {
	struct UStaticMeshComponent* _timeBomb; // 0x340(0x08)
	struct UStaticMesh* _splineConnectorMesh; // 0x348(0x08)
	char pad_350[0x8]; // 0x350(0x08)
	struct FVector _wireButtonsSize; // 0x358(0x0c)
	char pad_364[0x4]; // 0x364(0x04)
	struct USkeletalMeshComponent* _defusalTool; // 0x368(0x08)
	float _toolMovementSensitivity; // 0x370(0x04)
	struct FVector _minDefusingToolOffsetFromCenter; // 0x374(0x0c)
	struct FVector _maxDefusingToolOffsetFromCenter; // 0x380(0x0c)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct UMaterialInterface* _greenLedLight; // 0x390(0x08)
	struct UMaterialInterface* _redLedLight; // 0x398(0x08)
	struct UMaterialInterface* _yellowLedLight; // 0x3a0(0x08)
	struct TArray<struct UStaticMeshComponent*> _ledLights; // 0x3a8(0x10)
	struct UStaticMesh* _ledLightMesh; // 0x3b8(0x08)
	char pad_3C0[0x8]; // 0x3c0(0x08)
	struct UStaticMesh* _wireMesh; // 0x3c8(0x08)
	struct TArray<enum class EWireType> _wiresEndPositions; // 0x3d0(0x10)
	struct TArray<struct FWireDescription> _wires; // 0x3e0(0x10)
	char pad_3F0[0x10]; // 0x3f0(0x10)
	struct TArray<struct FSplineDescription> _splines; // 0x400(0x10)
	char pad_410[0x10]; // 0x410(0x10)
	int32_t _numberOfWires; // 0x420(0x04)
	int32_t _numberOfWirePoints; // 0x424(0x04)
	int32_t _wiresShuffleIntensity; // 0x428(0x04)
	int32_t _minWiresComplexity; // 0x42c(0x04)
	enum class ESplineAxis _wiresForwardAxis; // 0x430(0x01)
	char pad_431[0x3]; // 0x431(0x03)
	float _wiresStartSmoothness; // 0x434(0x04)
	float _wiresEndSmoothness; // 0x438(0x04)
	float _wiresMiddleSmoothness; // 0x43c(0x04)
	float _wiresSharpCornerSmoothness; // 0x440(0x04)
	float _maxSegmentSize; // 0x444(0x04)
	float _wirePointsSpreadPositive; // 0x448(0x04)
	float _wirePointsSpreadNegative; // 0x44c(0x04)
	float _wireHeight; // 0x450(0x04)
	float _wireVerticalSpacing; // 0x454(0x04)
	struct FVector _wirePointsOffset; // 0x458(0x0c)
	float _wireEndOffset; // 0x464(0x04)
	struct FVector _additionalWireEndPointOffset; // 0x468(0x0c)
	char pad_474[0x4]; // 0x474(0x04)
	struct UStaticMeshComponent* _cutWireSegment0; // 0x478(0x08)
	struct UStaticMeshComponent* _cutWireSegment1; // 0x480(0x08)
	struct UStaticMeshComponent* _cutWireSegment2; // 0x488(0x08)
	struct UStaticMeshComponent* _cutWireSegment3; // 0x490(0x08)
	struct UStaticMeshComponent* _cutWireSegment4; // 0x498(0x08)
	struct UStaticMeshComponent* _cutWireSegment5; // 0x4a0(0x08)
	struct UStaticMeshComponent* _uncutWireSegment0; // 0x4a8(0x08)
	struct UStaticMeshComponent* _uncutWireSegment1; // 0x4b0(0x08)
	struct UStaticMeshComponent* _uncutWireSegment2; // 0x4b8(0x08)
	struct UStaticMeshComponent* _uncutWireSegment3; // 0x4c0(0x08)
	struct UStaticMeshComponent* _uncutWireSegment4; // 0x4c8(0x08)
	struct UStaticMeshComponent* _uncutWireSegment5; // 0x4d0(0x08)
	struct UBoxComponent* _wireBox1; // 0x4d8(0x08)
	struct UBoxComponent* _wireBox2; // 0x4e0(0x08)
	struct UBoxComponent* _wireBox3; // 0x4e8(0x08)
	struct UBoxComponent* _wireBox4; // 0x4f0(0x08)
	struct UBoxComponent* _wireBox5; // 0x4f8(0x08)
	struct UBoxComponent* _wireBox6; // 0x500(0x08)
	struct UAkAudioEvent* _bombDefusalTimerStartSound; // 0x508(0x08)
	struct UAkAudioEvent* _bombDefusalTimerStopSound; // 0x510(0x08)
	struct UAkAudioEvent* _cutWireSound; // 0x518(0x08)
	struct UAkAudioEvent* _bombDefusedSound; // 0x520(0x08)
	char pad_528[0x8]; // 0x528(0x08)

	void PlayCutWireMontage(); // Function ConZ.BombDefusalMinigameBase.PlayCutWireMontage // (Final|Native|Protected|BlueprintCallable) // @ game+0x2364870
};

// Class ConZ.BombDefusalMinigame
// Size: 0x540 (Inherited: 0x530)
struct ABombDefusalMinigame : ABombDefusalMinigameBase {
	char pad_530[0x10]; // 0x530(0x10)
};

// Class ConZ.BombDefusalMinigameConfiguration
// Size: 0x70 (Inherited: 0x50)
struct UBombDefusalMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x20]; // 0x50(0x20)
};

// Class ConZ.MinigameWidget
// Size: 0x280 (Inherited: 0x268)
struct UMinigameWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
};

// Class ConZ.BombDefusalWidget
// Size: 0x2a0 (Inherited: 0x280)
struct UBombDefusalWidget : UMinigameWidget {
	struct UTextBlock* _remainingTimeMinutes1; // 0x280(0x08)
	struct UTextBlock* _remainingTimeMinutes2; // 0x288(0x08)
	struct UTextBlock* _remainingTimeSeconds1; // 0x290(0x08)
	struct UTextBlock* _remainingTimeSeconds2; // 0x298(0x08)

	void ShowInfo(); // Function ConZ.BombDefusalWidget.ShowInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x23648c0
	bool ShouldShowChangeDurationInfo(); // Function ConZ.BombDefusalWidget.ShouldShowChangeDurationInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2364890
	void OnSuccess(); // Function ConZ.BombDefusalWidget.OnSuccess // (Native|Event|Public|BlueprintEvent) // @ game+0x2364850
	void HideInfo(); // Function ConZ.BombDefusalWidget.HideInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x23644f0
	int32_t GetNumTries(); // Function ConZ.BombDefusalWidget.GetNumTries // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23644c0
};

// Class ConZ.BondageComponent
// Size: 0xef0 (Inherited: 0xee0)
struct UBondageComponent : USkeletalMeshComponent {
	struct AItem* _bondageItem; // 0xed8(0x08)
	enum class EBoundBodyPart _boundBodyPart; // 0xee0(0x01)
	float _tightness; // 0xee4(0x04)
	char pad_EED[0x3]; // 0xeed(0x03)

	void UpdateVisuals(); // Function ConZ.BondageComponent.UpdateVisuals // (Final|Native|Public|BlueprintCallable) // @ game+0x23648e0
	void OnRep_BoundBodyPart(); // Function ConZ.BondageComponent.OnRep_BoundBodyPart // (Final|Native|Private) // @ game+0x23647b0
	void OnRep_BondageItem(); // Function ConZ.BondageComponent.OnRep_BondageItem // (Final|Native|Private) // @ game+0x2364790
	struct AItem* GetBondageItem(); // Function ConZ.BondageComponent.GetBondageItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2364450
};

// Class ConZ.BondageItemTag
// Size: 0x98 (Inherited: 0x30)
struct UBondageItemTag : UBaseItemTag {
	struct USkeletalMesh* BondageMesh; // 0x30(0x08)
	float BaseStruggleDuration; // 0x38(0x04)
	float StruggleStrengthModifier; // 0x3c(0x04)
	float StruggleDexterityModifier; // 0x40(0x04)
	float GroundMovementSpeedMultiplier; // 0x44(0x04)
	float WaterMovementSpeedMultiplier; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UAnimSequenceBase* HandsBoundIdleFPAnimation; // 0x50(0x08)
	struct UAnimSequenceBase* HandsBoundIdleTPAnimation; // 0x58(0x08)
	struct UAnimMontage* HandsBoundMontage; // 0x60(0x08)
	struct UAnimMontage* HandsAdjustMontage; // 0x68(0x08)
	struct UAnimMontage* HandsBoundStruggleMontage; // 0x70(0x08)
	struct UAnimMontage* HandsFreedMontage; // 0x78(0x08)
	struct UAnimMontage* BindingHandsMontage; // 0x80(0x08)
	struct UAnimMontage* AdjustingHandsMontage; // 0x88(0x08)
	struct UAnimMontage* HandsBoundSuicideMontage; // 0x90(0x08)
};

// Class ConZ.WeaponAttachment
// Size: 0x9e0 (Inherited: 0x9b0)
struct AWeaponAttachment : AItem {
	struct FName LowestMiddleSocketName; // 0x9a8(0x08)
	struct FName HighestMiddleSocketName; // 0x9b0(0x08)
	struct UStaticMesh* _staticMeshWhenAttached; // 0x9c0(0x08)
	char pad_9C8[0x18]; // 0x9c8(0x18)

	void Unequip(); // Function ConZ.WeaponAttachment.Unequip // (Final|Native|Public|BlueprintCallable) // @ game+0x253a2d0
	struct FWeaponMalfunctionProbability GetWeaponMalfunctionProbabilityForMalfunctionEvent(struct AWeapon* Weapon, enum class EWeaponMalfunctionEvent malfunctionEvent); // Function ConZ.WeaponAttachment.GetWeaponMalfunctionProbabilityForMalfunctionEvent // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2539930
	struct UStaticMesh* GetStaticMeshWhenAttached(); // Function ConZ.WeaponAttachment.GetStaticMeshWhenAttached // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2539810
	struct USkeletalMesh* GetSkeletalMeshWhenAttached(); // Function ConZ.WeaponAttachment.GetSkeletalMeshWhenAttached // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25397e0
	float GetShakinessModifier(); // Function ConZ.WeaponAttachment.GetShakinessModifier // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25397a0
	struct AWeapon* GetOwningWeapon(); // Function ConZ.WeaponAttachment.GetOwningWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539740
	void Equip(struct AWeapon* Weapon); // Function ConZ.WeaponAttachment.Equip // (Native|Public|BlueprintCallable) // @ game+0x23dc470
	bool CanBeRemovedIfAttachedToWeapon(); // Function ConZ.WeaponAttachment.CanBeRemovedIfAttachedToWeapon // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2539100
};

// Class ConZ.BowAttachmentSilencer
// Size: 0x9e0 (Inherited: 0x9e0)
struct ABowAttachmentSilencer : AWeaponAttachment {
	float _noiseMultiplier; // 0x9d8(0x04)
};

// Class ConZ.BowAttachmentStabilizer
// Size: 0x9f0 (Inherited: 0x9e0)
struct ABowAttachmentStabilizer : ABowAttachmentSilencer {
	float _shakinessModifier; // 0x9e0(0x04)
	char pad_9E4[0xc]; // 0x9e4(0x0c)
};

// Class ConZ.MeleeSkill
// Size: 0x108 (Inherited: 0xb0)
struct UMeleeSkill : UStrengthSkill {
	struct UMeleeSkillAnimationsPreset* AnimationsPreset; // 0xb0(0x08)
	struct FMeleeSkillExperienceAwards _noSkillExperienceAwards; // 0xb8(0x10)
	struct FMeleeSkillExperienceAwards _basicSkillExperienceAwards; // 0xc8(0x10)
	struct FMeleeSkillExperienceAwards _mediumSkillExperienceAwards; // 0xd8(0x10)
	struct FMeleeSkillExperienceAwards _advancedSkillExperienceAwards; // 0xe8(0x10)
	struct FMeleeSkillExperienceAwards _aboveAdvancedSkillExperienceAwards; // 0xf8(0x10)

	struct UAnimSequenceBase* GetWalkingIdleAnimationTP(); // Function ConZ.MeleeSkill.GetWalkingIdleAnimationTP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242eae0
	struct UAnimSequenceBase* GetWalkingIdleAnimationFP(); // Function ConZ.MeleeSkill.GetWalkingIdleAnimationFP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242eab0
	struct UAnimSequenceBase* GetTiredIdleAnimationTP(); // Function ConZ.MeleeSkill.GetTiredIdleAnimationTP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242ea80
	struct UAnimSequenceBase* GetTiredIdleAnimationFP(); // Function ConZ.MeleeSkill.GetTiredIdleAnimationFP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242ea50
	float GetStaminaMultiplier(float excessGearWeight); // Function ConZ.MeleeSkill.GetStaminaMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e9b0
	struct UAnimSequenceBase* GetPrimaryIdleAnimationTP(); // Function ConZ.MeleeSkill.GetPrimaryIdleAnimationTP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e980
	struct UAnimSequenceBase* GetPrimaryIdleAnimationFP(); // Function ConZ.MeleeSkill.GetPrimaryIdleAnimationFP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e950
	struct UAnimMontage* GetLeaveCombatModeMontage(); // Function ConZ.MeleeSkill.GetLeaveCombatModeMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e920
	struct TArray<struct UAnimSequenceBase*> GetInactivityIdleAnimations(); // Function ConZ.MeleeSkill.GetInactivityIdleAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e8e0
	float GetIdleToBlockBlendDuration(); // Function ConZ.MeleeSkill.GetIdleToBlockBlendDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e8b0
	struct UAnimMontage* GetEnterCombatModeMontage(); // Function ConZ.MeleeSkill.GetEnterCombatModeMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e880
	float GetBlockToIdleBlendDuration(); // Function ConZ.MeleeSkill.GetBlockToIdleBlendDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e850
	struct UAnimSequenceBase* GetBlockIdleAnimationTP(); // Function ConZ.MeleeSkill.GetBlockIdleAnimationTP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e820
	struct UAnimSequenceBase* GetBlockIdleAnimationFP(); // Function ConZ.MeleeSkill.GetBlockIdleAnimationFP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e7f0
	struct UBlendSpace* GetAimOffsetBlendSpaceTP(); // Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceTP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e7c0
	struct UBlendSpace* GetAimOffsetBlendSpaceFP(); // Function ConZ.MeleeSkill.GetAimOffsetBlendSpaceFP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242e790
};

// Class ConZ.BoxingSkill
// Size: 0x108 (Inherited: 0x108)
struct UBoxingSkill : UMeleeSkill {
};

// Class ConZ.TriggerComponent
// Size: 0x4e0 (Inherited: 0x460)
struct UTriggerComponent : UPrimitiveComponent {
	char pad_460[0x70]; // 0x460(0x70)
	struct FObjectConditionContainer _triggeringActorConditions; // 0x4d0(0x10)
};

// Class ConZ.MotionTriggerComponent
// Size: 0x530 (Inherited: 0x4e0)
struct UMotionTriggerComponent : UTriggerComponent {
	struct FVector TriggerForwardVector; // 0x4e0(0x0c)
	float TriggerAngle; // 0x4ec(0x04)
	float MotionDetectionSensitivity; // 0x4f0(0x04)
	float MotionDetectionDepletionSpeed; // 0x4f4(0x04)
	float _motionDetector; // 0x4f8(0x04)
	char pad_4FC[0x4]; // 0x4fc(0x04)
	struct UAkAudioEvent* _motionDetectorStartSound; // 0x500(0x08)
	struct UAkAudioEvent* _motionDetectorEndSound; // 0x508(0x08)
	char pad_510[0x20]; // 0x510(0x20)
};

// Class ConZ.BoxMotionTriggerComponent
// Size: 0x540 (Inherited: 0x530)
struct UBoxMotionTriggerComponent : UMotionTriggerComponent {
	struct UBoxComponent* BoxCollisionComponent; // 0x528(0x08)
	struct FVector _triggerSize; // 0x530(0x0c)

	void BoxComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentEndOverlap // (Final|Native|Private) // @ game+0x23642f0
	void BoxComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.BoxMotionTriggerComponent.BoxComponent_OnComponentBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x23640c0
};

// Class ConZ.Brenner
// Size: 0x960 (Inherited: 0x830)
struct ABrenner : AConZCharacter {
	char pad_830[0x40]; // 0x830(0x40)
	struct UNavigationInvokerComponent* _navigationInvokerComponent; // 0x870(0x08)
	struct UHitReactComponent* _hitReactComponent; // 0x878(0x08)
	struct UFlamethrowerComponent* _flamethrowerComponent; // 0x880(0x08)
	struct UBrennerCommonData* _brennerCommonData; // 0x888(0x08)
	char pad_890[0x88]; // 0x890(0x88)
	enum class EBrennerState _state; // 0x918(0x01)
	char pad_919[0x1]; // 0x919(0x01)
	bool _aimFlamethrower; // 0x91a(0x01)
	char pad_91B[0x1]; // 0x91b(0x01)
	struct TWeakObjectPtr<struct AActor> _flamethrowerTarget; // 0x91c(0x08)
	char pad_924[0x3c]; // 0x924(0x3c)

	void OnRep_State(enum class EBrennerState oldState); // Function ConZ.Brenner.OnRep_State // (Final|Native|Private) // @ game+0x23647d0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.Brenner.OnMontageEnded // (Final|Native|Private) // @ game+0x23646c0
	void NetMulticast_StopAttack(enum class EBrennerAttackType AttackType); // Function ConZ.Brenner.NetMulticast_StopAttack // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bba0
	void NetMulticast_StopAnimation(enum class EBrennerAnimation Animation); // Function ConZ.Brenner.NetMulticast_StopAnimation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2364640
	void NetMulticast_StartBleeding(); // Function ConZ.Brenner.NetMulticast_StartBleeding // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bb80
	void NetMulticast_StartAttack(struct FBrennerAttackDescription attackDescription); // Function ConZ.Brenner.NetMulticast_StartAttack // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2364590
	void NetMulticast_PlayHitReact(enum class EHitDirectionType hitDirectionType); // Function ConZ.Brenner.NetMulticast_PlayHitReact // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x234bca0
	void NetMulticast_PlayAnimation(enum class EBrennerAnimation Animation); // Function ConZ.Brenner.NetMulticast_PlayAnimation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2364510
	struct FVector GetFlamethrowerAimLocation(); // Function ConZ.Brenner.GetFlamethrowerAimLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2364480
};

// Class ConZ.BrennerAIController
// Size: 0x5d0 (Inherited: 0x450)
struct ABrennerAIController : AConZAIController {
	struct UAISenseConfig_Sight* _sightSenseConfigCombat; // 0x450(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigCombat; // 0x458(0x08)
	struct UAISenseConfig_Touch* _touchSenseConfig; // 0x460(0x08)
	struct TMap<struct FName, float> _noiseAccumulationMultiplierPerNoiseTag; // 0x468(0x50)
	struct FVector _hibernateLocation; // 0x4b8(0x0c)
	float _genericAcceptanceRadius; // 0x4c4(0x04)
	char pad_4C8[0x8]; // 0x4c8(0x08)
	struct UNPCControllerStateBrennerBase* _statesByEnum[0xa]; // 0x4d0(0x50)
	char pad_520[0xb0]; // 0x520(0xb0)

	void SensingComponent_OnActorSensed(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.BrennerAIController.SensingComponent_OnActorSensed // (Final|Native|Private|HasOutParms) // @ game+0x23681a0
};

// Class ConZ.BrennerAnimInstance
// Size: 0x300 (Inherited: 0x2c0)
struct UBrennerAnimInstance : UAnimInstance {
	char pad_2C0[0x8]; // 0x2c0(0x08)
	enum class EBrennerState _brennerState; // 0x2c8(0x01)
	enum class EBrennerMovementPace _desiredMovementPace; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	struct FVector _acceleration; // 0x2cc(0x0c)
	bool _wantsToMove; // 0x2d8(0x01)
	bool _wantsToWalk; // 0x2d9(0x01)
	bool _wantsToJog; // 0x2da(0x01)
	bool _wantsToCharge; // 0x2db(0x01)
	struct FVector _velocity; // 0x2dc(0x0c)
	float _speed; // 0x2e8(0x04)
	float _speedXY; // 0x2ec(0x04)
	bool _isUsingFlamethrower; // 0x2f0(0x01)
	bool _isAimingFlamethrower; // 0x2f1(0x01)
	char pad_2F2[0x2]; // 0x2f2(0x02)
	struct FVector _flamethrowerAimLocation; // 0x2f4(0x0c)
};

// Class ConZ.BrennerCommonData
// Size: 0x160 (Inherited: 0x30)
struct UBrennerCommonData : UDataAsset {
	float AlertedSoundThreshold; // 0x30(0x04)
	float TwitchSoundThreshold; // 0x34(0x04)
	struct FFloatInterval SightAndAwarenessRange; // 0x38(0x08)
	float TwitchCooldown; // 0x40(0x04)
	float HopForwardSpeed; // 0x44(0x04)
	float PostHopCooldown; // 0x48(0x04)
	float InvestigateAlarmDuration; // 0x4c(0x04)
	struct FFloatInterval FlamethrowerRange; // 0x50(0x08)
	float HalfAngleAtMinRange; // 0x58(0x04)
	float HalfAngleAtMaxRange; // 0x5c(0x04)
	struct UAnimMontage* _animationsForEvents[0x6]; // 0x60(0x30)
	struct TArray<struct UAnimMontage*> FrontAttacks; // 0x90(0x10)
	struct TArray<struct UAnimMontage*> BackAttacks; // 0xa0(0x10)
	struct TArray<struct UAnimMontage*> LegAttacks; // 0xb0(0x10)
	struct TArray<struct UAnimMontage*> AllAroundAttacks; // 0xc0(0x10)
	struct TArray<struct UAnimMontage*> ChargeAttacks; // 0xd0(0x10)
	struct FName HeadBoneName; // 0xe0(0x08)
	struct FGameplayTag HitReactTypeStanding; // 0xe8(0x08)
	float HeadShotDamageHitReactThreshold; // 0xf0(0x04)
	float AccumulatedDamageHitReactThreshold; // 0xf4(0x04)
	float BleedingChance; // 0xf8(0x04)
	float BleedingCooldown; // 0xfc(0x04)
	int32_t NumBleedsToEnterLongCooldown; // 0x100(0x04)
	float BleedingLongCooldown; // 0x104(0x04)
	float BleedingDuration; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct TArray<struct FBrennerCommonData_BleedingParticles> BleedingParticles; // 0x110(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> PossibleBloodStains; // 0x120(0x10)
	float BloodStainsOffsetAlongHitNormal; // 0x130(0x04)
	float DamageThresholdForRageMode; // 0x134(0x04)
	float DamageDepletionRate; // 0x138(0x04)
	float RageModeDuration; // 0x13c(0x04)
	struct UAkAudioEvent* HibernateAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* AlertedAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* CombatAudioEvent; // 0x150(0x08)
	struct UAkAudioEvent* ChargeAudioEvent; // 0x158(0x08)
};

// Class ConZ.BrennerMovementComponent
// Size: 0xdc0 (Inherited: 0xda0)
struct UBrennerMovementComponent : UConZCharacterMovementComponent {
	float _speedForPace[0x3]; // 0xda0(0x0c)
	float _accelerationForPace[0x3]; // 0xdac(0x0c)
	char pad_DB8[0x8]; // 0xdb8(0x08)
};

// Class ConZ.BrokenArrow
// Size: 0x9b0 (Inherited: 0x9b0)
struct ABrokenArrow : AItem {
};

// Class ConZ.BruisingComponent
// Size: 0x128 (Inherited: 0xb0)
struct UBruisingComponent : UActorComponent {
	struct UBruisingData* BruisingData; // 0xb0(0x08)
	bool FadeBruises; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float BruisesLifeTime; // 0xbc(0x04)
	float BruisesFadeUpdateInterval; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UTextureRenderTarget2D* _renderTargetByLayer[0x3]; // 0xc8(0x18)
	char pad_E0[0x48]; // 0xe0(0x48)

	void MakeCompletelyBruised(); // Function ConZ.BruisingComponent.MakeCompletelyBruised // (Final|Native|Public|BlueprintCallable) // @ game+0x2368030
	struct UTextureRenderTarget2D* GetBruiseLayerRenderTarget(enum class EBruiseLayer Layer); // Function ConZ.BruisingComponent.GetBruiseLayerRenderTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2367fa0
	void ClearBruises(); // Function ConZ.BruisingComponent.ClearBruises // (Final|Native|Public|BlueprintCallable) // @ game+0x2367f80
	void AddBruise(enum class EBruiseZone zone); // Function ConZ.BruisingComponent.AddBruise // (Final|Native|Public|BlueprintCallable) // @ game+0x2367f00
};

// Class ConZ.BruisingData
// Size: 0x40 (Inherited: 0x30)
struct UBruisingData : UDataAsset {
	struct TArray<struct FBruisePatch> Patches; // 0x30(0x10)
};

// Class ConZ.BuildingHelperComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UBuildingHelperComponent : UActorComponent {
};

// Class ConZ.Building
// Size: 0x4c8 (Inherited: 0x220)
struct ABuilding : AActor {
	char pad_220[0x20]; // 0x220(0x20)
	struct TArray<struct FLadderMarker> _ladderMarkers; // 0x240(0x10)
	char pad_250[0x10]; // 0x250(0x10)
	struct TArray<struct FWindowMarker> _windowMarkers; // 0x260(0x10)
	char pad_270[0xa0]; // 0x270(0xa0)
	bool _isClaimable; // 0x310(0x01)
	char pad_311[0xb7]; // 0x311(0xb7)
	struct TMap<int32_t, struct FBuildingNavLinkData> _generatedNavLinkDataByWindowIndex; // 0x3c8(0x50)
	struct TMap<struct FString, struct FBuildingNavLinkData> _generatedNavLinkDataByDoorRuntimeId; // 0x418(0x50)
	struct UNavArea* _doorNavArea; // 0x468(0x08)
	struct UNavArea* _windowNavArea; // 0x470(0x08)
	char pad_478[0x50]; // 0x478(0x50)
};

// Class ConZ.BuildingEntitySave
// Size: 0x30 (Inherited: 0x28)
struct UBuildingEntitySave : UObject {
	struct FBuildingEntityData BuildingData; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class ConZ.BuildingEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UBuildingEntitySetup : UEntitySetup {
};

// Class ConZ.BuildingInterior
// Size: 0x220 (Inherited: 0x220)
struct ABuildingInterior : AActor {
};

// Class ConZ.BuildingManager
// Size: 0x3a8 (Inherited: 0x220)
struct ABuildingManager : AActor {
	char pad_220[0x48]; // 0x220(0x48)
	struct TMap<struct ABuilding*, struct FBox2D> _buildings; // 0x268(0x50)
	char pad_2B8[0x8]; // 0x2b8(0x08)
	struct FBuildingsReplicationHelper _buildingsDataRepHelper; // 0x2c0(0x70)
	char pad_330[0x78]; // 0x330(0x78)

	void NetMulticast_UpdateBuildingData(int32_t dataVersion, struct FString runtimeId, struct FBuildingData BuildingData); // Function ConZ.BuildingManager.NetMulticast_UpdateBuildingData // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2368050
};

// Class ConZ.BunkerBoundsTagActor
// Size: 0x238 (Inherited: 0x220)
struct ABunkerBoundsTagActor : AActor {
	struct FName _bunkerId; // 0x220(0x08)
	struct UBoxComponent* _bounds; // 0x228(0x08)
	bool _tagAsSentryLocation; // 0x230(0x01)
	bool _tagAsNormalBunker; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
};

// Class ConZ.Buriable
// Size: 0x28 (Inherited: 0x28)
struct UBuriable : UInterface {
};

// Class ConZ.ItemComponentStateBase
// Size: 0x40 (Inherited: 0x28)
struct UItemComponentStateBase : UObject {
	struct FDbIntegerId ID; // 0x28(0x08)
	struct FString ComponentName; // 0x30(0x10)
};

// Class ConZ.BuriableItemComponentState
// Size: 0x50 (Inherited: 0x40)
struct UBuriableItemComponentState : UItemComponentStateBase {
	bool IsBuried; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FDbIntegerId BurierUserId; // 0x48(0x08)
};

// Class ConZ.BuriableChestItemComponentState
// Size: 0x58 (Inherited: 0x50)
struct UBuriableChestItemComponentState : UBuriableItemComponentState {
	float StoredAutoDestructTime; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class ConZ.BuriableItemComponent
// Size: 0x180 (Inherited: 0xc8)
struct UBuriableItemComponent : UItemComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	bool _canEverShowMarker; // 0xd0(0x01)
	char pad_D1[0x10]; // 0xd1(0x10)
	bool _canBeBuried; // 0xe1(0x01)
	bool _canBeBuriedInEnemyFlagArea; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct FBurialInformation _repBurialInformation; // 0xe8(0x18)
	char pad_100[0x8]; // 0x100(0x08)
	struct UStaticMesh* _buriedMesh; // 0x108(0x08)
	struct FVector _buriedMeshScale; // 0x110(0x0c)
	struct FVector _buriedMeshRelativeLocation; // 0x11c(0x0c)
	char pad_128[0x10]; // 0x128(0x10)
	struct UMaterialBillboardComponent* _spriteMarkerBillboard; // 0x138(0x08)
	struct FMaterialSpriteElement _spriteMarkerData; // 0x140(0x28)
	struct FVector _spriteMarkerRelativeLocation; // 0x168(0x0c)
	bool _applyBuryMaterial; // 0x174(0x01)
	char pad_175[0x3]; // 0x175(0x03)
	float _startMeshFadeDistance; // 0x178(0x04)
	float _endMeshFadeDistance; // 0x17c(0x04)

	void OnRep_UpdateBurialInformation(); // Function ConZ.BuriableItemComponent.OnRep_UpdateBurialInformation // (Final|Native|Private) // @ game+0x2368180
};

// Class ConZ.BuriableChestItemComponent
// Size: 0x190 (Inherited: 0x180)
struct UBuriableChestItemComponent : UBuriableItemComponent {
	int64_t _decayInDaysWhenBuried; // 0x180(0x08)
	char pad_188[0x8]; // 0x188(0x08)
};

// Class ConZ.BuriableTrapItemComponent
// Size: 0x180 (Inherited: 0x180)
struct UBuriableTrapItemComponent : UBuriableItemComponent {
};

// Class ConZ.BurnDamageType
// Size: 0x40 (Inherited: 0x40)
struct UBurnDamageType : UDamageType {
};

// Class ConZ.BuryData
// Size: 0x88 (Inherited: 0x30)
struct UBuryData : UDataAsset {
	struct TMap<enum class EPhysicalSurface, struct FBuryMaterialData> AllowedBuryMaterials; // 0x30(0x50)
	float StaminaDrain; // 0x80(0x04)
	float RecoveredStaminaThreshold; // 0x84(0x04)
};

// Class ConZ.BuryToolItemTag
// Size: 0x60 (Inherited: 0x30)
struct UBuryToolItemTag : UBaseItemTag {
	bool IsSmallSizedTool; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	int32_t BuryItemUsage; // 0x34(0x04)
	float BuryDurationModifier; // 0x38(0x04)
	struct FName BladeTipSocket; // 0x3c(0x08)
	struct FName BladeCenterSocket; // 0x44(0x08)
	float ShortToolMinBuryTime; // 0x4c(0x04)
	float ShortToolMaxBuryTime; // 0x50(0x04)
	float LongToolMinBuryTime; // 0x54(0x04)
	float LongToolMaxBuryTime; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class ConZ.C4PartTag
// Size: 0x30 (Inherited: 0x30)
struct UC4PartTag : UBaseItemTag {
};

// Class ConZ.CamouflageSkill
// Size: 0x258 (Inherited: 0xb0)
struct UCamouflageSkill : UIntelligenceSkill {
	float _activationTime; // 0xb0(0x04)
	float _standingPenalty; // 0xb4(0x04)
	float _crouchingPenalty; // 0xb8(0x04)
	float _pronePenalty; // 0xbc(0x04)
	float _slowMovingStandingPenalty; // 0xc0(0x04)
	float _slowMovingCrouchingPenalty; // 0xc4(0x04)
	float _slowMovingPronePenalty; // 0xc8(0x04)
	float _mediumMovingStandingPenalty; // 0xcc(0x04)
	float _mediumMovingCrouchingPenalty; // 0xd0(0x04)
	float _fastMovingStandingPenalty; // 0xd4(0x04)
	float _standingAIPerceptionMultiplier; // 0xd8(0x04)
	float _crouchingAIPerceptionMultiplier; // 0xdc(0x04)
	float _proneAIPerceptionMultiplier; // 0xe0(0x04)
	float _maxRelevantAIPerceptionRadius; // 0xe4(0x04)
	char pad_E8[0x6c]; // 0xe8(0x6c)
	struct FCamouflageSkillExperienceAwards NoSkillExperienceAwards; // 0x154(0x04)
	struct FCamouflageSkillExperienceAwards BasicSkillExperienceAwards; // 0x158(0x04)
	struct FCamouflageSkillExperienceAwards MediumSkillExperienceAwards; // 0x15c(0x04)
	struct FCamouflageSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x160(0x04)
	struct FCamouflageSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x164(0x04)
	struct FCamouflageSkillParametersPerSkillLevel NoSkillParameters; // 0x168(0x30)
	struct FCamouflageSkillParametersPerSkillLevel BasicSkillParameters; // 0x198(0x30)
	struct FCamouflageSkillParametersPerSkillLevel MediumSkillParameters; // 0x1c8(0x30)
	struct FCamouflageSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x1f8(0x30)
	struct FCamouflageSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x228(0x30)

	float GetHidePenaltyForCharacter(struct AConZCharacter* Character); // Function ConZ.CamouflageSkill.GetHidePenaltyForCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x236c400
};

// Class ConZ.CargoDropContainer
// Size: 0x318 (Inherited: 0x220)
struct ACargoDropContainer : AActor {
	float DelayDuration; // 0x220(0x04)
	float FallDuration; // 0x224(0x04)
	float DetonationTime; // 0x228(0x04)
	float DetonationCountdown; // 0x22c(0x04)
	struct UAkAudioEvent* LandSound; // 0x230(0x08)
	struct UAkAudioEvent* WarningSound; // 0x238(0x08)
	struct UAkAudioEvent* DetonationSound; // 0x240(0x08)
	struct UParticleSystem* DetonationParticles; // 0x248(0x08)
	struct UMatineeCameraShake* CameraShakeClass; // 0x250(0x08)
	struct TArray<struct UItemSpawnerPreset*> MajorSpawnerOptions; // 0x258(0x10)
	struct TArray<struct UItemSpawnerPreset2*> MajorSpawnerPresetOptions; // 0x268(0x10)
	struct TArray<struct FCargoDropSpawnerPreset> MinorSpawnerOptions; // 0x278(0x10)
	struct UAkAudioEvent* UnlockLockersAudioEvent; // 0x288(0x08)
	struct UStaticMeshComponent* _parachuteMesh; // 0x290(0x08)
	struct UParticleSystemComponent* _flareParticles; // 0x298(0x08)
	struct UParticleSystemComponent* _dustParticles; // 0x2a0(0x08)
	struct UKillBoxTimerWidget* _timerWidget; // 0x2a8(0x08)
	struct UDiegeticLockState* _lockStateWidget; // 0x2b0(0x08)
	char pad_2B8[0x10]; // 0x2b8(0x10)
	struct FVector _endLocation; // 0x2c8(0x0c)
	struct FRotator _rotation; // 0x2d4(0x0c)
	bool _landed; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	float _fallingSpeed; // 0x2e4(0x04)
	int32_t _timeRemaining; // 0x2e8(0x04)
	bool _flareParticlesEnabled; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	struct TArray<struct UStaticMeshComponent*> _cargoLockers; // 0x2f0(0x10)
	char pad_300[0x18]; // 0x300(0x18)

	void SetTimerWidget(struct UKillBoxTimerWidget* timerWidget); // Function ConZ.CargoDropContainer.SetTimerWidget // (Final|Native|Private|BlueprintCallable) // @ game+0x236cde0
	void SetLockStateWidget(struct UDiegeticLockState* Value); // Function ConZ.CargoDropContainer.SetLockStateWidget // (Final|Native|Private|BlueprintCallable) // @ game+0x236cd50
	void OnWarning(); // Function ConZ.CargoDropContainer.OnWarning // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnTouchdown(); // Function ConZ.CargoDropContainer.OnTouchdown // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnRep_FlareParticlesEnabled(); // Function ConZ.CargoDropContainer.OnRep_FlareParticlesEnabled // (Final|Native|Private) // @ game+0x236c9c0
	void OnDetonate(); // Function ConZ.CargoDropContainer.OnDetonate // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void Multicast_StartDetonation(); // Function ConZ.CargoDropContainer.Multicast_StartDetonation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1537780
	void Multicast_Detonate(); // Function ConZ.CargoDropContainer.Multicast_Detonate // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x236c4d0
	void DropToLocation(struct FVector EndLocation, float fallingTime); // Function ConZ.CargoDropContainer.DropToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x236c320
	void AddCargoLocker(struct UStaticMeshComponent* cargoLocker); // Function ConZ.CargoDropContainer.AddCargoLocker // (Final|Native|Private|BlueprintCallable) // @ game+0x236c250
};

// Class ConZ.WorldEvent
// Size: 0x248 (Inherited: 0x220)
struct AWorldEvent : AActor {
	struct FVector Location; // 0x220(0x0c)
	float Radius; // 0x22c(0x04)
	struct UTexture* IconTexture; // 0x230(0x08)
	char pad_238[0x10]; // 0x238(0x10)

	void StartEvent(); // Function ConZ.WorldEvent.StartEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x2547470
};

// Class ConZ.CargoDropEvent
// Size: 0x390 (Inherited: 0x248)
struct ACargoDropEvent : AWorldEvent {
	struct TArray<struct ACargoDropContainer*> CargoDropClasses; // 0x248(0x10)
	char pad_258[0x58]; // 0x258(0x58)
	struct TMap<struct UEncounterBase*, struct FCargoDropEncounterData> _encounterClasses; // 0x2b0(0x50)
	struct FGameplayTag _zombieEncounterTag; // 0x300(0x08)
	struct FGameplayTag _dropshipEncounterTag; // 0x308(0x08)
	char pad_310[0x80]; // 0x310(0x80)

	void Multicast_DisplayNotification(struct FString SectorName, float FallDuration); // Function ConZ.CargoDropEvent.Multicast_DisplayNotification // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x236c4f0
};

// Class ConZ.Carousel
// Size: 0x1df8 (Inherited: 0x268)
struct UCarousel : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UTextBlock* _selectionDisplay; // 0x288(0x08)
	struct UButton* _leftArrow; // 0x290(0x08)
	struct UButton* _rightArrow; // 0x298(0x08)
	struct TArray<struct FText> _carouselValues; // 0x2a0(0x10)
	bool _canWrap; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)
	struct FCarouselStyle _selectedAndFocusedCarouselStyle; // 0x2b8(0x570)
	struct FCarouselStyle _selectedAndUnfocusedCarouselStyle; // 0x828(0x570)
	struct FCarouselStyle _unselectedCarouselStyle; // 0xd98(0x570)
	struct FCarouselStyle _highlightedCarouselStyle; // 0x1308(0x570)
	struct FCarouselStyle _disabledCarouselStyle; // 0x1878(0x570)
	bool _controlWithMouseWheel; // 0x1de8(0x01)
	bool _controlWithKeyboard; // 0x1de9(0x01)
	char pad_1DEA[0xe]; // 0x1dea(0x0e)

	void ClickRight(); // Function ConZ.Carousel.ClickRight // (Final|Native|Private) // @ game+0x236c300
	void ClickLeft(); // Function ConZ.Carousel.ClickLeft // (Final|Native|Private) // @ game+0x236c2e0
};

// Class ConZ.CarouselWithLabel
// Size: 0x2360 (Inherited: 0x1df8)
struct UCarouselWithLabel : UCarousel {
	char pad_1DF8[0x18]; // 0x1df8(0x18)
	struct UTextBlock* _name; // 0x1e10(0x08)
	struct UImage* _focusBackgroundImage; // 0x1e18(0x08)
	struct FText _label; // 0x1e20(0x18)
	struct FCarouselWithLabelStyle _selectedAndFocusedCWLStyle; // 0x1e38(0x108)
	struct FCarouselWithLabelStyle _selectedAndUnfocusedCWLStyle; // 0x1f40(0x108)
	struct FCarouselWithLabelStyle _unselectedCWLStyle; // 0x2048(0x108)
	struct FCarouselWithLabelStyle _highlightedCWLStyle; // 0x2150(0x108)
	struct FCarouselWithLabelStyle _disabledCWLStyle; // 0x2258(0x108)
};

// Class ConZ.CCGameUpgradeConditionDisplayWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UCCGameUpgradeConditionDisplayWidget : UUserWidget {
	struct UBorder* _border; // 0x268(0x08)
	struct UTextBlock* _text; // 0x270(0x08)
	struct TMap<enum class EDeluxeVersion, struct FText> _requirementTextPerGameUpgrade; // 0x278(0x50)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class ConZ.TabMenuPanel
// Size: 0x268 (Inherited: 0x268)
struct UTabMenuPanel : UUserWidget {
};

// Class ConZ.CentralBuildingPanel
// Size: 0x270 (Inherited: 0x268)
struct UCentralBuildingPanel : UTabMenuPanel {
	struct UPlacedPlaceableWidget* _placedPlaceableWidget; // 0x268(0x08)
};

// Class ConZ.WeaponItem
// Size: 0x9b0 (Inherited: 0x9b0)
struct AWeaponItem : AItem {
	uint32_t MaxRange; // 0x9a8(0x04)
	uint32_t ROF; // 0x9ac(0x04)
};

// Class ConZ.Chainsaw
// Size: 0x1e20 (Inherited: 0x9b0)
struct AChainsaw : AWeaponItem {
	char pad_9B0[0x8]; // 0x9b0(0x08)
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9b8(0x08)
	struct FCharacterAndItemAnimation AnimationsStartEngine; // 0x9c0(0x10)
	struct FCharacterAndItemAnimation AnimationsCheckFuelStatus; // 0x9d0(0x10)
	struct UBaseItemTag* ChoppingToolItemTag; // 0x9e0(0x08)
	struct UAkAudioEvent* TurnOnAudioEvent; // 0x9e8(0x08)
	struct UAkAudioEvent* TurnOffAudioEvent; // 0x9f0(0x08)
	struct UGameResourceType* _fuelType; // 0x9f8(0x08)
	struct FGameplayTagContainer _inFuelingSocketTypes; // 0xa00(0x20)
	float _maxFuelAmount; // 0xa20(0x04)
	float _initialFuelAmount; // 0xa24(0x04)
	float _fuelUsagePerHour; // 0xa28(0x04)
	float _fuelUsagePerHourMultiplierWhenActive; // 0xa2c(0x04)
	float _fuelFillingDurationPerAmountFilled; // 0xa30(0x04)
	float _fuelFillingExperiencePerAmount; // 0xa34(0x04)
	struct UAnimMontage* _fuelFillingMontage; // 0xa38(0x08)
	struct UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOff; // 0xa40(0x08)
	struct UMeleeSkillAnimationsPreset* _meleeSkillAnimationsPresetWhenTurnedOn; // 0xa48(0x08)
	struct UAkAudioEvent* _fuelStartFillingAudioEvent; // 0xa50(0x08)
	struct UAkAudioEvent* _fuelStopFillingAudioEvent; // 0xa58(0x08)
	float _noiseLoudnessWhileStarting; // 0xa60(0x04)
	float _noiseLoudnessWhileRunning; // 0xa64(0x04)
	float _noiseLoudnessUpdateFrequencyPerHour; // 0xa68(0x04)
	float _currentFuelAmount; // 0xa6c(0x04)
	bool _turnedOn; // 0xa70(0x01)
	char pad_A71[0x13af]; // 0xa71(0x13af)

	void SetUseFuelUsagePerHourMultiplierWhenActive(bool Value); // Function ConZ.Chainsaw.SetUseFuelUsagePerHourMultiplierWhenActive // (Final|Native|Public|BlueprintCallable) // @ game+0x236ce70
	void Server_SetUseFuelUsagePerHourMultiplierWhenActive(bool Value); // Function ConZ.Chainsaw.Server_SetUseFuelUsagePerHourMultiplierWhenActive // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x236ccc0
	void Server_SetTurnedOn(bool Value); // Function ConZ.Chainsaw.Server_SetTurnedOn // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x236cc30
	void OnRep_TurnedOn(bool oldValue); // Function ConZ.Chainsaw.OnRep_TurnedOn // (Final|Native|Private) // @ game+0x236c9e0
	bool GetUseFuelUsagePerHourMultiplierWhenActive(); // Function ConZ.Chainsaw.GetUseFuelUsagePerHourMultiplierWhenActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x236c4a0
};

// Class ConZ.ChainsawAnimInstance
// Size: 0x2e0 (Inherited: 0x2d0)
struct UChainsawAnimInstance : UItemAnimInstance {
	bool _isTurnedOn; // 0x2d0(0x01)
	char pad_2D1[0xf]; // 0x2d1(0x0f)
};

// Class ConZ.Weapon
// Size: 0x3010 (Inherited: 0x9b0)
struct AWeapon : AWeaponItem {
	struct FMulticastInlineDelegate AttachmentAdded; // 0x9b0(0x10)
	struct FMulticastInlineDelegate AttachmentRemoved; // 0x9c0(0x10)
	char pad_9D0[0x48]; // 0x9d0(0x48)
	struct USkeletalMeshComponent* SkeletalMesh; // 0xa18(0x08)
	enum class EWeaponFiringStateType WeaponFiringStateType; // 0xa20(0x01)
	char pad_A21[0x7]; // 0xa21(0x07)
	struct UWeaponStateFiring* TempWeaponStateFiringAutomatic; // 0xa28(0x08)
	struct UWeaponStateFiring* TempWeaponStateFiringSemiAutomatic; // 0xa30(0x08)
	struct UWeaponStateFiring* TempWeaponStateFiringManual; // 0xa38(0x08)
	struct UWeaponStateFiring* TempWeaponStateFiringBurst; // 0xa40(0x08)
	struct UWeaponStateActiveManualFiring* TempWeaponStateActiveManualFiring; // 0xa48(0x08)
	struct UWeaponStateFiring* FiringState; // 0xa50(0x08)
	struct TArray<enum class EWeaponFiringMode> SupportedFiringModes; // 0xa58(0x10)
	struct TArray<struct UStaticMeshComponent*> CartridgeMeshComponents; // 0xa68(0x10)
	struct TArray<struct UWeaponActionReloadSequence*> ReloadActionSequenceClasses; // 0xa78(0x10)
	struct TArray<struct UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequenceClasses; // 0xa88(0x10)
	struct TArray<struct UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequenceClasses; // 0xa98(0x10)
	struct TArray<struct UWeaponActionReloadSequence*> ReloadActionSequences; // 0xaa8(0x10)
	struct TArray<struct UWeaponActionClearMalfunctionSequence*> ClearMalfunctionActionSequences; // 0xab8(0x10)
	struct TArray<struct UWeaponActionUnloadAmmoSequence*> UnloadAmmoActionSequences; // 0xac8(0x10)
	struct TArray<struct UWeaponActionCheckAmmoSequence*> CheckAmmoActionSequences; // 0xad8(0x10)
	struct FGameplayTagContainer AmmunitionTags; // 0xae8(0x20)
	struct AAmmunitionItem* DefaultAmmunitionItemClass; // 0xb08(0x08)
	int32_t RequiredAmmoForShot; // 0xb10(0x04)
	int32_t MaxLoadedAmmo; // 0xb14(0x04)
	int32_t EventMaxAmmo; // 0xb18(0x04)
	int32_t InitialAmmo; // 0xb1c(0x04)
	int32_t InternalMagazineCapacity; // 0xb20(0x04)
	bool UseChamberAsInternalMagazine; // 0xb24(0x01)
	char pad_B25[0x3]; // 0xb25(0x03)
	int32_t BurstShotsCount; // 0xb28(0x04)
	bool IgnoreProceduralDownTheSightFiringAnimation; // 0xb2c(0x01)
	char pad_B2D[0x3]; // 0xb2d(0x03)
	struct UAnimMontage* FireAnimation; // 0xb30(0x08)
	struct UAnimMontage* FireAnimationLastRound; // 0xb38(0x08)
	struct UAnimMontage* FireAnimationBody; // 0xb40(0x08)
	struct UAnimMontage* FirstPersonFireAnimationBody; // 0xb48(0x08)
	struct UAnimMontage* FireAutomaticAnimationBody; // 0xb50(0x08)
	struct FBodyWeaponAnimation BodyWeaponAnimationChamber; // 0xb58(0x10)
	struct UAnimMontage* CheckFiringModeAnimationBody; // 0xb68(0x08)
	struct UAnimMontage* ChangeFiringModeAnimationBody; // 0xb70(0x08)
	struct TMap<struct AWeaponAttachment*, struct FWeaponAttachmentAnimations> AttachmentsAnimations; // 0xb78(0x50)
	struct FName MuzzleSocketName; // 0xbc8(0x08)
	struct FName GripCorrectionSocketName; // 0xbd0(0x08)
	struct FName AimingDownTheSightsCenterSocketName; // 0xbd8(0x08)
	struct FName EjectCasingSocketName; // 0xbe0(0x08)
	bool IgnoreSupportingHandIK; // 0xbe8(0x01)
	char pad_BE9[0x3]; // 0xbe9(0x03)
	struct FName SupportingHandIKSocketName; // 0xbec(0x08)
	struct FVector SupportingHandIKLocation; // 0xbf4(0x0c)
	struct FVector AimingDownTheSightsLocationOffset; // 0xc00(0x0c)
	char pad_C0C[0x4]; // 0xc0c(0x04)
	struct FTransform HolsteredOnPrisonerLeftOffset; // 0xc10(0x30)
	struct FTransform HolsteredOnPrisonerRightOffset; // 0xc40(0x30)
	bool UseWeaponFOVWhileScoping; // 0xc70(0x01)
	char pad_C71[0x3]; // 0xc71(0x03)
	float WeaponFOVWhileScoping; // 0xc74(0x04)
	struct FVector WeaponCameraOffsetWhileScoping; // 0xc78(0x0c)
	char pad_C84[0x4]; // 0xc84(0x04)
	struct FRuntimeFloatCurve OffsetPerAspectRatioWhileScoping; // 0xc88(0x88)
	bool IgnoreZeroRangeChange; // 0xd10(0x01)
	char pad_D11[0x3]; // 0xd11(0x03)
	int32_t ZeroRange; // 0xd14(0x04)
	int32_t ZeroRangeStep; // 0xd18(0x04)
	int32_t ZeroRangeMax; // 0xd1c(0x04)
	struct UProjectileImpactEffects* InstantHitImpactEffects; // 0xd20(0x08)
	float FieldOfView; // 0xd28(0x04)
	float DepthOfFieldFocalDistance; // 0xd2c(0x04)
	float DepthOfFieldFstop; // 0xd30(0x04)
	float ObstaclesDetectionOffset; // 0xd34(0x04)
	bool UseFiringModeBoneRotation; // 0xd38(0x01)
	char pad_D39[0x3]; // 0xd39(0x03)
	struct FRotator FiringModeBoneRotations[0x3]; // 0xd3c(0x24)
	struct FPostProcessSettings PostProcessSettings; // 0xd60(0x560)
	struct UAnimSequenceBase* RelaxedGripCorrectionAnimationPose[0x3]; // 0x12c0(0x18)
	struct UAnimSequenceBase* AimingHipAnimationPose[0x3]; // 0x12d8(0x18)
	struct UAnimSequenceBase* AimingDownTheSightsAnimationPose[0x3]; // 0x12f0(0x18)
	struct UAnimSequenceBase* AimingDownTheSightsStillAnimationPose[0x3]; // 0x1308(0x18)
	struct UAnimSequenceBase* AimingDownTheSightsWalkingAnimationPose[0x3]; // 0x1320(0x18)
	struct UAnimSequenceBase* AimingDownTheSightsLimpingWalkingAnimationPose[0x3]; // 0x1338(0x18)
	struct UBlendSpace* WeaponAimOffsets[0x7]; // 0x1350(0x38)
	struct UBlendSpace1D* AimingDownTheSightsZeroRangeBlendSpace; // 0x1388(0x08)
	enum class EWeaponCategory WeaponCategory; // 0x1390(0x01)
	bool IgnoreAimingSpread; // 0x1391(0x01)
	bool UseCustomWeaponSpreadData; // 0x1392(0x01)
	char pad_1393[0x1]; // 0x1393(0x01)
	struct FWeaponSpreadData WeaponSpreadData; // 0x1394(0x34)
	bool UseCustomWeaponViewKickData; // 0x13c8(0x01)
	char pad_13C9[0x3]; // 0x13c9(0x03)
	struct FWeaponViewKickData WeaponViewKickData; // 0x13cc(0x18)
	float ViewKickMultiplier; // 0x13e4(0x04)
	float MaxRecoilOffset; // 0x13e8(0x04)
	float RecoilRecoverySpeed; // 0x13ec(0x04)
	float MuzzleEffectsScaleDistanceStart; // 0x13f0(0x04)
	float MuzzleEffectsScaleDistanceRange; // 0x13f4(0x04)
	float MuzzleEffectsScaleByDistanceFactor; // 0x13f8(0x04)
	float ChamberBulletDelay; // 0x13fc(0x04)
	bool ChamberBulletAutomatically; // 0x1400(0x01)
	bool ChamberBulletWhenMagazineIsAttached; // 0x1401(0x01)
	char pad_1402[0x2]; // 0x1402(0x02)
	float DamagePerShot; // 0x1404(0x04)
	bool TestWeapon; // 0x1408(0x01)
	char pad_1409[0x7]; // 0x1409(0x07)
	struct TArray<struct FFireAnimationData> WornOutFiringAnimations; // 0x1410(0x10)
	bool CanBeInspectedWhenMalfunctioned; // 0x1420(0x01)
	char pad_1421[0x7]; // 0x1421(0x07)
	struct UAnimMontage* InspectModeAnimation; // 0x1428(0x08)
	bool UseCustomMalfunctionChances; // 0x1430(0x01)
	char pad_1431[0x3]; // 0x1431(0x03)
	struct FWeaponMalfunctionChances MalfunctionChances; // 0x1434(0x38)
	struct FName StovePipeSocketName; // 0x146c(0x08)
	char pad_1474[0x4]; // 0x1474(0x04)
	struct UStaticMesh* StovePipeMesh; // 0x1478(0x08)
	struct FName DoubleFeedSocketName; // 0x1480(0x08)
	struct UStaticMesh* DoubleFeedMesh; // 0x1488(0x08)
	bool ShouldClearInspectModeWhenClearingMalfunction; // 0x1490(0x01)
	char pad_1491[0x7]; // 0x1491(0x07)
	struct TArray<struct UWeaponActionClearMalfunctionSequence*> ClearMalfunctionSequenceClasses; // 0x1498(0x10)
	struct TMap<enum class EWeaponMalfunction, struct FWeaponMalfunctionData> MalfunctionsData; // 0x14a8(0x50)
	float DTSModeLerpDurationIn; // 0x14f8(0x04)
	float DTSModeLerpDurationOut; // 0x14fc(0x04)
	struct UCurveFloat* DownTheSightsModeLerpCurveOverride; // 0x1500(0x08)
	struct UWeaponState* _currentState; // 0x1508(0x08)
	struct UWeaponState* _activeState; // 0x1510(0x08)
	struct UWeaponStateEquipping* _equippingState; // 0x1518(0x08)
	struct UWeaponState* _unequippingStateDefault; // 0x1520(0x08)
	struct UWeaponState* _unequippingState; // 0x1528(0x08)
	struct UWeaponState* _inactiveState; // 0x1530(0x08)
	struct UWeaponState* _chamberBulletState; // 0x1538(0x08)
	struct UWeaponStateReload* _reloadState2; // 0x1540(0x08)
	struct UWeaponStateClearMalfunction* _clearMalfunctionState; // 0x1548(0x08)
	struct UWeaponStateUnloadAmmo* _unloadAmmoState; // 0x1550(0x08)
	struct UWeaponStateCheckAmmo* _checkAmmoState; // 0x1558(0x08)
	enum class EWeaponMuzzleEffectsSpawType _muzzleEffectsSpawnType; // 0x1560(0x01)
	char pad_1561[0x7]; // 0x1561(0x07)
	struct UParticleSystem* _muzzlePS; // 0x1568(0x08)
	struct UParticleSystem* _suppressorMuzzlePS; // 0x1570(0x08)
	struct UParticleSystemComponent* _muzzlePSC; // 0x1578(0x08)
	struct UParticleSystem* _smokeAfterShotFiredPS; // 0x1580(0x08)
	struct UParticleSystemComponent* _smokeAfterShotFiredPSC; // 0x1588(0x08)
	struct UParticleSystem* _ejectCasingPS; // 0x1590(0x08)
	struct UParticleSystem* _ejectLiveRoundPS; // 0x1598(0x08)
	struct UWeaponPaintjobItemComponent* _paintjobComponent; // 0x15a0(0x08)
	struct AActor* _weaponOwner; // 0x15a8(0x08)
	char pad_15B0[0x10]; // 0x15b0(0x10)
	struct TArray<struct FAmmunitionData> _loadedAmmoData; // 0x15c0(0x10)
	char pad_15D0[0x2]; // 0x15d0(0x02)
	bool _shouldOverrideUseMuzzleDirectionForShooting; // 0x15d2(0x01)
	bool _useMuzzleDirectionForShootingOverride; // 0x15d3(0x01)
	struct TWeakObjectPtr<struct AActor> _projectileTargetLocationOverride; // 0x15d4(0x08)
	char pad_15DC[0x80]; // 0x15dc(0x80)
	enum class EWeaponFiringMode _firingMode; // 0x165c(0x01)
	char pad_165D[0x13]; // 0x165d(0x13)
	struct TArray<struct AWeaponAttachment*> _weaponAttachmentsReplicated; // 0x1670(0x10)
	char pad_1680[0x28]; // 0x1680(0x28)
	struct TArray<struct FAmmunitionData> _internalMagazineAmmoData; // 0x16a8(0x10)
	int32_t _usedAmmoCount; // 0x16b8(0x04)
	char pad_16BC[0x1]; // 0x16bc(0x01)
	bool _shouldPlayChamberOpenedIdle; // 0x16bd(0x01)
	char pad_16BE[0x12]; // 0x16be(0x12)
	struct UAkAudioEvent* _fireSingleShotAudioEvent; // 0x16d0(0x08)
	struct UAkAudioEvent* _startAutoFireAudioEvent; // 0x16d8(0x08)
	struct UAkAudioEvent* _stopAutoFireAudioEvent; // 0x16e0(0x08)
	struct UAkAudioEvent* _suppressorFireSingleShotAudioEvent; // 0x16e8(0x08)
	struct UAkAudioEvent* _suppressorStartAutoFireAudioEvent; // 0x16f0(0x08)
	struct UAkAudioEvent* _suppressorStopAutoFireAudioEvent; // 0x16f8(0x08)
	struct UAkAudioEvent* _improvisedSuppressorFireSingleShotAudioEvent; // 0x1700(0x08)
	struct UAkAudioEvent* _improvisedSuppressorStartAutoFireAudioEvent; // 0x1708(0x08)
	struct UAkAudioEvent* _improvisedSuppressorStopAutoFireAudioEvent; // 0x1710(0x08)
	struct UAkAudioEvent* _noAmmoAudioEvent; // 0x1718(0x08)
	struct UAkAudioEvent* _dryFireUncockedAudioEvent; // 0x1720(0x08)
	struct UAkAudioEvent* _zeroRangeClickAudioEvent; // 0x1728(0x08)
	struct UAkAudioEvent* _changeFiringModeAudioEvent; // 0x1730(0x08)
	struct UAkAudioEvent* _onMalfunctionAudioEvent; // 0x1738(0x08)
	struct UAkAudioEvent* _switchADSStateAudioEvent; // 0x1740(0x08)
	struct UAkAudioEvent* _indoorSmallHearingDamageAudioEvent; // 0x1748(0x08)
	struct UAkAudioEvent* _indoorMediumHearingDamageAudioEvent; // 0x1750(0x08)
	struct UAkAudioEvent* _indoorLargeHearingDamageAudioEvent; // 0x1758(0x08)
	struct UAkAudioEvent* _outdoorLargeHearingDamageAudioEvent; // 0x1760(0x08)
	float _makeNoiseLoudness; // 0x1768(0x04)
	char pad_176C[0x10]; // 0x176c(0x10)
	float _staminaDrainMultiplier; // 0x177c(0x04)
	char pad_1780[0xc]; // 0x1780(0x0c)
	enum class EWeaponMalfunction _malfunction; // 0x178c(0x01)
	enum class EWeaponBehaviourMode _behaviourMode; // 0x178d(0x01)
	char pad_178E[0x22]; // 0x178e(0x22)
	struct UObject* _loadedAmmunitionItemClass; // 0x17b0(0x08)
	char pad_17B8[0x8]; // 0x17b8(0x08)
	struct AProjectile* _loadedProjectileClass; // 0x17c0(0x08)
	struct AProjectile* _defaultProjectileClass; // 0x17c8(0x08)
	char pad_17D0[0xc]; // 0x17d0(0x0c)
	float _totalControllerPitchAmountToAdd; // 0x17dc(0x04)
	float _controllerPitchAddTimeFrame; // 0x17e0(0x04)
	char pad_17E4[0x1784]; // 0x17e4(0x1784)
	struct FWeaponStateSyncData _ownerWeaponStateSyncData; // 0x2f68(0x48)
	char pad_2FB0[0x50]; // 0x2fb0(0x50)
	struct UArmedNPCWeaponManual* _armedNPCWeaponManualClass; // 0x3000(0x08)
	char pad_3008[0x8]; // 0x3008(0x08)

	void UpdateReloadData(struct FWeaponReloadData& reloadDataIn, struct FWeaponReloadData& reloadDataOut); // Function ConZ.Weapon.UpdateReloadData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2531f00
	void UpdateAmmunitionMeshes(struct TArray<int32_t>& ammoIndices, bool showReversed); // Function ConZ.Weapon.UpdateAmmunitionMeshes // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2531e00
	void UpdateActiveSightAndScopeComponents(); // Function ConZ.Weapon.UpdateActiveSightAndScopeComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x2531de0
	void Unequip(); // Function ConZ.Weapon.Unequip // (Final|Native|Public|BlueprintCallable) // @ game+0x2531dc0
	void StopFiringEffects(); // Function ConZ.Weapon.StopFiringEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x2531da0
	void StopFire(); // Function ConZ.Weapon.StopFire // (Final|Native|Public|BlueprintCallable) // @ game+0x2531d80
	void StartFire(); // Function ConZ.Weapon.StartFire // (Final|Native|Public|BlueprintCallable) // @ game+0x2531d60
	bool ShouldPlayChamberOpenedIdle(); // Function ConZ.Weapon.ShouldPlayChamberOpenedIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2531d30
	bool ShouldPlayCasingEjectedSound(); // Function ConZ.Weapon.ShouldPlayCasingEjectedSound // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2531d00
	bool ShouldClearMalfunctionOnEvent(enum class EWeaponMalfunction malfunction, enum class EWeaponMalfunctionEvent malfunctionEvent); // Function ConZ.Weapon.ShouldClearMalfunctionOnEvent // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2531c20
	void SetZeroRangeOnServer(int32_t ZeroRange); // Function ConZ.Weapon.SetZeroRangeOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2531b90
	void SetUseWeaponAnimationPose(bool Value); // Function ConZ.Weapon.SetUseWeaponAnimationPose // (Final|Native|Public|BlueprintCallable) // @ game+0x2531b00
	void SetUseMuzzleDirectionForShooting(bool Value); // Function ConZ.Weapon.SetUseMuzzleDirectionForShooting // (Final|Native|Public|BlueprintCallable) // @ game+0x2531a70
	void SetShouldPlayChamberOpenedIdle(bool Value); // Function ConZ.Weapon.SetShouldPlayChamberOpenedIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x25319e0
	void SetOverrideUseWeaponAnimationPose(bool Value); // Function ConZ.Weapon.SetOverrideUseWeaponAnimationPose // (Final|Native|Public|BlueprintCallable) // @ game+0x2531950
	void SetMalfunction(enum class EWeaponMalfunction Type); // Function ConZ.Weapon.SetMalfunction // (Final|Native|Public|BlueprintCallable) // @ game+0x25318d0
	void SetMakeNoiseLoudness(bool Value); // Function ConZ.Weapon.SetMakeNoiseLoudness // (Final|Native|Public|BlueprintCallable) // @ game+0x2531840
	void SetLoadedProjectileClass(struct AProjectile* projectileClass); // Function ConZ.Weapon.SetLoadedProjectileClass // (Final|Native|Public|BlueprintCallable) // @ game+0x25317b0
	void SetIsScopingAllowed(bool Value); // Function ConZ.Weapon.SetIsScopingAllowed // (Final|Native|Public|BlueprintCallable) // @ game+0x2531720
	void SetIsChambering(bool Value); // Function ConZ.Weapon.SetIsChambering // (Final|Native|Public|BlueprintCallable) // @ game+0x2531690
	void SetFiringModeOnServer(enum class EWeaponFiringMode Value); // Function ConZ.Weapon.SetFiringModeOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2531610
	void SetFiringMode(enum class EWeaponFiringMode Value); // Function ConZ.Weapon.SetFiringMode // (Final|Native|Public|BlueprintCallable) // @ game+0x2531590
	void Server_SwapAttachments(struct AWeaponAttachment* oldAttachment, struct AWeaponAttachment* newAttachment); // Function ConZ.Weapon.Server_SwapAttachments // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x25314c0
	void Server_StopFiringEffects(); // Function ConZ.Weapon.Server_StopFiringEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc600
	void Server_StopChamberEffects(); // Function ConZ.Weapon.Server_StopChamberEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x25314a0
	void Server_SetMalfunction(enum class EWeaponMalfunction Type); // Function ConZ.Weapon.Server_SetMalfunction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2531420
	void Server_SetBehaviourMode(enum class EWeaponBehaviourMode mode); // Function ConZ.Weapon.Server_SetBehaviourMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x25313a0
	void Server_RemoveCartridgeFromWeapon(); // Function ConZ.Weapon.Server_RemoveCartridgeFromWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2531380
	void Server_PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.Server_PlayFiringEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x25312f0
	void Server_PlayDryFireSound(); // Function ConZ.Weapon.Server_PlayDryFireSound // (Final|Net|Native|Event|Private|NetServer) // @ game+0x237a360
	void Server_PlayChamberEffects(); // Function ConZ.Weapon.Server_PlayChamberEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2347110
	void Server_OnChamberOpenedClosed(); // Function ConZ.Weapon.Server_OnChamberOpenedClosed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x25312d0
	void Server_OnChamberOpened(); // Function ConZ.Weapon.Server_OnChamberOpened // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x25312b0
	void Server_OnChamberClosed(); // Function ConZ.Weapon.Server_OnChamberClosed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2531290
	void Server_InsertCartridgeIntoWeapon(struct AAmmunitionItem* ammo, struct FAmmunitionData AmmunitionData); // Function ConZ.Weapon.Server_InsertCartridgeIntoWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2531190
	void Server_FireShotProjectile(struct FFireShotProjectileData Data, struct FFireShotDescription desc); // Function ConZ.Weapon.Server_FireShotProjectile // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2531090
	void Server_DropAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.Server_DropAttachment // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2531000
	void Server_CancelFiringEffects(); // Function ConZ.Weapon.Server_CancelFiringEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2383ac0
	void ResetZeroRange(); // Function ConZ.Weapon.ResetZeroRange // (Final|Native|Public|BlueprintCallable) // @ game+0x2530fe0
	void RequestClearMalfunction(enum class EWeaponMalfunction malfunction); // Function ConZ.Weapon.RequestClearMalfunction // (Final|Native|Public|BlueprintCallable) // @ game+0x2530f60
	void RemoveAttachmentOnServer(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachmentOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2530ed0
	void RemoveAttachmentLocal(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachmentLocal // (Final|Native|Private|BlueprintCallable) // @ game+0x2530e40
	void RemoveAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.RemoveAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x2530db0
	void RemoveAmmo(int32_t Amount); // Function ConZ.Weapon.RemoveAmmo // (Final|Native|Public|BlueprintCallable) // @ game+0x2530d20
	void PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.PlayFiringEffects // (Native|Public|BlueprintCallable) // @ game+0x2530c90
	void OnWeaponActionAnimNotify(enum class EWeaponActionNotifyType notifyType); // Function ConZ.Weapon.OnWeaponActionAnimNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x2530c10
	void OnStaminaDrained(); // Function ConZ.Weapon.OnStaminaDrained // (Native|Event|Public|BlueprintEvent) // @ game+0x2530bf0
	void OnShotFired(bool isLastShot); // Function ConZ.Weapon.OnShotFired // (Native|Event|Public|BlueprintEvent) // @ game+0x2530b60
	void OnRep_WeaponAttachmentsReplicated(); // Function ConZ.Weapon.OnRep_WeaponAttachmentsReplicated // (Final|Native|Private) // @ game+0x2530b40
	void OnRep_OwnerWeaponStateSyncData(); // Function ConZ.Weapon.OnRep_OwnerWeaponStateSyncData // (Final|Native|Private) // @ game+0x2530b20
	void OnRep_Malfunction(); // Function ConZ.Weapon.OnRep_Malfunction // (Final|Native|Private) // @ game+0x2530b00
	void OnRep_FireShotCounterEffectsSync(); // Function ConZ.Weapon.OnRep_FireShotCounterEffectsSync // (Native|Public) // @ game+0x2530ae0
	void OnRep_BehaviourMode(); // Function ConZ.Weapon.OnRep_BehaviourMode // (Final|Native|Private) // @ game+0x2530ac0
	void OnChamberOpened(); // Function ConZ.Weapon.OnChamberOpened // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2530a10
	void OnChamberClosed(); // Function ConZ.Weapon.OnChamberClosed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x246feb0
	void OnAttachmentRemoved(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.OnAttachmentRemoved // (Native|Event|Protected|BlueprintEvent) // @ game+0x2530980
	void OnAttachmentAdded(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.OnAttachmentAdded // (Native|Event|Protected|BlueprintEvent) // @ game+0x25308f0
	void NotifyMissOnServer(struct FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread); // Function ConZ.Weapon.NotifyMissOnServer // (Final|Net|Native|Event|Private|NetServer) // @ game+0x25307c0
	void NotifyHitOnServer(struct FHitResult HitResult, struct FVector_NetQuantizeNormal shootDirection, int32_t randomSeed, float reticleSpread); // Function ConZ.Weapon.NotifyHitOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2530620
	void NetMulticast_StopFiringEffects(); // Function ConZ.Weapon.NetMulticast_StopFiringEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23dbf20
	void NetMulticast_StopChamberEffects(); // Function ConZ.Weapon.NetMulticast_StopChamberEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x246f4b0
	void NetMulticast_PlayFiringEffects(bool isLastShot); // Function ConZ.Weapon.NetMulticast_PlayFiringEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2530590
	void NetMulticast_PlayDryFireSound(); // Function ConZ.Weapon.NetMulticast_PlayDryFireSound // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23dc2d0
	void NetMulticast_PlayChamberEffects(); // Function ConZ.Weapon.NetMulticast_PlayChamberEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2530570
	void NetMulticast_CancelFiringEffects(); // Function ConZ.Weapon.NetMulticast_CancelFiringEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2383ae0
	bool IsMalfunctionSupported(enum class EWeaponMalfunction malfunction); // Function ConZ.Weapon.IsMalfunctionSupported // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25304b0
	bool IsInGameEvent(); // Function ConZ.Weapon.IsInGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530480
	bool IsFiring(); // Function ConZ.Weapon.IsFiring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530450
	bool IsChamberOpened(); // Function ConZ.Weapon.IsChamberOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530420
	bool IsAmmoInMagazineCompatible(struct AWeaponAttachmentMagazine* magazine); // Function ConZ.Weapon.IsAmmoInMagazineCompatible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530350
	bool IsAmmoCompatible(struct FGameplayTag& AmmunitionTag); // Function ConZ.Weapon.IsAmmoCompatible // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x25302b0
	void IncrementZeroRange(); // Function ConZ.Weapon.IncrementZeroRange // (Final|Native|Public|BlueprintCallable) // @ game+0x2530290
	bool HasEnoughAmmo(); // Function ConZ.Weapon.HasEnoughAmmo // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530260
	bool HasAmmoToUnload(); // Function ConZ.Weapon.HasAmmoToUnload // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2530230
	int32_t GetZeroRange(); // Function ConZ.Weapon.GetZeroRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530200
	struct APrisoner* GetWeaponOwningPrisoner(); // Function ConZ.Weapon.GetWeaponOwningPrisoner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25301d0
	struct AConZCharacter* GetWeaponOwningCharacter(); // Function ConZ.Weapon.GetWeaponOwningCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25301a0
	struct AActor* GetWeaponOwner(); // Function ConZ.Weapon.GetWeaponOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530170
	bool GetUseWeaponAnimationPose(); // Function ConZ.Weapon.GetUseWeaponAnimationPose // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530110
	bool GetUseMuzzleDirectionForShooting(); // Function ConZ.Weapon.GetUseMuzzleDirectionForShooting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25300e0
	int32_t GetUsedAmmoCount(); // Function ConZ.Weapon.GetUsedAmmoCount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530140
	enum class EWeaponType GetType(); // Function ConZ.Weapon.GetType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25300b0
	float GetSpread(); // Function ConZ.Weapon.GetSpread // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530040
	float GetShakiness(); // Function ConZ.Weapon.GetShakiness // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530000
	struct UWeaponActionReloadSequence* GetReloadActionSequenceForData(struct FWeaponReloadData& reloadData); // Function ConZ.Weapon.GetReloadActionSequenceForData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x252ff40
	struct URangedWeaponsSkill* GetRangedWeaponsSkill(); // Function ConZ.Weapon.GetRangedWeaponsSkill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252ff10
	float GetProbabilityForMalfunction(enum class EWeaponMalfunction malfunction, float normalizedHealth); // Function ConZ.Weapon.GetProbabilityForMalfunction // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x252fe30
	bool GetOverrideUseWeaponAnimationPose(); // Function ConZ.Weapon.GetOverrideUseWeaponAnimationPose // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fe00
	struct FVector GetMuzzleLocation(); // Function ConZ.Weapon.GetMuzzleLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fdc0
	struct FVector GetMuzzleDirection(); // Function ConZ.Weapon.GetMuzzleDirection // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fd80
	int32_t GetMaxAmmoCount(); // Function ConZ.Weapon.GetMaxAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fd50
	void GetMalfunctionsForEvent(enum class EWeaponMalfunctionEvent malfunctionEvent, struct FWeaponMalfunctionEventDescription& desc, struct TArray<struct FWeaponMalfunctionProbability>& malfunctionsIn, struct TArray<struct FWeaponMalfunctionProbability>& malfunctionsOut); // Function ConZ.Weapon.GetMalfunctionsForEvent // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x252fb90
	float GetMakeNoiseLoudness(); // Function ConZ.Weapon.GetMakeNoiseLoudness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fb60
	struct AWeaponAttachmentMagazine* GetMagazine(); // Function ConZ.Weapon.GetMagazine // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fb30
	struct AProjectile* GetLoadedProjectileClass(); // Function ConZ.Weapon.GetLoadedProjectileClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252faf0
	int32_t GetLoadedAmmoCount(); // Function ConZ.Weapon.GetLoadedAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fac0
	int32_t GetLiveAmmoCount(); // Function ConZ.Weapon.GetLiveAmmoCount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fa90
	bool GetIsScopingAllowed(); // Function ConZ.Weapon.GetIsScopingAllowed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fa60
	bool GetIsChambering(); // Function ConZ.Weapon.GetIsChambering // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fa30
	int32_t GetInternalMagazineSpace(); // Function ConZ.Weapon.GetInternalMagazineSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252fa00
	int32_t GetInternalMagazineAmmoCount(); // Function ConZ.Weapon.GetInternalMagazineAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f9d0
	struct UAnimMontage* GetFiringMontage(bool isLastShot); // Function ConZ.Weapon.GetFiringMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x252f930
	enum class EWeaponFiringMode GetFiringMode(); // Function ConZ.Weapon.GetFiringMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f900
	struct FBodyWeaponAnimation GetFiringBodyWeaponAnimation(); // Function ConZ.Weapon.GetFiringBodyWeaponAnimation // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x252f8c0
	struct FAmmunitionData GetDefaultAmmunitionData(); // Function ConZ.Weapon.GetDefaultAmmunitionData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f850
	struct UObject* GetAmmunitionItemClass(); // Function ConZ.Weapon.GetAmmunitionItemClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f7f0
	struct FString GetAmmoTypeString(); // Function ConZ.Weapon.GetAmmoTypeString // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f770
	int32_t GetAmmoReloadCapacity(struct AAmmunitionItem* ammo); // Function ConZ.Weapon.GetAmmoReloadCapacity // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x252f6d0
	int32_t GetAmmoCount(); // Function ConZ.Weapon.GetAmmoCount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f6a0
	void FireShot(); // Function ConZ.Weapon.FireShot // (Native|Public|BlueprintCallable) // @ game+0x252f680
	bool FindReloadData(struct TArray<struct AItem*>& Items, struct FWeaponReloadData& reloadData); // Function ConZ.Weapon.FindReloadData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x252f550
	void FillUpWithDefaultAmmo(); // Function ConZ.Weapon.FillUpWithDefaultAmmo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x252f530
	void Equip(); // Function ConZ.Weapon.Equip // (Final|Native|Public|BlueprintCallable) // @ game+0x252f510
	void DestroyAmmunitionMeshes(); // Function ConZ.Weapon.DestroyAmmunitionMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x252f4f0
	void DecrementZeroRange(); // Function ConZ.Weapon.DecrementZeroRange // (Final|Native|Public|BlueprintCallable) // @ game+0x252f4d0
	void CreateAmmunitionMeshes(); // Function ConZ.Weapon.CreateAmmunitionMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x252f4b0
	void Client_SetupForEvent(); // Function ConZ.Weapon.Client_SetupForEvent // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x252f490
	bool CanSwitchFiringMode(); // Function ConZ.Weapon.CanSwitchFiringMode // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x252f440
	bool CanReloadUsingData(struct FWeaponReloadData& Data); // Function ConZ.Weapon.CanReloadUsingData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x252f380
	bool CanFireAgain(); // Function ConZ.Weapon.CanFireAgain // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x252f350
	void CancelFire(); // Function ConZ.Weapon.CancelFire // (Final|Native|Public|BlueprintCallable) // @ game+0x252f470
	bool CanBeginFiringSequenceWithMalfunction(enum class EWeaponMalfunction malfunction); // Function ConZ.Weapon.CanBeginFiringSequenceWithMalfunction // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x252f2c0
	bool CanAddAttachment(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.CanAddAttachment // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x252f220
	void AttachmentRemovedSignature__DelegateSignature(struct AWeapon* sender, struct AWeaponAttachment* Attachment); // DelegateFunction ConZ.Weapon.AttachmentRemovedSignature__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void AttachmentAddedSignature__DelegateSignature(struct AWeapon* sender, struct AWeaponAttachment* Attachment); // DelegateFunction ConZ.Weapon.AttachmentAddedSignature__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void AddAttachmentOnServer(struct AWeaponAttachment* Attachment); // Function ConZ.Weapon.AddAttachmentOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x252f190
	void AddAttachmentLocal(struct AWeaponAttachment* Attachment, bool attach); // Function ConZ.Weapon.AddAttachmentLocal // (Final|Native|Private|BlueprintCallable) // @ game+0x252f0c0
	void AddAttachment(struct AWeaponAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType); // Function ConZ.Weapon.AddAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x252efb0
	void AddAmmoSingleAtLocation(struct FAmmunitionData& ammoData, bool backLocation); // Function ConZ.Weapon.AddAmmoSingleAtLocation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x252eec0
	void AddAmmoSingle(struct FAmmunitionData& ammoData); // Function ConZ.Weapon.AddAmmoSingle // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x252ee20
	void AddAmmo(struct TArray<struct FAmmunitionData>& ammoData); // Function ConZ.Weapon.AddAmmo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x252ed70
};

// Class ConZ.WeaponAction
// Size: 0x28 (Inherited: 0x28)
struct UWeaponAction : UObject {

	void RemoveCartridgeFromWeapon(); // Function ConZ.WeaponAction.RemoveCartridgeFromWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x2535990
	void RemoveAttachmentFromWeapon(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.WeaponAction.RemoveAttachmentFromWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x25358c0
	void OnWeaponActionAnimNotify(enum class EWeaponActionNotifyType notifyType); // Function ConZ.WeaponAction.OnWeaponActionAnimNotify // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2535840
	void OnActionAnimNotify(enum class ECharacterActionNotifyType notifyType); // Function ConZ.WeaponAction.OnActionAnimNotify // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2535550
	bool IsCharacterOwnerMountedAsDriver(); // Function ConZ.WeaponAction.IsCharacterOwnerMountedAsDriver // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25354c0
	void InsertCartridgeIntoWeaponAtLocation(struct AWeapon* Weapon, struct AAmmunitionItem* ammo, bool backLocation); // Function ConZ.WeaponAction.InsertCartridgeIntoWeaponAtLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x25353b0
	void InsertCartridgeIntoWeapon(struct AWeapon* Weapon, struct AAmmunitionItem* ammo); // Function ConZ.WeaponAction.InsertCartridgeIntoWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x25352e0
	void InsertCartridgeIntoMagazine(struct AWeaponAttachmentMagazine* magazine, struct AAmmunitionItem* ammo); // Function ConZ.WeaponAction.InsertCartridgeIntoMagazine // (Final|Native|Public|BlueprintCallable) // @ game+0x2535210
	struct AWeapon* GetWeapon(); // Function ConZ.WeaponAction.GetWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f560
	void AddAttachmentToWeapon(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.WeaponAction.AddAttachmentToWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x25346e0
};

// Class ConZ.WeaponActionReloadSequence
// Size: 0x90 (Inherited: 0x28)
struct UWeaponActionReloadSequence : UWeaponAction {
	struct FBodyWeaponAnimation AnimationStandAndCrouch; // 0x28(0x10)
	struct FBodyWeaponAnimation AnimationProne; // 0x38(0x10)
	bool CanBeInterrupted; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FWeaponReloadData _reloadData; // 0x50(0x30)
	char pad_80[0x10]; // 0x80(0x10)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionReloadSequence.SetNextMontageSectionFromPrevious // (Final|Native|Public|BlueprintCallable) // @ game+0x2535d90
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionReloadSequence.SetNextMontageSection // (Final|Native|Public|BlueprintCallable) // @ game+0x2535ad0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionReloadSequence.OnMontageEnded // (Native|Protected) // @ game+0x240fa40
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionReloadSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x25356a0
	bool IsWeaponOwnerABot(); // Function ConZ.WeaponActionReloadSequence.IsWeaponOwnerABot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2535520
	bool IsGameEventRoundStarted(); // Function ConZ.WeaponActionReloadSequence.IsGameEventRoundStarted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25354f0
	bool IgnoreChamberBulletOnEnd(); // Function ConZ.WeaponActionReloadSequence.IgnoreChamberBulletOnEnd // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x115be80
	struct FWeaponReloadData GetReloadData(); // Function ConZ.WeaponActionReloadSequence.GetReloadData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534f70
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionReloadSequence.GetActiveAnimationWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534ee0
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionReloadSequence.GetActiveAnimationBody // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534e20
	float ExecuteUsingData(struct FWeaponReloadData& Data); // Function ConZ.WeaponActionReloadSequence.ExecuteUsingData // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x2534d00
	void End(bool Regular); // Function ConZ.WeaponActionReloadSequence.End // (Native|Event|Public|BlueprintEvent) // @ game+0x2534b50
	bool CanInterrupt(); // Function ConZ.WeaponActionReloadSequence.CanInterrupt // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2534a00
	bool CanExecuteUsingData(struct FWeaponReloadData& Data); // Function ConZ.WeaponActionReloadSequence.CanExecuteUsingData // (Native|Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x2534910
};

// Class ConZ.ChamberCartridge
// Size: 0x90 (Inherited: 0x90)
struct UChamberCartridge : UWeaponActionReloadSequence {
};

// Class ConZ.WaypointWidgetBase
// Size: 0x340 (Inherited: 0x268)
struct UWaypointWidgetBase : UUserWidget {
	struct TSoftObjectPtr<UTexture2D> IconTexture; // 0x268(0x28)
	struct TSoftObjectPtr<UTexture2D> AccentTexture; // 0x290(0x28)
	struct FLinearColor AccentColor; // 0x2b8(0x10)
	float BarValue; // 0x2c8(0x04)
	struct FLinearColor BarColor; // 0x2cc(0x10)
	float HeightOffset; // 0x2dc(0x04)
	bool Emphasized; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	struct FLinearColor EmphasisColor; // 0x2e4(0x10)
	char pad_2F4[0x4]; // 0x2f4(0x04)
	struct FString LabelText; // 0x2f8(0x10)
	char pad_308[0x38]; // 0x308(0x38)

	void OnLifetimeTiedActorDestroyed(struct AActor* Actor); // Function ConZ.WaypointWidgetBase.OnLifetimeTiedActorDestroyed // (Final|Native|Private) // @ game+0x2530a30
	bool IsOnScreen(); // Function ConZ.WaypointWidgetBase.IsOnScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530540
	bool IsAttached(); // Function ConZ.WaypointWidgetBase.IsAttached // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25303f0
	struct AActor* GetTargetActor(); // Function ConZ.WaypointWidgetBase.GetTargetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2530080
	float GetDistance(); // Function ConZ.WaypointWidgetBase.GetDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f890
	float GetAngle(); // Function ConZ.WaypointWidgetBase.GetAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x252f820
};

// Class ConZ.ChangeTextWidget
// Size: 0x368 (Inherited: 0x340)
struct UChangeTextWidget : UWaypointWidgetBase {
	char pad_340[0x28]; // 0x340(0x28)

	void TextAcceptedEvent__DelegateSignature(struct APrisoner* User, struct FText& Text); // DelegateFunction ConZ.ChangeTextWidget.TextAcceptedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x297fc00
	void SetMaxNumberOfCharacters(int32_t Value); // Function ConZ.ChangeTextWidget.SetMaxNumberOfCharacters // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void SetCurrentInputText_BP(struct FText& Text); // Function ConZ.ChangeTextWidget.SetCurrentInputText_BP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x297fc00
	void OnTextAccepted(); // Function ConZ.ChangeTextWidget.OnTextAccepted // (Final|Native|Public|BlueprintCallable) // @ game+0x236ca70
	void OnCurrentInputTextChanged(struct FText Text); // Function ConZ.ChangeTextWidget.OnCurrentInputTextChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x236c5e0
};

// Class ConZ.CharacterActionComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UCharacterActionComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	bool _shouldStopMontageOnEnd; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	void Server_NotifyReadyToDestroy(); // Function ConZ.CharacterActionComponent.Server_NotifyReadyToDestroy // (Net|NetReliableNative|Event|Protected|NetServer|BlueprintCallable) // @ game+0x236cc10
};

// Class ConZ.CCNonSelectableTextWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UCCNonSelectableTextWidget : UUserWidget {
	struct URetainerBox* _retainerBox; // 0x268(0x08)
	struct USizeBox* _sizeBox; // 0x270(0x08)
	struct UTextBlock* _textBlock; // 0x278(0x08)
	struct FText _text; // 0x280(0x18)
	int32_t _fontSize; // 0x298(0x04)
	struct FMargin _textPadding; // 0x29c(0x10)
	struct FVector2D _sizeOverride; // 0x2ac(0x08)
	enum class EHorizontalAlignment _textHorizontalAlignment; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	struct FLinearColor _textColor; // 0x2b8(0x10)

	void SetTextColor(struct FLinearColor Color); // Function ConZ.CCNonSelectableTextWidget.SetTextColor // (Final|Native|Public|HasDefaults) // @ game+0x2371480
	void SetText(struct FText Text); // Function ConZ.CCNonSelectableTextWidget.SetText // (Final|Native|Public) // @ game+0x23713a0
	void HighlightPartially(float Percent); // Function ConZ.CCNonSelectableTextWidget.HighlightPartially // (Final|Native|Public) // @ game+0x2370c10
};

// Class ConZ.UserWidgetWithDescription
// Size: 0x2b8 (Inherited: 0x268)
struct UUserWidgetWithDescription : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	bool _usesDescription; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct FText _description; // 0x2a0(0x18)
};

// Class ConZ.CCSkillSliderWidget
// Size: 0x360 (Inherited: 0x2b8)
struct UCCSkillSliderWidget : UUserWidgetWithDescription {
	struct FMulticastInlineDelegate OnSliderChanged; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnSliderSelected; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnSliderDeselected; // 0x2d8(0x10)
	struct UTextBlock* _skillName; // 0x2e8(0x08)
	struct UCCNonSelectableTextWidget* _nonSelectableText; // 0x2f0(0x08)
	struct UTrashSliderWidget* _slider; // 0x2f8(0x08)
	bool _enabled; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)
	struct FSkillTemplate _skillTemplate; // 0x308(0x38)
	struct FLinearColor _enabledColor; // 0x340(0x10)
	struct FLinearColor _disabledColor; // 0x350(0x10)

	void HandleValueChanged(float Value); // Function ConZ.CCSkillSliderWidget.HandleValueChanged // (Final|Native|Protected) // @ game+0x2370b90
};

// Class ConZ.CharacterCreationMenu
// Size: 0x520 (Inherited: 0x268)
struct UCharacterCreationMenu : UBaseMenu {
	struct UCanvasPanel* _canvasMain; // 0x268(0x08)
	struct UCanvasPanel* _canvasContent; // 0x270(0x08)
	struct UOverlay* _overlayMenu; // 0x278(0x08)
	struct UOverlay* _overlayPopup; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)
	struct UWidgetSwitcher* _widgetSwitcher; // 0x290(0x08)
	struct UEditableTextBox* _editableTextNameCharacterPanel; // 0x298(0x08)
	struct UBorder* _borderNameCharacterPanel; // 0x2a0(0x08)
	struct UCCNonSelectableTextWidget* _availableAttributePointsDisplay; // 0x2a8(0x08)
	struct UTrashNamedSliderWidget* _sliderStrength; // 0x2b0(0x08)
	struct UTrashNamedSliderWidget* _sliderConstitution; // 0x2b8(0x08)
	struct UTrashNamedSliderWidget* _sliderDexterity; // 0x2c0(0x08)
	struct UTrashNamedSliderWidget* _sliderIntelligence; // 0x2c8(0x08)
	struct UTrashNamedCarouselWidget* _carouselGender; // 0x2d0(0x08)
	struct UTrashNamedSliderWidget* _sliderHead; // 0x2d8(0x08)
	struct UTrashNamedCarouselWidget* _carouselHairiness; // 0x2e0(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _appearanceUpgradeConditionDisplay; // 0x2e8(0x08)
	struct UTrashNamedSliderWidget* _sliderAge; // 0x2f0(0x08)
	struct UTrashNamedCarouselWidget* _carouselTattoos; // 0x2f8(0x08)
	struct UTrashNamedSliderWidget* _sliderTattooStyle; // 0x300(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _tattooUpgradeConditionDisplay; // 0x308(0x08)
	struct UTrashNamedCarouselWidget* _carouselConcealedMode; // 0x310(0x08)
	struct UTrashNamedSliderWidget* _sliderPenisBreastSize; // 0x318(0x08)
	struct UConZStandardButton* _buttonRandomizeAttributes; // 0x320(0x08)
	struct UConZStandardButton* _buttonCancelToMainMenu; // 0x328(0x08)
	struct UConZStandardButton* _buttonNextToFace; // 0x330(0x08)
	struct UOverlay* _overlayAttributeConfirmation; // 0x338(0x08)
	struct UConZStandardButton* _buttonCancelCharacter; // 0x340(0x08)
	struct UConZStandardButton* _buttonContinueCharacter; // 0x348(0x08)
	struct UEditableTextBox* _editableTextNameFacePanel; // 0x350(0x08)
	struct UBorder* _borderNameFacePanel; // 0x358(0x08)
	struct UConZStandardButton* _buttonRandomizeFace; // 0x360(0x08)
	struct UConZStandardButton* _buttonBackToCharacter; // 0x368(0x08)
	struct UConZStandardButton* _buttonNextToSkills; // 0x370(0x08)
	struct UTrashNamedSliderWidget* _sliderFaceType; // 0x378(0x08)
	struct UPresetColorPicker* _presetColorPickerSkinTone; // 0x380(0x08)
	struct UTrashNamedSliderWidget* _sliderHairStyle; // 0x388(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _hairStyleUpgradeConditionDisplay; // 0x390(0x08)
	struct UPresetColorPicker* _presetColorPickerHairColor; // 0x398(0x08)
	struct UVerticalBox* _facialHairVerticalBox; // 0x3a0(0x08)
	struct UTrashNamedSliderWidget* _sliderMoustacheStyle; // 0x3a8(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _moustacheStyleUpgradeConditionDisplay; // 0x3b0(0x08)
	struct UTrashNamedSliderWidget* _sliderBeardStyle; // 0x3b8(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _beardStyleUpgradeConditionDisplay; // 0x3c0(0x08)
	struct UPresetColorPicker* _presetColorPickerEyeColor; // 0x3c8(0x08)
	struct UTrashNamedSliderWidget* _sliderIrisType; // 0x3d0(0x08)
	struct UEditableTextBox* _editableTextNameSkillsPanel; // 0x3d8(0x08)
	struct UBorder* _borderNameSkillsPanel; // 0x3e0(0x08)
	struct UCCNonSelectableTextWidget* _attributeDisplayConstitution; // 0x3e8(0x08)
	struct UCCNonSelectableTextWidget* _attributeDisplayDexterity; // 0x3f0(0x08)
	struct UCCNonSelectableTextWidget* _attributeDisplayIntelligence; // 0x3f8(0x08)
	struct UCCNonSelectableTextWidget* _attributeDisplayStrength; // 0x400(0x08)
	struct UCCNonSelectableTextWidget* _skillPointDisplayConstitution; // 0x408(0x08)
	struct UCCNonSelectableTextWidget* _skillPointDisplayDexterity; // 0x410(0x08)
	struct UCCNonSelectableTextWidget* _skillPointDisplayIntelligence; // 0x418(0x08)
	struct UCCNonSelectableTextWidget* _skillPointDisplayStrength; // 0x420(0x08)
	struct UVerticalBox* _skillBoxStrength; // 0x428(0x08)
	struct UVerticalBox* _skillBoxConstitution; // 0x430(0x08)
	struct UVerticalBox* _skillBoxDexterity; // 0x438(0x08)
	struct UVerticalBox* _skillBoxIntelligence; // 0x440(0x08)
	struct UConZStandardButton* _buttonRandomizeSkills; // 0x448(0x08)
	struct UTextBlock* _textNameAlreadyTaken; // 0x450(0x08)
	struct UConZStandardButton* _buttonBackToFace; // 0x458(0x08)
	struct UConZStandardButton* _buttonSwitchToCriminalRecord; // 0x460(0x08)
	struct UScrollBox* _faceOptionsScrollbox; // 0x468(0x08)
	struct UOverlay* _overlaySkillConfirmation; // 0x470(0x08)
	struct UConZStandardButton* _buttonCancelSkills; // 0x478(0x08)
	struct UConZStandardButton* _buttonContinueSkills; // 0x480(0x08)
	struct UCriminalRecord* _criminalRecord; // 0x488(0x08)
	struct TArray<struct FCCNonImplementedSkill> _nonImplementedSkills; // 0x490(0x10)
	struct FLinearColor _pointDisplayAvailableColor; // 0x4a0(0x10)
	struct FLinearColor _pointDisplayDepletedColor; // 0x4b0(0x10)
	struct UCCSkillSliderWidget* _skillSliderClass; // 0x4c0(0x08)
	struct UOverlay* _overlayDescription; // 0x4c8(0x08)
	struct UTextBlock* _descriptionTextBlock; // 0x4d0(0x08)
	struct UCutsceneWidget* _cutsceneWidget; // 0x4d8(0x08)
	char pad_4E0[0x40]; // 0x4e0(0x40)

	void StartGame(); // Function ConZ.CharacterCreationMenu.StartGame // (Final|Native|Protected) // @ game+0x2371510
	void PlayIntroVideo(); // Function ConZ.CharacterCreationMenu.PlayIntroVideo // (Final|Native|Protected|BlueprintCallable) // @ game+0x2371380
	void OnUserProfileCreated(); // Function ConZ.CharacterCreationMenu.OnUserProfileCreated // (Event|Protected|BlueprintEvent) // @ game+0x297fc00
	void OnTextNameCommittedInSkillsPanel(struct FText& NewValue, enum class ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInSkillsPanel // (Final|Native|Private|HasOutParms) // @ game+0x2371260
	void OnTextNameCommittedInFacePanel(struct FText& NewValue, enum class ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInFacePanel // (Final|Native|Private|HasOutParms) // @ game+0x2371140
	void OnTextNameCommittedInCharacterPanel(struct FText& NewValue, enum class ETextCommit CommitMethod); // Function ConZ.CharacterCreationMenu.OnTextNameCommittedInCharacterPanel // (Final|Native|Private|HasOutParms) // @ game+0x2371020
	void OnTextNameChanged(struct FText& Text); // Function ConZ.CharacterCreationMenu.OnTextNameChanged // (Final|Native|Private|HasOutParms) // @ game+0x2370f50
	void OnSwitchToCriminalRecordClicked(); // Function ConZ.CharacterCreationMenu.OnSwitchToCriminalRecordClicked // (Final|Native|Private) // @ game+0x2370f30
	void OnRandomizeSkillsClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeSkillsClicked // (Final|Native|Private) // @ game+0x2370f10
	void OnRandomizeFaceClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeFaceClicked // (Final|Native|Private) // @ game+0x2370ef0
	void OnRandomizeAttributesClicked(); // Function ConZ.CharacterCreationMenu.OnRandomizeAttributesClicked // (Final|Native|Private) // @ game+0x2370ed0
	void OnNextToSkillsClicked(); // Function ConZ.CharacterCreationMenu.OnNextToSkillsClicked // (Final|Native|Private) // @ game+0x2370eb0
	void OnNextToFaceClicked(); // Function ConZ.CharacterCreationMenu.OnNextToFaceClicked // (Final|Native|Private) // @ game+0x2370e90
	void OnInputWidgetUnhovered(struct UUserWidgetWithDescription* Widget); // Function ConZ.CharacterCreationMenu.OnInputWidgetUnhovered // (Final|Native|Private) // @ game+0x2370e00
	void OnInputWidgetHovered(struct UUserWidgetWithDescription* Widget); // Function ConZ.CharacterCreationMenu.OnInputWidgetHovered // (Final|Native|Private) // @ game+0x2370d70
	void OnContinueClickedInSkillsConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnContinueClickedInSkillsConfirmationPanel // (Final|Native|Private) // @ game+0x2370d50
	void OnContinueClickedInCharacterConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnContinueClickedInCharacterConfirmationPanel // (Final|Native|Private) // @ game+0x2370d30
	void OnCancelToMainMenuClicked(); // Function ConZ.CharacterCreationMenu.OnCancelToMainMenuClicked // (Final|Native|Private) // @ game+0x2370d10
	void OnCancelClickedInSkillsConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnCancelClickedInSkillsConfirmationPanel // (Final|Native|Private) // @ game+0x2370cf0
	void OnCancelClickedInCharacterConfirmationPanel(); // Function ConZ.CharacterCreationMenu.OnCancelClickedInCharacterConfirmationPanel // (Final|Native|Private) // @ game+0x2370cd0
	void OnBackToFaceClicked(); // Function ConZ.CharacterCreationMenu.OnBackToFaceClicked // (Final|Native|Private) // @ game+0x2370cb0
	void OnBackToCharacterClicked(); // Function ConZ.CharacterCreationMenu.OnBackToCharacterClicked // (Final|Native|Private) // @ game+0x2370c90
	void HandleSkillSliderValueChanged(struct UCCSkillSliderWidget* Slider, enum class ESkillAttribute Attribute); // Function ConZ.CharacterCreationMenu.HandleSkillSliderValueChanged // (Final|Native|Private) // @ game+0x2370ac0
	void CreateUserProfile(); // Function ConZ.CharacterCreationMenu.CreateUserProfile // (Final|Native|Protected) // @ game+0x2370aa0
};

// Class ConZ.CharacterCreationMenuGameMode
// Size: 0x308 (Inherited: 0x308)
struct ACharacterCreationMenuGameMode : AGameMode {
};

// Class ConZ.CharacterImpactSoundsData
// Size: 0x90 (Inherited: 0x30)
struct UCharacterImpactSoundsData : UDataAsset {
	struct FCharacterHeadImpactSoundsData Head; // 0x30(0x18)
	struct FCharacterTorsoImpactSoundsData Torso; // 0x48(0x18)
	struct FCharacterArmsImpactSoundsData Arms; // 0x60(0x18)
	struct FCharacterLegsImpactSoundsData Legs; // 0x78(0x18)
};

// Class ConZ.CharacterItemDragComponent
// Size: 0x108 (Inherited: 0xb0)
struct UCharacterItemDragComponent : UActorComponent {
	char pad_B0[0x58]; // 0xb0(0x58)
};

// Class ConZ.CharacterMesh
// Size: 0x60 (Inherited: 0x28)
struct UCharacterMesh : UObject {
	struct FGameplayTagContainer Tags; // 0x28(0x20)
	struct TArray<struct FCharacterMeshSlice> MeshSlices; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class ConZ.CharacterMeshManager
// Size: 0x230 (Inherited: 0x28)
struct UCharacterMeshManager : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct TMap<struct UCharacterMesh*, struct FCharacterMeshClassSet> _incompatibleCharacterMeshClasses; // 0x40(0x50)
	struct TMap<struct FGameplayTag, struct FCharacterMeshManagerPerSlotData> _perCharacterMeshSlotData; // 0x90(0x50)
	float _destroyUnusedMeshComponentsTime; // 0xe0(0x04)
	char pad_E4[0x14c]; // 0xe4(0x14c)
};

// Class ConZ.CharacterModificationRoom
// Size: 0x2d0 (Inherited: 0x220)
struct ACharacterModificationRoom : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct APrisoner* _prisoner; // 0x228(0x08)
	struct USceneComponent* _sceneRoot; // 0x230(0x08)
	struct TSoftClassPtr<UObject> _prisonerClass; // 0x238(0x28)
	struct FTransform _prisonerTransform; // 0x260(0x30)
	struct UCineCameraComponent* _camera; // 0x290(0x08)
	struct USplineComponent* _positionSpline; // 0x298(0x08)
	struct USplineComponent* _viewTargetSpline; // 0x2a0(0x08)
	float _cameraInterpSpeed; // 0x2a8(0x04)
	char pad_2AC[0x8]; // 0x2ac(0x08)
	float _mouseTrackingSpeed; // 0x2b4(0x04)
	struct FVector2D _mouseBasedCameraRotationIntensity; // 0x2b8(0x08)
	char pad_2C0[0x10]; // 0x2c0(0x10)
};

// Class ConZ.SurgeryRoom
// Size: 0x2d0 (Inherited: 0x2d0)
struct ASurgeryRoom : ACharacterModificationRoom {
};

// Class ConZ.BarberShop
// Size: 0x2e0 (Inherited: 0x2d0)
struct ABarberShop : ACharacterModificationRoom {
	struct TArray<struct UCharacterMesh*> _characterMeshesToAddOntoPrisoner; // 0x2c8(0x10)
};

// Class ConZ.CharacterNameDisplayWidget
// Size: 0x288 (Inherited: 0x268)
struct UCharacterNameDisplayWidget : UUserWidget {
	struct UTextBlock* _nameText; // 0x268(0x08)
	struct UTextBlock* _distanceText; // 0x270(0x08)
	struct USquadEmblemWidget* _squadEmblem; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.CharacterPainSoundsData
// Size: 0x38 (Inherited: 0x30)
struct UCharacterPainSoundsData : UDataAsset {
	struct UAkAudioEvent* AudioEvent; // 0x30(0x08)
};

// Class ConZ.CharacterSelectionWidget
// Size: 0x2c0 (Inherited: 0x268)
struct UCharacterSelectionWidget : UBaseMenu {
	char pad_268[0x8]; // 0x268(0x08)
	struct UCharacterSlot* _characterSlotClass; // 0x270(0x08)
	struct UScrollBox* _mainScrollBox; // 0x278(0x08)
	struct UConZStandardButton* _buttonCreate; // 0x280(0x08)
	struct UConZStandardButton* _buttonLoad; // 0x288(0x08)
	struct UOverlay* _characterSlotsOverlay; // 0x290(0x08)
	struct UVerticalBox* _characterSlotsVerticalBox; // 0x298(0x08)
	struct UConZStandardButton* _buttonBack; // 0x2a0(0x08)
	struct UOverlay* _criminalRecordOverlay; // 0x2a8(0x08)
	struct UCriminalRecord* _criminalRecord; // 0x2b0(0x08)
	struct UYesNoDialog* _deleteCharacterConfirmation; // 0x2b8(0x08)

	void UpdatePreviewPrisonersInternal(struct UUserProfile* profile); // Function ConZ.CharacterSelectionWidget.UpdatePreviewPrisonersInternal // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x23756f0
	void OnLoadButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnLoadButtonClicked // (Final|Native|Private) // @ game+0x2375370
	void OnCreateButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnCreateButtonClicked // (Final|Native|Private) // @ game+0x2375330
	void OnBackButtonClicked(); // Function ConZ.CharacterSelectionWidget.OnBackButtonClicked // (Final|Native|Private) // @ game+0x2375310
	void GoBack(); // Function ConZ.CharacterSelectionWidget.GoBack // (Final|Native|Public|BlueprintCallable) // @ game+0x23752f0
	void DeleteCharacter(struct UUserProfile* UserProfile); // Function ConZ.CharacterSelectionWidget.DeleteCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x2375260
};

// Class ConZ.CharacterSlot
// Size: 0x2b0 (Inherited: 0x268)
struct UCharacterSlot : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UConZStandardButton* _profileButton; // 0x298(0x08)
	struct UButton* _deleteButton; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	void OnProfileButtonClicked(); // Function ConZ.CharacterSlot.OnProfileButtonClicked // (Final|Native|Private) // @ game+0x23753b0
	void OnDeleteButtonClicked(); // Function ConZ.CharacterSlot.OnDeleteButtonClicked // (Final|Native|Private) // @ game+0x2375350
};

// Class ConZ.CharacterSpawnerComponent
// Size: 0x210 (Inherited: 0x200)
struct UCharacterSpawnerComponent : USceneComponent {
	struct TArray<struct FCharacterSpawnerMarker> SpawnerMarkers; // 0x1f8(0x10)
};

// Class ConZ.CharacterVoiceline
// Size: 0x70 (Inherited: 0x30)
struct UCharacterVoiceline : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FGameplayTag CharacterTypeTag; // 0x48(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x50(0x08)
	struct FText Subtitles; // 0x58(0x18)
};

// Class ConZ.ChatNotification
// Size: 0x30 (Inherited: 0x30)
struct UChatNotification : UConZNotification {
};

// Class ConZ.ChatNotificationDescription
// Size: 0x58 (Inherited: 0x40)
struct UChatNotificationDescription : UNotificationDescription {
	struct FString Message; // 0x40(0x10)
	enum class EChatType ChatType; // 0x50(0x01)
	bool ShouldCopyToClientClipboard; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
};

// Class ConZ.SpamProtectionState
// Size: 0x58 (Inherited: 0x28)
struct USpamProtectionState : UObject {
	enum class ESpamSeverity Severity; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FDateTime LastSeverityChange; // 0x30(0x08)
	struct FDateTime LastTimeout; // 0x38(0x08)
	bool PermanentTimeout; // 0x40(0x01)
	enum class ESpamSeverity MaxSeverityReached; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	int32_t MaxSeverityCount; // 0x44(0x04)
	char pad_48[0x10]; // 0x48(0x10)
};

// Class ConZ.ChatSpamProtectionRules
// Size: 0xd8 (Inherited: 0x30)
struct UChatSpamProtectionRules : UDataAsset {
	float OffenceDuration; // 0x30(0x04)
	int32_t MessageRepetitions; // 0x34(0x04)
	struct TMap<enum class ESpamSeverity, struct FSpamSeverityConditions> _conditions; // 0x38(0x50)
	struct TMap<enum class ESpamSeverity, struct FSpamConsequences> _consequences; // 0x88(0x50)
};

// Class ConZ.ChatSuggestionWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UChatSuggestionWidget : UUserWidget {
	struct UBorder* _border; // 0x268(0x08)
	struct UChatText* _textBlock; // 0x270(0x08)
	struct FLinearColor _defaultColor; // 0x278(0x10)
	struct FLinearColor _highlightedColor; // 0x288(0x10)
	char pad_298[0x8]; // 0x298(0x08)

	void SetText(struct FString Text); // Function ConZ.ChatSuggestionWidget.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x2375650
	void SetIsHighlighted(bool Value); // Function ConZ.ChatSuggestionWidget.SetIsHighlighted // (Final|Native|Public|BlueprintCallable) // @ game+0x23755c0
};

// Class ConZ.ChatUIController
// Size: 0x128 (Inherited: 0x28)
struct UChatUIController : UObject {
	char pad_28[0xf0]; // 0x28(0xf0)
	int32_t _maxHistorySize; // 0x118(0x04)
	char pad_11C[0xc]; // 0x11c(0x0c)
};

// Class ConZ.ChatText
// Size: 0x2b0 (Inherited: 0x2b0)
struct UChatText : UTextBlock {
};

// Class ConZ.ChatWidget
// Size: 0x388 (Inherited: 0x268)
struct UChatWidget : UUserWidget {
	struct UButton* _muteButton; // 0x268(0x08)
	struct UTextBlock* _muteText; // 0x270(0x08)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UScrollBox* _chatScrollBox; // 0x280(0x08)
	struct UScrollBox* _suggestionsScrollBox; // 0x288(0x08)
	struct UOverlay* _suggestionsDropDown; // 0x290(0x08)
	struct UEditableTextBox* _inputText; // 0x298(0x08)
	struct UEditableTextBox* _suggestionTextBox; // 0x2a0(0x08)
	struct UTextBlock* _chatTypeIndicator; // 0x2a8(0x08)
	struct FLinearColor _localChatColor; // 0x2b0(0x10)
	struct FLinearColor _globalChatColor; // 0x2c0(0x10)
	struct FLinearColor _squadChatColor; // 0x2d0(0x10)
	struct FLinearColor _serverChatColor; // 0x2e0(0x10)
	struct FLinearColor _errorChatColor; // 0x2f0(0x10)
	struct FLinearColor _defaultChatColor; // 0x300(0x10)
	struct FLinearColor _commandsOnlyChatColor; // 0x310(0x10)
	struct FLinearColor _suggestionsTextColor; // 0x320(0x10)
	struct FLinearColor _adminChatColor; // 0x330(0x10)
	struct UChatSuggestionWidget* _chatSuggestionWidgetClass; // 0x340(0x08)
	struct UAdminCommandCompletionManager* _adminCommandCompletionManager; // 0x348(0x08)
	char pad_350[0x38]; // 0x350(0x38)

	void OnTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.ChatWidget.OnTextCommitted // (Final|Native|Protected|HasOutParms) // @ game+0x23754a0
	void OnTextChanged(struct FText& Text); // Function ConZ.ChatWidget.OnTextChanged // (Final|Native|Protected|HasOutParms) // @ game+0x23753d0
	void OnMuteButtonClicked(); // Function ConZ.ChatWidget.OnMuteButtonClicked // (Final|Native|Protected) // @ game+0x2375390
};

// Class ConZ.WeaponActionCheckAmmoSequence
// Size: 0x50 (Inherited: 0x28)
struct UWeaponActionCheckAmmoSequence : UWeaponAction {
	struct FBodyWeaponAnimation Animations; // 0x28(0x10)
	bool CanBeInterrupted; // 0x38(0x01)
	char pad_39[0x17]; // 0x39(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSectionFromPrevious // (Final|Native|Public|BlueprintCallable) // @ game+0x2535bf0
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionCheckAmmoSequence.SetNextMontageSection // (Final|Native|Public|BlueprintCallable) // @ game+0x25359b0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionCheckAmmoSequence.OnMontageEnded // (Native|Protected) // @ game+0x25356a0
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionCheckAmmoSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x25355d0
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534e80
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionCheckAmmoSequence.GetActiveAnimationBody // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534dc0
	float Execute(); // Function ConZ.WeaponActionCheckAmmoSequence.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x2534be0
	void End(bool Regular); // Function ConZ.WeaponActionCheckAmmoSequence.End // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2534a30
	bool CanInterrupt(); // Function ConZ.WeaponActionCheckAmmoSequence.CanInterrupt // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x115be80
	bool CanExecute(); // Function ConZ.WeaponActionCheckAmmoSequence.CanExecute // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25347b0
};

// Class ConZ.CheckAmmoMagazineAttached
// Size: 0x50 (Inherited: 0x50)
struct UCheckAmmoMagazineAttached : UWeaponActionCheckAmmoSequence {
};

// Class ConZ.CheckAmmoMagazineNotAttached
// Size: 0x50 (Inherited: 0x50)
struct UCheckAmmoMagazineNotAttached : UWeaponActionCheckAmmoSequence {
};

// Class ConZ.SkillAction
// Size: 0xa0 (Inherited: 0x28)
struct USkillAction : UObject {
	char pad_28[0x78]; // 0x28(0x78)

	void OnActionFinished(); // Function ConZ.SkillAction.OnActionFinished // (Native|Protected) // @ game+0x115bd40
	void OnActionCanceled(); // Function ConZ.SkillAction.OnActionCanceled // (Native|Protected) // @ game+0x24f3840
};

// Class ConZ.CheckDetectableItemsAction
// Size: 0xb0 (Inherited: 0xa0)
struct UCheckDetectableItemsAction : USkillAction {
	char pad_A0[0x10]; // 0xa0(0x10)
};

// Class ConZ.CheckDetectablePlayersAction
// Size: 0xa8 (Inherited: 0xa0)
struct UCheckDetectablePlayersAction : USkillAction {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class ConZ.CheckOccludedDetectablePlayersAction
// Size: 0xa8 (Inherited: 0xa0)
struct UCheckOccludedDetectablePlayersAction : USkillAction {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class ConZ.ChestItem
// Size: 0xb90 (Inherited: 0x9b0)
struct AChestItem : AItem {
	char pad_9B0[0x30]; // 0x9b0(0x30)
	int32_t _capacityX; // 0x9e0(0x04)
	int32_t _capacityY; // 0x9e4(0x04)
	struct UInventoryContainer2D* _inventoryContainer2D; // 0x9e8(0x08)
	char pad_9F0[0x8]; // 0x9f0(0x08)
	struct UBuriableChestItemComponent* _buriableChestItemComponent; // 0x9f8(0x08)
	struct UNameableItemComponent* _nameableItemComponent; // 0xa00(0x08)
	bool _canContainChestItem; // 0xa08(0x01)
	bool _lockpickableEnabled; // 0xa09(0x01)
	bool _overrideCanBeNamed; // 0xa0a(0x01)
	bool _canBeNamed; // 0xa0b(0x01)
	bool _canTakeMeleeDamage; // 0xa0c(0x01)
	char pad_A0D[0x3]; // 0xa0d(0x03)
	float _containedItemsWeight; // 0xa10(0x04)
	float _maxCarryWeight; // 0xa14(0x04)
	float _pendingContainedItemsRadiationAmount; // 0xa18(0x04)
	char pad_A1C[0x4]; // 0xa1c(0x04)
	struct FDbIntegerId _owningUserProfileId; // 0xa20(0x08)
	char pad_A28[0x8]; // 0xa28(0x08)
	struct FTransform _unlockTransform; // 0xa30(0x30)
	float _forceUnlockMovementAcceptanceRadius; // 0xa60(0x04)
	char pad_A64[0x4]; // 0xa64(0x04)
	struct TArray<struct UObject*> _lockItemsClasses; // 0xa68(0x10)
	struct TArray<struct ULockData*> _lockData; // 0xa78(0x10)
	struct TArray<int32_t> _remainingNeutralizationAttemptsPerLock; // 0xa88(0x10)
	struct TWeakObjectPtr<struct ABCULockItem> _attachedBCULockItem; // 0xa98(0x08)
	struct TArray<struct FDbIntegerId> _locks; // 0xaa0(0x10)
	char pad_AB0[0x10]; // 0xab0(0x10)
	struct FDbIntegerId _protectingFlagId; // 0xac0(0x08)
	char pad_AC8[0x18]; // 0xac8(0x18)
	struct TSoftClassPtr<UObject> _baseElementClass; // 0xae0(0x28)
	char pad_B08[0x20]; // 0xb08(0x20)
	enum class EAccessLevel _activeAccessLevel; // 0xb28(0x01)
	char pad_B29[0x3]; // 0xb29(0x03)
	int32_t _cachedInventoryCount; // 0xb2c(0x04)
	char pad_B30[0x8]; // 0xb30(0x08)
	bool _doesSupportBCULocking; // 0xb38(0x01)
	char pad_B39[0x7]; // 0xb39(0x07)
	float _additionalDropNoise; // 0xb40(0x04)
	bool _isMadeOfConductiveMaterial; // 0xb44(0x01)
	bool _shouldDecayUnderWater; // 0xb45(0x01)
	char pad_B46[0x2]; // 0xb46(0x02)
	float _decayTimeUnderWater; // 0xb48(0x04)
	char pad_B4C[0x1]; // 0xb4c(0x01)
	bool _canBeDestroyedByDrone; // 0xb4d(0x01)
	char pad_B4E[0x2]; // 0xb4e(0x02)
	struct FActorPaintParams _actorPaintParams; // 0xb50(0x38)
	char _cachedColorIndex; // 0xb88(0x01)
	char pad_B89[0x7]; // 0xb89(0x07)

	void OnRep_RemainingNeutralizationAttemptsPerLock(); // Function ConZ.ChestItem.OnRep_RemainingNeutralizationAttemptsPerLock // (Final|Native|Private) // @ game+0x237a490
	void OnRep_LockItemsClasses(); // Function ConZ.ChestItem.OnRep_LockItemsClasses // (Final|Native|Private) // @ game+0x237a470
	void OnRep_CachedInventoryCount(); // Function ConZ.ChestItem.OnRep_CachedInventoryCount // (Final|Native|Private) // @ game+0x237a450
	void OnRep_CachedColor(); // Function ConZ.ChestItem.OnRep_CachedColor // (Final|Native|Private) // @ game+0x237a430
	void OnRep_ActiveAccessLevel(); // Function ConZ.ChestItem.OnRep_ActiveAccessLevel // (Final|Native|Private) // @ game+0x237a410
	void NetMulticast_TriggerLockNeutralizationFailurePenalty(struct AActor* triggeringActor); // Function ConZ.ChestItem.NetMulticast_TriggerLockNeutralizationFailurePenalty // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x237a380
	void NetMulticast_PlayLockAddedEffects(); // Function ConZ.ChestItem.NetMulticast_PlayLockAddedEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x237a360
	bool CanViewName(struct APrisoner* Prisoner); // Function ConZ.ChestItem.CanViewName // (Final|Native|Private|Const) // @ game+0x23797c0
	bool CanChangeName(struct APrisoner* Prisoner); // Function ConZ.ChestItem.CanChangeName // (Final|Native|Private|Const) // @ game+0x23797c0
	void BP_OnInventoryCountChanged(int32_t numContainedItems); // Function ConZ.ChestItem.BP_OnInventoryCountChanged // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.EncounterBase
// Size: 0x210 (Inherited: 0x28)
struct UEncounterBase : UObject {
	char pad_28[0x60]; // 0x28(0x60)
	struct FGameplayTag _lockAreaTag; // 0x88(0x08)
	float _lockAreaRadiusMultiplier; // 0x90(0x04)
	float _lockAreaUnlockTime; // 0x94(0x04)
	struct TArray<enum class ECustomZoneEvent> _encounterBlockingCustomZoneEvents; // 0x98(0x10)
	float _radius; // 0xa8(0x04)
	int32_t _innerRadiusStepsNum; // 0xac(0x04)
	char pad_B0[0x10]; // 0xb0(0x10)
	float _removalTime; // 0xc0(0x04)
	bool _canEverBeVirtualized; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float _removalTimeAfterVirtualization; // 0xc8(0x04)
	float _fixedDuration; // 0xcc(0x04)
	float _autosaveTime; // 0xd0(0x04)
	struct FGameplayTag _encounterTypeTag; // 0xd4(0x08)
	bool _encounterTypeCooldownAppliedOnSpawn; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	float _noiseLevelThresholdToAccumulate; // 0xe0(0x04)
	float _accumulatedNoiseDropRate; // 0xe4(0x04)
	float _accumulatedNoiseDropTime; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct TMap<struct FName, float> _noiseMultiplierPerNoiseTag; // 0xf0(0x50)
	bool _startRemovalCounterIfAllRelevantPawnsAreInSubzone; // 0x140(0x01)
	bool _canBeSpawnedInsideWater; // 0x141(0x01)
	bool _canBeSetInBuildingForbiddenZone; // 0x142(0x01)
	bool _isSubjectToNewPlayerProtection; // 0x143(0x01)
	bool _isSubjectToServerSettings; // 0x144(0x01)
	char pad_145[0x3]; // 0x145(0x03)
	struct FGameplayTag _encounterServerSettingsSpawnWeightMultiplierTag; // 0x148(0x08)
	float _chanceToSpawnChildEncounter; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct TMap<struct UEncounterBase*, float> _possibleChildEncounters; // 0x158(0x50)
	struct UChildEncounterLocationGenerationMethodBase* _childEncounterLocationGenerationMethod; // 0x1a8(0x08)
	char pad_1B0[0x60]; // 0x1b0(0x60)
};

// Class ConZ.ChildEncounterLocationGenerationMethodBase
// Size: 0x28 (Inherited: 0x28)
struct UChildEncounterLocationGenerationMethodBase : UObject {
};

// Class ConZ.ChildEncounterLocationGenerationMethod_AverageCharacterLocation
// Size: 0x30 (Inherited: 0x28)
struct UChildEncounterLocationGenerationMethod_AverageCharacterLocation : UChildEncounterLocationGenerationMethodBase {
	struct FFloatInterval _encounterSpawnDistanceInterval; // 0x28(0x08)
};

// Class ConZ.ChildEncounterLocationGenerationMethod_RandomCharacterLocation
// Size: 0x30 (Inherited: 0x28)
struct UChildEncounterLocationGenerationMethod_RandomCharacterLocation : UChildEncounterLocationGenerationMethodBase {
	struct FFloatInterval _encounterSpawnDistanceInterval; // 0x28(0x08)
};

// Class ConZ.InteractionAction
// Size: 0xa8 (Inherited: 0x28)
struct UInteractionAction : UObject {
	char pad_28[0x80]; // 0x28(0x80)

	void OnActionFinished(); // Function ConZ.InteractionAction.OnActionFinished // (Native|Protected) // @ game+0x234f580
	void OnActionCanceled(); // Function ConZ.InteractionAction.OnActionCanceled // (Native|Protected) // @ game+0x115bd40
};

// Class ConZ.ChopItemAction
// Size: 0xb0 (Inherited: 0xa8)
struct UChopItemAction : UInteractionAction {
	char pad_A8[0x8]; // 0xa8(0x08)
};

// Class ConZ.Choppable
// Size: 0x28 (Inherited: 0x28)
struct UChoppable : UInterface {
};

// Class ConZ.ChoppingRecipeDataAsset
// Size: 0xc8 (Inherited: 0x30)
struct UChoppingRecipeDataAsset : UDataAsset {
	struct FChoppingRecipe ChoppingRecipe; // 0x30(0x98)
};

// Class ConZ.ChoppingToolItemTag
// Size: 0x40 (Inherited: 0x30)
struct UChoppingToolItemTag : UBaseItemTag {
	float ChoppingTimeMultiplier; // 0x30(0x04)
	int32_t IngredientsQuantityBonus; // 0x34(0x04)
	bool CanBeUsedForChoppingHair; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.ChristmasGhost
// Size: 0x300 (Inherited: 0x220)
struct AChristmasGhost : AActor {
	struct TArray<struct TSoftClassPtr<UObject>> _possibleGifts; // 0x220(0x10)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawnParticles; // 0x230(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawnAudioEvent; // 0x258(0x28)
	struct FTransform _giftSpawnParticlesRelativeTransform; // 0x280(0x30)
	char pad_2B0[0x50]; // 0x2b0(0x50)

	void SpawnGift(struct FTransform& Transform); // Function ConZ.ChristmasGhost.SpawnGift // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x237a4b0
	void Client_SpawnGiftItemEffects(struct FTransform Transform, struct UParticleSystem* ParticleSystem, struct UAkAudioEvent* AudioEvent); // Function ConZ.ChristmasGhost.Client_SpawnGiftItemEffects // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x2379920
	void Client_BeginGiftAssetsLoading(struct TSoftClassPtr<UObject> ItemClass); // Function ConZ.ChristmasGhost.Client_BeginGiftAssetsLoading // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2379860
};

// Class ConZ.CircularMenuSegmentInfo
// Size: 0xa8 (Inherited: 0x30)
struct UCircularMenuSegmentInfo : UDataAsset {
	struct FText Caption; // 0x30(0x18)
	struct UCircularMenuSegmentIcons* Icons; // 0x48(0x08)
	bool ShouldApplyFadeToIcon; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float IconSizeOverride; // 0x54(0x04)
	bool ShouldStayVisible; // 0x58(0x01)
	bool ShowTooltip; // 0x59(0x01)
	bool OverrideTooltipText; // 0x5a(0x01)
	char pad_5B[0x5]; // 0x5b(0x05)
	struct FText ToolTipText; // 0x60(0x18)
	struct FText TooltipTextUnselectable; // 0x78(0x18)
	enum class EDeluxeVersion RequiredDLC; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	struct FGameplayTag HighlightTag; // 0x94(0x08)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UCircularMenuWidget* ParentCircularWidget; // 0xa0(0x08)
};

// Class ConZ.CircularMenuSegmentWeaponMalfunctionInfo
// Size: 0xb0 (Inherited: 0xa8)
struct UCircularMenuSegmentWeaponMalfunctionInfo : UCircularMenuSegmentInfo {
	enum class EWeaponMalfunction _weaponMalfunction; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class ConZ.CircularMenuSegmentIcons
// Size: 0x50 (Inherited: 0x30)
struct UCircularMenuSegmentIcons : UDataAsset {
	struct UTexture2D* UnselectedIcon; // 0x30(0x08)
	struct UTexture2D* SelectedIcon; // 0x38(0x08)
	struct UTexture2D* DisabledIcon; // 0x40(0x08)
	struct UTexture2D* OverlayIcon; // 0x48(0x08)
};

// Class ConZ.CircularMenuSegmentSubmenuInfo
// Size: 0xc0 (Inherited: 0xa8)
struct UCircularMenuSegmentSubmenuInfo : UCircularMenuSegmentInfo {
	struct TArray<struct UCircularMenuSegmentInfo*> SubmenuInfo; // 0xa8(0x10)
	float IndexOffset; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.MusicPlayerSegmentSubmenuInfo
// Size: 0xc0 (Inherited: 0xc0)
struct UMusicPlayerSegmentSubmenuInfo : UCircularMenuSegmentSubmenuInfo {
};

// Class ConZ.VoicelineSegmentInfo
// Size: 0xb8 (Inherited: 0xa8)
struct UVoicelineSegmentInfo : UCircularMenuSegmentInfo {
	struct UCharacterVoiceline* Voiceline; // 0xa8(0x08)
	struct APrisoner* _prisoner; // 0xb0(0x08)
};

// Class ConZ.CircularMenuSegmentThrowingInfo
// Size: 0xc0 (Inherited: 0xa8)
struct UCircularMenuSegmentThrowingInfo : UCircularMenuSegmentInfo {
	struct FDelegate action; // 0xa8(0x10)
	int32_t Index; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.CircularMenuSegmentGenericInfo
// Size: 0xb8 (Inherited: 0xa8)
struct UCircularMenuSegmentGenericInfo : UCircularMenuSegmentInfo {
	struct FDelegate action; // 0xa8(0x10)
};

// Class ConZ.CircularMenuSegmentInteractionInfo
// Size: 0x160 (Inherited: 0xa8)
struct UCircularMenuSegmentInteractionInfo : UCircularMenuSegmentInfo {
	enum class EInteractionTargetType InteractionTargetType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct FInteractionStruct InteractionInfo; // 0xb0(0x98)
	struct APrisoner* _interactionInitiator; // 0x148(0x08)
	struct UObject* _interactableObject; // 0x150(0x08)
	char pad_158[0x8]; // 0x158(0x08)

	struct UCircularMenuSegmentInteractionInfo* CreateSpecific(struct APrisoner* initiator, struct UObject* interactable, struct FInteractionStruct& InteractionStruct); // Function ConZ.CircularMenuSegmentInteractionInfo.CreateSpecific // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x237a0f0
	struct UCircularMenuSegmentInteractionInfo* Create(enum class EInteractionTargetType interactionTarget, struct FInteractionStruct& InteractionStruct); // Function ConZ.CircularMenuSegmentInteractionInfo.Create // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2379cc0
};

// Class ConZ.CircularMenuMusicPlayerToggleInfo
// Size: 0x240 (Inherited: 0xa8)
struct UCircularMenuMusicPlayerToggleInfo : UCircularMenuSegmentInfo {
	enum class EInteractionTargetType InteractionTargetType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct FInteractionStruct PrimaryInteractionInfo; // 0xb0(0x98)
	struct FInteractionStruct SecondaryInteractionInfo; // 0x148(0x98)
	struct FText PrimaryCaption; // 0x1e0(0x18)
	struct UCircularMenuSegmentIcons* PrimaryIcons; // 0x1f8(0x08)
	struct FText SecondaryCaption; // 0x200(0x18)
	struct UCircularMenuSegmentIcons* SecondaryIcons; // 0x218(0x08)
	bool IsPrimaryActive; // 0x220(0x01)
	enum class EMusicPlayerCommandType MusicPlayerCommandType; // 0x221(0x01)
	char pad_222[0x6]; // 0x222(0x06)
	struct APrisoner* _interactionInitiator; // 0x228(0x08)
	struct UObject* _interactableObject; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)

	struct UCircularMenuMusicPlayerToggleInfo* CreateSpecific(struct APrisoner* interactionInitiator, struct UObject* interactableObject, struct FInteractionStruct& firstInteractionStruct, struct FInteractionStruct& secondInteractionStruct); // Function ConZ.CircularMenuMusicPlayerToggleInfo.CreateSpecific // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2379ea0
	struct UCircularMenuMusicPlayerToggleInfo* Create(enum class EInteractionTargetType interactionTarget, struct FInteractionStruct& fistInteractionStruct, struct FInteractionStruct& secondInteractionStruct); // Function ConZ.CircularMenuMusicPlayerToggleInfo.Create // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2379ab0
};

// Class ConZ.CircularMenuDanceToggleInfo
// Size: 0xc0 (Inherited: 0xc0)
struct UCircularMenuDanceToggleInfo : UCircularMenuSegmentSubmenuInfo {
};

// Class ConZ.CircularMenuSegmentDanceInfo
// Size: 0xb0 (Inherited: 0xa8)
struct UCircularMenuSegmentDanceInfo : UCircularMenuSegmentInfo {
	enum class EGestureType DanceType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class ConZ.ConZUserWidget
// Size: 0x290 (Inherited: 0x268)
struct UConZUserWidget : UUserWidget {
	struct FGameplayTagContainer GameplayTags; // 0x268(0x20)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class ConZ.CircularMenuSegmentWidget
// Size: 0x318 (Inherited: 0x290)
struct UCircularMenuSegmentWidget : UConZUserWidget {
	struct UCircularMenuTooltip* _tooltipClass; // 0x290(0x08)
	float _nonSelectableAlpha; // 0x298(0x04)
	struct FLinearColor _highlightedColour; // 0x29c(0x10)
	struct FLinearColor _unHighlightedColour; // 0x2ac(0x10)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct UCircularMenuSegmentInfo* _info; // 0x2c0(0x08)
	struct UCircularMenuSegmentWidget* _parentSegmentWidget; // 0x2c8(0x08)
	struct UImage* _segment; // 0x2d0(0x08)
	struct UOverlay* _iconsOverlay; // 0x2d8(0x08)
	struct USizeBox* _iconSizeBox; // 0x2e0(0x08)
	struct UImage* _icon; // 0x2e8(0x08)
	struct USizeBox* _overlayIconSizeBox; // 0x2f0(0x08)
	struct UImage* _overlayIcon; // 0x2f8(0x08)
	char pad_300[0x18]; // 0x300(0x18)

	void UpdateVisualParameters(int32_t numberOfSegments, int32_t Index, float Offset, float middleCutoffPercentage, float Size); // Function ConZ.CircularMenuSegmentWidget.UpdateVisualParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x237a590
	bool IsTooltipEnabled(); // Function ConZ.CircularMenuSegmentWidget.IsTooltipEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x237a330
	struct FText GetTooltipText(); // Function ConZ.CircularMenuSegmentWidget.GetTooltipText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x237a290
	struct UCircularMenuSegmentWidget* CreateFromInfo(struct UCircularMenuSegmentInfo* Info); // Function ConZ.CircularMenuSegmentWidget.CreateFromInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2379e10
};

// Class ConZ.CircularMenuTooltip
// Size: 0x2f8 (Inherited: 0x268)
struct UCircularMenuTooltip : UUserWidget {
	struct UTextBlock* _titleTextBlock; // 0x268(0x08)
	struct UTextBlock* _descriptionTextBlock; // 0x270(0x08)
	struct FDataTableRowHandle _neutralDispositionColor; // 0x278(0x10)
	struct FDataTableRowHandle _goodDispositionColor; // 0x288(0x10)
	struct FDataTableRowHandle _badDispositionColor; // 0x298(0x10)
	char pad_2A8[0x50]; // 0x2a8(0x50)
};

// Class ConZ.CircularMenuWidget
// Size: 0x2e0 (Inherited: 0x268)
struct UCircularMenuWidget : UUserWidget {
	struct TArray<struct FCircularLayerData> _layerData; // 0x268(0x10)
	float _centerSize; // 0x278(0x04)
	bool _constrainMouseToWidget; // 0x27c(0x01)
	bool _unboundOuterRadiusOnFirstInteractionLayer; // 0x27d(0x01)
	char pad_27E[0x2]; // 0x27e(0x02)
	struct TArray<struct FCircularSegmentContainer> _segmentsByLayer; // 0x280(0x10)
	struct UOverlay* _rootOverlay; // 0x290(0x08)
	struct UOverlay* _mainOverlay; // 0x298(0x08)
	struct UOverlay* _centerOverlay; // 0x2a0(0x08)
	struct UButton* _backButton; // 0x2a8(0x08)
	struct UTextBlock* _caption; // 0x2b0(0x08)
	char pad_2B8[0x10]; // 0x2b8(0x10)
	struct UCircularMenuWidget* _parentMenu; // 0x2c8(0x08)
	struct UCircularMenuWidget* _submenu; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void OnBackButtonClicked(); // Function ConZ.CircularMenuWidget.OnBackButtonClicked // (Final|Native|Private) // @ game+0x2380850
	void InitializeThrowingLayer(int32_t Layer, float Offset, struct TArray<struct UCircularMenuSegmentThrowingInfo*> SegmentInfo, int32_t countParameterOverride); // Function ConZ.CircularMenuWidget.InitializeThrowingLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x2380680
	void InitializeLayer(int32_t Layer, float Offset, struct TArray<struct UCircularMenuSegmentInfo*> SegmentInfo, int32_t countParameterOverride, bool createAdditionalDummySegments); // Function ConZ.CircularMenuWidget.InitializeLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x2380490
	int32_t GetSegmentIdForCoordinatesAndLayer(struct FVector2D Coordinates, int32_t Layer); // Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinatesAndLayer // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2380350
	int32_t GetSegmentIdForCoordinates(struct FVector2D Coordinates, int32_t& Layer); // Function ConZ.CircularMenuWidget.GetSegmentIdForCoordinates // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2380280
	struct UCircularMenuWidget* CreateThrowingMenuWidget(struct UObject* WorldContextObject, struct TArray<struct UCircularMenuSegmentThrowingInfo*> throwingSegmentInfo); // Function ConZ.CircularMenuWidget.CreateThrowingMenuWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23800c0
	struct UCircularMenuWidget* Create(struct UObject* WorldContextObject, struct TArray<struct UCircularMenuSegmentInfo*> SegmentInfo); // Function ConZ.CircularMenuWidget.Create // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x237ff90
};

// Class ConZ.CircularProgressBar
// Size: 0x2f0 (Inherited: 0x268)
struct UCircularProgressBar : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	float _speedChange; // 0x278(0x04)
	bool _shouldProgressTextBeVisible; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct FLinearColor _alarmColor; // 0x280(0x10)
	struct FLinearColor _normalColor; // 0x290(0x10)
	struct FLinearColor _textColor; // 0x2a0(0x10)
	struct UMaterialInstanceDynamic* _circularMaterial; // 0x2b0(0x08)
	struct UTexture2D* Image; // 0x2b8(0x08)
	struct UImage* Fill_Value_BCG; // 0x2c0(0x08)
	struct UImage* Icon; // 0x2c8(0x08)
	struct UHorizontalBox* ProgressTextBox; // 0x2d0(0x08)
	struct UTextBlock* TPercentage; // 0x2d8(0x08)
	struct UTextBlock* TPercentageSign; // 0x2e0(0x08)
	struct UWidgetAnimation* OuterCircleAlarmAnimation; // 0x2e8(0x08)

	void SetPercentage(float Percentage); // Function ConZ.CircularProgressBar.SetPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x2380950
	float GetPercentage(); // Function ConZ.CircularProgressBar.GetPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2380250
};

// Class ConZ.ClaimableWhenKilled
// Size: 0x28 (Inherited: 0x28)
struct UClaimableWhenKilled : UInterface {
};

// Class ConZ.CleaningItemTag
// Size: 0x30 (Inherited: 0x30)
struct UCleaningItemTag : UBaseItemTag {
};

// Class ConZ.WeaponActionClearMalfunctionSequence
// Size: 0xb8 (Inherited: 0x28)
struct UWeaponActionClearMalfunctionSequence : UWeaponAction {
	int32_t SortIndex; // 0x28(0x04)
	enum class EWeaponMalfunction MalfunctionType; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	struct FText Description; // 0x30(0x18)
	struct UCircularMenuSegmentWeaponMalfunctionInfo* CircularMenuSegmentInfo; // 0x48(0x08)
	struct TMap<enum class EWeaponMalfunction, struct FClearMalfunctionData> Malfunctions; // 0x50(0x50)
	bool CanBeInterrupted; // 0xa0(0x01)
	bool AllowBeginFiringSequence; // 0xa1(0x01)
	char pad_A2[0x16]; // 0xa2(0x16)

	bool ShowOnUI(); // Function ConZ.WeaponActionClearMalfunctionSequence.ShowOnUI // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2536010
	bool ShouldClearMalfunctionOnEvent(enum class EWeaponMalfunction malfunction, enum class EWeaponMalfunctionEvent malfunctionEvent); // Function ConZ.WeaponActionClearMalfunctionSequence.ShouldClearMalfunctionOnEvent // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2535f30
	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSectionFromPrevious // (Final|Native|Public|BlueprintCallable) // @ game+0x2535cc0
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionClearMalfunctionSequence.SetNextMontageSection // (Final|Native|Public|BlueprintCallable) // @ game+0x2535a40
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageEnded // (Native|Protected) // @ game+0x2535770
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionClearMalfunctionSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x240fb10
	void HandleMalfunctionEvent(enum class EWeaponMalfunctionEvent malfunctionEvent, struct FWeaponMalfunctionEventDescription& desc); // Function ConZ.WeaponActionClearMalfunctionSequence.HandleMalfunctionEvent // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x2534fc0
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534eb0
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionClearMalfunctionSequence.GetActiveAnimationBody // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534df0
	float Execute(); // Function ConZ.WeaponActionClearMalfunctionSequence.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x2534c20
	void End(bool Regular); // Function ConZ.WeaponActionClearMalfunctionSequence.End // (Native|Event|Public|BlueprintEvent) // @ game+0x2534ac0
	bool CanInterrupt(); // Function ConZ.WeaponActionClearMalfunctionSequence.CanInterrupt // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25349d0
	bool CanExecute(enum class EWeaponMalfunction malfunction); // Function ConZ.WeaponActionClearMalfunctionSequence.CanExecute // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25347e0
};

// Class ConZ.ClearBadRound
// Size: 0xc0 (Inherited: 0xb8)
struct UClearBadRound : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
};

// Class ConZ.ClearClipPartiallyEjected
// Size: 0xc0 (Inherited: 0xb8)
struct UClearClipPartiallyEjected : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
};

// Class ConZ.ClearDoubleFeed
// Size: 0xd0 (Inherited: 0xb8)
struct UClearDoubleFeed : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
	int32_t _ejectedRoundsCount; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct AWeaponAttachmentMagazine* _magazineToRestore; // 0xc8(0x08)
};

// Class ConZ.ClearRoundNotLoaded
// Size: 0xc0 (Inherited: 0xb8)
struct UClearRoundNotLoaded : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
};

// Class ConZ.ClearSearchButton
// Size: 0x288 (Inherited: 0x268)
struct UClearSearchButton : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UWidgetAnimation* _hoverAnimation; // 0x278(0x08)
	struct UWidgetAnimation* _clickAnimation; // 0x280(0x08)
};

// Class ConZ.ClearStovePipe
// Size: 0xc0 (Inherited: 0xb8)
struct UClearStovePipe : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
};

// Class ConZ.ClearStuckBullet
// Size: 0xc0 (Inherited: 0xb8)
struct UClearStuckBullet : UWeaponActionClearMalfunctionSequence {
	struct FName MontageEndSectionName; // 0xb8(0x08)
};

// Class ConZ.ClientPriceCache
// Size: 0x2c8 (Inherited: 0x28)
struct UClientPriceCache : UObject {
	char pad_28[0x2a0]; // 0x28(0x2a0)
};

// Class ConZ.ConZSettingsMenu
// Size: 0x608 (Inherited: 0x268)
struct UConZSettingsMenu : UBaseMenu {
	char pad_268[0x60]; // 0x268(0x60)
	struct UTabGroup* _categorySelector; // 0x2c8(0x08)
	struct UWidgetSwitcher* _categorySwitcher; // 0x2d0(0x08)
	struct UUserWidget* _tabButtonClass; // 0x2d8(0x08)
	struct UCarouselWithLabel* _subcategoryCarouselClass; // 0x2e0(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2e8(0x08)
	char pad_2F0[0x170]; // 0x2f0(0x170)
	struct UConZSettingsUIController* _settingsController; // 0x460(0x08)
	char pad_468[0x10]; // 0x468(0x10)
	struct UMenuButton* _apply; // 0x478(0x08)
	struct UMenuButton* _reset; // 0x480(0x08)
	struct UMenuButton* _resetAll; // 0x488(0x08)
	struct UMenuButton* _back; // 0x490(0x08)
	float _maxDesiredSubcategoryHeight; // 0x498(0x04)
	char pad_49C[0xb4]; // 0x49c(0xb4)
	float _tooltipDelayInSeconds; // 0x550(0x04)
	char pad_554[0x4]; // 0x554(0x04)
	struct FSlateFontInfo _requiresServerRestartFont; // 0x558(0x58)
	char pad_5B0[0x58]; // 0x5b0(0x58)

	struct UWidget* MoveFocusUp(enum class EUINavigation UINavigation); // Function ConZ.ConZSettingsMenu.MoveFocusUp // (Final|Native|Protected) // @ game+0x239f9e0
	struct UWidget* MoveFocusDown(enum class EUINavigation UINavigation); // Function ConZ.ConZSettingsMenu.MoveFocusDown // (Final|Native|Protected) // @ game+0x239f950
};

// Class ConZ.ClientSettingsMenu
// Size: 0x690 (Inherited: 0x608)
struct UClientSettingsMenu : UConZSettingsMenu {
	struct UAudioDeviceDisplay* _audioDeviceDisplay; // 0x608(0x08)
	struct UTelemetrySetting* _telemetrySettingClass; // 0x610(0x08)
	char pad_618[0x78]; // 0x618(0x78)
};

// Class ConZ.ConZSettingsUIController
// Size: 0x1e8 (Inherited: 0x28)
struct UConZSettingsUIController : UObject {
	char pad_28[0x1c0]; // 0x28(0x1c0)
};

// Class ConZ.ClientSettingsUIController
// Size: 0x220 (Inherited: 0x1e8)
struct UClientSettingsUIController : UConZSettingsUIController {
	char pad_1E8[0x38]; // 0x1e8(0x38)
};

// Class ConZ.ClockFaceWidget
// Size: 0x268 (Inherited: 0x268)
struct UClockFaceWidget : UUserWidget {

	void SetTime(float Time); // Function ConZ.ClockFaceWidget.SetTime // (Final|Native|Public|BlueprintCallable) // @ game+0x23809d0
	void SetMinutes(int32_t Minutes); // Function ConZ.ClockFaceWidget.SetMinutes // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void SetHours(int32_t Hours); // Function ConZ.ClockFaceWidget.SetHours // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.ClothesItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UClothesItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.ClothesModifierItemTag
// Size: 0x30 (Inherited: 0x30)
struct UClothesModifierItemTag : UBaseItemTag {
};

// Class ConZ.ManualEntriesDropdownWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UManualEntriesDropdownWidget : UUserWidget {
	struct UImage* _background; // 0x268(0x08)
	struct UTextBlock* _categoryNameTextBlock; // 0x270(0x08)
	struct UCheckBox* _chbSwitchDropdownState; // 0x278(0x08)
	struct UVerticalBox* _entriesContainer; // 0x280(0x08)
	int32_t _unopenedFontSize; // 0x288(0x04)
	int32_t _openedFontSize; // 0x28c(0x04)
	struct FLinearColor _unopenedBackgroundColorAndOpacity; // 0x290(0x10)
	struct FLinearColor _openedBackgroundColorAndOpacity; // 0x2a0(0x10)

	void OnDropdownStateChanged(bool isCollapsed); // Function ConZ.ManualEntriesDropdownWidget.OnDropdownStateChanged // (Final|Native|Private) // @ game+0x2423d20
};

// Class ConZ.CodexEntriesDropdownWidget
// Size: 0x2c0 (Inherited: 0x2b0)
struct UCodexEntriesDropdownWidget : UManualEntriesDropdownWidget {
	enum class ECodexCategory _codexCategory; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)
	struct UImage* _categoryIcon; // 0x2b8(0x08)
};

// Class ConZ.CodexEntriesPanelWidget
// Size: 0x380 (Inherited: 0x268)
struct UCodexEntriesPanelWidget : UUserWidget {
	struct USearchBox* _searchBox; // 0x268(0x08)
	struct UVerticalBox* _entryContainer; // 0x270(0x08)
	struct UCodexEntriesDropdownWidget* _dropdownWidgetClass; // 0x278(0x08)
	struct UCodexEntryWidget* _entryWidgetClass; // 0x280(0x08)
	char pad_288[0x28]; // 0x288(0x28)
	struct TArray<struct UCodexEntry*> _cachedCodexEntries; // 0x2b0(0x10)
	char pad_2C0[0xa0]; // 0x2c0(0xa0)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x360(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x368(0x08)
	struct UButton* _showSurvivalTipsButton; // 0x370(0x08)
	char pad_378[0x8]; // 0x378(0x08)

	void OnShowSurvivalTipsClicked(); // Function ConZ.CodexEntriesPanelWidget.OnShowSurvivalTipsClicked // (Final|Native|Private) // @ game+0x23808b0
	void OnAnyButtonHovered(); // Function ConZ.CodexEntriesPanelWidget.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void HandleOnExpandAllClicked(); // Function ConZ.CodexEntriesPanelWidget.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x2380470
	void HandleOnCollapseAllClicked(); // Function ConZ.CodexEntriesPanelWidget.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x2380450
};

// Class ConZ.CodexEntryDetailsPanelWidget
// Size: 0x2b8 (Inherited: 0x268)
struct UCodexEntryDetailsPanelWidget : UUserWidget {
	struct FMargin _elementsPadding; // 0x268(0x10)
	struct UTextBlock* _entryNameTextBlock; // 0x278(0x08)
	struct UVerticalBox* _codexEntryItemsContainer; // 0x280(0x08)
	struct UScrollBox* _scrollBox; // 0x288(0x08)
	struct UCodexSurvivalTipEntryWidget* _survivalTipEntryWidgetClass; // 0x290(0x08)
	struct UUserWidget* _horizontalSeperatorWidgetClass; // 0x298(0x08)
	char pad_2A0[0x18]; // 0x2a0(0x18)
};

// Class ConZ.ManualEntryWidget
// Size: 0x2c0 (Inherited: 0x268)
struct UManualEntryWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UTextBlock* _entryName; // 0x280(0x08)
	struct UTextBlock* _entryDescription; // 0x288(0x08)
	struct FName _pixelSizeMaterialParameterName; // 0x290(0x08)
	struct FName _dpiMaterialParameterName; // 0x298(0x08)
	struct UMaterialInstance* _inactiveMaterialInstance; // 0x2a0(0x08)
	struct UMaterialInstance* _inactiveHoveredMaterialInstance; // 0x2a8(0x08)
	struct UMaterialInstance* _activeMaterialInstance; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class ConZ.CodexEntryWidget
// Size: 0x2d0 (Inherited: 0x2c0)
struct UCodexEntryWidget : UManualEntryWidget {
	struct UCodexEntry* _entry; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class ConZ.CodexSurvivalTipEntryWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UCodexSurvivalTipEntryWidget : UUserWidget {
	struct UImage* _categoryIcon; // 0x268(0x08)
	struct URichTextBlock* _survivalTipText; // 0x270(0x08)
	struct UImage* _verticalIndicator; // 0x278(0x08)
	struct FLinearColor _readSurvivalTipColor; // 0x280(0x10)
	struct FLinearColor _unreadSurvivalTipColor; // 0x290(0x10)
};

// Class ConZ.CollapsableColorPicker
// Size: 0x2b8 (Inherited: 0x268)
struct UCollapsableColorPicker : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct USelectionOverlayWidget* _selectionOverlay; // 0x280(0x08)
	struct UTextBlock* _label; // 0x288(0x08)
	struct UImage* _colorPreviewSquare; // 0x290(0x08)
	struct UColorPicker* _colorPicker; // 0x298(0x08)
	struct FText dropdownLabel; // 0x2a0(0x18)
};

// Class ConZ.CollapsableContainer
// Size: 0x7b8 (Inherited: 0x268)
struct UCollapsableContainer : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UTextBlock* _title; // 0x280(0x08)
	struct UImage* _titleBackground; // 0x288(0x08)
	struct UButton* _displayContentButton; // 0x290(0x08)
	struct UOverlay* _contentAreaOverlay; // 0x298(0x08)
	struct FDataTableRowHandle _titleBackgroundColor; // 0x2a0(0x10)
	struct FDataTableRowHandle _titleTextColor; // 0x2b0(0x10)
	struct FButtonStyle _buttonStyleWhenCollapsedContent; // 0x2c0(0x278)
	struct FButtonStyle _buttonStyleWhenExpandedContent; // 0x538(0x278)
	char pad_7B0[0x8]; // 0x7b0(0x08)

	void OnDisplayContentButtonClicked(); // Function ConZ.CollapsableContainer.OnDisplayContentButtonClicked // (Final|Native|Private) // @ game+0x2380870
};

// Class ConZ.CutObjectAssetData
// Size: 0x38 (Inherited: 0x30)
struct UCutObjectAssetData : UInteractionAssetData {
	struct UChoppingRecipeDataAsset* ChoppingRecipeDataAsset; // 0x30(0x08)
};

// Class ConZ.CollectObjectAssetData
// Size: 0x38 (Inherited: 0x38)
struct UCollectObjectAssetData : UCutObjectAssetData {
};

// Class ConZ.CollectSeedsItemTag
// Size: 0x58 (Inherited: 0x30)
struct UCollectSeedsItemTag : UBaseItemTag {
	struct TSoftClassPtr<UObject> _seedsClass; // 0x30(0x28)
};

// Class ConZ.ColorPicker
// Size: 0x2a8 (Inherited: 0x268)
struct UColorPicker : UUserWidget {
	struct UImage* _dynamicGradient; // 0x268(0x08)
	struct UImage* _dynamicReticle; // 0x270(0x08)
	struct USlider* _sliderHUE; // 0x278(0x08)
	struct FVector2D _saturationAndBrightnessPickerSize; // 0x280(0x08)
	char pad_288[0x20]; // 0x288(0x20)
};

// Class ConZ.CombinationLockItem
// Size: 0x9b0 (Inherited: 0x9b0)
struct ACombinationLockItem : AItem {
	int32_t _combination; // 0x9a8(0x04)

	void Server_SetCombination(int32_t Value); // Function ConZ.CombinationLockItem.Server_SetCombination // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2346f60
};

// Class ConZ.CombinationLockUnlockAttemptRequest
// Size: 0x48 (Inherited: 0x28)
struct UCombinationLockUnlockAttemptRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.CombinationLockUnlockAttemptResponse
// Size: 0x30 (Inherited: 0x28)
struct UCombinationLockUnlockAttemptResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.ComboBoxStringWithIndexing
// Size: 0xe18 (Inherited: 0xe08)
struct UComboBoxStringWithIndexing : UComboBoxString {
	char pad_E08[0x10]; // 0xe08(0x10)
};

// Class ConZ.ComboBoxWrapper
// Size: 0x278 (Inherited: 0x268)
struct UComboBoxWrapper : UUserWidget {
	struct UComboBoxString* ComboBox; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class ConZ.CompanionCrowAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UCompanionCrowAnimInstance : UAnimInstance {
	bool _isIdle; // 0x2b8(0x01)
	bool _isFlyingOff; // 0x2b9(0x01)
	bool _isCruising; // 0x2ba(0x01)
	bool _isLanding; // 0x2bb(0x01)
	float _landedRatio; // 0x2bc(0x04)
	float _speed; // 0x2c0(0x04)
	float _prisonerSpeed; // 0x2c4(0x04)
};

// Class ConZ.CompanionCrow
// Size: 0x228 (Inherited: 0x220)
struct ACompanionCrow : AActor {
	struct USkeletalMeshComponent* _mesh; // 0x220(0x08)
};

// Class ConZ.CompassItemTag
// Size: 0x38 (Inherited: 0x30)
struct UCompassItemTag : UBaseItemTag {
	char CompassLevel; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.CompassWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UCompassWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UImage* _compassTrack; // 0x270(0x08)
	struct UTexture2D* _compassTrackNorthOnly; // 0x278(0x08)
	struct UTexture2D* _compassTrackCardinalOnly; // 0x280(0x08)
	struct UTexture2D* _compassTrackCardinalAndIntercardinal; // 0x288(0x08)
	struct UTexture2D* _compassTrackEverything; // 0x290(0x08)
	struct FVector2D _offset; // 0x298(0x08)
	float _compassTrackWidthMultiplier; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
};

// Class ConZ.ComplexAnimal2
// Size: 0xb50 (Inherited: 0x9d0)
struct AComplexAnimal2 : AAnimal2 {
	float EnergyDepletionRate; // 0x9c8(0x04)
	float HungerDepletionRate; // 0x9cc(0x04)
	float HungerDepletionRateWhenResting; // 0x9d0(0x04)
	float EnergyRefillRate; // 0x9d4(0x04)
	float HungerRefillRate; // 0x9d8(0x04)
	float HealthRegenerationRate; // 0x9dc(0x04)
	float HealthDepletionRate; // 0x9e0(0x04)
	struct FAnimalPaceSettings MovementPaceSettings; // 0x9e4(0x10)
	struct FAnimalStationaryRotationRateSettings RotationRateSettings; // 0x9f4(0x3c)
	struct FMulticastInlineDelegate OnActionChanged; // 0xa30(0x10)
	struct TArray<struct FChargeAttackData> ChargeAttacks; // 0xa40(0x10)
	struct TArray<struct FCloseRangeAttackData> CloseRangeAttacks; // 0xa50(0x10)
	struct FTurnMontages TurnMonatges; // 0xa60(0x10)
	struct FAnimalActionMontageData AnimalActions; // 0xa70(0x18)
	float AttackRotationRate; // 0xa88(0x04)
	float MinActionTime; // 0xa8c(0x04)
	struct FGameplayTag HitReactTypeResting; // 0xa90(0x08)
	struct FGameplayTag HitReactTypeIntimidate; // 0xa98(0x08)
	uint16_t _hungerAndEnergyReplicated; // 0xaa8(0x02)
	char pad_AAA[0x6]; // 0xaaa(0x06)
	struct FVector _lookAtPoint; // 0xab0(0x0c)
	char pad_ABC[0x50]; // 0xabc(0x50)
	float _maxLookUpAngle; // 0xb0c(0x04)
	float _maxLookRightAngle; // 0xb10(0x04)
	float _headMovementLerpSpeed; // 0xb14(0x04)
	char pad_B18[0x38]; // 0xb18(0x38)

	void Wait(float Time); // Function ConZ.ComplexAnimal2.Wait // (Native|Public|BlueprintCallable) // @ game+0x23842d0
	float TurnTowardLocation(struct FVector Location); // Function ConZ.ComplexAnimal2.TurnTowardLocation // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2384180
	float TurnTowardActor(struct AActor* foe); // Function ConZ.ComplexAnimal2.TurnTowardActor // (Native|Public|BlueprintCallable) // @ game+0x23840e0
	float TurnAwayFromActor(struct AActor* foe); // Function ConZ.ComplexAnimal2.TurnAwayFromActor // (Native|Public|BlueprintCallable) // @ game+0x2384040
	float Turn(bool directionLeft); // Function ConZ.ComplexAnimal2.Turn // (Native|Public|BlueprintCallable) // @ game+0x2383fa0
	void StopAction_Multicast(); // Function ConZ.ComplexAnimal2.StopAction_Multicast // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x2383f80
	void StartAction_Multicast(struct FRepActionData newAction); // Function ConZ.ComplexAnimal2.StartAction_Multicast // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x2383ec0
	void Sit(float Time); // Function ConZ.ComplexAnimal2.Sit // (Native|Public|BlueprintCallable) // @ game+0x2383e30
	void Rest(float Time); // Function ConZ.ComplexAnimal2.Rest // (Native|Public|BlueprintCallable) // @ game+0x2383da0
	void ResetRotationRate(); // Function ConZ.ComplexAnimal2.ResetRotationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x2383d80
	bool PreformChargeAttack(int32_t attackIndex, float Time); // Function ConZ.ComplexAnimal2.PreformChargeAttack // (Native|Public|BlueprintCallable) // @ game+0x2383c80
	void OnRep_HungerAndEnergy(); // Function ConZ.ComplexAnimal2.OnRep_HungerAndEnergy // (Native|Protected) // @ game+0x2383ae0
	void OnRep_ActionData(); // Function ConZ.ComplexAnimal2.OnRep_ActionData // (Native|Protected) // @ game+0x2383ac0
	void NetMulticast_ForceSetAnimalRotation(struct FRotator NewRotation); // Function ConZ.ComplexAnimal2.NetMulticast_ForceSetAnimalRotation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x2383960
	bool IsAttacking(); // Function ConZ.ComplexAnimal2.IsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383930
	void Intimidate(float Time, struct AActor* foe); // Function ConZ.ComplexAnimal2.Intimidate // (Native|Public|BlueprintCallable) // @ game+0x2383850
	struct FVector GetSpeed(); // Function ConZ.ComplexAnimal2.GetSpeed // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383730
	float GetAngularVelocity(); // Function ConZ.ComplexAnimal2.GetAngularVelocity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383700
	void ForceRoattionRate(struct FRotator RotationRate); // Function ConZ.ComplexAnimal2.ForceRoattionRate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2383670
	void Eat(float Time); // Function ConZ.ComplexAnimal2.Eat // (Native|Public|BlueprintCallable) // @ game+0x23835e0
	bool ChargeAttackFoe(struct AActor* foe); // Function ConZ.ComplexAnimal2.ChargeAttackFoe // (Native|Public|BlueprintCallable) // @ game+0x2383540
	void ChangeSpeed(float pace); // Function ConZ.ComplexAnimal2.ChangeSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x23834c0
	void ChangePace(enum class EAnimalMovementPace pace); // Function ConZ.ComplexAnimal2.ChangePace // (Final|Native|Public|BlueprintCallable) // @ game+0x2383440
	void Alert(float Time); // Function ConZ.ComplexAnimal2.Alert // (Final|Native|Public|BlueprintCallable) // @ game+0x2383340
};

// Class ConZ.ComplexAnimal2AnimInstance
// Size: 0x360 (Inherited: 0x2f0)
struct UComplexAnimal2AnimInstance : UAnimal2AnimInstance {
	enum class EAnimalAction CurrentAction; // 0x2f0(0x01)
	char pad_2F1[0x3]; // 0x2f1(0x03)
	float HeadLookRight; // 0x2f4(0x04)
	float HeadLookUp; // 0x2f8(0x04)
	float AngularVelocity; // 0x2fc(0x04)
	struct FName faceMorphTargetName; // 0x300(0x08)
	float InterpolationSpeed; // 0x308(0x04)
	float BlendInTime; // 0x30c(0x04)
	float BlendOutTime; // 0x310(0x04)
	char pad_314[0x3c]; // 0x314(0x3c)
	float _faceMorphValueChangePerSeconds; // 0x350(0x04)
	char pad_354[0xc]; // 0x354(0x0c)

	float GetTurnInPlaceElapsedTimeRight(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeRight // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383830
	float GetTurnInPlaceElapsedTimeLeft(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceElapsedTimeLeft // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383810
	float GetTurnInPlaceDirectionBlendAlpha(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceDirectionBlendAlpha // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x23837c0
	float GetTurnInPlaceBlendAlpha(); // Function ConZ.ComplexAnimal2AnimInstance.GetTurnInPlaceBlendAlpha // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x2383770
};

// Class ConZ.ConsoleStatics
// Size: 0x28 (Inherited: 0x28)
struct UConsoleStatics : UObject {
};

// Class ConZ.ConstitutionSkill
// Size: 0xc8 (Inherited: 0xb0)
struct UConstitutionSkill : USkill {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.ConsumableUserData
// Size: 0x28 (Inherited: 0x28)
struct UConsumableUserData : UObject {
};

// Class ConZ.FoodItem
// Size: 0xa50 (Inherited: 0x9b0)
struct AFoodItem : AItem {
	float AccumulatedFatigueBonus; // 0x9a8(0x04)
	float ThermalConductivityFactor; // 0x9ac(0x04)
	float FreezingTemperature; // 0x9b0(0x04)
	float RoomTemperature; // 0x9b4(0x04)
	bool Spoilable; // 0x9b8(0x01)
	float ShelfLife; // 0x9bc(0x04)
	float SpoilageRateFrozen; // 0x9c0(0x04)
	float SpoilageRateModifierWhileSealed; // 0x9c4(0x04)
	bool IsConsumable; // 0x9c8(0x01)
	bool CanCheckTaste; // 0x9c9(0x01)
	char pad_9CF[0x1]; // 0x9cf(0x01)
	struct UParticleSystemComponent* SteamComponent; // 0x9d0(0x08)
	struct UParticleSystem* SteamParticles; // 0x9d8(0x08)
	struct UParticleSystemComponent* SmokeComponent; // 0x9e0(0x08)
	struct UParticleSystem* SmokeParticles; // 0x9e8(0x08)
	struct UStaticMesh* ItemOpenedMesh; // 0x9f0(0x08)
	struct UStaticMesh* ItemEmptyMesh; // 0x9f8(0x08)
	struct UAkAudioEvent* StartEatingAudioEvent; // 0xa00(0x08)
	struct UAkAudioEvent* StopEatingAudioEvent; // 0xa08(0x08)
	struct UAkAudioEvent* StartCookingAudioEvent; // 0xa10(0x08)
	struct UAkAudioEvent* StopCookingAudioEvent; // 0xa18(0x08)
	struct UGameResourceType* _resourceTypeForConsumption; // 0xa20(0x08)
	float _caloriesBonus; // 0xa28(0x04)
	float _catchSicknessModifier; // 0xa2c(0x04)
	bool _itemOpened; // 0xa30(0x01)
	char pad_A31[0x7]; // 0xa31(0x07)
	float _repTemperature; // 0xa38(0x04)
	char pad_A3C[0x14]; // 0xa3c(0x14)

	void OnRep_ItemOpened(); // Function ConZ.FoodItem.OnRep_ItemOpened // (Final|Native|Private) // @ game+0x23e7c90
	void OnAudioComponentExpired(); // Function ConZ.FoodItem.OnAudioComponentExpired // (Final|Native|Private|Const) // @ game+0x23c3840
};

// Class ConZ.ConsumableBuffItem
// Size: 0xa50 (Inherited: 0xa50)
struct AConsumableBuffItem : AFoodItem {
};

// Class ConZ.ConsumableDigestionHandler
// Size: 0x28 (Inherited: 0x28)
struct UConsumableDigestionHandler : UObject {
};

// Class ConZ.ContainerDisplay
// Size: 0x328 (Inherited: 0x268)
struct UContainerDisplay : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct UImage* _containerImage; // 0x2c8(0x08)
	struct UImage* _containerImage2; // 0x2d0(0x08)
	struct USizeBox* _sizeBox; // 0x2d8(0x08)
	struct UTextBlock* _name; // 0x2e0(0x08)
	struct UTextBlock* _name2; // 0x2e8(0x08)
	struct UTextBlock* _durability; // 0x2f0(0x08)
	struct UTextBlock* _durability2; // 0x2f8(0x08)
	struct UProgressBar* _durabilityProgressBar; // 0x300(0x08)
	struct UProgressBar* _durabilityProgressBar2; // 0x308(0x08)
	struct UWidgetSwitcher* _selectionSwitcher; // 0x310(0x08)
	float _width; // 0x318(0x04)
	float _height; // 0x31c(0x04)
	char pad_320[0x8]; // 0x320(0x08)
};

// Class ConZ.ContainerItemDescriptor
// Size: 0x248 (Inherited: 0x28)
struct UContainerItemDescriptor : UObject {
	char pad_28[0x38]; // 0x28(0x38)
	struct UObject* _itemClass; // 0x60(0x08)
	char pad_68[0x18]; // 0x68(0x18)
	struct FContainerItemDescriptorData _data; // 0x80(0x60)
	struct TScriptInterface<IInventoryContainer> _owningContainer; // 0xe0(0x10)
	struct TScriptInterface<IInventoryNode> _owningNode; // 0xf0(0x10)
	char pad_100[0x148]; // 0x100(0x148)
};

// Class ConZ.ContinuousFuelConsumptionEntityComponentSave
// Size: 0x30 (Inherited: 0x28)
struct UContinuousFuelConsumptionEntityComponentSave : UObject {
	bool TickEnabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class ConZ.ContinuousFuelConsumptionEntityComponentSetup
// Size: 0x68 (Inherited: 0x48)
struct UContinuousFuelConsumptionEntityComponentSetup : UEntityComponentSetup {
	bool HasInfiniteResources; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UGameResourceType* ResourceType; // 0x50(0x08)
	bool AutoFindResourceComponent; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FName AssociatedResourceComponentName; // 0x5c(0x08)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class ConZ.ContinuousFuelHeatSource
// Size: 0x310 (Inherited: 0x220)
struct UContinuousFuelHeatSource : UFueledHeatSource {
	char pad_220[0x8]; // 0x220(0x08)
	bool _autoFindFuelConsumption; // 0x228(0x01)
	char pad_229[0x3]; // 0x229(0x03)
	struct FName _associatedFuelConsumptionEntityComponent; // 0x22c(0x08)
	char pad_234[0x4]; // 0x234(0x04)
	struct UGameResourceType* _resourceType; // 0x238(0x08)
	bool _requiresMinimumAvailableEnergyAmountToTurnOn; // 0x240(0x01)
	bool _isRecreateable; // 0x241(0x01)
	char pad_242[0x2]; // 0x242(0x02)
	float _maxEnergyConsumptionRate; // 0x244(0x04)
	char _repCurrentEnergyConsumptionRatio; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FRuntimeFloatCurve _energyConsumptionRateVsTemperatureScaleCurve; // 0x250(0x88)
	char _repDialValue; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	float _dialOffValue; // 0x2dc(0x04)
	float _minDialDeltaValueForRPC; // 0x2e0(0x04)
	float _updateToServerCheckInterval; // 0x2e4(0x04)
	char pad_2E8[0x28]; // 0x2e8(0x28)

	void OnRep_DialValue(); // Function ConZ.ContinuousFuelHeatSource.OnRep_DialValue // (Final|Native|Private) // @ game+0x238ccd0
	void OnRep_ConsumptionRate(char previousConsumptionRate); // Function ConZ.ContinuousFuelHeatSource.OnRep_ConsumptionRate // (Final|Native|Private) // @ game+0x238cc50
};

// Class ConZ.ControlMappingsUIController
// Size: 0x1c0 (Inherited: 0x28)
struct UControlMappingsUIController : UObject {
	char pad_28[0x198]; // 0x28(0x198)
};

// Class ConZ.ControlMappingWidget
// Size: 0x8b8 (Inherited: 0x268)
struct UControlMappingWidget : UUserWidget {
	char pad_268[0x78]; // 0x268(0x78)
	struct UTextBlock* _label; // 0x2e0(0x08)
	struct UTextBlock* _keyCombination; // 0x2e8(0x08)
	struct UImage* _focusBackgroundImage; // 0x2f0(0x08)
	struct FControlMappingStyle _selectedAndFocusedCMStyle; // 0x2f8(0x158)
	struct FControlMappingStyle _selectedAndUnfocusedCMStyle; // 0x450(0x158)
	struct FControlMappingStyle _unselectedCMStyle; // 0x5a8(0x158)
	struct FControlMappingStyle _highlightedCMStyle; // 0x700(0x158)
	float _mouseMoveDeltaThreshold; // 0x858(0x04)
	char pad_85C[0x5c]; // 0x85c(0x5c)
};

// Class ConZ.ConZAIControllerEncounterSaveState
// Size: 0x80 (Inherited: 0x28)
struct UConZAIControllerEncounterSaveState : UObject {
	struct FDbIntegerId AttackedBaseId; // 0x28(0x08)
	struct TSet<struct FDbIntegerId> AttackedBaseFlagsIds; // 0x30(0x50)
};

// Class ConZ.ConZAssetManager
// Size: 0x6f8 (Inherited: 0x478)
struct UConZAssetManager : UAssetManager {
	struct TArray<struct FImageAssetToLoad> _imageAssetsToLoad; // 0x478(0x10)
	char pad_488[0x50]; // 0x488(0x50)
	struct TMap<struct FName, struct ULWObjectSetup*> _lwobjectSetupByPrimaryAssetName; // 0x4d8(0x50)
	char pad_528[0xf0]; // 0x528(0xf0)
	struct TArray<struct UPrisonerResponseIdle*> _prisonerResponseIdleCDOs; // 0x618(0x10)
	struct TArray<struct UPrisonerBodyEffect*> _autoAddablePrisonerBodyEffectCDOs; // 0x628(0x10)
	struct TArray<struct UItemCraftingRecipe*> _itemCraftingRecipes; // 0x638(0x10)
	struct TArray<struct UPlaceableCraftingRecipe*> _placeableCraftingRecipes; // 0x648(0x10)
	char pad_658[0xa0]; // 0x658(0xa0)
};

// Class ConZ.ConZBase
// Size: 0x548 (Inherited: 0x220)
struct AConZBase : AActor {
	char pad_220[0x60]; // 0x220(0x60)
	struct TWeakObjectPtr<struct AConZBaseElement> _baseElementActor; // 0x280(0x08)
	char pad_288[0x70]; // 0x288(0x70)
	struct TSet<struct UObject*> _referencedBaseElementClasses; // 0x2f8(0x50)
	char pad_348[0x1be]; // 0x348(0x1be)
	bool _overrideBlockStackingRules; // 0x506(0x01)
	char pad_507[0x1]; // 0x507(0x01)
	float _debugRenderingDistance; // 0x508(0x04)
	int32_t _decayProcessingNumberOfFrames; // 0x50c(0x04)
	int32_t _decayProcessingMaxDestroyedElementsPerUpdate; // 0x510(0x04)
	char pad_514[0x34]; // 0x514(0x34)

	void OnElementInteracted(struct APrisoner* User, enum class EInteractionType interactionType, struct FInteractionData& InteractionData, struct FBaseInteractionParams& BaseInteractionParams); // Function ConZ.ConZBase.OnElementInteracted // (Final|Native|Public|HasOutParms) // @ game+0x238ca50
	struct FString GetBaseName(); // Function ConZ.ConZBase.GetBaseName // (Final|Native|Public|Const) // @ game+0x238b580
	void AwardFamePointsToOnlineFlagOwners(int32_t flagIndex, float totalFlagInterval, float fameInterval); // Function ConZ.ConZBase.AwardFamePointsToOnlineFlagOwners // (Final|Native|Private|Const) // @ game+0x238b470
};

// Class ConZ.ConZBaseElement
// Size: 0x380 (Inherited: 0x220)
struct AConZBaseElement : AActor {
	char pad_220[0x30]; // 0x220(0x30)
	struct USceneComponent* _weatherMaskComponentClass; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
	struct TMap<struct UStaticMesh*, struct UIndexedHierarchicalInstancedStaticMeshComponent*> _elementClassMap; // 0x260(0x50)
	char pad_2B0[0x50]; // 0x2b0(0x50)
	struct UIndexedHierarchicalInstancedStaticMeshComponent* _interactRayBlockingMeshInstancedComponent; // 0x300(0x08)
	char pad_308[0x78]; // 0x308(0x78)
};

// Class ConZ.ConZBaseManager
// Size: 0x4e8 (Inherited: 0x220)
struct AConZBaseManager : AActor {
	char pad_220[0xd8]; // 0x220(0xd8)
	float _damageEventProcessingPeriod; // 0x2f8(0x04)
	float _decayProcessingPeriod; // 0x2fc(0x04)
	float _flagOvertakePeriod; // 0x300(0x04)
	float _baseInteractionsPeriod; // 0x304(0x04)
	struct AConZBase* _baseClass; // 0x308(0x08)
	struct AConZBaseElement* _baseElementClass; // 0x310(0x08)
	struct AFlagAreaVisualizer* _flagAreaVisualizerClass; // 0x318(0x08)
	struct FVector2D _initialBaseSize; // 0x320(0x08)
	struct FGameplayTag _serverSettingMaxAmountParentTag; // 0x328(0x08)
	struct FGameplayTagContainer _serverSettingMaxAmountTagsToIgnoreForDecaySetting; // 0x330(0x20)
	float _flagInfluenceRadius; // 0x350(0x04)
	int32_t _flagOvertakeDuration; // 0x354(0x04)
	int32_t _maxElementsPerFlag; // 0x358(0x04)
	int32_t _extraElementsPerFlagForAdditionalSquadMember; // 0x35c(0x04)
	int32_t _maxNumberOfExpandedElementsPerFlag; // 0x360(0x04)
	bool _allowMultipleFlagsPerPlayer; // 0x364(0x01)
	bool _allowFlagPlacementOnBBElements; // 0x365(0x01)
	char pad_366[0x2]; // 0x366(0x02)
	float _maxBaseBuildingHeight; // 0x368(0x04)
	struct FConZBaseRepairAreaDuration _shortRepairDuration; // 0x36c(0x08)
	struct FConZBaseRepairAreaDuration _mediumRepairDuration; // 0x374(0x08)
	struct FConZBaseRepairAreaDuration _longRepairDuration; // 0x37c(0x08)
	char pad_384[0x1c]; // 0x384(0x1c)
	struct TMap<int64_t, struct AConZBase*> _bases; // 0x3a0(0x50)
	char pad_3F0[0xf8]; // 0x3f0(0xf8)

	void NetMulticast_UpdateItemElementsLocationsAndRotations(int32_t dataVersion, struct TArray<struct FConZBaseElementTransformData> itemElements); // Function ConZ.ConZBaseManager.NetMulticast_UpdateItemElementsLocationsAndRotations // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c970
	void NetMulticast_TransferOwnership(int32_t dataVersion, struct FDbIntegerId oldId, struct FDbIntegerId newId); // Function ConZ.ConZBaseManager.NetMulticast_TransferOwnership // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c860
	void NetMulticast_SpawnBaseElement(int32_t dataVersion, struct FTransform Transform, struct FConZBaseData baseData, struct UObject* ElementClass, int64_t ElementID, int64_t OwnerUserProfileId, int64_t CreatorPrisonerId, bool IsOwnedByPlayer, struct FBaseElementSpawnParams Params); // Function ConZ.ConZBaseManager.NetMulticast_SpawnBaseElement // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x238c4f0
	void NetMulticast_SetDebugMode(struct APrisoner* Prisoner, enum class EBaseBuildingDebugMode mode); // Function ConZ.ConZBaseManager.NetMulticast_SetDebugMode // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c420
	void NetMulticast_SetBaseOwnerPlayerId(int32_t dataVersion, struct FConZBaseInteractionData baseData, int64_t PlayerId); // Function ConZ.ConZBaseManager.NetMulticast_SetBaseOwnerPlayerId // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c2f0
	void NetMulticast_SetBaseHasActiveEncounter(int32_t dataVersion, int64_t BaseId, bool Value); // Function ConZ.ConZBaseManager.NetMulticast_SetBaseHasActiveEncounter // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c1e0
	void NetMulticast_ProcessDecay(int32_t dataVersion, float DeltaSeconds); // Function ConZ.ConZBaseManager.NetMulticast_ProcessDecay // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238c110
	void NetMulticast_InteractWithElement(int32_t dataVersion, enum class EInteractionType interactionType, struct FConZBaseInteractionData baseData, struct FConZBaseElementInteractionData baseElementData, struct APrisoner* User); // Function ConZ.ConZBaseManager.NetMulticast_InteractWithElement // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238bf20
	void NetMulticast_ExecuteFlagOvertake(int32_t dataVersion, int64_t ElementID, struct FVector elementLocation, struct FDbIntegerId PlayerId); // Function ConZ.ConZBaseManager.NetMulticast_ExecuteFlagOvertake // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x238bdb0
	void NetMulticast_DestroyElement(int32_t dataVersion, struct FConZBaseElementIdentifier ElementIdentifier, enum class EDestroyElementReason reason, bool cascade); // Function ConZ.ConZBaseManager.NetMulticast_DestroyElement // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238bc30
	void NetMulticast_DestroyAllElementsInRadius(int32_t dataVersion, struct FVector Center, float Radius, float minElementAreaCovered, float minAngleDeg, float maxAngleDeg, struct FVector forwardVector, enum class EBaseElementType typeFilter); // Function ConZ.ConZBaseManager.NetMulticast_DestroyAllElementsInRadius // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x238b9d0
	void NetMulticast_ClearBaseOwnerPlayerId(int32_t dataVersion, struct FConZBaseInteractionData baseData); // Function ConZ.ConZBaseManager.NetMulticast_ClearBaseOwnerPlayerId // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238b8e0
	void NetMulticast_ChangeFlagOwner(int32_t dataVersion, struct FDbIntegerId oldOwnerProfileId, struct FDbIntegerId newOwnerProfileId); // Function ConZ.ConZBaseManager.NetMulticast_ChangeFlagOwner // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x238b7d0
	void NetMulticast_ApplyDamageToBaseElement(int32_t dataVersion, int64_t BaseId, int64_t ElementID, struct FVector elementLocation, float damageAmount); // Function ConZ.ConZBaseManager.NetMulticast_ApplyDamageToBaseElement // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x238b600
};

// Class ConZ.ModularBaseBuildingSocketType
// Size: 0x28 (Inherited: 0x28)
struct UModularBaseBuildingSocketType : UObject {
};

// Class ConZ.ConZBoatAnimInstance
// Size: 0x350 (Inherited: 0x2c0)
struct UConZBoatAnimInstance : UAnimInstance {
	bool IsAnyoneMounted; // 0x2b8(0x01)
	float Speed; // 0x2bc(0x04)
	float SpeedKph; // 0x2c0(0x04)
	float MaxEngineSteerAngle; // 0x2c4(0x04)
	float EngineSteerAngleInterpSpeed; // 0x2c8(0x04)
	float CurrentEngineSteerAngle; // 0x2cc(0x04)
	float PropellerRotationAngle; // 0x2d0(0x04)
	float PropellerRotationSpeedScale; // 0x2d4(0x04)
	float SailsRotationAngle; // 0x2d8(0x04)
	bool IsMounteeDriver; // 0x2dc(0x01)
	bool IsMounteeRowing; // 0x2dd(0x01)
	struct FTransform _prisonerLHandTransform; // 0x2e0(0x30)
	struct FTransform _prisonerRHandTransform; // 0x310(0x30)
	struct FVector WindDirection; // 0x340(0x0c)
	char pad_34F[0x1]; // 0x34f(0x01)
};

// Class ConZ.ConZBorderBase
// Size: 0x2a8 (Inherited: 0x268)
struct UConZBorderBase : UUserWidget {
	enum class EBorderSizes _borderSize; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FLinearColor _color; // 0x26c(0x10)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct UTexture2D* White1x1; // 0x280(0x08)
	struct UTexture2D* White2x2; // 0x288(0x08)
	struct UTexture2D* White4x4; // 0x290(0x08)
	struct UImage* Image_1; // 0x298(0x08)
	struct UNamedSlot* NamedSlot_1; // 0x2a0(0x08)

	void SetColor(struct FLinearColor Color); // Function ConZ.ConZBorderBase.SetColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2392090
};

// Class ConZ.ConZButton
// Size: 0x28 (Inherited: 0x28)
struct UConZButton : UInterface {
};

// Class ConZ.ConZCameraManager
// Size: 0x28e0 (Inherited: 0x2810)
struct AConZCameraManager : APlayerCameraManager {
	char pad_2810[0x1c]; // 0x2810(0x1c)
	float _introCinematicDuration; // 0x282c(0x04)
	struct FRuntimeFloatCurve _staticMeshLODDistanceScaleVSFOV; // 0x2830(0x88)
	char pad_28B8[0x28]; // 0x28b8(0x28)
};

// Class ConZ.ConZCharacterSkeletalMeshComponent
// Size: 0xee0 (Inherited: 0xee0)
struct UConZCharacterSkeletalMeshComponent : USkeletalMeshComponent {
};

// Class ConZ.ConZCustomInteractionButton
// Size: 0x438 (Inherited: 0x430)
struct UConZCustomInteractionButton : UButton {
	char pad_430[0x8]; // 0x430(0x08)
};

// Class ConZ.ConZCustomInteractionMultilineEditableText
// Size: 0x480 (Inherited: 0x478)
struct UConZCustomInteractionMultilineEditableText : UMultiLineEditableText {
	char pad_478[0x8]; // 0x478(0x08)
};

// Class ConZ.ConZCustomInteractionWidget
// Size: 0x28 (Inherited: 0x28)
struct UConZCustomInteractionWidget : UInterface {
};

// Class ConZ.ConZDoorNavLinkComponent
// Size: 0x190 (Inherited: 0x190)
struct UConZDoorNavLinkComponent : UNavLinkCustomComponent {
};

// Class ConZ.ConZEconomyManager
// Size: 0xc98 (Inherited: 0x220)
struct AConZEconomyManager : AActor {
	char pad_220[0xc0]; // 0x220(0xc0)
	struct UTraderManagingComponent* _traderManagingComponent; // 0x2e0(0x08)
	char pad_2E8[0x4]; // 0x2e8(0x04)
	float _autoSaveInterval; // 0x2ec(0x04)
	char pad_2F0[0x4]; // 0x2f0(0x04)
	bool _shouldIgnoreDatabaseSerialization; // 0x2f4(0x01)
	char pad_2F5[0x1b]; // 0x2f5(0x1b)
	struct FTradeOutpostProsperityLevelInfo _prosperityLevelInfoPerLevel[0x6]; // 0x310(0xf0)
	char pad_400[0x8]; // 0x400(0x08)
	struct TMap<float, int32_t> _expensiveTradeablesSpawnChanceMap; // 0x408(0x50)
	struct UCurveFloat* _playerPurchasePriceDeltaVsChanceCurve; // 0x458(0x08)
	float _betterPurchasePricesChance; // 0x460(0x04)
	float _maxOutpostBuyingCapability; // 0x464(0x04)
	int32_t _maxOutpostGoldBuyingCapability; // 0x468(0x04)
	int32_t _goldBasePrice; // 0x46c(0x04)
	float _playerGoldSalePriceModifier; // 0x470(0x04)
	float _goldPriceChangePercentageStep; // 0x474(0x04)
	float _goldPriceChangePerStep; // 0x478(0x04)
	char pad_47C[0x84]; // 0x47c(0x84)
	struct UDataTable* _tradeableDescTable; // 0x500(0x08)
	char pad_508[0x520]; // 0x508(0x520)
	struct FString _economyOverrideJSONFileName; // 0xa28(0x10)
	struct FGameplayTag _vehicleSpawnGroupParentTag; // 0xa38(0x08)
	char pad_A40[0x124]; // 0xa40(0x124)
	int32_t _defaultMaxPerGroup; // 0xb64(0x04)
	char pad_B68[0x50]; // 0xb68(0x50)
	float _maxSaleDistance; // 0xbb8(0x04)
	int32_t _maxTradeablePurchasedPerTransaction; // 0xbbc(0x04)
	char pad_BC0[0x10]; // 0xbc0(0x10)
	struct UCurveFloat* _tradeableBuyPriceMultiplierVsNumberOfPlayersCurve; // 0xbd0(0x08)
	struct UCurveFloat* _tradeableSellPriceMultiplierVsNumberOfPlayersCurve; // 0xbd8(0x08)
	char pad_BE0[0xc]; // 0xbe0(0x0c)
	float _priceMultiplierBasedOnNumberOfPlayersInterval; // 0xbec(0x04)
	char pad_BF0[0x1a]; // 0xbf0(0x1a)
	bool _tradersUnlimitedStock; // 0xc0a(0x01)
	char pad_C0B[0x2]; // 0xc0b(0x02)
	bool _isFamePointRequirementEnabled; // 0xc0d(0x01)
	char pad_C0E[0x2]; // 0xc0e(0x02)
	struct TArray<struct FPendingTraderPersonalityDataHelperStruct> _pendingTraderPersonalities; // 0xc10(0x10)
	char pad_C20[0x10]; // 0xc20(0x10)
	bool _shouldCommunicateWithMasterServer; // 0xc30(0x01)
	char pad_C31[0x67]; // 0xc31(0x67)

	void NetMulticast_UpdateTradeablePriceMultiplierFactor(int32_t dataVersion, int32_t tradeablePriceMultiplierFactor); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeablePriceMultiplierFactor // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391a30
	void NetMulticast_UpdateTradeableClassMapHelperOverrides(int32_t dataVersion, struct FTradeableClassDataOverrideReplicationHelper overrideUpdates); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateTradeableClassMapHelperOverrides // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391860
	void NetMulticast_UpdateGoldPriceMasterMultiplier(int32_t dataVersion, float goldPriceMasterMultiplier); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateGoldPriceMasterMultiplier // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391790
	void NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap(int32_t dataVersion, struct TArray<struct FDateTime> dates, struct TArray<float> multipliers); // Function ConZ.ConZEconomyManager.NetMulticast_UpdateDateVsGoldPriceMasterMultiplierMap // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2391650
};

// Class ConZ.ConZGameInstance
// Size: 0x528 (Inherited: 0x1a8)
struct UConZGameInstance : UGameInstance {
	struct FCommonMaps CommonMaps; // 0x1a8(0x78)
	struct FCharacterCreationMenuContext CharacterCreationMenuContext; // 0x220(0x30)
	bool NetworkFailed; // 0x250(0x01)
	bool WasKickedFromGameSession; // 0x251(0x01)
	char pad_252[0x16]; // 0x252(0x16)
	struct UGameplayLog* GameplayLogLogin; // 0x268(0x08)
	struct UGameplayLog* GameplayLogAdmin; // 0x270(0x08)
	struct UGameplayLog* GameplayLogEventKill; // 0x278(0x08)
	struct UGameplayLog* GameplayLogKill; // 0x280(0x08)
	struct UGameplayLog* GameplayLogViolations; // 0x288(0x08)
	struct UGameplayLog* GameplayLogChat; // 0x290(0x08)
	struct UGameplayLog* GameplayLogEconomy; // 0x298(0x08)
	struct UGameplayLog* GameplayLogMiscellaneous; // 0x2a0(0x08)
	struct UGameplayLog* GameplayLogFamePoints; // 0x2a8(0x08)
	struct UGameplayLog* GameplayLogLoot; // 0x2b0(0x08)
	struct UGameplayLog* GameplayLogRaidProtection; // 0x2b8(0x08)
	struct UGameplayLog* GameplayLogChestOwnership; // 0x2c0(0x08)
	struct UGameplayLog* GameplayLogQuests; // 0x2c8(0x08)
	struct UGameplayLog* GameplayLogVehicleDestruction; // 0x2d0(0x08)
	char pad_2D8[0x50]; // 0x2d8(0x50)
	struct TMap<uint32_t, struct UDbConnection*> _databaseConnections; // 0x328(0x50)
	char pad_378[0x28]; // 0x378(0x28)
	struct UDbAsyncWorker* _dbAsyncWorker; // 0x3a0(0x08)
	struct UDbIdGenerator* _dbIdGenerator; // 0x3a8(0x08)
	char pad_3B0[0x18]; // 0x3b0(0x18)
	struct UDedicatedServerRequest* _dedicatedServerRequest; // 0x3c8(0x08)
	struct UUserManager* _userManager; // 0x3d0(0x08)
	struct UTwitchDropsManager* _twitchDropsManager; // 0x3d8(0x08)
	struct UUser* _currentUser; // 0x3e0(0x08)
	struct UUserProfile* _currentUserProfile; // 0x3e8(0x08)
	char pad_3F0[0x18]; // 0x3f0(0x18)
	struct UEntitySystem* _entitySystemClass; // 0x408(0x08)
	struct UEntitySystem* _entitySystem; // 0x410(0x08)
	struct UTexture2D* _loadingScreenTexture; // 0x418(0x08)
	struct ULoadingScreen* _loadingScreen; // 0x420(0x08)
	struct ULoadingScreen* _specialLoadingScreen; // 0x428(0x08)
	char pad_430[0x88]; // 0x430(0x88)
	struct UAdminCommandRegistry* _adminCommandRegistry; // 0x4b8(0x08)
	char pad_4C0[0x68]; // 0x4c0(0x68)

	void StartSingleplayerGame(); // Function ConZ.ConZGameInstance.StartSingleplayerGame // (Final|Native|Public|BlueprintCallable) // @ game+0x2392450
	void StartMultiplayerGame(struct FString Ip, int32_t GameplayPort, int32_t ResponsePort, struct FString AuthToken); // Function ConZ.ConZGameInstance.StartMultiplayerGame // (Final|Native|Public|BlueprintCallable) // @ game+0x23922d0
	void SetPlayAsDrone(bool Value); // Function ConZ.ConZGameInstance.SetPlayAsDrone // (Final|Native|Public|BlueprintCallable) // @ game+0x2392240
	void RemoveLoadingWidget(); // Function ConZ.ConZGameInstance.RemoveLoadingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x2391d80
	void OnPreLoadMap(struct FString mapName); // Function ConZ.ConZGameInstance.OnPreLoadMap // (Native|Public) // @ game+0x2391c20
	void OnPostLoadMap(struct UWorld* loadedWorld); // Function ConZ.ConZGameInstance.OnPostLoadMap // (Native|Public) // @ game+0x2391b90
	void OnPlaySessionEnd(bool quit); // Function ConZ.ConZGameInstance.OnPlaySessionEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x2391b00
	bool IsTransitioningMap(); // Function ConZ.ConZGameInstance.IsTransitioningMap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2391250
	void HandleNetworkFailure(struct UWorld* World, struct UNetDriver* NetDriver, enum class ENetworkFailure FailureType, struct FString errorString); // Function ConZ.ConZGameInstance.HandleNetworkFailure // (Final|Native|Public) // @ game+0x2390fb0
	bool GetPlayAsDrone(); // Function ConZ.ConZGameInstance.GetPlayAsDrone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390f50
	struct FText GetLastNetworkError(); // Function ConZ.ConZGameInstance.GetLastNetworkError // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390eb0
	struct UDedicatedServerRequest* GetDedicatedServerRequest(); // Function ConZ.ConZGameInstance.GetDedicatedServerRequest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390ca0
	struct UDbConnection* GetDatabaseConnection(); // Function ConZ.ConZGameInstance.GetDatabaseConnection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390c70
	struct UUserProfile* GetCurrentUserProfile(); // Function ConZ.ConZGameInstance.GetCurrentUserProfile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390c40
	struct UUser* GetCurrentUser(); // Function ConZ.ConZGameInstance.GetCurrentUser // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2390c10
	void AddLoadingWidget(struct ULoadingScreen* Widget); // Function ConZ.ConZGameInstance.AddLoadingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x23908b0
	void AddDefaultLoadingWidget(); // Function ConZ.ConZGameInstance.AddDefaultLoadingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x2390890
};

// Class ConZ.ConZGameMode
// Size: 0x9c0 (Inherited: 0x308)
struct AConZGameMode : AGameMode {
	char pad_308[0x78]; // 0x308(0x78)
	struct UDoorLockingRegistry* _doorLockingRegistry; // 0x380(0x08)
	struct UVehicleServiceRegistry* _vehicleServiceRegistry; // 0x388(0x08)
	struct UAbandonedBunkerActivationRegistry* _abandonedBunkerActivationRegistry; // 0x390(0x08)
	struct FLazyLoadedClassPtr _prisonerClassToSpawnLazy; // 0x398(0x30)
	struct FLazyLoadedClassPtr _droneClassToSpawnLazy; // 0x3c8(0x30)
	char pad_3F8[0x108]; // 0x3f8(0x108)
	struct AItemSpawningManager* _itemSpawningManagerClass; // 0x500(0x08)
	struct AItemSpawningManager* _itemSpawningManager; // 0x508(0x08)
	struct AItemVirtualizationManager* _itemVirtualizationManagerClass; // 0x510(0x08)
	struct AItemVirtualizationManager* _itemVirtualizationManager; // 0x518(0x08)
	struct AVehicleManager* _vehicleManagerClass; // 0x520(0x08)
	struct AVehicleManager* _vehicleManager; // 0x528(0x08)
	struct AReportingManager* _reportingManagerClass; // 0x530(0x08)
	struct AReportingManager* _reportingManager; // 0x538(0x08)
	struct AGlobalAquaticLifeManager* _globalAquaticLifeManagerClass; // 0x540(0x08)
	struct AGlobalAquaticLifeManager* _globalAquaticLifeManager; // 0x548(0x08)
	struct AGlobalGuardedZoneManager* _globalGuardedZoneManagerClass; // 0x550(0x08)
	struct AGlobalGuardedZoneManager* _globalGuardedZoneManager; // 0x558(0x08)
	struct AAchievementsManagerServer* _achievementsManagerServerClass; // 0x560(0x08)
	struct AAchievementsManagerServer* _achievementsManagerServer; // 0x568(0x08)
	struct ASurvivalStatsHandler* _survivalStatsHandlerClass; // 0x570(0x08)
	struct ASurvivalStatsHandler* _survivalStatsHandler; // 0x578(0x08)
	struct AHeatSourceManager* _heatSourceManagerClass; // 0x580(0x08)
	struct AHeatSourceManager* _heatSourceManager; // 0x588(0x08)
	struct AConZBaseManager* _baseManagerClass; // 0x590(0x08)
	struct AConZBaseManager* _baseManager; // 0x598(0x08)
	struct URainCollectionManager* _rainCollectionManager; // 0x5a0(0x08)
	struct AEffectOverTimeDealer* _effectOverTimeDealerClass; // 0x5a8(0x08)
	struct AEffectOverTimeDealer* _effectOverTimeDealer; // 0x5b0(0x08)
	struct ANotificationsManager* _notificationManagerClass; // 0x5b8(0x08)
	struct ANotificationsManager* _notificationManager; // 0x5c0(0x08)
	struct AVoteSystemManager* _voteSystemManagerClass; // 0x5c8(0x08)
	struct AVoteSystemManager* _voteSystemManager; // 0x5d0(0x08)
	struct AAIDetectionTimerHandler* _aiDetectionTimerHandlerClass; // 0x5d8(0x08)
	struct ABCULockRegistry* _bcuLockRegistryClass; // 0x5e0(0x08)
	struct ABCULockRegistry* _bcuLockRegistry; // 0x5e8(0x08)
	struct UWorldDoorOwnershipManager* _worldDoorOwnershipManager; // 0x5f0(0x08)
	struct AAIDetectionTimerHandler* _aiDetectionTimerHandler; // 0x5f8(0x08)
	struct UDedicatedServerResponse* _serverResponse; // 0x600(0x08)
	struct UChatSpamProtectionRules* _chatSpamProtectionRules; // 0x608(0x08)
	struct TArray<struct UPrisonerSpawnEquipment*> _spawnEquipment; // 0x610(0x10)
	struct FGameplayTag _spawnParameterTag_AerialSpawn; // 0x620(0x08)
	struct FGameplayTag _spawnParameterTag_ColdClimate; // 0x628(0x08)
	struct FGameplayTag _spawnParameterTag_SupporterPack1; // 0x630(0x08)
	struct FGameplayTag _spawnParameterTag_DigitalDeluxBasicSurvivalPack; // 0x638(0x08)
	struct FGameplayTag _spawnParameterTag_Tournament; // 0x640(0x08)
	float _maxSpawningAdjustmentDistance; // 0x648(0x04)
	int32_t _spawningAdjustmentRadialIterations; // 0x64c(0x04)
	int32_t _spawningAdjustmentVerticalIterations; // 0x650(0x04)
	int32_t _spawningAdjustmentCheckingFrequency; // 0x654(0x04)
	float _localChatDistance; // 0x658(0x04)
	char pad_65C[0x364]; // 0x65c(0x364)

	void SendHUDMessageToAll(struct FString Message, bool beep); // Function ConZ.ConZGameMode.SendHUDMessageToAll // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2399c70
	bool KickPlayer(struct AConZPlayerController* Player, struct FString kickReason); // Function ConZ.ConZGameMode.KickPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x2399280
	struct AVehicleManager* GetVehicleManager(); // Function ConZ.ConZGameMode.GetVehicleManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399090
	struct ASurvivalStatsHandler* GetSurvivalStatsHandler(); // Function ConZ.ConZGameMode.GetSurvivalStatsHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398ed0
	struct AReportingManager* GetReportingManager(); // Function ConZ.ConZGameMode.GetReportingManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398b50
	struct AItemVirtualizationManager* GetItemVirtualizationManager(); // Function ConZ.ConZGameMode.GetItemVirtualizationManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398ac0
	struct AItemSpawningManager* GetItemSpawningManager(); // Function ConZ.ConZGameMode.GetItemSpawningManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398a90
	struct AHeatSourceManager* GetHeatSourceManager(); // Function ConZ.ConZGameMode.GetHeatSourceManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398a60
	struct AGlobalGuardedZoneManager* GetGlobalGuardedZoneManager(); // Function ConZ.ConZGameMode.GetGlobalGuardedZoneManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398a30
	struct AGlobalAquaticLifeManager* GetGlobalAquaticLifeManager(); // Function ConZ.ConZGameMode.GetGlobalAquaticLifeManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398a00
	struct AEffectOverTimeDealer* GetEffectOverTimeDealer(); // Function ConZ.ConZGameMode.GetEffectOverTimeDealer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398910
	struct AConZBaseManager* GetBaseManager(); // Function ConZ.ConZGameMode.GetBaseManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398760
	struct AAIDetectionTimerHandler* GetAIDetectionTimerHandler(); // Function ConZ.ConZGameMode.GetAIDetectionTimerHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23986d0
	struct AAchievementsManagerServer* GetAchievementsManagerServer(); // Function ConZ.ConZGameMode.GetAchievementsManagerServer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398730
};

// Class ConZ.ConZGameSession
// Size: 0x238 (Inherited: 0x238)
struct AConZGameSession : AGameSession {
};

// Class ConZ.ConZGameState
// Size: 0x8c0 (Inherited: 0x290)
struct AConZGameState : AGameState {
	char pad_290[0x50]; // 0x290(0x50)
	struct URespawnSettings* RespawnSettings; // 0x2e0(0x08)
	char pad_2E8[0xf8]; // 0x2e8(0xf8)
	struct TArray<struct AAbandonedBunker*> _registeredAbandonedBunkers; // 0x3e0(0x10)
	char pad_3F0[0x80]; // 0x3f0(0x80)
	struct TArray<struct AConZSquad*> _squads; // 0x470(0x10)
	char pad_480[0xa0]; // 0x480(0xa0)
	struct TMap<struct TWeakObjectPtr<struct AConZCharacter>, int32_t> _currentDroneTargetDispatcherMap; // 0x520(0x50)
	struct TMap<struct TWeakObjectPtr<struct AConZCharacter>, int32_t> _droneTargetDispatcherHistoryMap; // 0x570(0x50)
	struct TMap<struct TWeakObjectPtr<struct AConZCharacter>, struct UDroneTargetData*> _droneTargetVisits; // 0x5c0(0x50)
	struct ALadderMarkersRegistry* _ladderMarkersRegistryClass; // 0x610(0x08)
	struct ALadderMarkersRegistry* _ladderMarkersRegistry; // 0x618(0x08)
	struct AConZWaterSplineRegistry* _waterSplineRegistryClass; // 0x620(0x08)
	struct AConZWaterSplineRegistry* _waterSplineRegistry; // 0x628(0x08)
	char pad_630[0x8]; // 0x630(0x08)
	struct URemoteSensorRegistry* _remoteSensorRegistry; // 0x638(0x08)
	char pad_640[0x50]; // 0x640(0x50)
	struct UReplenishableResourceManager* _replenishableResourceManager; // 0x690(0x08)
	struct UResourceLockingManager* _resourceLockingManager; // 0x698(0x08)
	struct UItemRegistry* _itemRegistry; // 0x6a0(0x08)
	struct UCustomZoneRegistry* _customZoneRegistry; // 0x6a8(0x08)
	struct UGameResourceContainerProxyRegistry* _gameResourceContainerProxyRegistry; // 0x6b0(0x08)
	struct UZoneRegistry* _zoneRegistry; // 0x6b8(0x08)
	struct UStaticDoorReplicator* _staticDoorReplicator; // 0x6c0(0x08)
	struct UBankAccountRegistry* _bankAccountRegistry; // 0x6c8(0x08)
	struct USquadRankingsCache* _squadRankingsCache; // 0x6d0(0x08)
	struct UWindowMarkersRegistry* _windowMarkersRegistry; // 0x6d8(0x08)
	struct UFortificationManager* _fortificationManager; // 0x6e0(0x08)
	struct UProjectilePool* _projectilePool; // 0x6e8(0x08)
	struct UAIManager* _aiManager; // 0x6f0(0x08)
	struct USurvivalTipManager* _survivalTipManager; // 0x6f8(0x08)
	struct USquadPenaltyManager* _squadPenaltyManager; // 0x700(0x08)
	struct UFoliageInstanceCache* _foliageInstanceCache; // 0x708(0x08)
	char pad_710[0xc8]; // 0x710(0xc8)
	struct TMap<struct FDbIntegerId, struct FDbIntegerId> _prisonerKillRegistry; // 0x7d8(0x50)
	struct ACustomMapBorder* _customMapBorderClass; // 0x828(0x08)
	struct ATournament* _tournamentClass; // 0x830(0x08)
	struct ACustomMapBorder* _customMapBorder; // 0x838(0x08)
	struct ATournament* _tournament; // 0x840(0x08)
	struct ARaidProtectionManager* _raidProtectionManager; // 0x848(0x08)
	struct UMaterialParameterCollection* _mainMPC; // 0x850(0x08)
	char pad_858[0x2]; // 0x858(0x02)
	bool _areLockedLootContainersEnabled; // 0x85a(0x01)
	char pad_85B[0x4]; // 0x85b(0x04)
	bool _isDrawSentryHealthBarEnabled; // 0x85f(0x01)
	char pad_860[0x5c]; // 0x860(0x5c)
	float _disableableComponentRange; // 0x8bc(0x04)

	void StartTournament(struct FTournamentParameters& Parameters); // Function ConZ.ConZGameState.StartTournament // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x239b350
	void SendServerTime(double totalWorldTime, double serverSessionTime); // Function ConZ.ConZGameState.SendServerTime // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2399f40
	bool RemoveMemberFromSquad(struct FDbIntegerId UserProfileId, struct AConZSquad* Squad, bool destroySquadIfEmpty); // Function ConZ.ConZGameState.RemoveMemberFromSquad // (Final|Native|Public|BlueprintCallable) // @ game+0x2399af0
	void RemoveMemberFromAllSquads(struct FDbIntegerId UserProfileId, bool destroySquadIfEmpty); // Function ConZ.ConZGameState.RemoveMemberFromAllSquads // (Final|Native|Public|BlueprintCallable) // @ game+0x2399a10
	void OnRep_Squads(); // Function ConZ.ConZGameState.OnRep_Squads // (Native|Protected) // @ game+0x2399930
	void OnRep_AreLockedLootContainersEnabled(); // Function ConZ.ConZGameState.OnRep_AreLockedLootContainersEnabled // (Final|Native|Private) // @ game+0x2399870
	void NetMulticast_SendItemLocationAndRotationToClients(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.ConZGameState.NetMulticast_SendItemLocationAndRotationToClients // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23996f0
	void NetMulticast_DestroyFoliageAtLocations(struct TArray<struct UHierarchicalInstancedStaticMeshComponent*> foliageInstancedComponents, struct TArray<struct FVector> Locations); // Function ConZ.ConZGameState.NetMulticast_DestroyFoliageAtLocations // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23995f0
	void NetMulticast_DestroyFoliageAtLocation(struct UHierarchicalInstancedStaticMeshComponent* FoliageInstancedComponent, struct FVector Location); // Function ConZ.ConZGameState.NetMulticast_DestroyFoliageAtLocation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x2399510
	void Multicast_RemoveFromPrisonerKillRegistry(struct FDbIntegerId Target); // Function ConZ.ConZGameState.Multicast_RemoveFromPrisonerKillRegistry // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2399480
	void Multicast_AddToOrUpdatePrisonerKillRegistry(struct FDbIntegerId Target, struct FDbIntegerId killer); // Function ConZ.ConZGameState.Multicast_AddToOrUpdatePrisonerKillRegistry // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23993b0
	bool IsTournamentInProgress(); // Function ConZ.ConZGameState.IsTournamentInProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399150
	struct AConZWaterSplineRegistry* GetWaterSplineRegistry(); // Function ConZ.ConZGameState.GetWaterSplineRegistry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23990c0
	struct ATournament* GetTournament(); // Function ConZ.ConZGameState.GetTournament // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398f30
	struct AConZSquad* GetSquadForUserProfileId(struct FDbIntegerId ID); // Function ConZ.ConZGameState.GetSquadForUserProfileId // (Final|Native|Public|BlueprintCallable) // @ game+0x2398e40
	struct AConZSquad* GetSquadForPrisoner(struct APrisoner* Prisoner); // Function ConZ.ConZGameState.GetSquadForPrisoner // (Final|Native|Public|BlueprintCallable) // @ game+0x2398da0
	struct AConZSquad* GetSquad(struct FDbIntegerId squadId); // Function ConZ.ConZGameState.GetSquad // (Final|Native|Public|BlueprintCallable) // @ game+0x2398d10
	struct ACustomMapBorder* GetCustomMapBorder(); // Function ConZ.ConZGameState.GetCustomMapBorder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23988e0
	void EndTournament(); // Function ConZ.ConZGameState.EndTournament // (Final|Native|Public|BlueprintCallable) // @ game+0x23986b0
	struct AConZSquad* CreateSquad(struct FDbIntegerId squadId); // Function ConZ.ConZGameState.CreateSquad // (Final|Native|Public|BlueprintCallable) // @ game+0x2398620
	void CleanupSquadsFromDatabase(); // Function ConZ.ConZGameState.CleanupSquadsFromDatabase // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x23972b0
	void AddMemberToSquad(struct APrisoner* Prisoner, struct AConZSquad* Squad); // Function ConZ.ConZGameState.AddMemberToSquad // (Final|Native|Public|BlueprintCallable) // @ game+0x2397170
};

// Class ConZ.ConZHUD
// Size: 0x348 (Inherited: 0x310)
struct AConZHUD : AHUD {
	struct FLazyLoadedClassPtr _masterWidgetClassLazy; // 0x310(0x30)
	char pad_340[0x8]; // 0x340(0x08)
};

// Class ConZ.GameplayLog
// Size: 0x40 (Inherited: 0x28)
struct UGameplayLog : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.ConZNoiseListener
// Size: 0x28 (Inherited: 0x28)
struct UConZNoiseListener : UInterface {
};

// Class ConZ.ConZNoiseListenerActor
// Size: 0x240 (Inherited: 0x220)
struct AConZNoiseListenerActor : AActor {
	char pad_220[0x20]; // 0x220(0x20)
};

// Class ConZ.ConZNoiseListenSubject
// Size: 0x28 (Inherited: 0x28)
struct UConZNoiseListenSubject : UInterface {
};

// Class ConZ.ConZPathFollowingComponent
// Size: 0x250 (Inherited: 0x250)
struct UConZPathFollowingComponent : UPathFollowingComponent {
};

// Class ConZ.ConZPlayerController
// Size: 0x9f0 (Inherited: 0x570)
struct AConZPlayerController : APlayerController {
	char pad_570[0x10]; // 0x570(0x10)
	struct TArray<struct UPrimitiveComponent*> ComponentsToHide; // 0x580(0x10)
	char pad_590[0x90]; // 0x590(0x90)
	bool IsTalkButtonPressed; // 0x620(0x01)
	char pad_621[0x57]; // 0x621(0x57)
	struct UPlayerRpcChannel* _playerRpcChannel; // 0x678(0x08)
	struct UPlayerQuestComponent* _playerQuestComponent; // 0x680(0x08)
	char pad_688[0x48]; // 0x688(0x48)
	struct UUserProfile* _userProfile; // 0x6d0(0x08)
	char pad_6D8[0x10]; // 0x6d8(0x10)
	struct FDateTime _lastNameChangeTime; // 0x6e8(0x08)
	struct FString _userFakeName; // 0x6f0(0x10)
	int64_t _bankAccountNumber; // 0x700(0x08)
	struct APawn* _spawnedPawn; // 0x708(0x08)
	char pad_710[0x28]; // 0x710(0x28)
	struct APawn* _possessedPawn; // 0x738(0x08)
	struct FLazyLoadedClassPtr _prisonerClassLazy; // 0x740(0x30)
	char pad_770[0x18]; // 0x770(0x18)
	float _teleportWorldStreamingLocationChangeDelay; // 0x788(0x04)
	float _teleportWorldStreamingTriggerLag; // 0x78c(0x04)
	char pad_790[0x54]; // 0x790(0x54)
	int32_t _repFamePoints; // 0x7e4(0x04)
	char pad_7E8[0x8]; // 0x7e8(0x08)
	int64_t _moneyBalanceRep; // 0x7f0(0x08)
	int64_t _goldBalanceRep; // 0x7f8(0x08)
	char pad_800[0x90]; // 0x800(0x90)
	float _weatherHeightUpdatePeriod; // 0x890(0x04)
	char pad_894[0x4]; // 0x894(0x04)
	struct AAchievementsManagerClient* _achievementsManagerClient; // 0x898(0x08)
	struct AAchievementsManagerClient* _achievementsManagerClientClass; // 0x8a0(0x08)
	float _isReadyForPlayDelay; // 0x8a8(0x04)
	char pad_8AC[0xc]; // 0x8ac(0x0c)
	float _reportPlayTimeInterval; // 0x8b8(0x04)
	char pad_8BC[0xc]; // 0x8bc(0x0c)
	struct FDateTime _replicatedServerUtcNow; // 0x8c8(0x08)
	char pad_8D0[0x60]; // 0x8d0(0x60)
	struct UPathFollowingComponent* _pathFollowingComponent; // 0x930(0x08)
	bool _forceSpawnAsDrone; // 0x938(0x01)
	bool _mpSpawnDroneAndPrisoner; // 0x939(0x01)
	char pad_93A[0xe]; // 0x93a(0x0e)
	struct FLazyLoadedClassPtr _photoModePawnClassLazy; // 0x948(0x30)
	char pad_978[0x14]; // 0x978(0x14)
	float _refreshTimeForPawnLocationOnMap; // 0x98c(0x04)
	char pad_990[0x8]; // 0x990(0x08)
	struct UMaterialParameterCollection* _mainMPC; // 0x998(0x08)
	char pad_9A0[0x1c]; // 0x9a0(0x1c)
	int32_t _numTrySpawnsForTimeout; // 0x9bc(0x04)
	char pad_9C0[0x30]; // 0x9c0(0x30)

	void UpdateUserProfileDeletionMarkStatus(); // Function ConZ.ConZPlayerController.UpdateUserProfileDeletionMarkStatus // (Final|Native|Public) // @ game+0x239b4e0
	void Teleport(struct FTeleportRequest& request); // Function ConZ.ConZPlayerController.Teleport // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x239b400
	void ShowWarningMessage(struct FString Message, float Duration, struct FLinearColor TextColor); // Function ConZ.ConZPlayerController.ShowWarningMessage // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x239b220
	void ShowLevelUpMessageFromClass(struct USkill* skillClass, enum class ESkillLevel skillLevel); // Function ConZ.ConZPlayerController.ShowLevelUpMessageFromClass // (Final|Native|Public|BlueprintCallable) // @ game+0x239b150
	void ShowLevelUpMessage(struct USkill* Skill, enum class ESkillLevel skillLevel); // Function ConZ.ConZPlayerController.ShowLevelUpMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x239b080
	void ShowKillFeedNotificationOnClient(struct FString Prefix, struct FString characterName, struct FString suffix, bool Ping); // Function ConZ.ConZPlayerController.ShowKillFeedNotificationOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x239aef0
	void ShowKillFeedMessage(struct FString Prefix, struct FString characterName, struct FString suffix, bool Ping); // Function ConZ.ConZPlayerController.ShowKillFeedMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x239ad60
	void SetTeleportWorldStreamingLocationChangeDelay(float Value); // Function ConZ.ConZPlayerController.SetTeleportWorldStreamingLocationChangeDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x239ace0
	void SetRespawnOptionTime(enum class ERespawnOption Option, float Time, bool Force); // Function ConZ.ConZPlayerController.SetRespawnOptionTime // (Final|Native|Public) // @ game+0x239abc0
	void SetGameEventCooldown(float cooldown); // Function ConZ.ConZPlayerController.SetGameEventCooldown // (Final|Native|Private) // @ game+0x239ab40
	void SetFamePoints(float Value); // Function ConZ.ConZPlayerController.SetFamePoints // (Final|Exec|Native|Public) // @ game+0x239aac0
	void SetCurrencyBalanceRep(enum class ECurrencyType CurrencyType, int64_t currencyBalance); // Function ConZ.ConZPlayerController.SetCurrencyBalanceRep // (Final|Native|Public|BlueprintCallable) // @ game+0x239a9f0
	void SetCommitSuicideOptionTime(float Time); // Function ConZ.ConZPlayerController.SetCommitSuicideOptionTime // (Final|Native|Public) // @ game+0x239a970
	void Server_SetRefreshPawnLocationForMap(bool Value); // Function ConZ.ConZPlayerController.Server_SetRefreshPawnLocationForMap // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a8e0
	void Server_SelfKickFromGameSession(struct FString reason); // Function ConZ.ConZPlayerController.Server_SelfKickFromGameSession // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a840
	void Server_RequestSurvivalStats(uint32_t ID, struct FDbIntegerId UserProfileId); // Function ConZ.ConZPlayerController.Server_RequestSurvivalStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a770
	void Server_RequestSquadMemberInfo(uint32_t ID, struct FDbIntegerId squadId); // Function ConZ.ConZPlayerController.Server_RequestSquadMemberInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a6a0
	void Server_RequestRespawnWaitTime(); // Function ConZ.ConZPlayerController.Server_RequestRespawnWaitTime // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x239a680
	void Server_RequestPlayerSpawnGrid(); // Function ConZ.ConZPlayerController.Server_RequestPlayerSpawnGrid // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a660
	void Server_RequestGameEventTeamChange(int32_t preferredTeam); // Function ConZ.ConZPlayerController.Server_RequestGameEventTeamChange // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x239a5d0
	void Server_RequestEventsRankingStats(uint32_t ID, struct FDbIntegerId UserProfileId, int32_t Count, enum class EEventsRankingStatsOrderByField orderByField, enum class ESortOrder SortOrder); // Function ConZ.ConZPlayerController.Server_RequestEventsRankingStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a430
	void Server_ReportStartLeavingGame(); // Function ConZ.ConZPlayerController.Server_ReportStartLeavingGame // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a410
	void Server_ReportPlayPreparationsSucceeded(); // Function ConZ.ConZPlayerController.Server_ReportPlayPreparationsSucceeded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a3f0
	void Server_ReportCancelLeavingGame(); // Function ConZ.ConZPlayerController.Server_ReportCancelLeavingGame // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a3d0
	void Server_ProcessCharacterModificationTransaction(int32_t transactionId, struct FCharacterTemplate CharacterTemplate); // Function ConZ.ConZPlayerController.Server_ProcessCharacterModificationTransaction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a290
	void Server_MountedActorHasBegunPlay(struct AActor* Actor); // Function ConZ.ConZPlayerController.Server_MountedActorHasBegunPlay // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a200
	void Server_LeaveGameEvent(); // Function ConZ.ConZPlayerController.Server_LeaveGameEvent // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x239a1e0
	void Server_JoinGameEvent(struct AGameEventBase* gameEvent, int32_t preferredTeam); // Function ConZ.ConZPlayerController.Server_JoinGameEvent // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x239a110
	void Server_HeartbeatResponse(uint32_t code); // Function ConZ.ConZPlayerController.Server_HeartbeatResponse // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a080
	void Server_ExitPhotoMode(); // Function ConZ.ConZPlayerController.Server_ExitPhotoMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a060
	void Server_EnterPhotoMode(); // Function ConZ.ConZPlayerController.Server_EnterPhotoMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a040
	void Server_AllowCertainInventoryInteractions(); // Function ConZ.ConZPlayerController.Server_AllowCertainInventoryInteractions // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x239a020
	void SendHUDMessageToClient(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.ConZPlayerController.SendHUDMessageToClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2399e50
	void SendHUDMessageToAll(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.ConZPlayerController.SendHUDMessageToAll // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2399d60
	void SaveState(); // Function ConZ.ConZPlayerController.SaveState // (Final|Native|Public|BlueprintCallable) // @ game+0x2399c50
	void RepossesOriginalPrisoner(); // Function ConZ.ConZPlayerController.RepossesOriginalPrisoner // (Final|Native|Public|BlueprintCallable) // @ game+0x2399c30
	void RemoveServerFromFavorites(); // Function ConZ.ConZPlayerController.RemoveServerFromFavorites // (Final|Native|Public|BlueprintCallable) // @ game+0x2399c10
	void RegisterRespawn(enum class ERespawnOption Option); // Function ConZ.ConZPlayerController.RegisterRespawn // (Final|Native|Public) // @ game+0x2399990
	void RegisterCommitSuicide(); // Function ConZ.ConZPlayerController.RegisterCommitSuicide // (Final|Native|Public) // @ game+0x2399970
	void OnRep_UserFakeName(); // Function ConZ.ConZPlayerController.OnRep_UserFakeName // (Final|Native|Protected) // @ game+0x2399950
	void OnRep_ReplicatedServerUtcNow(); // Function ConZ.ConZPlayerController.OnRep_ReplicatedServerUtcNow // (Final|Native|Private) // @ game+0x2399910
	void OnRep_PossessedPawn(); // Function ConZ.ConZPlayerController.OnRep_PossessedPawn // (Final|Native|Private) // @ game+0x23998f0
	void OnRep_MoneyBalance(); // Function ConZ.ConZPlayerController.OnRep_MoneyBalance // (Final|Native|Protected) // @ game+0x23998d0
	void OnRep_GoldBalance(); // Function ConZ.ConZPlayerController.OnRep_GoldBalance // (Final|Native|Protected) // @ game+0x23998b0
	void OnRep_FamePoints(); // Function ConZ.ConZPlayerController.OnRep_FamePoints // (Native|Protected) // @ game+0x2399890
	void OnPhotoModeTransitionTimerElapsed(); // Function ConZ.ConZPlayerController.OnPhotoModeTransitionTimerElapsed // (Final|Native|Public) // @ game+0x2399850
	void OnFadeOutFinished(); // Function ConZ.ConZPlayerController.OnFadeOutFinished // (Final|Native|Private) // @ game+0x2399830
	void LoadState(); // Function ConZ.ConZPlayerController.LoadState // (Final|Native|Public|BlueprintCallable) // @ game+0x2399390
	void LeaveGameEvent(); // Function ConZ.ConZPlayerController.LeaveGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x2399370
	void JoinGameEvent(struct AGameEventBase* gameEvent, int32_t preferredTeam); // Function ConZ.ConZPlayerController.JoinGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23991b0
	bool IsUserAdmin(); // Function ConZ.ConZPlayerController.IsUserAdmin // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399180
	bool IsTeleportInProgress(); // Function ConZ.ConZPlayerController.IsTeleportInProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399120
	bool IsPushToTalkPressed(); // Function ConZ.ConZPlayerController.IsPushToTalkPressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23990f0
	struct FString GetUserProfileName(); // Function ConZ.ConZPlayerController.GetUserProfileName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399050
	struct FDbIntegerId GetUserProfileId(); // Function ConZ.ConZPlayerController.GetUserProfileId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2399010
	struct UUserProfile* GetUserProfile(); // Function ConZ.ConZPlayerController.GetUserProfile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398fe0
	struct FString GetUserName2(); // Function ConZ.ConZPlayerController.GetUserName2 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398fa0
	struct FString GetUserId(); // Function ConZ.ConZPlayerController.GetUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398f60
	float GetTeleportWorldStreamingLocationChangeDelay(); // Function ConZ.ConZPlayerController.GetTeleportWorldStreamingLocationChangeDelay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398f00
	struct FDbIntegerId GetServerUserProfileId(); // Function ConZ.ConZPlayerController.GetServerUserProfileId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398cd0
	float GetRespawnWaitTime(); // Function ConZ.ConZPlayerController.GetRespawnWaitTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398ca0
	float GetRespawnOptionTimeLeft(enum class ERespawnOption Option); // Function ConZ.ConZPlayerController.GetRespawnOptionTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398c10
	float GetRespawnOptionTime(enum class ERespawnOption Option); // Function ConZ.ConZPlayerController.GetRespawnOptionTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398b80
	struct APrisoner* GetPrisoner(); // Function ConZ.ConZPlayerController.GetPrisoner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398b20
	struct UPlayerRpcChannel* GetPlayerRpcChannel(); // Function ConZ.ConZPlayerController.GetPlayerRpcChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398af0
	float GetGameEventCooldown(); // Function ConZ.ConZPlayerController.GetGameEventCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23989d0
	int32_t GetFamePointsRounded(); // Function ConZ.ConZPlayerController.GetFamePointsRounded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23989a0
	float GetFamePoints(); // Function ConZ.ConZPlayerController.GetFamePoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d8740
	float GetFameMultiplier(); // Function ConZ.ConZPlayerController.GetFameMultiplier // (Final|Native|Public|Const) // @ game+0x2398970
	int32_t GetFameLevel(); // Function ConZ.ConZPlayerController.GetFameLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398940
	struct FText GetCurrencyBalanceText(enum class ECurrencyType CurrencyType); // Function ConZ.ConZPlayerController.GetCurrencyBalanceText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23987f0
	float GetCommitSuicideOptionTimeLeft(); // Function ConZ.ConZPlayerController.GetCommitSuicideOptionTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23987c0
	struct AConZCameraManager* GetCameraManager(); // Function ConZ.ConZPlayerController.GetCameraManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398790
	struct AAchievementsManagerClient* GetAchievementsManagerClient(); // Function ConZ.ConZPlayerController.GetAchievementsManagerClient // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398700
	void Crash(); // Function ConZ.ConZPlayerController.Crash // (Final|Exec|Native|Static|Private) // @ game+0x2398600
	int32_t ComputeFameLevel(float FamePoints); // Function ConZ.ConZPlayerController.ComputeFameLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2398580
	void Client_UpdateRespawnSettings(struct FRespawnParameters Parameters); // Function ConZ.ConZPlayerController.Client_UpdateRespawnSettings // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2398430
	void Client_TestPingLockStuff(float averageDelta, float averagePing, float Counter); // Function ConZ.ConZPlayerController.Client_TestPingLockStuff // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2398310
	void Client_SetRespawnWaitTime(float Seconds); // Function ConZ.ConZPlayerController.Client_SetRespawnWaitTime // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2398280
	void Client_SetRespawnOptionTime(enum class ERespawnOption Option, float Time); // Function ConZ.ConZPlayerController.Client_SetRespawnOptionTime // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x23981b0
	void Client_SetIsServerSettingsAdmin(bool Value); // Function ConZ.ConZPlayerController.Client_SetIsServerSettingsAdmin // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2398120
	void Client_SetIsAdmin(bool Value); // Function ConZ.ConZPlayerController.Client_SetIsAdmin // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2398090
	void Client_SetGameEventCooldown(float cooldown); // Function ConZ.ConZPlayerController.Client_SetGameEventCooldown // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2398000
	void Client_SetCommitSuicideOptionTime(float Time); // Function ConZ.ConZPlayerController.Client_SetCommitSuicideOptionTime // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2397f70
	void Client_SendPackedPlayerLocationsForMap(struct TArray<struct AConZPlayerState*> playerStates, struct TArray<uint32_t> packedMapLocations); // Function ConZ.ConZPlayerController.Client_SendPackedPlayerLocationsForMap // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2397e70
	void Client_SaveState(); // Function ConZ.ConZPlayerController.Client_SaveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2397e50
	void Client_ReplicateFavoriteCraftingRecipes(struct TArray<uint32_t> recipeNetIndices); // Function ConZ.ConZPlayerController.Client_ReplicateFavoriteCraftingRecipes // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2397db0
	void Client_ReceiveSurvivalStats(uint32_t ID, struct FSurvivalStats Stats); // Function ConZ.ConZPlayerController.Client_ReceiveSurvivalStats // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2397cb0
	void Client_ReceiveSquadMemberInfo(uint32_t ID, struct TArray<struct FDbIntegerId> userProfileIds, struct TArray<struct FString> Names, struct TArray<float> FamePoints); // Function ConZ.ConZPlayerController.Client_ReceiveSquadMemberInfo // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2397b00
	void Client_ReceiveEventsRankingStats(uint32_t ID, struct TArray<struct FEventsRankingStatsItem> Stats, int32_t playerRank); // Function ConZ.ConZPlayerController.Client_ReceiveEventsRankingStats // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x23979b0
	void Client_ReceiveBytesFromStream(int32_t streamId, struct TArray<char> Bytes); // Function ConZ.ConZPlayerController.Client_ReceiveBytesFromStream // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x23978d0
	void Client_Login(struct FPlayerLoginInfo serverLoginInfo); // Function ConZ.ConZPlayerController.Client_Login // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x23977c0
	void Client_InitializeCharacterModificationTransaction(int32_t transactionId, struct FTransform roomTransform, enum class ECharacterModificationType Type); // Function ConZ.ConZPlayerController.Client_InitializeCharacterModificationTransaction // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x2397630
	void Client_HeartbeatRequest(uint32_t code); // Function ConZ.ConZPlayerController.Client_HeartbeatRequest // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x23975a0
	void Client_HasMountedActorBegunPlay(struct AActor* Actor); // Function ConZ.ConZPlayerController.Client_HasMountedActorBegunPlay // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2397510
	void Client_EndByteStream(int32_t streamId); // Function ConZ.ConZPlayerController.Client_EndByteStream // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2397480
	void Client_EnableRespawnOption(enum class ERespawnOption Option); // Function ConZ.ConZPlayerController.Client_EnableRespawnOption // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2397400
	void Client_CancelCharacterModificationTransaction(); // Function ConZ.ConZPlayerController.Client_CancelCharacterModificationTransaction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x23973e0
	void Client_BeginByteStream(int32_t streamId, enum class ERawByteStreamType streamType); // Function ConZ.ConZPlayerController.Client_BeginByteStream // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2397310
	void Client_AllowCertainInventoryInteractions(); // Function ConZ.ConZPlayerController.Client_AllowCertainInventoryInteractions // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x23972f0
	void ClearRespawnOptionTimers(); // Function ConZ.ConZPlayerController.ClearRespawnOptionTimers // (Final|Native|Public) // @ game+0x23972d0
	void CheckPhotoModeTransitionFailed(); // Function ConZ.ConZPlayerController.CheckPhotoModeTransitionFailed // (Final|Native|Public) // @ game+0x2397290
	bool CanAddServerToFavorites(); // Function ConZ.ConZPlayerController.CanAddServerToFavorites // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2397260
	void AddServerToFavorites(); // Function ConZ.ConZPlayerController.AddServerToFavorites // (Final|Native|Public|BlueprintCallable) // @ game+0x2397240
};

// Class ConZ.ConZPlayerPawn
// Size: 0x28 (Inherited: 0x28)
struct UConZPlayerPawn : UInterface {
};

// Class ConZ.ConZPlayerState
// Size: 0x330 (Inherited: 0x320)
struct AConZPlayerState : APlayerState {
	char pad_320[0x10]; // 0x320(0x10)
};

// Class ConZ.ConZReplicationGraph
// Size: 0x7d0 (Inherited: 0x4b0)
struct UConZReplicationGraph : UReplicationGraph {
	char pad_4B0[0x310]; // 0x4b0(0x310)
	struct UReplicationGraphNode_GridSpatialization2D* _gridSpatializationNode; // 0x7c0(0x08)
	struct UReplicationGraphNode_ActorList* _alwaysRelevantNode; // 0x7c8(0x08)
};

// Class ConZ.ConZNetReplicationGraphConnection
// Size: 0x248 (Inherited: 0x238)
struct UConZNetReplicationGraphConnection : UNetReplicationGraphConnection {
	struct UConZReplicationGraphNode_AlwaysRelevantToConnection* AlwaysRelevantNode; // 0x238(0x08)
	struct UConZReplicationGraphNode_RelevantToConnectionOnly* ActorListNode; // 0x240(0x08)
};

// Class ConZ.ConZReplicationGraphNode_AlwaysRelevantToConnection
// Size: 0xc8 (Inherited: 0x50)
struct UConZReplicationGraphNode_AlwaysRelevantToConnection : UReplicationGraphNode {
	struct UConZNetReplicationGraphConnection* RepGraphConnection; // 0x50(0x08)
	char pad_58[0x70]; // 0x58(0x70)
};

// Class ConZ.ConZReplicationGraphNode_RelevantToConnectionOnly
// Size: 0xd8 (Inherited: 0xd0)
struct UConZReplicationGraphNode_RelevantToConnectionOnly : UReplicationGraphNode_ActorList {
	struct UConZNetReplicationGraphConnection* RepGraphConnection; // 0xd0(0x08)
};

// Class ConZ.ConZReverbComponent
// Size: 0x2a0 (Inherited: 0x280)
struct UConZReverbComponent : UAkLateReverbComponent {
	struct UAkAuxBus* IndoorSmallAuxBus; // 0x280(0x08)
	struct UAkAuxBus* IndoorMediumAuxBus; // 0x288(0x08)
	struct UAkAuxBus* IndoorLargeAuxBus; // 0x290(0x08)
	struct UAkAuxBus* OutdoorLargeAuxBus; // 0x298(0x08)
};

// Class ConZ.ConZReverbVolume
// Size: 0x290 (Inherited: 0x290)
struct AConZReverbVolume : AAkReverbVolume {
};

// Class ConZ.ConZSlider
// Size: 0xdc0 (Inherited: 0x268)
struct UConZSlider : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	int32_t _minValue; // 0x288(0x04)
	int32_t _maxValue; // 0x28c(0x04)
	int32_t _stepSize; // 0x290(0x04)
	bool _controlWithKeyboard; // 0x294(0x01)
	char pad_295[0x1b]; // 0x295(0x1b)
	struct UOverlay* _progressBarOverlay; // 0x2b0(0x08)
	struct UImage* _sliderThumb; // 0x2b8(0x08)
	struct UProgressBar* _progressBar; // 0x2c0(0x08)
	struct FConZSliderStyle _selectedAndFocusedSliderStyle; // 0x2c8(0x228)
	struct FConZSliderStyle _selectedAndUnfocusedSliderStyle; // 0x4f0(0x228)
	struct FConZSliderStyle _unselectedSliderStyle; // 0x718(0x228)
	struct FConZSliderStyle _highlightedSliderStyle; // 0x940(0x228)
	struct FConZSliderStyle _disabledSliderStyle; // 0xb68(0x228)
	float _stepSpeedStartTreshold; // 0xd90(0x04)
	float _stepSpeedThreshold; // 0xd94(0x04)
	float _stepSpeedAtStart; // 0xd98(0x04)
	float _stepSpeedSlow; // 0xd9c(0x04)
	float _stepSpeedFast; // 0xda0(0x04)
	bool _controlWithMouseClick; // 0xda4(0x01)
	bool _controlWithMouseWheel; // 0xda5(0x01)
	char pad_DA6[0x1a]; // 0xda6(0x1a)
};

// Class ConZ.ConZSpectatorPawn
// Size: 0x2c0 (Inherited: 0x2a8)
struct AConZSpectatorPawn : ASpectatorPawn {
	char pad_2A8[0x8]; // 0x2a8(0x08)
	float DefaultFOV; // 0x2b0(0x04)
	char pad_2B4[0xc]; // 0x2b4(0x0c)
};

// Class ConZ.ConZSquad
// Size: 0x398 (Inherited: 0x220)
struct AConZSquad : AActor {
	struct FDbIntegerId squadId; // 0x220(0x08)
	struct FString SquadName; // 0x228(0x10)
	struct FString SquadMessage; // 0x238(0x10)
	struct FString SquadInformation; // 0x248(0x10)
	struct FConZSquadEmblem SquadEmblem; // 0x258(0x08)
	char pad_260[0x50]; // 0x260(0x50)
	struct TArray<struct FConZSquadPendingMember> _pendingMembers; // 0x2b0(0x10)
	struct TArray<struct FConZSquadMember> _members; // 0x2c0(0x10)
	struct TArray<struct FConZSquadMember> _oldMembers; // 0x2d0(0x10)
	uint64_t _repEmblem; // 0x2e0(0x08)
	int32_t _maxAllowedSquadMembers; // 0x2e8(0x04)
	char pad_2EC[0xac]; // 0x2ec(0xac)

	void OnRep_SquadName(); // Function ConZ.ConZSquad.OnRep_SquadName // (Final|Native|Protected) // @ game+0x239fab0
	void OnRep_SquadMessage(); // Function ConZ.ConZSquad.OnRep_SquadMessage // (Final|Native|Protected) // @ game+0x239fab0
	void OnRep_Members(); // Function ConZ.ConZSquad.OnRep_Members // (Final|Native|Protected) // @ game+0x239fa90
	void OnRep_Emblem(); // Function ConZ.ConZSquad.OnRep_Emblem // (Final|Native|Protected) // @ game+0x239fa70
};

// Class ConZ.ConZStandardButton
// Size: 0x318 (Inherited: 0x268)
struct UConZStandardButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UButton* MainButton; // 0x2b8(0x08)
	struct UTextBlock* TextBlock_1; // 0x2c0(0x08)
	bool OverridesHighlight; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct FText Text; // 0x2d0(0x18)
	int32_t FontSize; // 0x2e8(0x04)
	bool SizeToContent; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	float WidthOverride; // 0x2f0(0x04)
	int32_t HoveredFontSize; // 0x2f4(0x04)
	struct UImage* Image_1; // 0x2f8(0x08)
	struct USizeBox* MainSizeBox; // 0x300(0x08)
	struct UAkAudioEvent* _menuButtonClick; // 0x308(0x08)
	struct UAkAudioEvent* _menuButtonHover; // 0x310(0x08)

	void TriggerButton(); // Function ConZ.ConZStandardButton.TriggerButton // (Final|Native|Private) // @ game+0x239fbe0
	void HoverButton(); // Function ConZ.ConZStandardButton.HoverButton // (Final|Native|Private) // @ game+0x239f930
};

// Class ConZ.ConZUniqueObjectCacher
// Size: 0x80 (Inherited: 0x28)
struct UConZUniqueObjectCacher : UObject {
	struct TMap<struct UObject*, struct FTimestampedObject> _timestampedObjectMap; // 0x28(0x50)
	char pad_78[0x8]; // 0x78(0x08)
};

// Class ConZ.ConZVehicleSpringArmComponent
// Size: 0x2e0 (Inherited: 0x290)
struct UConZVehicleSpringArmComponent : USpringArmComponent {
	float _ownerAccelerationDirectionInterpSpeed; // 0x290(0x04)
	struct FVector _maxCameraOffset; // 0x294(0x0c)
	struct FVector _cameraOffsetInterpSpeed; // 0x2a0(0x0c)
	float _maxCameraPitch; // 0x2ac(0x04)
	char pad_2B0[0x30]; // 0x2b0(0x30)
};

// Class ConZ.ConZWaterSpline
// Size: 0x2b8 (Inherited: 0x220)
struct AConZWaterSpline : AActor {
	struct USceneComponent* SceneComponent; // 0x220(0x08)
	struct USplineComponent* SplineComponent; // 0x228(0x08)
	struct UStaticMeshComponent* SurfaceMeshComponent; // 0x230(0x08)
	struct UStaticMeshComponent* SubsurfaceMeshComponent; // 0x238(0x08)
	bool DrawDebug; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	int32_t SelectRangeStart; // 0x244(0x04)
	int32_t SelectRangeEnd; // 0x248(0x04)
	bool SelectRange; // 0x24c(0x01)
	bool FlattenZ; // 0x24d(0x01)
	char pad_24E[0x2]; // 0x24e(0x02)
	struct TArray<struct FConZWaterSplineControlPoint> ControlPoints; // 0x250(0x10)
	float MaxDepth; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct UStaticMesh* SurfaceMesh; // 0x268(0x08)
	struct UStaticMesh* SubsurfaceMesh; // 0x270(0x08)
	struct UMaterialInterface* SurfaceMeshMaterialOverride; // 0x278(0x08)
	struct UMaterialInterface* SubsurfaceMeshMaterialOverride; // 0x280(0x08)
	struct UMaterialInterface* UnderwaterPostProcessing; // 0x288(0x08)
	struct TArray<struct UAssetUserData*> SurfaceMeshUserData; // 0x290(0x10)
	struct TArray<struct FConZGerstnerWavesParameters> GerstnerWavesParameters; // 0x2a0(0x10)
	char pad_2B0[0x8]; // 0x2b0(0x08)
};

// Class ConZ.ConZWaterSplineIsland
// Size: 0x2b8 (Inherited: 0x2b8)
struct AConZWaterSplineIsland : AConZWaterSpline {
};

// Class ConZ.ConZWaterSplineLake
// Size: 0x2c0 (Inherited: 0x2b8)
struct AConZWaterSplineLake : AConZWaterSpline {
	float SurfaceMeshCullingDistance; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
};

// Class ConZ.ConZWaterSplineOcean
// Size: 0x2c8 (Inherited: 0x2b8)
struct AConZWaterSplineOcean : AConZWaterSpline {
	bool FollowCamera; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct UTexture2D* OceanOpacityMaskTexture; // 0x2c0(0x08)
};

// Class ConZ.ConZWaterSplineRegistry
// Size: 0x228 (Inherited: 0x220)
struct AConZWaterSplineRegistry : AActor {
	char pad_220[0x8]; // 0x220(0x08)

	struct FWaterQueryResult QueryWaterSplines(struct FVector Location); // Function ConZ.ConZWaterSplineRegistry.QueryWaterSplines // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x239fad0
	void DrawQueryResult(struct FWaterQueryResult Result, float Duration); // Function ConZ.ConZWaterSplineRegistry.DrawQueryResult // (Final|Native|Public|BlueprintCallable) // @ game+0x239f760
};

// Class ConZ.ConZWaterSplineRiver
// Size: 0x310 (Inherited: 0x2b8)
struct AConZWaterSplineRiver : AConZWaterSpline {
	struct UStaticMesh* SplineMesh; // 0x2b8(0x08)
	struct UMaterialInterface* SplineMeshMaterialOverride; // 0x2c0(0x08)
	float SplineMeshCullingDistance; // 0x2c8(0x04)
	bool ClearRoll; // 0x2cc(0x01)
	bool AutoCalculateMeshCount; // 0x2cd(0x01)
	char pad_2CE[0x2]; // 0x2ce(0x02)
	int32_t SplineMeshCount; // 0x2d0(0x04)
	bool RefreshMesh; // 0x2d4(0x01)
	bool ArmBatchEditWidth; // 0x2d5(0x01)
	char pad_2D6[0x2]; // 0x2d6(0x02)
	float BatchEditWidth; // 0x2d8(0x04)
	bool ArmBatchEditMaxDepth; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)
	float BatchEditMaxDepth; // 0x2e0(0x04)
	bool ArmBatchEditSpeed; // 0x2e4(0x01)
	char pad_2E5[0x3]; // 0x2e5(0x03)
	float BatchEditSpeed; // 0x2e8(0x04)
	bool ArmBatchEditOpacity; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	float BatchEditOpacity; // 0x2f0(0x04)
	bool ArmBatchEdit; // 0x2f4(0x01)
	bool BatchEditReplace; // 0x2f5(0x01)
	bool BatchEditAdd; // 0x2f6(0x01)
	bool BatchEditMultiply; // 0x2f7(0x01)
	bool BatchEditFlattenZ; // 0x2f8(0x01)
	char pad_2F9[0x7]; // 0x2f9(0x07)
	struct TArray<struct USplineMeshComponent*> _splineMeshComponents; // 0x300(0x10)
};

// Class ConZ.ConZWindowNavLinkComponent
// Size: 0x190 (Inherited: 0x190)
struct UConZWindowNavLinkComponent : UNavLinkCustomComponent {
};

// Class ConZ.ConZWorldBoundsVolume
// Size: 0x258 (Inherited: 0x258)
struct AConZWorldBoundsVolume : AVolume {
};

// Class ConZ.ConZWorldSettings
// Size: 0x600 (Inherited: 0x398)
struct AConZWorldSettings : AWorldSettings {
	char pad_398[0x8]; // 0x398(0x08)
	struct AWeatherController2* WeatherController2; // 0x3a0(0x08)
	struct AWetnessManager* WetnessManager; // 0x3a8(0x08)
	struct AGameEventManager* GameEventManager; // 0x3b0(0x08)
	struct AWorldEventManager* WorldEventManager; // 0x3b8(0x08)
	struct ABuildingManager* BuildingManager; // 0x3c0(0x08)
	struct AItemContainerManager* ItemContainerManager; // 0x3c8(0x08)
	struct AConZEconomyManager* EconomyManager; // 0x3d0(0x08)
	struct AGardenManager* FarmingGardenManager; // 0x3d8(0x08)
	struct ARadiationManager* RadiationManager; // 0x3e0(0x08)
	struct AHuntingManager* HuntingManager; // 0x3e8(0x08)
	struct AGlobalEncounterManager* GlobalEncounterManager; // 0x3f0(0x08)
	struct AQuestManager* QuestManager; // 0x3f8(0x08)
	struct ACookingManager* CookingManager; // 0x400(0x08)
	struct AMugshotRoom* MugshotRoom; // 0x408(0x08)
	struct TArray<struct ARadioStation*> RadioStations; // 0x410(0x10)
	struct UAkAudioEvent* RadioNoiseStartEvent; // 0x420(0x08)
	struct UAkAudioEvent* RadioNoiseStopEvent; // 0x428(0x08)
	struct UAkAudioEvent* RadioStopEvent; // 0x430(0x08)
	struct UAkAudioEvent* RadioStationChangeNoiseEvent; // 0x438(0x08)
	struct UEntitySystemSettings* EntitySystemSettings; // 0x440(0x08)
	struct FItemSpawningSettings ItemSpawningSettings; // 0x448(0x40)
	struct AVolume* IslandBoundsVolume; // 0x488(0x08)
	bool UseVirtualizationSystem; // 0x490(0x01)
	char pad_491[0x3]; // 0x491(0x03)
	struct FBox2D WorldBounds; // 0x494(0x14)
	struct FGameplayTag HeightMapGameplayTag; // 0x4a8(0x08)
	struct FGameplayTag BiomeMapGameplayTag; // 0x4b0(0x08)
	struct FGameplayTag MapPropertiesGameplayTag; // 0x4b8(0x08)
	struct FGameplayTag GerstnerWaveOcclusionPropertiesGameplayTag; // 0x4c0(0x08)
	bool UseOceanOpacityMap; // 0x4c8(0x01)
	char pad_4C9[0x3]; // 0x4c9(0x03)
	struct FGameplayTag OceanOpacityGameplayTag; // 0x4cc(0x08)
	bool SpawnInAir; // 0x4d4(0x01)
	char pad_4D5[0x3]; // 0x4d5(0x03)
	float FirstSpawnAltitude; // 0x4d8(0x04)
	float RespawnAltitude; // 0x4dc(0x04)
	struct FFloatInterval MapMinMaxElevation; // 0x4e0(0x08)
	struct UAvailabilityGrid* AvailabilityGrid; // 0x4e8(0x08)
	char pad_4F0[0x30]; // 0x4f0(0x30)
	struct FMapLimits _mapLimits; // 0x520(0x68)
	char pad_588[0x50]; // 0x588(0x50)
	struct UAvailabilityGrid* _availabilityGridClass; // 0x5d8(0x08)
	struct TArray<struct FVehicleSpawnPointData> _vehicleSpawnPoints; // 0x5e0(0x10)
	struct TArray<struct FConZDeveloperId> _developerIdsHashed; // 0x5f0(0x10)
};

// Class ConZ.CookedFoodItem
// Size: 0xb70 (Inherited: 0xa50)
struct ACookedFoodItem : AFoodItem {
	float SpoilageRateCooked; // 0xa50(0x04)
	float TargetGramsPerUse; // 0xa54(0x04)
	struct TSoftObjectPtr<UTexture2D> _inventoryIcon_Raw; // 0xa58(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconInHands_Raw; // 0xa80(0x28)
	struct TSoftObjectPtr<UTexture2D> _outsideInventoryIcon_Raw; // 0xaa8(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIcon_Burnt; // 0xad0(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconInHands_Burnt; // 0xaf8(0x28)
	struct TSoftObjectPtr<UTexture2D> _outsideInventoryIcon_Burnt; // 0xb20(0x28)
	float _idealServingTemperatureMin; // 0xb48(0x04)
	float _idealServingTemperatureMax; // 0xb4c(0x04)
	struct TArray<float> _exhaustionBonusDeltaPerCookQualityLevel; // 0xb50(0x10)
	struct UGameResourceType* _cachedGameResourceType; // 0xb60(0x08)
	char pad_B68[0x8]; // 0xb68(0x08)

	void NetMulticast_SetupStateFromCooking(uint32_t cookState, struct TArray<char> ingredientData); // Function ConZ.CookedFoodItem.NetMulticast_SetupStateFromCooking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23a51a0
};

// Class ConZ.CookedFoodItemEntitySave
// Size: 0x88 (Inherited: 0x28)
struct UCookedFoodItemEntitySave : UObject {
	float CookAmount; // 0x28(0x04)
	float ExhaustionBonus; // 0x2c(0x04)
	enum class EFoodCookQuality CookQuality; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TMap<struct FPrimaryAssetId, float> OptionalResourceTypes; // 0x38(0x50)
};

// Class ConZ.FoodItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UFoodItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.CookedFoodItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UCookedFoodItemEntitySetup : UFoodItemEntitySetup {
};

// Class ConZ.CookingAddRecipeButton
// Size: 0x2f0 (Inherited: 0x268)
struct UCookingAddRecipeButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UImage* _addRecipeIcon; // 0x2b8(0x08)
	struct UTextBlock* _emptySlotText; // 0x2c0(0x08)
	struct UTextBlock* _heatSourceWarningText; // 0x2c8(0x08)
	struct FLinearColor _disabledColor; // 0x2d0(0x10)
	struct FLinearColor _enabledColor; // 0x2e0(0x10)
};

// Class ConZ.CookingCategoryButtonWidget
// Size: 0x300 (Inherited: 0x268)
struct UCookingCategoryButtonWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _titleTextBlock; // 0x278(0x08)
	struct UImage* _buttonImageWidget; // 0x280(0x08)
	struct UImage* _overallBorder; // 0x288(0x08)
	struct FGameplayTag _cookingCategory; // 0x290(0x08)
	struct FGameplayTag _navigationTag; // 0x298(0x08)
	struct FText _titleText; // 0x2a0(0x18)
	struct TSoftObjectPtr<UTexture2D> _buttonImage; // 0x2b8(0x28)
	struct FLinearColor _unHoveredBorderColor; // 0x2e0(0x10)
	struct FLinearColor _hoveredBorderColor; // 0x2f0(0x10)
};

// Class ConZ.CookingCategoryDropdown
// Size: 0x2b8 (Inherited: 0x268)
struct UCookingCategoryDropdown : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct USimpleTextDropdownEntry* _textDropdownEntryClass; // 0x288(0x08)
	struct UTextBlock* _chosenCategory; // 0x290(0x08)
	struct UMenuAnchor* _popup; // 0x298(0x08)
	struct UVerticalScrollBoxDropdownContent* _categoryDropdownContentClass; // 0x2a0(0x08)
	struct TArray<struct FCookingCategoryDropdownEntryData> _cookingCategoryDropdownEntries; // 0x2a8(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingCategoryDropdown.CreateContentWidget // (Final|Native|Private) // @ game+0x23a5170
};

// Class ConZ.CookingCommonData
// Size: 0x190 (Inherited: 0x30)
struct UCookingCommonData : UDataAsset {
	struct UCurveFloat* MassReductionByPeakTemperature_Fiber; // 0x30(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Starch; // 0x38(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Sugars; // 0x40(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_OtherCarbohydrates; // 0x48(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_SaturatedFat; // 0x50(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_OtherFats; // 0x58(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Protein; // 0x60(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminA; // 0x68(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminC; // 0x70(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminD; // 0x78(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminE; // 0x80(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminK; // 0x88(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB1; // 0x90(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB2; // 0x98(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB3; // 0xa0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB6; // 0xa8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB9; // 0xb0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB12; // 0xb8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB5; // 0xc0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_VitaminB4; // 0xc8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Calcium; // 0xd0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Iron; // 0xd8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Magnesium; // 0xe0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Phosphorus; // 0xe8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Potassium; // 0xf0(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Sodium; // 0xf8(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Zinc; // 0x100(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Copper; // 0x108(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Manganese; // 0x110(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Selenium; // 0x118(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Alcohol; // 0x120(0x08)
	struct UCurveFloat* MassReductionByPeakTemperature_Water; // 0x128(0x08)
	struct UCurveFloat* _cookQualityVsCookAmount; // 0x130(0x08)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_NoSkill; // 0x138(0x08)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Basic; // 0x140(0x08)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Medium; // 0x148(0x08)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_Advanced; // 0x150(0x08)
	struct UCurveFloat* _cookQualityVsCookTimeRelativeError_AboveAdvanced; // 0x158(0x08)
	float _recipeMemorizationChancePerSkillLevel; // 0x160(0x04)
	float _recipeMemorizationChancePerCookQuality; // 0x164(0x04)
	float _baseExperienceGainPerRecipe; // 0x168(0x04)
	float _experienceGainPerRecipeCookTimeInMinutes; // 0x16c(0x04)
	float _experienceGainPerRecipeCookTemperatureInDegrees; // 0x170(0x04)
	float _experienceGainMultiplier_Ruined; // 0x174(0x04)
	float _experienceGainMultiplier_Bad; // 0x178(0x04)
	float _experienceGainMultiplier_Poor; // 0x17c(0x04)
	float _experienceGainMultiplier_Good; // 0x180(0x04)
	float _experienceGainMultiplier_Excellent; // 0x184(0x04)
	float _experienceGainMultiplier_Perfect; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
};

// Class ConZ.CookingControlButton
// Size: 0x340 (Inherited: 0x268)
struct UCookingControlButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UImage* _buttonBackground; // 0x2b8(0x08)
	struct UImage* _timerBorder; // 0x2c0(0x08)
	struct UWidgetSwitcher* _visualSwitcher; // 0x2c8(0x08)
	struct UTextBlock* _buttonTimer; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct UTextOnlyTooltip* _cookingTextTooltipClass; // 0x2e0(0x08)
	enum class ECookingControlButtonState _controlButtonState; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct TMap<enum class ECookingControlButtonVisual, struct FHoverClickButtonVisualInfo> _hoverAndClickVisualsMap; // 0x2f0(0x50)
};

// Class ConZ.CookingFavouriteButton
// Size: 0x3e8 (Inherited: 0x268)
struct UCookingFavouriteButton : UUserWidget {
	char pad_268[0x58]; // 0x268(0x58)
	struct UImage* _buttonImage; // 0x2c0(0x08)
	struct UWidgetAnimation* _clickAnimation; // 0x2c8(0x08)
	struct UWidgetAnimation* _hoverAnimation; // 0x2d0(0x08)
	struct FSlateBrush _nonFavouriteButtonBrush; // 0x2d8(0x88)
	struct FSlateBrush _favouriteButtonBrush; // 0x360(0x88)
};

// Class ConZ.CookingFinishedWidget
// Size: 0x3b0 (Inherited: 0x268)
struct UCookingFinishedWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _productImage; // 0x278(0x08)
	struct UTextBlock* _ratingText; // 0x280(0x08)
	struct UHorizontalBox* _starsHorizontalBox; // 0x288(0x08)
	struct UTextBlock* _qualityDescription; // 0x290(0x08)
	struct UButton* _grabButton; // 0x298(0x08)
	struct FSlateBrush _activeStarBrush; // 0x2a0(0x88)
	struct FSlateBrush _inactiveStarBrush; // 0x328(0x88)

	void OnGrabButtonClicked(); // Function ConZ.CookingFinishedWidget.OnGrabButtonClicked // (Final|Native|Private) // @ game+0x2359050
};

// Class ConZ.CookingHeatSourceButton
// Size: 0x2c8 (Inherited: 0x268)
struct UCookingHeatSourceButton : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct USizeBox* _mainSizeBox; // 0x278(0x08)
	struct UImage* _heatSourceIcon; // 0x280(0x08)
	struct UImage* _borderImage; // 0x288(0x08)
	bool _selected; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	struct FVector2D _selectedButtonSize; // 0x294(0x08)
	struct FVector2D _deselectedButtonSize; // 0x29c(0x08)
	struct FLinearColor _selectedBorderColor; // 0x2a4(0x10)
	struct FLinearColor _deselectedBorderColor; // 0x2b4(0x10)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class ConZ.CookingInfoButton
// Size: 0x2c8 (Inherited: 0x268)
struct UCookingInfoButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UWidgetAnimation* _pulseAnimation; // 0x2b8(0x08)
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class ConZ.CookingIngredientInfoWidget
// Size: 0x2e8 (Inherited: 0x268)
struct UCookingIngredientInfoWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct FLinearColor _unselectedBorderColor; // 0x278(0x10)
	struct FLinearColor _selectedBorderColor; // 0x288(0x10)
	struct UWidgetSwitcher* _mainSwitcher; // 0x298(0x08)
	struct UOverlay* _nonEmptyPage; // 0x2a0(0x08)
	struct UCookingInfoButton* _infoButton; // 0x2a8(0x08)
	struct UTextBlock* _amountText; // 0x2b0(0x08)
	struct UImage* _ingredientIcon; // 0x2b8(0x08)
	struct UImage* _border; // 0x2c0(0x08)
	struct UOverlay* _emptyPage; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)
	struct UTextOnlyTooltip* _ingredientTextTooltipClass; // 0x2e0(0x08)
};

// Class ConZ.CookingIngredientTooltip
// Size: 0x278 (Inherited: 0x268)
struct UCookingIngredientTooltip : UUserWidget {
	struct UTextBlock* _ingredientName; // 0x268(0x08)
	struct UTextBlock* _ingredientNecessity; // 0x270(0x08)
};

// Class ConZ.CookingUtilitySlotContainer
// Size: 0x3f8 (Inherited: 0x220)
struct ACookingUtilitySlotContainer : AActor {
	struct ACookingManager* _cookingManager; // 0x220(0x08)
	struct FCookingUtilitySlotArray _cookingUtilitySlots; // 0x228(0x1d0)
};

// Class ConZ.CookingManager
// Size: 0x638 (Inherited: 0x220)
struct ACookingManager : AActor {
	char pad_220[0xf8]; // 0x220(0xf8)
	struct TMap<struct UCookingRecipe*, int32_t> _activeCookingRecipes; // 0x318(0x50)
	char pad_368[0x58]; // 0x368(0x58)
	struct FMainPointSnappedUtilities _mainPointSnappedCookingUtilities; // 0x3c0(0xc8)
	char pad_488[0xf0]; // 0x488(0xf0)
	float _netRelevancyRadius; // 0x578(0x04)
	float _newClientCheckTimeInterval; // 0x57c(0x04)
	float _cookingUtilitySlotContainerNetRelevancyRadius; // 0x580(0x04)
	char pad_584[0x4]; // 0x584(0x04)
	struct TSoftClassPtr<UObject> _cookingUtilitySlotContainerClass; // 0x588(0x28)
	float _databaseUpdateInterval; // 0x5b0(0x04)
	float _utilitySnapDistance; // 0x5b4(0x04)
	float _maxMainPointSnapDistance; // 0x5b8(0x04)
	float _proxyMeshSpawnRadius; // 0x5bc(0x04)
	float _proxyMeshReleaseRadius; // 0x5c0(0x04)
	char pad_5C4[0x24]; // 0x5c4(0x24)
	struct TMap<struct FDbIntegerId, struct FCookingFoodProxyMesh> _proxyMeshMap; // 0x5e8(0x50)

	void OnRep_MainPointSnap(); // Function ConZ.CookingManager.OnRep_MainPointSnap // (Final|Native|Private) // @ game+0x23a5280
};

// Class ConZ.CookingPanel
// Size: 0x2f8 (Inherited: 0x268)
struct UCookingPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UCraftingCategoryTabButton* _cookingUtilitySlotsButton; // 0x270(0x08)
	struct UCraftingCategoriesTabButtonsContainer* _categoriesTabButtonsContainer; // 0x278(0x08)
	struct UWidgetSwitcher* _mainSwitcher; // 0x280(0x08)
	struct UCookingUtilitySlotsPanel* _cookingUtilitySlotsPanel; // 0x288(0x08)
	struct UCookingRecipesPanel* _cookingRecipesPanel; // 0x290(0x08)
	char pad_298[0x4]; // 0x298(0x04)
	struct FGameplayTag _allRecipesTag; // 0x29c(0x08)
	struct FGameplayTag _favoritesAndRecentRecipesTag; // 0x2a4(0x08)
	struct FCraftingCategoryTabButtonSharedStyle _addingRecipeToUtilitySlotButtonStyle; // 0x2ac(0x24)
	float _checkIngredientsValidityPeriod; // 0x2d0(0x04)
	float _checkVicinityHeatSourceItemsPeriod; // 0x2d4(0x04)
	float _updateProgressBarColorsPeriod; // 0x2d8(0x04)
	char pad_2DC[0x1c]; // 0x2dc(0x1c)
};

// Class ConZ.CookingProgressWidget
// Size: 0x288 (Inherited: 0x268)
struct UCookingProgressWidget : UUserWidget {
	struct URetainerBox* _progressImageRetainerBox; // 0x268(0x08)
	struct UImage* _progressImage; // 0x270(0x08)
	struct URichTextBlock* _cookingTimeText; // 0x278(0x08)
	struct URichTextBlock* _cookingTemperatureText; // 0x280(0x08)
};

// Class ConZ.CookingRecipe
// Size: 0x1a0 (Inherited: 0x30)
struct UCookingRecipe : UPrimaryDataAsset {
	struct FText RecipeName; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct TArray<struct FRecipeIngredient> MainIngredients; // 0x60(0x10)
	struct TArray<struct FRecipeIngredient> OptionalIngredients; // 0x70(0x10)
	struct FCookingResult ResultingFood; // 0x80(0x28)
	float CookingTemperature; // 0xa8(0x04)
	float CookingTime; // 0xac(0x04)
	struct FGameplayTagContainer Utility; // 0xb0(0x20)
	struct FGameplayTagContainer Category; // 0xd0(0x20)
	struct TSoftObjectPtr<UStaticMesh> CookProgressMesh; // 0xf0(0x28)
	struct TSoftObjectPtr<UMaterialInterface> CookProgressMeshMaterial; // 0x118(0x28)
	int32_t CookProgressMeshMaterialSlot; // 0x140(0x04)
	bool UseMeshRelativeTransform; // 0x144(0x01)
	char pad_145[0xb]; // 0x145(0x0b)
	struct FTransform CookProgressMeshRelativeTransform; // 0x150(0x30)
	bool CookProgressMeshFacesHeatsource; // 0x180(0x01)
	char pad_181[0x7]; // 0x181(0x07)
	struct UAkAudioEvent* StartCookingEvent; // 0x188(0x08)
	struct UAkAudioEvent* StopCookingEvent; // 0x190(0x08)
	char pad_198[0x8]; // 0x198(0x08)
};

// Class ConZ.CookingRecipeButtonsContainer
// Size: 0x2d0 (Inherited: 0x268)
struct UCookingRecipeButtonsContainer : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)
	struct UOverlay* _titleOverlay; // 0x2a0(0x08)
	struct UTextBlock* _titleText; // 0x2a8(0x08)
	struct UCheckBox* _expandCheckBox; // 0x2b0(0x08)
	struct UWrapBox* _wrapBox; // 0x2b8(0x08)
	struct UCookingRecipeButtonWidget* _buttonClass; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void OnContainerCheckBoxStateChanged(bool checked); // Function ConZ.CookingRecipeButtonsContainer.OnContainerCheckBoxStateChanged // (Final|Native|Private) // @ game+0x23a9da0
};

// Class ConZ.CookingRecipeButtonWidget
// Size: 0x340 (Inherited: 0x268)
struct UCookingRecipeButtonWidget : UUserWidget {
	char pad_268[0x70]; // 0x268(0x70)
	struct UTextBlock* _titleText; // 0x2d8(0x08)
	struct UImage* _buttonIcon; // 0x2e0(0x08)
	struct UImage* _favoriteStar; // 0x2e8(0x08)
	struct UMenuAnchor* _contextMenuAnchor; // 0x2f0(0x08)
	struct UImage* _overallBorder; // 0x2f8(0x08)
	struct FLinearColor _deselectedBorderColor; // 0x300(0x10)
	struct FLinearColor _selectedBorderColor; // 0x310(0x10)
	char pad_320[0x8]; // 0x320(0x08)
	struct UVerticalScrollBoxDropdownContent* _contextMenuVBox; // 0x328(0x08)
	struct USimpleDropdownEntryCategoryTitle* _dropdownEntryCategoryTitleClass; // 0x330(0x08)
	struct USimpleTextDropdownEntry* _textDropdownEntryClass; // 0x338(0x08)

	struct UUserWidget* CreateContextMenu(); // Function ConZ.CookingRecipeButtonWidget.CreateContextMenu // (Final|Native|Private) // @ game+0x23a9cf0
};

// Class ConZ.CookingRecipeCategoryPanel
// Size: 0x158 (Inherited: 0x150)
struct UCookingRecipeCategoryPanel : UWrapBox {
	struct FGameplayTag _navigationTag; // 0x150(0x08)
};

// Class ConZ.CookingRecipeCollectionItemTag
// Size: 0x40 (Inherited: 0x30)
struct UCookingRecipeCollectionItemTag : UBaseItemTag {
	struct TArray<struct FPrimaryAssetId> _recipes; // 0x30(0x10)
};

// Class ConZ.CookingRecipeDetailsWidget
// Size: 0x310 (Inherited: 0x268)
struct UCookingRecipeDetailsWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UCookingIngredientInfoWidget* _ingredientInfoWidgetClass; // 0x280(0x08)
	struct UPossibleCookingIngredientWidget* _possibleIngredientWidgetClass; // 0x288(0x08)
	struct UImage* _recipeIcon; // 0x290(0x08)
	struct UCookingFavouriteButton* _favouritesButton; // 0x298(0x08)
	struct URichTextBlock* _cookingTimeText; // 0x2a0(0x08)
	struct UTextBlock* _recipeTitle; // 0x2a8(0x08)
	struct UCheckBox* _expandCheckBoxMainIngredients; // 0x2b0(0x08)
	struct UWrapBox* _mainIngredientsWrapBox; // 0x2b8(0x08)
	struct UVerticalBox* _mainIngredientDetailsVerticalBox; // 0x2c0(0x08)
	struct UWrapBox* _possibleMainIngredientsWrapBox; // 0x2c8(0x08)
	struct UCheckBox* _expandCheckBoxOptionalIngredients; // 0x2d0(0x08)
	struct UWrapBox* _optionalIngredientsWrapBox; // 0x2d8(0x08)
	struct UVerticalBox* _optionalIngredientDetailsVerticalBox; // 0x2e0(0x08)
	struct UWrapBox* _possibleOptionalIngredientsWrapBox; // 0x2e8(0x08)
	struct UTextBlock* _detailedDescriptionText; // 0x2f0(0x08)
	struct UTextBlock* _cookingUtilities; // 0x2f8(0x08)
	struct UTextBlock* _cookingTimeEmphasized; // 0x300(0x08)
	char pad_308[0x8]; // 0x308(0x08)

	void OnOptionalIngredientsCheckBoxStateChanged(bool checked); // Function ConZ.CookingRecipeDetailsWidget.OnOptionalIngredientsCheckBoxStateChanged // (Final|Native|Private) // @ game+0x23a9ee0
	void OnMainIngredientsCheckBoxStateChanged(bool checked); // Function ConZ.CookingRecipeDetailsWidget.OnMainIngredientsCheckBoxStateChanged // (Final|Native|Private) // @ game+0x23a9e30
};

// Class ConZ.CookingRecipeRegistry
// Size: 0x40 (Inherited: 0x30)
struct UCookingRecipeRegistry : UDataAsset {
	struct TArray<struct FCookingRecipeRegistryEntry> _entries; // 0x30(0x10)
};

// Class ConZ.CookingRecipesPanel
// Size: 0x460 (Inherited: 0x268)
struct UCookingRecipesPanel : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)
	struct USearchBox* _searchBox; // 0x2a0(0x08)
	struct UWidgetSwitcher* _categoriesDetailsSwitcher; // 0x2a8(0x08)
	struct UTextBlock* _selectedCategoryTitle; // 0x2b0(0x08)
	struct UScrollBox* _categoriesScrollBox; // 0x2b8(0x08)
	struct UCookingRecipeDetailsWidget* _cookingRecipeDetailsWidget; // 0x2c0(0x08)
	struct UOverlay* _addRecipeToUtilitySlotOverlay; // 0x2c8(0x08)
	struct UPrimaryButton* _leftButton; // 0x2d0(0x08)
	struct UPrimaryButton* _middleButton; // 0x2d8(0x08)
	struct UPrimaryButton* _rightButton; // 0x2e0(0x08)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x2e8(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x2f0(0x08)
	struct UCookingRecipeButtonsContainer* _cookingRecipeButtonsContainerClass; // 0x2f8(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x300(0x08)
	char pad_308[0x50]; // 0x308(0x50)
	struct FText _cancelTooltipText; // 0x358(0x18)
	struct FText _detailsTooltipText; // 0x370(0x18)
	struct FText _backTooltipText; // 0x388(0x18)
	struct FText _addRecipeTooltipText; // 0x3a0(0x18)
	char pad_3B8[0x98]; // 0x3b8(0x98)
	struct FMargin _cookingCategoryPadding; // 0x450(0x10)

	void OnShowDetailsPanelClicked(); // Function ConZ.CookingRecipesPanel.OnShowDetailsPanelClicked // (Final|Native|Private) // @ game+0x23a9f70
	void OnNavigateBackClicked(); // Function ConZ.CookingRecipesPanel.OnNavigateBackClicked // (Final|Native|Private) // @ game+0x23a9ec0
	void OnCancelRecipeAdditionClicked(); // Function ConZ.CookingRecipesPanel.OnCancelRecipeAdditionClicked // (Final|Native|Private) // @ game+0x23a9d80
	void OnAnyButtonHovered(); // Function ConZ.CookingRecipesPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void OnAddRecipeClicked(); // Function ConZ.CookingRecipesPanel.OnAddRecipeClicked // (Final|Native|Private) // @ game+0x23a9d60
	void HandleOnExpandAllClicked(); // Function ConZ.CookingRecipesPanel.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x23a9d40
	void HandleOnCollapseAllClicked(); // Function ConZ.CookingRecipesPanel.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x23a9d20
};

// Class ConZ.CookingSkill
// Size: 0x178 (Inherited: 0xb0)
struct UCookingSkill : UIntelligenceSkill {
	struct TArray<struct FPrimaryAssetId> _recipesKnownByDefault; // 0xb0(0x10)
	char pad_C0[0xa0]; // 0xc0(0xa0)
	float _cookTimeMultiplier_NoSkill; // 0x160(0x04)
	float _cookTimeMultiplier_Basic; // 0x164(0x04)
	float _cookTimeMultiplier_Medium; // 0x168(0x04)
	float _cookTimeMultiplier_Advanced; // 0x16c(0x04)
	float _cookTimeMultiplier_AboveAdvanced; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class ConZ.CookingSortingDropdown
// Size: 0x2b0 (Inherited: 0x268)
struct UCookingSortingDropdown : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct USimpleTextDropdownEntry* _textDropdownEntryClass; // 0x280(0x08)
	struct UVerticalScrollBoxDropdownContent* _categoryDropdownContentClass; // 0x288(0x08)
	struct UImage* _icon; // 0x290(0x08)
	struct UMenuAnchor* _popup; // 0x298(0x08)
	struct TArray<struct FCookingSortingDropdownEntryData> _cookingSortingDropdownEntries; // 0x2a0(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingSortingDropdown.CreateContentWidget // (Final|Native|Private) // @ game+0x23a9c90
};

// Class ConZ.CookingTemperatureControlLinearWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UCookingTemperatureControlLinearWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct URetainerBox* _effectBox; // 0x280(0x08)
	struct USlider* _temperatureSlider; // 0x288(0x08)
	struct UOverlay* _temperatureValuesOverlay; // 0x290(0x08)
	float _minimumVisualValue; // 0x298(0x04)
	float _maximumVisualValue; // 0x29c(0x04)

	void OnValueChanged(float Value); // Function ConZ.CookingTemperatureControlLinearWidget.OnValueChanged // (Final|Native|Private) // @ game+0x23a9f90
};

// Class ConZ.CookingTemperatureControlRadialWidget
// Size: 0x3b0 (Inherited: 0x268)
struct UCookingTemperatureControlRadialWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UWidgetSwitcher* _dialDetailSwitcher; // 0x278(0x08)
	struct UOverlay* _exactTemperaturesOverlay; // 0x280(0x08)
	struct UImage* _dialArrow; // 0x288(0x08)
	float _rotationSpeedMultiplier; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
	struct FSlateBrush _arrowNormalBrush; // 0x298(0x88)
	struct FSlateBrush _arrowHoveredBrush; // 0x320(0x88)
	char pad_3A8[0x8]; // 0x3a8(0x08)
};

// Class ConZ.CookingUIContext
// Size: 0x28 (Inherited: 0x28)
struct UCookingUIContext : UUIContext {
};

// Class ConZ.CookingUIController
// Size: 0x470 (Inherited: 0x28)
struct UCookingUIController : UObject {
	char pad_28[0x268]; // 0x28(0x268)
	float _vicinityRadius; // 0x290(0x04)
	struct FLinearColor _overcookedColor; // 0x294(0x10)
	struct FLinearColor _cookedColor; // 0x2a4(0x10)
	struct FLinearColor _undercookedColor; // 0x2b4(0x10)
	char pad_2C4[0xf4]; // 0x2c4(0xf4)
	float _updateAllRecipeInstanceProgressBarColorsPeriod; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct TMap<struct FGameplayTag, struct FText> _categoryTagNames; // 0x3c0(0x50)
	struct FGameplayTag _favoritesAndRecentRecipesCategoryTag; // 0x410(0x08)
	char pad_418[0x58]; // 0x418(0x58)
};

// Class ConZ.CookingUtilityFilterDropdown
// Size: 0x2b0 (Inherited: 0x268)
struct UCookingUtilityFilterDropdown : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _utilityFilterIcon; // 0x280(0x08)
	struct UMenuAnchor* _popup; // 0x288(0x08)
	struct USimpleTextDropdownEntryWithCheckBox* _dropdownEntryClass; // 0x290(0x08)
	struct UVerticalScrollBoxDropdownContent* _dropdownContentClass; // 0x298(0x08)
	struct TArray<struct FCookingUtilityFilterDropdownEntryData> _cookingUtilityFilterDropdownEntries; // 0x2a0(0x10)

	struct UUserWidget* CreateContentWidget(); // Function ConZ.CookingUtilityFilterDropdown.CreateContentWidget // (Final|Native|Private) // @ game+0x23a9cc0
};

// Class ConZ.CookingUtilityItemTag
// Size: 0x98 (Inherited: 0x30)
struct UCookingUtilityItemTag : UBaseItemTag {
	bool UsesMainSnapPoint; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FCookingUtilityMainSnapPoint MainSnapPoint; // 0x38(0x48)
	struct TArray<struct FCookingUtilitySlot> Slots; // 0x80(0x10)
	bool HighlightItem; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class ConZ.CookingUtilityOverview
// Size: 0x4a0 (Inherited: 0x268)
struct UCookingUtilityOverview : UUserWidget {
	char pad_268[0x70]; // 0x268(0x70)
	struct UInteractiveIngredientWidget* _ingredientWidgetClass; // 0x2d8(0x08)
	struct UCookingIngredientTooltip* _ingredientWidgetTooltipClass; // 0x2e0(0x08)
	struct UTextBlock* _utilityTitleText; // 0x2e8(0x08)
	struct URetainerBox* _recipeTitleTextEffectBox; // 0x2f0(0x08)
	struct UTextBlock* _recipeTitleText; // 0x2f8(0x08)
	struct UImage* _heatSourceWarningIcon; // 0x300(0x08)
	struct USizeBox* _mainSwitcherSizeBox; // 0x308(0x08)
	struct UWidgetSwitcher* _mainSwitcher; // 0x310(0x08)
	struct UCookingAddRecipeButton* _addRecipeButton; // 0x318(0x08)
	struct UIngredientsForRecipeWidget* _ingredientsForRecipeWidget; // 0x320(0x08)
	struct UCookingProgressWidget* _cookingProgressWidget; // 0x328(0x08)
	struct UCookingFinishedWidget* _cookingFinishedWidget; // 0x330(0x08)
	struct UTextBlock* _slotOrdinalNumber; // 0x338(0x08)
	struct UCookingControlButton* _cookAndTimerButton; // 0x340(0x08)
	struct UCookingControlButton* _cancelButton; // 0x348(0x08)
	struct USizeBox* _progressBarSizeBox; // 0x350(0x08)
	struct FLinearColor _hasCookingTimeLeftColor; // 0x358(0x10)
	struct FLinearColor _cookingTimeOverflowedColor; // 0x368(0x10)
	struct FSlateBrush _heatSourceWarningIcon_MissingFuel; // 0x378(0x88)
	struct FSlateBrush _heatSourceWarningIcon_NotTurnedOn; // 0x400(0x88)
	char pad_488[0x18]; // 0x488(0x18)
};

// Class ConZ.CookingUtilitySlotButton
// Size: 0x2f0 (Inherited: 0x268)
struct UCookingUtilitySlotButton : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _titleText; // 0x278(0x08)
	struct UImage* _utilityIcon; // 0x280(0x08)
	struct UImage* _borderImage; // 0x288(0x08)
	struct UImage* _ordinalNumberBorderImage; // 0x290(0x08)
	struct UTextBlock* _slotOrdinalNumber; // 0x298(0x08)
	struct UImage* _cookingInProgressIcon; // 0x2a0(0x08)
	bool _selected; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	struct FLinearColor _selectedBorderColor; // 0x2ac(0x10)
	struct FLinearColor _deselectedBorderColor; // 0x2bc(0x10)
	struct FLinearColor _selectedTextColor; // 0x2cc(0x10)
	struct FLinearColor _deselectedTextColor; // 0x2dc(0x10)
	char pad_2EC[0x4]; // 0x2ec(0x04)
};

// Class ConZ.CookingUtilitySlotsPanel
// Size: 0x2a0 (Inherited: 0x268)
struct UCookingUtilitySlotsPanel : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UScrollBox* _utilityOverviewScrollBox; // 0x280(0x08)
	struct UCookingUtilityOverview* _cookingUtilityOverviewClass; // 0x288(0x08)
	struct FMargin _utilityOverviewPadding; // 0x290(0x10)
};

// Class ConZ.CookingUtilityUIDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UCookingUtilityUIDataAsset : UDataAsset {
	struct FText Name; // 0x30(0x18)
	bool CanAddRecipeTo; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct TSoftObjectPtr<UTexture2D> Icon; // 0x50(0x28)
	enum class ECookingTemperatureControlType CookingTemperatureControlType; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class ConZ.SearchableCorpse
// Size: 0x28 (Inherited: 0x28)
struct USearchableCorpse : UInterface {
};

// Class ConZ.CraftingAvailableItemWidget
// Size: 0x2e0 (Inherited: 0x268)
struct UCraftingAvailableItemWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct AItem* _item; // 0x280(0x08)
	struct UAkAudioEvent* _clickSound; // 0x288(0x08)
	struct UTooltipBase* _tooltipClass; // 0x290(0x08)
	struct UTexture2D* _selectedTexture; // 0x298(0x08)
	struct UTexture2D* _unselectedTexture; // 0x2a0(0x08)
	struct UTexture2D* _componentAddTexture; // 0x2a8(0x08)
	struct UTexture2D* _componentRemoveTexture; // 0x2b0(0x08)
	struct URetainerBox* MainRetainerBox; // 0x2b8(0x08)
	struct UImage* _itemImage; // 0x2c0(0x08)
	struct UImage* BackgroundImage; // 0x2c8(0x08)
	struct UImage* AdditionalComponentImage; // 0x2d0(0x08)
	struct UTextBlock* CountText; // 0x2d8(0x08)
};

// Class ConZ.CraftingCategoriesTabButtonsContainer
// Size: 0x2a0 (Inherited: 0x268)
struct UCraftingCategoriesTabButtonsContainer : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTabContainer* _categoryButtonsContainer; // 0x278(0x08)
	struct TArray<struct FCraftingPanelCategoryButtonUIData> _craftingPanelCategoryButtonsUIData; // 0x280(0x10)
	struct UCraftingCategoryTabButton* _craftingCategoryTabButtonClass; // 0x290(0x08)
	float _categoryButtonsSpacing; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
};

// Class ConZ.CraftingCategoryTabButton
// Size: 0x568 (Inherited: 0x290)
struct UCraftingCategoryTabButton : UConZUserWidget {
	char pad_290[0x60]; // 0x290(0x60)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)
	struct UImage* _shadow; // 0x300(0x08)
	struct UImage* _background; // 0x308(0x08)
	struct UImage* _icon; // 0x310(0x08)
	struct FSlateBrush _iconBrush; // 0x318(0x88)
	struct FSlateBrush _backgroundBrush; // 0x3a0(0x88)
	struct FSlateBrush _backgroundShadowBrush; // 0x428(0x88)
	struct FCraftingCategoryTabButtonSharedStyle _selectedStyle; // 0x4b0(0x24)
	struct FCraftingCategoryTabButtonSharedStyle _deselectedStyle; // 0x4d4(0x24)
	struct FCraftingCategoryTabButtonSharedStyle _deselectedFocusedStyle; // 0x4f8(0x24)
	struct FCraftingCategoryTabButtonSharedStyle _disabledStyle; // 0x51c(0x24)
	struct FText _categoryName; // 0x540(0x18)
	char pad_558[0x10]; // 0x558(0x10)
};

// Class ConZ.CraftingComponentTooltip
// Size: 0x298 (Inherited: 0x268)
struct UCraftingComponentTooltip : UUserWidget {
	struct UImage* BackgroundImage; // 0x268(0x08)
	struct UTextBlock* ComponentTypeText; // 0x270(0x08)
	struct UTextBlock* DescriptionText; // 0x278(0x08)
	struct UImage* Image_1; // 0x280(0x08)
	struct UTextBlock* NameText; // 0x288(0x08)
	struct UCraftingComponentWidget* _craftingComponentWidget; // 0x290(0x08)
};

// Class ConZ.CraftingComponentWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UCraftingComponentWidget : UUserWidget {
	struct UItemClassWidget* ItemWidget; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	struct UTextBlock* CountText; // 0x278(0x08)
	struct UTextBlock* OrderNumberText; // 0x280(0x08)
	struct UImage* TypeImage; // 0x288(0x08)
	struct UTexture2D* Component_Main; // 0x290(0x08)
	struct UTexture2D* Component_Tool; // 0x298(0x08)
	struct UUserWidget* _craftingComponentWidget; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)
};

// Class ConZ.CraftingFamePointsItemTag
// Size: 0x38 (Inherited: 0x30)
struct UCraftingFamePointsItemTag : UBaseItemTag {
	float _fameAmount; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.CraftingInfoWidget
// Size: 0x348 (Inherited: 0x268)
struct UCraftingInfoWidget : UUserWidget {
	struct UInspectedItemWidget* ItemWidget; // 0x268(0x08)
	struct UGridPanel* ComponentsGridPanel; // 0x270(0x08)
	struct UGridPanel* CraftingGridPanel; // 0x278(0x08)
	struct UUserWidget* ComponentsMinimizableWidget; // 0x280(0x08)
	struct UUserWidget* CraftingMinimizableWidget; // 0x288(0x08)
	char pad_290[0x78]; // 0x290(0x78)
	struct TArray<struct UPreviousNextSwitchWidget*> _switchWidgets; // 0x308(0x10)
	struct TWeakObjectPtr<struct UPrisonerInventoryComponent> _inventoryComponent; // 0x318(0x08)
	char pad_320[0x18]; // 0x320(0x18)
	struct UTextBlock* TitleText; // 0x338(0x08)
	struct UTextBlock* DescriptionText; // 0x340(0x08)

	void SwapIngredient(int32_t widgetIndex, int32_t orderIndex); // Function ConZ.CraftingInfoWidget.SwapIngredient // (Final|Native|Private) // @ game+0x23aeb70
};

// Class ConZ.CraftingIngredientConsumptionMethod
// Size: 0x28 (Inherited: 0x28)
struct UCraftingIngredientConsumptionMethod : UObject {
};

// Class ConZ.CICM_Default
// Size: 0x28 (Inherited: 0x28)
struct UCICM_Default : UCraftingIngredientConsumptionMethod {
};

// Class ConZ.CICM_Uses
// Size: 0x28 (Inherited: 0x28)
struct UCICM_Uses : UCraftingIngredientConsumptionMethod {
};

// Class ConZ.CICM_HealthRatio
// Size: 0x28 (Inherited: 0x28)
struct UCICM_HealthRatio : UCraftingIngredientConsumptionMethod {
};

// Class ConZ.CICM_HealthAsFakeUses
// Size: 0x28 (Inherited: 0x28)
struct UCICM_HealthAsFakeUses : UCraftingIngredientConsumptionMethod {
};

// Class ConZ.CICM_GameResource
// Size: 0x40 (Inherited: 0x28)
struct UCICM_GameResource : UCraftingIngredientConsumptionMethod {
	struct TArray<struct UGameResourceType*> _allowedResources; // 0x28(0x10)
	float _gameResourceAmountPerCraftingSlotAmount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class ConZ.CraftingItemTag
// Size: 0x30 (Inherited: 0x30)
struct UCraftingItemTag : UBaseItemTag {
};

// Class ConZ.CraftingPanelSwitcher
// Size: 0x298 (Inherited: 0x268)
struct UCraftingPanelSwitcher : UTabMenuPanel {
	struct UTabContainer* _tabRow; // 0x268(0x08)
	struct UWidgetSwitcher* _switcher; // 0x270(0x08)
	struct UItemsCraftingPanel* _itemsCraftingPanel; // 0x278(0x08)
	struct UBaseBuildingPanel* _baseBuildingPanel; // 0x280(0x08)
	struct UCookingPanel* _cookingPanel; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class ConZ.CraftingPanelWidget
// Size: 0x278 (Inherited: 0x268)
struct UCraftingPanelWidget : UUserWidget {
	struct UCentralBuildingPanel* _centralBuildingPanel; // 0x268(0x08)
	struct UWidgetSwitcher* _buildingCraftingWidgetSwitcher; // 0x270(0x08)
};

// Class ConZ.CraftingProductQualityApplicationMethod
// Size: 0x28 (Inherited: 0x28)
struct UCraftingProductQualityApplicationMethod : UObject {
};

// Class ConZ.CPQEM_Default
// Size: 0x28 (Inherited: 0x28)
struct UCPQEM_Default : UCraftingProductQualityApplicationMethod {
};

// Class ConZ.CraftingProductSpawningMethod
// Size: 0x28 (Inherited: 0x28)
struct UCraftingProductSpawningMethod : UObject {
};

// Class ConZ.CPSM_Default
// Size: 0x28 (Inherited: 0x28)
struct UCPSM_Default : UCraftingProductSpawningMethod {
};

// Class ConZ.CPSM_AmmunitionStack
// Size: 0x28 (Inherited: 0x28)
struct UCPSM_AmmunitionStack : UCraftingProductSpawningMethod {
};

// Class ConZ.CraftingPropertyTracker
// Size: 0x28 (Inherited: 0x28)
struct UCraftingPropertyTracker : UObject {
};

// Class ConZ.CPT_Weight
// Size: 0x30 (Inherited: 0x28)
struct UCPT_Weight : UCraftingPropertyTracker {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.CPT_Dirtiness
// Size: 0x30 (Inherited: 0x28)
struct UCPT_Dirtiness : UCraftingPropertyTracker {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.CPT_GameResource
// Size: 0x38 (Inherited: 0x28)
struct UCPT_GameResource : UCraftingPropertyTracker {
	struct UGameResourceType* _resourceClass; // 0x28(0x08)
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.CraftingRecipe
// Size: 0x98 (Inherited: 0x30)
struct UCraftingRecipe : UPrimaryDataAsset {
	struct TArray<struct FCraftingIngredientSlot> Ingredients; // 0x30(0x10)
	bool IsTwitchDrop; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FString TwitchDropId; // 0x48(0x10)
	bool IsDLC; // 0x58(0x01)
	enum class EDeluxeVersion DLCVersion; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
	struct USkill* RelevantSkill; // 0x60(0x08)
	struct FPerSkillLevelFloatData ExperienceReward; // 0x68(0x14)
	struct FPerSkillLevelFloatData FamePointReward; // 0x7c(0x14)
	struct FName SurvivalTipToShowOnCraft; // 0x90(0x08)
};

// Class ConZ.ItemCraftingRecipe
// Size: 0x130 (Inherited: 0x98)
struct UItemCraftingRecipe : UCraftingRecipe {
	struct TSoftClassPtr<UObject> Product; // 0x98(0x28)
	int32_t ProductQuantity; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UCraftingProductSpawningMethod* ProductSpawningMethod; // 0xc8(0x08)
	struct UCraftingProductQualityApplicationMethod* ProductQualityApplicationMethod; // 0xd0(0x08)
	struct TArray<struct UCraftingPropertyTracker*> PropertyTrackers; // 0xd8(0x10)
	struct FText InteractionName; // 0xe8(0x18)
	struct FPerSkillLevelFloatData Duration; // 0x100(0x14)
	char pad_114[0x4]; // 0x114(0x04)
	struct UAnimMontage* CustomCraftingMontage; // 0x118(0x08)
	struct UAkAudioEvent* StartCraftingAudioEvent; // 0x120(0x08)
	struct UAkAudioEvent* StopCraftingAudioEvent; // 0x128(0x08)
};

// Class ConZ.PlaceableCraftingRecipe
// Size: 0x218 (Inherited: 0x98)
struct UPlaceableCraftingRecipe : UCraftingRecipe {
	struct TSoftClassPtr<UObject> Product; // 0x98(0x28)
	bool IsSubjectToAllowMinesAndTrapsSetting; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct TSoftObjectPtr<UTexture2D> Icon; // 0xc8(0x28)
	struct FText Caption; // 0xf0(0x18)
	struct FText Description; // 0x108(0x18)
	struct TSoftClassPtr<UObject> PlaceableActorClass; // 0x120(0x28)
	float MaxPlacementAngle; // 0x148(0x04)
	bool AdjustRotation; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
	float GroundOffsetWhilePlacing; // 0x150(0x04)
	float MaxDistanceFromGroundWhilePlacing; // 0x154(0x04)
	float ReachabilityVerticalOffset; // 0x158(0x04)
	float YawStep; // 0x15c(0x04)
	bool IgnoreFloatingCheckWhilePlacing; // 0x160(0x01)
	char pad_161[0x3]; // 0x161(0x03)
	struct FVector PlacementLocationOffset; // 0x164(0x0c)
	struct FVector CollisionMeshScale; // 0x170(0x0c)
	struct FVector BoundsExtensionWhilePlacingMin; // 0x17c(0x0c)
	struct FVector BoundsExtensionWhilePlacingMax; // 0x188(0x0c)
	struct FVector PlacementTracesBoundsExtension; // 0x194(0x0c)
	struct FVector FloatingTracesBoundsExtension; // 0x1a0(0x0c)
	struct FVector FloatingTracesCenterOffset; // 0x1ac(0x0c)
	float MaxHeightAdjustmentWhilePlacing; // 0x1b8(0x04)
	float MinHeightAdjustmentWhilePlacing; // 0x1bc(0x04)
	bool CanPlaceOnWater; // 0x1c0(0x01)
	bool MustPlaceOnWater; // 0x1c1(0x01)
	bool CanPlaceOverItems; // 0x1c2(0x01)
	bool CheckBoundsAgainstOtherMarkedBounds; // 0x1c3(0x01)
	enum class EPlaceableActorMeshCollisionType MeshCollisionType; // 0x1c4(0x01)
	bool UseCollisionBoxForInteractionTrace; // 0x1c5(0x01)
	bool CheckBaseBuildingPlacementMask; // 0x1c6(0x01)
	bool CheckMilitaryPOIPlacementMask; // 0x1c7(0x01)
	enum class EPlacementAlgorithm PlacementAlgorithm; // 0x1c8(0x01)
	char pad_1C9[0x3]; // 0x1c9(0x03)
	float MaxMissedPlacementTracesPercent; // 0x1cc(0x04)
	struct FVector PlacementMeshOffset; // 0x1d0(0x0c)
	struct FVector PlacementMeshScale; // 0x1dc(0x0c)
	bool OnlyPlaceableInFriendlyFlagArea; // 0x1e8(0x01)
	bool CanPlaceInEnemyFlagArea; // 0x1e9(0x01)
	char pad_1EA[0x2]; // 0x1ea(0x02)
	int32_t MaxInstancesPerFlagArea; // 0x1ec(0x04)
	bool ShowDirectionIndicator; // 0x1f0(0x01)
	char pad_1F1[0x3]; // 0x1f1(0x03)
	struct FVector DirectionIndicatorOffset; // 0x1f4(0x0c)
	float DirectionIndicatorRotation; // 0x200(0x04)
	float DirectionIndicatorSize; // 0x204(0x04)
	float OutlineMaterialBaseOffset; // 0x208(0x04)
	float OutlineMaterialThinness; // 0x20c(0x04)
	bool IsOutlineMaterialTwoSided; // 0x210(0x01)
	char pad_211[0x7]; // 0x211(0x07)
};

// Class ConZ.CraftingRecipeButton
// Size: 0x418 (Inherited: 0x268)
struct UCraftingRecipeButton : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)
	struct USizeBox* _sizeBox; // 0x2a0(0x08)
	struct UImage* _background; // 0x2a8(0x08)
	struct UImage* _lines; // 0x2b0(0x08)
	struct UImage* _border; // 0x2b8(0x08)
	struct UImage* _icon; // 0x2c0(0x08)
	struct UImage* _favouriteStar; // 0x2c8(0x08)
	struct UImage* _twitchDropOrDLC; // 0x2d0(0x08)
	struct UMenuAnchor* _contextMenuPopup; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)
	struct UTitleAndDescriptionTooltip* _tooltipClass; // 0x2e8(0x08)
	struct USimpleTextDropdownEntry* _textDropdownEntryClass; // 0x2f0(0x08)
	struct UVerticalScrollBoxDropdownContent* _dropdownContentContainerClass; // 0x2f8(0x08)
	struct UAkAudioEvent* _onClickAudioEvent; // 0x300(0x08)
	struct FSlateBrush _twitchDropIcon; // 0x308(0x88)
	struct FSlateBrush _dlcIcon; // 0x390(0x88)

	void OnContextMenuOpenChanged(bool IsOpen); // Function ConZ.CraftingRecipeButton.OnContextMenuOpenChanged // (Final|Native|Private) // @ game+0x23aeae0
	struct UUserWidget* CreateContextMenuPopup(); // Function ConZ.CraftingRecipeButton.CreateContextMenuPopup // (Final|Native|Private) // @ game+0x23aea20
};

// Class ConZ.CraftingRecipeButtonsContainer
// Size: 0x2c8 (Inherited: 0x268)
struct UCraftingRecipeButtonsContainer : UUserWidget {
	char pad_268[0x28]; // 0x268(0x28)
	struct UOverlay* _titleOverlay; // 0x290(0x08)
	struct UTextBlock* _titleText; // 0x298(0x08)
	struct UCheckBox* _expandCheckBox; // 0x2a0(0x08)
	struct UWrapBox* _wrapBox; // 0x2a8(0x08)
	struct UCraftingRecipeButton* _buttonClass; // 0x2b0(0x08)
	char pad_2B8[0x10]; // 0x2b8(0x10)

	void OnCheckBoxStateChanged(bool IsChecked); // Function ConZ.CraftingRecipeButtonsContainer.OnCheckBoxStateChanged // (Final|Native|Private) // @ game+0x23aea50
};

// Class ConZ.CraftingIngredientTag
// Size: 0x88 (Inherited: 0x30)
struct UCraftingIngredientTag : UDataAsset {
	struct UCraftingIngredientConsumptionMethod* ConsumptionMethod; // 0x30(0x08)
	struct UAkAudioEvent* PlaceableFillSound; // 0x38(0x08)
	struct TSoftClassPtr<UObject> UIClassRepresentative; // 0x40(0x28)
	bool OverrideClassRepresentativeCaption; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct FText ClassRepresentativeCaption; // 0x70(0x18)
};

// Class ConZ.CraftingUIData
// Size: 0xa0 (Inherited: 0x30)
struct UCraftingUIData : UDataAsset {
	struct TArray<struct FCraftingCategoryData> ItemCategories; // 0x30(0x10)
	struct TArray<struct FCraftingCategoryData> PlaceableCategories; // 0x40(0x10)
	struct TMap<struct FGameplayTag, struct FText> CategoryNames; // 0x50(0x50)
};

// Class ConZ.CraftItemAction
// Size: 0xc0 (Inherited: 0xa8)
struct UCraftItemAction : UInteractionAction {
	char pad_A8[0x18]; // 0xa8(0x18)
};

// Class ConZ.CreditsWidget
// Size: 0x270 (Inherited: 0x268)
struct UCreditsWidget : UBaseMenu {
	struct UWidgetAnimation* _scrollingAnimation; // 0x268(0x08)
};

// Class ConZ.CriminalRecord
// Size: 0x378 (Inherited: 0x268)
struct UCriminalRecord : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UCriminalRecordSkill* _criminalRecordSkillClass; // 0x298(0x08)
	struct UCriminalRecordText* _textName; // 0x2a0(0x08)
	struct UCriminalRecordText* _textAliases; // 0x2a8(0x08)
	struct UCriminalRecordText* _textCrime; // 0x2b0(0x08)
	struct UCriminalRecordText* _textNumber; // 0x2b8(0x08)
	struct UCriminalRecordText* _textDateOfArrest; // 0x2c0(0x08)
	struct UCriminalRecordText* _textCountry; // 0x2c8(0x08)
	struct UCriminalRecordText* _textCity; // 0x2d0(0x08)
	struct UCriminalRecordText* _textGender; // 0x2d8(0x08)
	struct UCriminalRecordText* _textHeight; // 0x2e0(0x08)
	struct UCriminalRecordText* _textWeight; // 0x2e8(0x08)
	struct UCriminalRecordText* _textAge; // 0x2f0(0x08)
	struct UCriminalRecordText* _textBirthDate; // 0x2f8(0x08)
	struct UCriminalRecordText* _textEyeColor; // 0x300(0x08)
	struct UCriminalRecordText* _textHairColor; // 0x308(0x08)
	struct UCriminalRecordText* _textFlaws; // 0x310(0x08)
	struct UCriminalRecordText* _textServerLocation; // 0x318(0x08)
	struct UCriminalRecordText* _textBuildAndOccupation; // 0x320(0x08)
	struct UCriminalRecordText* _textStrengthCategory; // 0x328(0x08)
	struct UVerticalBox* _verticalBoxStrengthSkills; // 0x330(0x08)
	struct UCriminalRecordText* _textConstitutionCategory; // 0x338(0x08)
	struct UVerticalBox* _verticalBoxConstitutionSkills; // 0x340(0x08)
	struct UCriminalRecordText* _textDexterityCategory; // 0x348(0x08)
	struct UVerticalBox* _verticalBoxDexteritySkills; // 0x350(0x08)
	struct UCriminalRecordText* _textIntelligenceCategory; // 0x358(0x08)
	struct UVerticalBox* _verticalBoxIntelligenceSkills; // 0x360(0x08)
	struct UConZStandardButton* _buttonCancel; // 0x368(0x08)
	struct UConZStandardButton* _buttonOk; // 0x370(0x08)

	void OnButtonOkClicked(); // Function ConZ.CriminalRecord.OnButtonOkClicked // (Final|Native|Private) // @ game+0x23b33a0
	void OnButtonCancelClicked(); // Function ConZ.CriminalRecord.OnButtonCancelClicked // (Final|Native|Private) // @ game+0x23b3380
};

// Class ConZ.CriminalRecordSkill
// Size: 0x280 (Inherited: 0x268)
struct UCriminalRecordSkill : UUserWidget {
	struct UQuartalPieProgressBar* _quartalPieProgressBar; // 0x268(0x08)
	struct UTextBlock* _textName; // 0x270(0x08)
	struct UTextBlock* _textPercentage; // 0x278(0x08)
};

// Class ConZ.CriminalRecordText
// Size: 0x3f8 (Inherited: 0x268)
struct UCriminalRecordText : UUserWidget {
	struct UBorder* _mainBorder; // 0x268(0x08)
	struct UTextBlock* _textTitle; // 0x270(0x08)
	struct UTextBlock* _textValue; // 0x278(0x08)
	bool _hasLeftBorder; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct FSlateBrush _leftAndBottomBorder; // 0x288(0x88)
	struct FSlateBrush _bottomBorder; // 0x310(0x88)
	struct FText _title; // 0x398(0x18)
	int32_t _titleFontSize; // 0x3b0(0x04)
	struct FMargin _titlePadding; // 0x3b4(0x10)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct FText _value; // 0x3c8(0x18)
	int32_t _valueFontSize; // 0x3e0(0x04)
	struct FMargin _valuePadding; // 0x3e4(0x10)
	enum class EHorizontalAlignment _horizontalAlignment; // 0x3f4(0x01)
	char pad_3F5[0x3]; // 0x3f5(0x03)
};

// Class ConZ.CTFBase
// Size: 0x250 (Inherited: 0x220)
struct ACTFBase : AActor {
	struct USphereComponent* SphereComponent; // 0x220(0x08)
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	struct TArray<struct UMaterialInstance*> TeamMaterials; // 0x230(0x10)
	struct ACTFGameEvent* _gameEvent; // 0x240(0x08)
	int32_t _team; // 0x248(0x04)
	float _radius; // 0x24c(0x04)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.CTFBase.SphereOverlap // (Final|Native|Private|HasOutParms) // @ game+0x23b3650
	void OnRep_Team(); // Function ConZ.CTFBase.OnRep_Team // (Final|Native|Private) // @ game+0x23b3570
	void OnRep_Radius(); // Function ConZ.CTFBase.OnRep_Radius // (Final|Native|Private) // @ game+0x23b3550
};

// Class ConZ.CTFFlag
// Size: 0x2d0 (Inherited: 0x220)
struct ACTFFlag : AActor {
	struct USphereComponent* SphereComponent; // 0x220(0x08)
	struct USkeletalMeshComponent* FlagMesh; // 0x228(0x08)
	struct TArray<struct UMaterialInstance*> TeamMaterials; // 0x230(0x10)
	struct FName AttachSocketName; // 0x240(0x08)
	struct ACTFGameEvent* _gameEvent; // 0x248(0x08)
	int32_t _team; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct APrisoner* _carrier; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	float _resetProgress; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct FTransform _baseTransform; // 0x270(0x30)
	struct FTransform _flagTransform; // 0x2a0(0x30)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.CTFFlag.SphereOverlap // (Final|Native|Private|HasOutParms) // @ game+0x23b3880
	void OnRep_Team(); // Function ConZ.CTFFlag.OnRep_Team // (Final|Native|Private) // @ game+0x23b3590
	void OnRep_FlagTransform(); // Function ConZ.CTFFlag.OnRep_FlagTransform // (Final|Native|Private) // @ game+0x23b3510
};

// Class ConZ.CTFFlagStand
// Size: 0x240 (Inherited: 0x220)
struct ACTFFlagStand : AActor {
	struct UStaticMeshComponent* Mesh; // 0x220(0x08)
	struct UPointLightComponent* Light; // 0x228(0x08)
	struct FLinearColor _lightColor; // 0x230(0x10)

	void OnRep_LightColor(); // Function ConZ.CTFFlagStand.OnRep_LightColor // (Final|Native|Private) // @ game+0x23b3530
};

// Class ConZ.GameEventBase
// Size: 0x588 (Inherited: 0x220)
struct AGameEventBase : AActor {
	struct FText EventName; // 0x220(0x18)
	struct UGameEventParticipantStats* ParticipantStatsClass; // 0x238(0x08)
	struct UGameEventRoundInfoWidget* RoundInfoWidgetClass; // 0x240(0x08)
	struct UGameEventTeamHeaderWidget* TeamHeaderWidgetClass; // 0x248(0x08)
	struct UGameEventParticipantStatsWidget* StatWidgetClass; // 0x250(0x08)
	struct UGameEventParticipantStatsWidget* MiniStatWidgetClass; // 0x258(0x08)
	struct UAkAudioEvent* TimesUpAnnouncement; // 0x260(0x08)
	struct UAkAudioEvent* BlueTeamWonRoundAnnouncement; // 0x268(0x08)
	struct UAkAudioEvent* RedTeamWonRoundAnnouncement; // 0x270(0x08)
	struct UAkAudioEvent* RoundDrawAnnouncement; // 0x278(0x08)
	struct UAkAudioEvent* BlueTeamWonEventAnnouncement; // 0x280(0x08)
	struct UAkAudioEvent* RedTeamWonEventAnnouncement; // 0x288(0x08)
	struct UAkAudioEvent* EventDrawAnnouncement; // 0x290(0x08)
	struct UAkAudioEvent* Time30sAnnouncement; // 0x298(0x08)
	struct UAkAudioEvent* Time15sAnnouncement; // 0x2a0(0x08)
	struct UAkAudioEvent* Time10sCountdownAnnouncement; // 0x2a8(0x08)
	struct UAkAudioEvent* TensionMusicStart; // 0x2b0(0x08)
	struct UAkAudioEvent* TensionMusicStop; // 0x2b8(0x08)
	char pad_2C0[0x30]; // 0x2c0(0x30)
	enum class EGameEventState _state; // 0x2f0(0x01)
	char pad_2F1[0x3]; // 0x2f1(0x03)
	int32_t _activeParticipantCount; // 0x2f4(0x04)
	int32_t _numberOfTeams; // 0x2f8(0x04)
	char pad_2FC[0x4]; // 0x2fc(0x04)
	struct TArray<int32_t> _teamMemberCount; // 0x300(0x10)
	struct TArray<int32_t> _teamScores; // 0x310(0x10)
	struct TArray<int32_t> _roundWinningTeam; // 0x320(0x10)
	int32_t _round; // 0x330(0x04)
	float _roundTimeLeft; // 0x334(0x04)
	float _cancelTimeLeft; // 0x338(0x04)
	char pad_33C[0x1c]; // 0x33c(0x1c)
	struct AGameEventLocationMarker* _marker; // 0x358(0x08)
	struct AGameEventBorder* _border; // 0x360(0x08)
	struct AGameEventManager* _manager; // 0x368(0x08)
	struct TArray<struct FGameEventParticipantInfo> _participantInfo; // 0x370(0x10)
	char pad_380[0x190]; // 0x380(0x190)
	struct UGameEventCardWidget* _cardWidget; // 0x510(0x08)
	struct UGameEventScoreboardWidget* _scoreboardWidget; // 0x518(0x08)
	struct UGameEventScoreboardWidget* _miniScoreboardWidget; // 0x520(0x08)
	struct TArray<int32_t> _rankings; // 0x528(0x10)
	char pad_538[0x20]; // 0x538(0x20)
	struct UAkComponent* _lastAnnouncement; // 0x558(0x08)
	struct UAkComponent* _lastCountdownAnnouncement; // 0x560(0x08)
	char pad_568[0x20]; // 0x568(0x20)

	void UpdateTeamMemberCount(); // Function ConZ.GameEventBase.UpdateTeamMemberCount // (Native|Public|BlueprintCallable) // @ game+0x23e8420
	void UpdateRanking(int32_t Index); // Function ConZ.GameEventBase.UpdateRanking // (Native|Public|BlueprintCallable) // @ game+0x23e8390
	void SetTeamScore(int32_t TeamIndex, float Score); // Function ConZ.GameEventBase.SetTeamScore // (Final|Native|Public|BlueprintCallable) // @ game+0x23e82c0
	void SetParticipantTeam(struct APrisoner* Prisoner, int32_t TeamIndex); // Function ConZ.GameEventBase.SetParticipantTeam // (Native|Public|BlueprintCallable) // @ game+0x23e81f0
	void SetParameters(struct FGameEventParameters& Parameters); // Function ConZ.GameEventBase.SetParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23e8140
	void SetNumberOfTeams(int32_t Value); // Function ConZ.GameEventBase.SetNumberOfTeams // (Final|Native|Public) // @ game+0x23e80b0
	bool ScheduleEvent(); // Function ConZ.GameEventBase.ScheduleEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23e8080
	void SavePrisonerState(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.SavePrisonerState // (Native|Public|BlueprintCallable) // @ game+0x23e7ff0
	bool SameTeam(struct APrisoner* prisonerA, struct APrisoner* prisonerB); // Function ConZ.GameEventBase.SameTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e7f20
	void ResetGameEventArea(); // Function ConZ.GameEventBase.ResetGameEventArea // (Native|Public|BlueprintCallable) // @ game+0x23e7f00
	void RegisterParticipant(struct APrisoner* Prisoner, int32_t preferredTeam); // Function ConZ.GameEventBase.RegisterParticipant // (Final|Native|Public|BlueprintCallable) // @ game+0x23e7e30
	void PresentSpawnScreen(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.PresentSpawnScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x23e7da0
	void ParticipantEnter(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ParticipantEnter // (Native|Public|BlueprintCallable) // @ game+0x23e7d10
	void OnRep_Rankings(); // Function ConZ.GameEventBase.OnRep_Rankings // (Final|Native|Private) // @ game+0x23e7cd0
	void OnRep_ParticipantInfo(); // Function ConZ.GameEventBase.OnRep_ParticipantInfo // (Final|Native|Private) // @ game+0x23e7cb0
	void NetMulticast_UpdateScoreboard(int32_t victimIndex, int32_t killerIndex, bool IsHeadShot); // Function ConZ.GameEventBase.NetMulticast_UpdateScoreboard // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23e7b80
	void Multicast_StopMusic(struct UAkAudioEvent* StopAudioEvent); // Function ConZ.GameEventBase.Multicast_StopMusic // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23cdb90
	void Multicast_StopCountdownAnnouncement(); // Function ConZ.GameEventBase.Multicast_StopCountdownAnnouncement // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23cd9d0
	void Multicast_ShowScoreboardForEveryone(); // Function ConZ.GameEventBase.Multicast_ShowScoreboardForEveryone // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x125e920
	void Multicast_ShowEventNotification(enum class EGameEventNotificationType Type, struct FString auxString); // Function ConZ.GameEventBase.Multicast_ShowEventNotification // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x23e7480
	void Multicast_PlayMusic(struct UAkAudioEvent* StartAudioEvent); // Function ConZ.GameEventBase.Multicast_PlayMusic // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23e73f0
	void Multicast_PlayCountdownAnnouncement(struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayCountdownAnnouncement // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23e7360
	void Multicast_PlayAnnouncementToTeam(int32_t TeamIndex, struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToTeam // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23e7290
	void Multicast_PlayAnnouncementToParticipant(struct APrisoner* Prisoner, struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToParticipant // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23e71c0
	void Multicast_PlayAnnouncementToAllParticipants(struct UAkAudioEvent* Sound); // Function ConZ.GameEventBase.Multicast_PlayAnnouncementToAllParticipants // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0x23e7130
	void Multicast_HideScoreboardForEveryone(); // Function ConZ.GameEventBase.Multicast_HideScoreboardForEveryone // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x15379e0
	void KickParticipant(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.KickParticipant // (Final|Native|Public|BlueprintCallable) // @ game+0x23e70a0
	bool IsTeamFull(int32_t TeamIndex); // Function ConZ.GameEventBase.IsTeamFull // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e7000
	bool IsParticipating(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.IsParticipating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6f60
	void InitEvent(struct AGameEventLocationMarker* marker, struct AGameEventManager* manager); // Function ConZ.GameEventBase.InitEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23e6e90
	struct TArray<int32_t> GetWinningTeamsPerRound(); // Function ConZ.GameEventBase.GetWinningTeamsPerRound // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6e50
	float GetTeamScore(int32_t TeamIndex); // Function ConZ.GameEventBase.GetTeamScore // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6db0
	int32_t GetTeamMemberCount(int32_t TeamIndex); // Function ConZ.GameEventBase.GetTeamMemberCount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6d10
	float GetStatusTime(); // Function ConZ.GameEventBase.GetStatusTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6cd0
	struct FRotator GetSpawnRotationForLocation(struct FVector Location); // Function ConZ.GameEventBase.GetSpawnRotationForLocation // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23e6c20
	struct UGameEventScoreboardWidget* GetScoreboardWidget(); // Function ConZ.GameEventBase.GetScoreboardWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x2398ac0
	float GetRoundTimeLeft(); // Function ConZ.GameEventBase.GetRoundTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6bc0
	void GetPossibleLoadout(struct APrisoner* Prisoner, struct TArray<struct UItemSelection*>& primaryWeapons, struct TArray<struct UItemSelection*>& secondaryWeapons, struct TArray<struct UItemSelection*>& tertiaryWeapons, struct TArray<struct UItemSelection*>& outfits, struct TArray<struct UItemSelection*>& support, struct TArray<struct UItemSelection*>& Gear); // Function ConZ.GameEventBase.GetPossibleLoadout // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23e68d0
	int32_t GetParticipantTeam(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.GetParticipantTeam // (Native|Public|BlueprintCallable) // @ game+0x23e6830
	struct FVector GetParticipantJoinLocation(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.GetParticipantJoinLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23e6780
	struct TArray<struct FGameEventParticipantInfo> GetParticipantInfo(); // Function ConZ.GameEventBase.GetParticipantInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6740
	int32_t GetParticipantAtRank(int32_t Rank); // Function ConZ.GameEventBase.GetParticipantAtRank // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e66a0
	struct FGameEventParameters GetParameters(); // Function ConZ.GameEventBase.GetParameters // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6660
	int32_t GetNumberOfTeams(); // Function ConZ.GameEventBase.GetNumberOfTeams // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6630
	int32_t GetNumberOfParticipants(); // Function ConZ.GameEventBase.GetNumberOfParticipants // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6600
	int32_t GetNumberOfActiveParticipants(); // Function ConZ.GameEventBase.GetNumberOfActiveParticipants // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e65d0
	struct UGameEventScoreboardWidget* GetMiniScoreboardWidget(); // Function ConZ.GameEventBase.GetMiniScoreboardWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x23e65a0
	float GetMaxDurationLeft(); // Function ConZ.GameEventBase.GetMaxDurationLeft // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6560
	struct AGameEventLocationMarker* GetMarker(); // Function ConZ.GameEventBase.GetMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6530
	enum class EGameEventState GetEventState(); // Function ConZ.GameEventBase.GetEventState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e64d0
	int32_t GetCurrentRound(); // Function ConZ.GameEventBase.GetCurrentRound // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6440
	struct UGameEventCardWidget* GetCardWidget(); // Function ConZ.GameEventBase.GetCardWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x23e6410
	float GetCancelTimeLeft(); // Function ConZ.GameEventBase.GetCancelTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e63e0
	struct AGameEventBorder* GetBorder(); // Function ConZ.GameEventBase.GetBorder // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x23e63b0
	void ForceParticipantStatsRep(int32_t Index); // Function ConZ.GameEventBase.ForceParticipantStatsRep // (Final|Native|Public|BlueprintCallable) // @ game+0x23e62f0
	int32_t FindParticipantIndex(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.FindParticipantIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6250
	void EquipParticipantLoadout(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.EquipParticipantLoadout // (Native|Public|BlueprintCallable) // @ game+0x23e61c0
	int32_t DeclareWinningTeam(); // Function ConZ.GameEventBase.DeclareWinningTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6190
	void ConvertScoreToFame(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ConvertScoreToFame // (Native|Public|BlueprintCallable) // @ game+0x23e6100
	void ClearTeamScores(); // Function ConZ.GameEventBase.ClearTeamScores // (Final|Native|Public|BlueprintCallable) // @ game+0x23e60e0
	struct FVector ChooseSpawnLocation(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.ChooseSpawnLocation // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23e6030
	void CheckParticipatingPrisoners(); // Function ConZ.GameEventBase.CheckParticipatingPrisoners // (Final|Native|Public|BlueprintCallable) // @ game+0x23e6010
	bool CanStart(); // Function ConZ.GameEventBase.CanStart // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e5f50
	bool CanSchedule(); // Function ConZ.GameEventBase.CanSchedule // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e5f20
	bool CanJoin(struct APrisoner* Prisoner, int32_t preferredTeam); // Function ConZ.GameEventBase.CanJoin // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e5e50
	void CancelEvent(bool Force); // Function ConZ.GameEventBase.CancelEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23e5f80
	void CallInParticipant(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.CallInParticipant // (Final|Native|Public|BlueprintCallable) // @ game+0x23e5dc0
	void AwardParticipant(int32_t Index, struct FGameEventRewardPoints& reward); // Function ConZ.GameEventBase.AwardParticipant // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23e5ce0
	int32_t AssignParticipantTeam(struct APrisoner* Prisoner); // Function ConZ.GameEventBase.AssignParticipantTeam // (Native|Public|BlueprintCallable) // @ game+0x23e5c40
};

// Class ConZ.GameEventParticipantStats
// Size: 0x48 (Inherited: 0x28)
struct UGameEventParticipantStats : UObject {
	float _score; // 0x28(0x04)
	char pad_2C[0x1c]; // 0x2c(0x1c)

	int32_t GetTeamKills(); // Function ConZ.GameEventParticipantStats.GetTeamKills // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b1830
	int32_t GetSuicides(); // Function ConZ.GameEventParticipantStats.GetSuicides // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13b1860
	float GetScore(); // Function ConZ.GameEventParticipantStats.GetScore // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6bf0
	int32_t GetHeadshots(); // Function ConZ.GameEventParticipantStats.GetHeadshots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6500
	int32_t GetEnemyKills(); // Function ConZ.GameEventParticipantStats.GetEnemyKills // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e64a0
	int32_t GetDeaths(); // Function ConZ.GameEventParticipantStats.GetDeaths // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6470
	int32_t GetAssists(); // Function ConZ.GameEventParticipantStats.GetAssists // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23e6380
};

// Class ConZ.CTFParticipantStats
// Size: 0x58 (Inherited: 0x48)
struct UCTFParticipantStats : UGameEventParticipantStats {
	int32_t Pickups; // 0x48(0x04)
	int32_t Captures; // 0x4c(0x04)
	int32_t Returns; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class ConZ.CTFGameEvent
// Size: 0x6b0 (Inherited: 0x588)
struct ACTFGameEvent : AGameEventBase {
	struct ACTFFlag* FlagClass; // 0x588(0x08)
	struct ACTFBase* CaptureBaseClass; // 0x590(0x08)
	struct ACTFFlagStand* FlagStandClass; // 0x598(0x08)
	struct UTexture2D* FlagIconTexture; // 0x5a0(0x08)
	struct UTexture2D* FlagAccentTexture; // 0x5a8(0x08)
	struct UTexture2D* BaseIconTexture; // 0x5b0(0x08)
	struct UTexture2D* BaseAccentTexture; // 0x5b8(0x08)
	struct UTexture2D* EmptyBaseIconTexture; // 0x5c0(0x08)
	struct UTexture2D* EmptyBaseAccentTexture; // 0x5c8(0x08)
	struct FLinearColor TeamColorA; // 0x5d0(0x10)
	struct FLinearColor TeamColorB; // 0x5e0(0x10)
	struct UAkAudioEvent* BlueTeamPickedUpFlagAnnouncement; // 0x5f0(0x08)
	struct UAkAudioEvent* BlueTeamCapturedFlagAnnouncement; // 0x5f8(0x08)
	struct UAkAudioEvent* BlueTeamFlagDroppedAnnouncement; // 0x600(0x08)
	struct UAkAudioEvent* BlueTeamFlagReturnedAnnouncement; // 0x608(0x08)
	struct UAkAudioEvent* RedTeamPickedUpFlagAnnouncement; // 0x610(0x08)
	struct UAkAudioEvent* RedTeamCapturedFlagAnnouncement; // 0x618(0x08)
	struct UAkAudioEvent* RedTeamFlagDroppedAnnouncement; // 0x620(0x08)
	struct UAkAudioEvent* RedTeamFlagReturnedAnnouncement; // 0x628(0x08)
	struct FCTFParameters _CTFParameters; // 0x630(0x30)
	struct ACTFFlag* _flagA; // 0x660(0x08)
	struct ACTFFlag* _flagB; // 0x668(0x08)
	struct ACTFBase* _baseA; // 0x670(0x08)
	struct ACTFBase* _baseB; // 0x678(0x08)
	char pad_680[0x30]; // 0x680(0x30)

	void SetCTFParameters(struct FCTFParameters& Params); // Function ConZ.CTFGameEvent.SetCTFParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23b35b0
	void OnParticipantDied(struct APrisoner* victim, struct AController* eventInstigator, struct AActor* causer); // Function ConZ.CTFGameEvent.OnParticipantDied // (Native|Public|BlueprintCallable) // @ game+0x23b33c0
	struct ACTFFlag* GetFlagB(); // Function ConZ.CTFGameEvent.GetFlagB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23b3350
	struct ACTFFlag* GetFlagA(); // Function ConZ.CTFGameEvent.GetFlagA // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23b3350
	struct FCTFParameters GetCTFParameters(); // Function ConZ.CTFGameEvent.GetCTFParameters // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23b3310
};

// Class ConZ.GameEventLocationMarker
// Size: 0x418 (Inherited: 0x220)
struct AGameEventLocationMarker : AActor {
	struct FText LocationName; // 0x220(0x18)
	struct UTexture2D* LocationImage; // 0x238(0x08)
	struct UTexture2D* LocationImageGrayscale; // 0x240(0x08)
	bool EligibleForRandomPick; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct AGameEventBase* GameEventClass; // 0x250(0x08)
	struct FGameEventParameters GameEventParameters; // 0x258(0x188)
	struct AGameEventBorder* BorderClass; // 0x3e0(0x08)
	struct FVector AreaCenterOffset; // 0x3e8(0x0c)
	float Radius; // 0x3f4(0x04)
	struct TArray<struct FSpawnArea> SpawnAreas; // 0x3f8(0x10)
	struct USphereComponent* Sphere; // 0x408(0x08)
	struct UBillboardComponent* Sprite; // 0x410(0x08)

	struct FVector GetAreaCenter(); // Function ConZ.GameEventLocationMarker.GetAreaCenter // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb630
	struct AGameEventBase* CreateGameEvent(); // Function ConZ.GameEventLocationMarker.CreateGameEvent // (Native|Public|BlueprintCallable) // @ game+0x23eb3b0
	struct AGameEventBorder* CreateBorder(); // Function ConZ.GameEventLocationMarker.CreateBorder // (Native|Public|BlueprintCallable) // @ game+0x23eb380
};

// Class ConZ.CTFLocationMarker
// Size: 0x4e0 (Inherited: 0x418)
struct ACTFLocationMarker : AGameEventLocationMarker {
	struct FCTFParameters CTFParameters; // 0x418(0x30)
	struct FVector CaptureOffsetA; // 0x448(0x0c)
	struct FVector CaptureOffsetB; // 0x454(0x0c)
	float CaptureRadiusA; // 0x460(0x04)
	float CaptureRadiusB; // 0x464(0x04)
	char pad_468[0x8]; // 0x468(0x08)
	struct FTransform FlagOffsetA; // 0x470(0x30)
	struct FTransform FlagOffsetB; // 0x4a0(0x30)
	struct UStaticMeshComponent* FlagAPreviewMesh; // 0x4d0(0x08)
	struct UStaticMeshComponent* FlagBPreviewMesh; // 0x4d8(0x08)
};

// Class ConZ.CurrencyConversionRequest
// Size: 0x50 (Inherited: 0x28)
struct UCurrencyConversionRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x28]; // 0x28(0x28)
};

// Class ConZ.CurrencyConversionResponse
// Size: 0x30 (Inherited: 0x28)
struct UCurrencyConversionResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.CurrencyItemComponent
// Size: 0xd8 (Inherited: 0xc8)
struct UCurrencyItemComponent : UItemComponent {
	int32_t _value; // 0xc8(0x04)
	char pad_CC[0xc]; // 0xcc(0x0c)
};

// Class ConZ.CursedScrollBar
// Size: 0x290 (Inherited: 0x268)
struct UCursedScrollBar : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	float ScrollBarValue; // 0x280(0x04)
	float ViewportHeight; // 0x284(0x04)
	float ContentHeight; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)

	void UpdateFromValueInternal2(float Value, float MaxCountOnScreen, float MaxValue); // Function ConZ.CursedScrollBar.UpdateFromValueInternal2 // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void CallSetToUpdateFromValue(float Value, float MaxCountOnScreen, float MaxValue); // Function ConZ.CursedScrollBar.CallSetToUpdateFromValue // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
	void CallOnSliderMoved(float Value); // Function ConZ.CursedScrollBar.CallOnSliderMoved // (Final|Native|Public|BlueprintCallable) // @ game+0x23b3290
};

// Class ConZ.CustomBorder
// Size: 0x2a0 (Inherited: 0x268)
struct UCustomBorder : UUserWidget {
	struct UImage* Left; // 0x268(0x08)
	struct UImage* Right; // 0x270(0x08)
	struct UImage* Top; // 0x278(0x08)
	struct UImage* Bottom; // 0x280(0x08)
	float BorderThickness; // 0x288(0x04)
	struct FLinearColor BorderColor; // 0x28c(0x10)
	char pad_29C[0x4]; // 0x29c(0x04)
};

// Class ConZ.CustomMapBorder
// Size: 0x288 (Inherited: 0x220)
struct ACustomMapBorder : AActor {
	struct UStaticMeshComponent* Mesh; // 0x220(0x08)
	struct UStaticMeshComponent* TournamentMesh; // 0x228(0x08)
	struct UMaterialInstanceDynamic* Material; // 0x230(0x08)
	struct FVector2D _minCustomMapSize; // 0x238(0x08)
	bool _isInTournamentMode; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float _tournamentModeCompletionPercentage; // 0x244(0x04)
	float _nearingCompletionPercentage; // 0x248(0x04)
	char pad_24C[0x8]; // 0x24c(0x08)
	struct FVector2D _minTournamentMapSize; // 0x254(0x08)
	struct FBox2D _tournamentFinalBorderDimensions; // 0x25c(0x14)
	bool _active; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	struct FBox2D _customMapDimensions; // 0x274(0x14)

	void OnRep_TournamentCompletionPercentage(); // Function ConZ.CustomMapBorder.OnRep_TournamentCompletionPercentage // (Final|Native|Private) // @ game+0x23b34f0
	void OnRep_IsInTournamentMode(); // Function ConZ.CustomMapBorder.OnRep_IsInTournamentMode // (Final|Native|Private) // @ game+0x23b34f0
	void OnRep_CustomMapDimensions(); // Function ConZ.CustomMapBorder.OnRep_CustomMapDimensions // (Final|Native|Private) // @ game+0x23b34f0
	void OnRep_Active(); // Function ConZ.CustomMapBorder.OnRep_Active // (Final|Native|Private) // @ game+0x23b34d0
};

// Class ConZ.CustomZoneDataAsset
// Size: 0x50 (Inherited: 0x30)
struct UCustomZoneDataAsset : UDataAsset {
	struct TArray<struct FCustomZoneDisplayData> CustomZoneEventDisplayData; // 0x30(0x10)
	struct TArray<struct FCustomZoneDisplayData> CustomZoneHandlingMethodDisplayData; // 0x40(0x10)
};

// Class ConZ.CustomZoneRegistry
// Size: 0x220 (Inherited: 0xb0)
struct UCustomZoneRegistry : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct UMaterialInterface* _mapMaterial; // 0xc0(0x08)
	struct FCustomZoneConfiguration _defaultGlobalConfiguration; // 0xc8(0x48)
	struct FCustomZoneConfiguration _defaultConfiguration; // 0x110(0x48)
	struct TMap<struct FName, struct FCustomZoneRegion> _defaultRegions; // 0x158(0x50)
	struct UCanvasRenderTarget2D* _mapTexture; // 0x1a8(0x08)
	struct UTexture2D* _shaderData; // 0x1b0(0x08)
	char pad_1B8[0x68]; // 0x1b8(0x68)

	void NetMulticast_ReceiveCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.CustomZoneRegistry.NetMulticast_ReceiveCustomZoneData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23b7f90
};

// Class ConZ.CustomZoneSettingsApplyNotification
// Size: 0x278 (Inherited: 0x268)
struct UCustomZoneSettingsApplyNotification : UUserWidget {
	struct UTextBlock* _text; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class ConZ.CustomZoneSettingsColorPicker
// Size: 0x328 (Inherited: 0x268)
struct UCustomZoneSettingsColorPicker : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UButton* _button0; // 0x280(0x08)
	struct UButton* _button1; // 0x288(0x08)
	struct UButton* _button2; // 0x290(0x08)
	struct UButton* _button3; // 0x298(0x08)
	struct UButton* _button4; // 0x2a0(0x08)
	struct UButton* _button5; // 0x2a8(0x08)
	struct UButton* _button6; // 0x2b0(0x08)
	struct UButton* _button7; // 0x2b8(0x08)
	struct UGridPanel* _border0; // 0x2c0(0x08)
	struct UGridPanel* _border1; // 0x2c8(0x08)
	struct UGridPanel* _border2; // 0x2d0(0x08)
	struct UGridPanel* _border3; // 0x2d8(0x08)
	struct UGridPanel* _border4; // 0x2e0(0x08)
	struct UGridPanel* _border5; // 0x2e8(0x08)
	struct UGridPanel* _border6; // 0x2f0(0x08)
	struct UGridPanel* _border7; // 0x2f8(0x08)
	char pad_300[0x28]; // 0x300(0x28)

	void HandleButtonPress7(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress7 // (Final|Native|Private) // @ game+0x23b7930
	void HandleButtonPress6(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress6 // (Final|Native|Private) // @ game+0x23b7910
	void HandleButtonPress5(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress5 // (Final|Native|Private) // @ game+0x23b78f0
	void HandleButtonPress4(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress4 // (Final|Native|Private) // @ game+0x23b78d0
	void HandleButtonPress3(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress3 // (Final|Native|Private) // @ game+0x23b78b0
	void HandleButtonPress2(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress2 // (Final|Native|Private) // @ game+0x23b7890
	void HandleButtonPress1(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress1 // (Final|Native|Private) // @ game+0x23b7870
	void HandleButtonPress0(); // Function ConZ.CustomZoneSettingsColorPicker.HandleButtonPress0 // (Final|Native|Private) // @ game+0x23b7850
};

// Class ConZ.CustomZoneSettingsConfiguration
// Size: 0x320 (Inherited: 0x268)
struct UCustomZoneSettingsConfiguration : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UBorder* _border; // 0x298(0x08)
	struct UTextBlock* _configurationName; // 0x2a0(0x08)
	struct UButton* _buttonRemove; // 0x2a8(0x08)
	struct FLinearColor _unhighlightedColor; // 0x2b0(0x10)
	struct FLinearColor _highlightedColor; // 0x2c0(0x10)
	char pad_2D0[0x50]; // 0x2d0(0x50)

	void HandleRemoveButtonClicked(); // Function ConZ.CustomZoneSettingsConfiguration.HandleRemoveButtonClicked // (Final|Native|Private) // @ game+0x23b7970
};

// Class ConZ.CustomZoneSettingsConfigurationDetails
// Size: 0x310 (Inherited: 0x268)
struct UCustomZoneSettingsConfigurationDetails : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UEditableText* _name; // 0x280(0x08)
	struct UCustomZoneSettingsColorPicker* _color; // 0x288(0x08)
	struct UVerticalBox* _handlingMethodSelectorContainer; // 0x290(0x08)
	struct TArray<struct FLinearColor> _colors; // 0x298(0x10)
	struct UCustomZoneSettingsHandlingMethodSelector* _handlingMethodSelectorClass; // 0x2a8(0x08)
	bool _shouldShowSkipOption; // 0x2b0(0x01)
	char pad_2B1[0x5f]; // 0x2b1(0x5f)

	void HandleNameChange(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsConfigurationDetails.HandleNameChange // (Final|Native|Private|HasOutParms) // @ game+0x23b7a60
};

// Class ConZ.CustomZoneSettingsConfigurationsList
// Size: 0x2c8 (Inherited: 0x268)
struct UCustomZoneSettingsConfigurationsList : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UTextBlock* _configurationCountDisplay; // 0x298(0x08)
	struct UButton* _buttonAddConfiguration; // 0x2a0(0x08)
	struct UScrollBox* _scrollBox; // 0x2a8(0x08)
	struct UCustomZoneSettingsConfiguration* _configurationWidgetClass; // 0x2b0(0x08)
	char pad_2B8[0x10]; // 0x2b8(0x10)

	void UpdateConfiguration(int32_t ConfigurationIndex, struct FCustomZoneConfiguration& configuration); // Function ConZ.CustomZoneSettingsConfigurationsList.UpdateConfiguration // (Final|Native|Public|HasOutParms) // @ game+0x23b82f0
	void RemoveConfiguration(int32_t ConfigurationIndex); // Function ConZ.CustomZoneSettingsConfigurationsList.RemoveConfiguration // (Final|Native|Public) // @ game+0x23b81c0
	void AddConfiguration(struct FCustomZoneConfiguration& configuration); // Function ConZ.CustomZoneSettingsConfigurationsList.AddConfiguration // (Final|Native|Public|HasOutParms) // @ game+0x23b76c0
};

// Class ConZ.CustomZoneSettingsDetailsDisplay
// Size: 0x300 (Inherited: 0x268)
struct UCustomZoneSettingsDetailsDisplay : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct UBorder* _displayBox; // 0x2c8(0x08)
	struct UCustomZoneSettingsConfigurationDetails* _globalConfigurationDetailsWidgetClass; // 0x2d0(0x08)
	struct UCustomZoneSettingsConfigurationDetails* _configurationDetailsWidgetClass; // 0x2d8(0x08)
	struct UCustomZoneSettingsRegionDetails* _regionDetailsWidgetClass; // 0x2e0(0x08)
	struct UCustomZoneSettingsConfigurationDetails* _globalConfigurationDetails; // 0x2e8(0x08)
	struct UCustomZoneSettingsConfigurationDetails* _configurationDetails; // 0x2f0(0x08)
	struct UCustomZoneSettingsRegionDetails* _regionDetails; // 0x2f8(0x08)
};

// Class ConZ.CustomZoneSettingsEventDisplay
// Size: 0x280 (Inherited: 0x268)
struct UCustomZoneSettingsEventDisplay : UUserWidget {
	struct UTextBlock* _eventNameText; // 0x268(0x08)
	struct UTextBlock* _handlingMethodText; // 0x270(0x08)
	struct UCustomZoneDataAsset* _customZoneData; // 0x278(0x08)
};

// Class ConZ.CustomZoneSettingsHandlingMethodSelector
// Size: 0x2b8 (Inherited: 0x268)
struct UCustomZoneSettingsHandlingMethodSelector : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UTextBlock* _nameText; // 0x280(0x08)
	struct UButton* _buttonSkip; // 0x288(0x08)
	struct UButton* _buttonAllow; // 0x290(0x08)
	struct UButton* _buttonBlock; // 0x298(0x08)
	struct UCustomZoneDataAsset* _customZoneData; // 0x2a0(0x08)
	struct UCustomZoneSettingsToolTip* _tooltipClass; // 0x2a8(0x08)
	bool _showSkipOption; // 0x2b0(0x01)
	char pad_2B1[0x7]; // 0x2b1(0x07)

	void HandleSelectionSkip(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionSkip // (Final|Native|Private) // @ game+0x23b7d20
	void HandleSelectionBlock(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionBlock // (Final|Native|Private) // @ game+0x23b7d00
	void HandleSelectionAllow(); // Function ConZ.CustomZoneSettingsHandlingMethodSelector.HandleSelectionAllow // (Final|Native|Private) // @ game+0x23b7ce0
};

// Class ConZ.CustomZoneSettingsMap
// Size: 0x308 (Inherited: 0x268)
struct UCustomZoneSettingsMap : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _map; // 0x280(0x08)
	struct UTextBlock* _infoLeft; // 0x288(0x08)
	struct UTextBlock* _infoRight; // 0x290(0x08)
	struct UButton* _buttonAddCircleRegion; // 0x298(0x08)
	struct UButton* _buttonAddRectangleRegion; // 0x2a0(0x08)
	struct UButton* _buttonRemoveRegion; // 0x2a8(0x08)
	struct FLinearColor _buttonHighlightColor; // 0x2b0(0x10)
	struct UTexture2D* _shaderData; // 0x2c0(0x08)
	struct UMaterialInstanceDynamic* _mapMaterial; // 0x2c8(0x08)
	char pad_2D0[0x38]; // 0x2d0(0x38)
};

// Class ConZ.CustomZoneSettingsMenu
// Size: 0x2c8 (Inherited: 0x268)
struct UCustomZoneSettingsMenu : UBaseMenu {
	char pad_268[0x18]; // 0x268(0x18)
	struct UCustomZoneSettingsMap* _map; // 0x280(0x08)
	struct UCustomZoneSettingsConfigurationsList* _configurationsList; // 0x288(0x08)
	struct UCustomZoneSettingsRegionsList* _regionsList; // 0x290(0x08)
	struct UCustomZoneSettingsDetailsDisplay* _detailsDisplay; // 0x298(0x08)
	struct UCustomZoneSettingsApplyNotification* _applyNotification; // 0x2a0(0x08)
	struct UButton* _buttonBack; // 0x2a8(0x08)
	struct UButton* _buttonApply; // 0x2b0(0x08)
	struct UButton* _buttonReset; // 0x2b8(0x08)
	char pad_2C0[0x8]; // 0x2c0(0x08)

	void CloseMenu(); // Function ConZ.CustomZoneSettingsMenu.CloseMenu // (Final|Native|Private) // @ game+0x23b77e0
};

// Class ConZ.CustomZoneSettingsRegion
// Size: 0x410 (Inherited: 0x268)
struct UCustomZoneSettingsRegion : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct UHorizontalBox* _mainBox; // 0x2c8(0x08)
	struct UBorder* _border; // 0x2d0(0x08)
	struct UTextBlock* _regionName; // 0x2d8(0x08)
	struct UTextBlock* _regionData; // 0x2e0(0x08)
	struct UButton* _buttonIncreasePriority; // 0x2e8(0x08)
	struct UButton* _buttonDecreasePriority; // 0x2f0(0x08)
	struct UButton* _buttonRemove; // 0x2f8(0x08)
	struct FLinearColor _unhighlightedColor; // 0x300(0x10)
	struct FLinearColor _highlightedColor; // 0x310(0x10)
	struct FLinearColor _defaultZoneUnmodifiedUnhighlightedColor; // 0x320(0x10)
	struct FLinearColor _defaultZoneUnmodifiedHighlightedColor; // 0x330(0x10)
	struct FLinearColor _defaultZoneModifiedUnhighlightedColor; // 0x340(0x10)
	struct FLinearColor _defaultZoneModifiedHighlightedColor; // 0x350(0x10)
	struct FLinearColor _defaultZoneDeletedUnhighlightedColor; // 0x360(0x10)
	struct FLinearColor _defaultZoneDeletedHighlightedColor; // 0x370(0x10)
	struct UCustomZoneSettingsToolTip* _tooltipClass; // 0x380(0x08)
	struct FText _unmodifiedToolTipText; // 0x388(0x18)
	struct FText _modifiedToolTipText; // 0x3a0(0x18)
	struct FText _deletedToolTipText; // 0x3b8(0x18)
	char pad_3D0[0x40]; // 0x3d0(0x40)

	void HandleRemoveButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleRemoveButtonClicked // (Final|Native|Private) // @ game+0x23b7ca0
	void HandleIncreasePriorityButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleIncreasePriorityButtonClicked // (Final|Native|Private) // @ game+0x23b7970
	void HandleDecreasePriorityButtonClicked(); // Function ConZ.CustomZoneSettingsRegion.HandleDecreasePriorityButtonClicked // (Final|Native|Private) // @ game+0x23b7950
	enum class EDefaultCustomZoneState GetDefaultZoneState(); // Function ConZ.CustomZoneSettingsRegion.GetDefaultZoneState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23b7820
};

// Class ConZ.CustomZoneSettingsRegionDetails
// Size: 0x370 (Inherited: 0x268)
struct UCustomZoneSettingsRegionDetails : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UEditableText* _name; // 0x2b8(0x08)
	struct UButton* _buttonRestore; // 0x2c0(0x08)
	struct UCarouselWithLabel* _shape; // 0x2c8(0x08)
	struct USpinBox* _locationX; // 0x2d0(0x08)
	struct USpinBox* _locationY; // 0x2d8(0x08)
	struct UTextBlock* _textSize; // 0x2e0(0x08)
	struct USpinBox* _sizeX; // 0x2e8(0x08)
	struct USpinBox* _sizeY; // 0x2f0(0x08)
	struct UTextBlock* _textConfiguration; // 0x2f8(0x08)
	struct UButton* _buttonOpenConfiguration; // 0x300(0x08)
	struct UButton* _buttonNextConfiguration; // 0x308(0x08)
	struct UButton* _buttonPreviousConfiguration; // 0x310(0x08)
	struct UVerticalBox* _eventDisplayContainer; // 0x318(0x08)
	struct UCustomZoneSettingsEventDisplay* _eventDisplayClass; // 0x320(0x08)
	char pad_328[0x48]; // 0x328(0x48)

	void OpenConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.OpenConfiguration // (Final|Native|Private) // @ game+0x23b8160
	void IncrementConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.IncrementConfiguration // (Final|Native|Private) // @ game+0x23b7f70
	void HandleSizeChange(float Value, enum class ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleSizeChange // (Final|Native|Private) // @ game+0x23b7ea0
	void HandleShapeChange(int32_t oldValue, int32_t NewValue, struct UWidget* Source, enum class EChangeSource changeSource); // Function ConZ.CustomZoneSettingsRegionDetails.HandleShapeChange // (Final|Native|Private) // @ game+0x23b7d40
	void HandleRestoreClicked(); // Function ConZ.CustomZoneSettingsRegionDetails.HandleRestoreClicked // (Final|Native|Private) // @ game+0x23b7cc0
	void HandleNameChange(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleNameChange // (Final|Native|Private|HasOutParms) // @ game+0x23b7b80
	void HandleLocationChange(float Value, enum class ETextCommit CommitMethod); // Function ConZ.CustomZoneSettingsRegionDetails.HandleLocationChange // (Final|Native|Private) // @ game+0x23b7990
	void DecrementConfiguration(); // Function ConZ.CustomZoneSettingsRegionDetails.DecrementConfiguration // (Final|Native|Private) // @ game+0x23b7800
};

// Class ConZ.CustomZoneSettingsRegionsList
// Size: 0x2f8 (Inherited: 0x268)
struct UCustomZoneSettingsRegionsList : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct UTextBlock* _regionCountDisplay; // 0x2c8(0x08)
	struct UButton* _buttonAddRegion; // 0x2d0(0x08)
	struct UScrollBox* _scrollBox; // 0x2d8(0x08)
	struct UCustomZoneSettingsRegion* _regionWidgetClass; // 0x2e0(0x08)
	char pad_2E8[0x10]; // 0x2e8(0x10)
};

// Class ConZ.CustomZoneSettingsToolTip
// Size: 0x270 (Inherited: 0x268)
struct UCustomZoneSettingsToolTip : UUserWidget {
	struct UTextBlock* _toolTip; // 0x268(0x08)
};

// Class ConZ.CustomZoneSettingsUIController
// Size: 0x270 (Inherited: 0x28)
struct UCustomZoneSettingsUIController : UObject {
	char pad_28[0x248]; // 0x28(0x248)

	void ToggleRemoveRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleRemoveRegionMapMode // (Final|Native|Public) // @ game+0x23b82d0
	void ToggleAddRectangleRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleAddRectangleRegionMapMode // (Final|Native|Public) // @ game+0x23b82b0
	void ToggleAddCircleRegionMapMode(); // Function ConZ.CustomZoneSettingsUIController.ToggleAddCircleRegionMapMode // (Final|Native|Public) // @ game+0x23b8290
	void ResetToDefaults(); // Function ConZ.CustomZoneSettingsUIController.ResetToDefaults // (Final|Native|Public) // @ game+0x23b8250
	void ProcessAddDefaultRegionRequest(); // Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultRegionRequest // (Final|Native|Public) // @ game+0x23b81a0
	void ProcessAddDefaultConfigurationRequest(); // Function ConZ.CustomZoneSettingsUIController.ProcessAddDefaultConfigurationRequest // (Final|Native|Public) // @ game+0x23b8180
	void ApplyCustomZoneSettings(); // Function ConZ.CustomZoneSettingsUIController.ApplyCustomZoneSettings // (Final|Native|Public) // @ game+0x23b77c0
};

// Class ConZ.CutObjectAction
// Size: 0xc0 (Inherited: 0xa8)
struct UCutObjectAction : UInteractionAction {
	char pad_A8[0x18]; // 0xa8(0x18)
};

// Class ConZ.CutsceneWidget
// Size: 0x340 (Inherited: 0x268)
struct UCutsceneWidget : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UDataTable* _subtitlesDataTable; // 0x298(0x08)
	struct UOverlay* _overlaySkip; // 0x2a0(0x08)
	struct UTextBlock* _skipText; // 0x2a8(0x08)
	struct USubtitleWidget* _subtitleWidget; // 0x2b0(0x08)
	struct USizeBox* _sizeBoxVideo; // 0x2b8(0x08)
	struct UImage* _textureVideo; // 0x2c0(0x08)
	struct UOverlay* _overlayVideoText; // 0x2c8(0x08)
	struct UBinkMediaPlayer* _binkMediaPlayer; // 0x2d0(0x08)
	struct TArray<struct FVideoInfo> _videos; // 0x2d8(0x10)
	char pad_2E8[0x10]; // 0x2e8(0x10)
	struct UWidgetAnimation* _showSkipTextAnimation; // 0x2f8(0x08)
	struct UWidgetAnimation* _fadeOutSkipTextAnimation; // 0x300(0x08)
	float _fadeOutSkipTextTime; // 0x308(0x04)
	char pad_30C[0x34]; // 0x30c(0x34)

	void StopCutscene(); // Function ConZ.CutsceneWidget.StopCutscene // (Final|Native|Private) // @ game+0x23b8270
};

// Class ConZ.DamageCustomization
// Size: 0x28 (Inherited: 0x28)
struct UDamageCustomization : UObject {
};

// Class ConZ.DamageData
// Size: 0x108 (Inherited: 0x30)
struct UDamageData : UDataAsset {
	struct FGameplayTag DamageResponseTag; // 0x30(0x08)
	struct FGameplayTag GameEventTag; // 0x38(0x08)
	struct FGameplayTag IgnoreForStatsTag; // 0x40(0x08)
	struct FGameplayTag CauseHeadExplosionTag; // 0x48(0x08)
	struct FGameplayTag ApplyBleedingOnlyTag; // 0x50(0x08)
	struct FGameplayTag AIProjectileTag; // 0x58(0x08)
	struct UDataTable* WeaponDescTable; // 0x60(0x08)
	struct TArray<struct FDamageTargetTypeMapping> DamageTargetTypeMap; // 0x68(0x10)
	float BurnDamageTemperatureThreshold; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct FRuntimeFloatCurve BurnDamagePerSecondVsTemperature; // 0x80(0x88)
};

// Class ConZ.DamageDealer
// Size: 0x28 (Inherited: 0x28)
struct UDamageDealer : UInterface {
};

// Class ConZ.DamageDirectionIndicator
// Size: 0x70 (Inherited: 0x28)
struct UDamageDirectionIndicator : UObject {
	bool Visible; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct UTexture* Texture; // 0x30(0x08)
	float Radius; // 0x38(0x04)
	float OpacityMultiplier; // 0x3c(0x04)
	float DefaultDelayDuration; // 0x40(0x04)
	float DefaultSustainDuration; // 0x44(0x04)
	float DefaultReleaseDuration; // 0x48(0x04)
	char pad_4C[0x24]; // 0x4c(0x24)
};

// Class ConZ.DamageReceiver
// Size: 0x28 (Inherited: 0x28)
struct UDamageReceiver : UInterface {
};

// Class ConZ.ScumPointDamageType
// Size: 0x40 (Inherited: 0x40)
struct UScumPointDamageType : UDamageType {
};

// Class ConZ.ScumRadialDamageType
// Size: 0x40 (Inherited: 0x40)
struct UScumRadialDamageType : UDamageType {
};

// Class ConZ.DamageStatics
// Size: 0x28 (Inherited: 0x28)
struct UDamageStatics : UBlueprintFunctionLibrary {

	void TestingOnly_DirectDamage(struct AActor* Target, float Damage); // Function ConZ.DamageStatics.TestingOnly_DirectDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23bac40
	void CheckWeaponDescReferences(struct UObject* WorldContext); // Function ConZ.DamageStatics.CheckWeaponDescReferences // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x23babc0
};

// Class ConZ.TrapItem
// Size: 0xae0 (Inherited: 0x9b0)
struct ATrapItem : AItem {
	char pad_9B0[0x30]; // 0x9b0(0x30)
	struct UBuriableTrapItemComponent* _buriableTrapItemComponent; // 0x9e0(0x08)
	enum class ETrapType _trapType; // 0x9e8(0x01)
	char pad_9E9[0x3]; // 0x9e9(0x03)
	float _autoDestroyTimeWhenArmed; // 0x9ec(0x04)
	float _autoDestroyTimeWhenOwnerless; // 0x9f0(0x04)
	bool _destroyAfterTriggered; // 0x9f4(0x01)
	char pad_9F5[0x3]; // 0x9f5(0x03)
	float _destroyDelay; // 0x9f8(0x04)
	bool _canEverBeRefueled; // 0x9fc(0x01)
	char pad_9FD[0x3]; // 0x9fd(0x03)
	struct UTrapRefuelItemTag* _refuelItemTag; // 0xa00(0x08)
	struct FVector _triggerForwardVector; // 0xa08(0x0c)
	float _ragdollDuration; // 0xa14(0x04)
	bool _isArmedByDefault; // 0xa18(0x01)
	bool _shouldApplyPhysicalDamage; // 0xa19(0x01)
	char pad_A1A[0x2]; // 0xa1a(0x02)
	struct FBox _physicalDamageBoundsBox; // 0xa1c(0x1c)
	float _actorDestructionDelay; // 0xa38(0x04)
	int32_t _numRemainingDefuseAttempts; // 0xa3c(0x04)
	bool _numRemainingDefuseAttemptsDependsOnSkill; // 0xa40(0x01)
	bool _logTrapTriggered; // 0xa41(0x01)
	bool _hasFixedTrigger; // 0xa42(0x01)
	char pad_A43[0x1]; // 0xa43(0x01)
	float _minDamageForTrigger; // 0xa44(0x04)
	bool _triggeredByRadialDamage; // 0xa48(0x01)
	bool _triggerableWhenBuried; // 0xa49(0x01)
	char pad_A4A[0x2]; // 0xa4a(0x02)
	float _maxTriggerAngle; // 0xa4c(0x04)
	bool _canEverShowTriggerVisuals; // 0xa50(0x01)
	char pad_A51[0xf]; // 0xa51(0x0f)
	struct FTransform _triggerVisualTransform; // 0xa60(0x30)
	struct AMinigame* _minigameClass; // 0xa90(0x08)
	struct UBaseItemTag* _minigameToolTag; // 0xa98(0x08)
	char pad_AA0[0x1]; // 0xaa0(0x01)
	bool _isDestroyed; // 0xaa1(0x01)
	char pad_AA2[0x1e]; // 0xaa2(0x1e)
	bool _isArmed; // 0xac0(0x01)
	bool _wasTriggered; // 0xac1(0x01)
	bool _canBeTriggered; // 0xac2(0x01)
	char pad_AC3[0x1]; // 0xac3(0x01)
	enum class ETrapTriggerType _currentTrigger; // 0xac4(0x01)
	char pad_AC5[0x3]; // 0xac5(0x03)
	struct FDbIntegerId _lastTriggerOwner; // 0xac8(0x08)
	float _quality; // 0xad0(0x04)
	char pad_AD4[0xc]; // 0xad4(0x0c)

	void OnTriggerEvent(struct FTriggeredEventData& eventData); // Function ConZ.TrapItem.OnTriggerEvent // (Final|Native|Private|HasOutParms) // @ game+0x250e0c0
	void OnTrapDestroyTimer(); // Function ConZ.TrapItem.OnTrapDestroyTimer // (Final|Native|Private) // @ game+0x250e0a0
	void OnRep_WasTriggered(); // Function ConZ.TrapItem.OnRep_WasTriggered // (Final|Native|Private) // @ game+0x250e060
	void OnRep_LastTriggerOwner(); // Function ConZ.TrapItem.OnRep_LastTriggerOwner // (Final|Native|Private) // @ game+0x250e040
	void OnRep_IsDestroyed(); // Function ConZ.TrapItem.OnRep_IsDestroyed // (Final|Native|Private) // @ game+0x250e020
	void OnRep_IsArmed(); // Function ConZ.TrapItem.OnRep_IsArmed // (Final|Native|Private) // @ game+0x250e000
	void OnRep_CurrentTrigger(); // Function ConZ.TrapItem.OnRep_CurrentTrigger // (Final|Native|Private) // @ game+0x250dfe0
	void OnActorDestroyTimer(); // Function ConZ.TrapItem.OnActorDestroyTimer // (Final|Native|Private) // @ game+0x250df80
	void NetMulticast_TriggerTrap(struct FTrapTriggerParams Params); // Function ConZ.TrapItem.NetMulticast_TriggerTrap // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x250dee0
	void Multicast_SetOnlyManualTrigger(bool onlyManualTrigger); // Function ConZ.TrapItem.Multicast_SetOnlyManualTrigger // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x236ccc0
	bool IsBuried(); // Function ConZ.TrapItem.IsBuried // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x250deb0
	bool IsArmed(); // Function ConZ.TrapItem.IsArmed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x250de80
	void BP_OnTriggered(); // Function ConZ.TrapItem.BP_OnTriggered // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void BP_OnRefueled(); // Function ConZ.TrapItem.BP_OnRefueled // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void BP_OnDisarmed(); // Function ConZ.TrapItem.BP_OnDisarmed // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void BP_OnArmed(); // Function ConZ.TrapItem.BP_OnArmed // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.DamagingTrapItem
// Size: 0xaf0 (Inherited: 0xae0)
struct ADamagingTrapItem : ATrapItem {
	float _initialDamageAmount; // 0xae0(0x04)
	float _damagePerSecond; // 0xae4(0x04)
	struct UAkAudioEvent* _triggerSound; // 0xae8(0x08)
};

// Class ConZ.DataSingleton
// Size: 0xef8 (Inherited: 0x28)
struct UDataSingleton : UObject {
	struct TArray<struct FProjectileImpulseMultiplier> ImpulseMultipliers; // 0x28(0x10)
	struct FCanvasIcon CrosshairIconUp; // 0x38(0x18)
	struct FCanvasIcon CrosshairIconDown; // 0x50(0x18)
	struct FCanvasIcon CrosshairIconLeft; // 0x68(0x18)
	struct FCanvasIcon CrosshairIconRight; // 0x80(0x18)
	struct FCanvasIcon CrosshairIconCenter; // 0x98(0x18)
	struct FCanvasIcon CrosshairIconCenterThrowing; // 0xb0(0x18)
	struct FCanvasIcon CrosshairBlockedIcon; // 0xc8(0x18)
	struct FCanvasIcon BowSpreadCircle; // 0xe0(0x18)
	struct UTexture2D* SingleFireIcon; // 0xf8(0x08)
	struct UTexture2D* AutoFireIcon; // 0x100(0x08)
	struct UTexture2D* BurstFireIcon; // 0x108(0x08)
	float WeaponSpreadBase; // 0x110(0x04)
	struct FWeaponSpreadData WeaponSpreadData[0x9]; // 0x114(0x1d4)
	float BowArrowDeviationDegreesAngleByStep; // 0x2e8(0x04)
	struct FWeaponViewKickData WeaponViewKickData[0x9]; // 0x2ec(0xd8)
	float WeaponAimingAutoCorrectAngle; // 0x3c4(0x04)
	struct FWeaponMalfunctionProbabilityCurves WeaponMalfunctionProbabilityCurves; // 0x3c8(0x3b8)
	float UpperBoundStaminaAmountToDrain; // 0x780(0x04)
	float LowerBoundWeaponWeightForStaminaDrain; // 0x784(0x04)
	float UpperBoundWeaponWeightForStaminaDrain; // 0x788(0x04)
	struct FFloatInterval FOVFirstPersonMultiplierRange; // 0x78c(0x08)
	struct FFloatInterval FOVThirdPersonMultiplierRange; // 0x794(0x08)
	struct FFloatInterval FOVFirstPersonDrivingMultiplierRange; // 0x79c(0x08)
	struct FFloatInterval FOVThirdPersonDrivingMultiplierRange; // 0x7a4(0x08)
	float WeaponFOVWhileScoping; // 0x7ac(0x04)
	struct UCurveFloat* DownTheSightsModeLerpCurve; // 0x7b0(0x08)
	struct UMaterialParameterCollection* WeaponFOVParameterCollection; // 0x7b8(0x08)
	struct FFloatInterval LoadMagazineSpeedModifierSkillFactor; // 0x7c0(0x08)
	struct FFloatInterval LoadMagazineSpeedModifierDexterityFactor; // 0x7c8(0x08)
	struct FCanvasIcon InteractIcon; // 0x7d0(0x18)
	struct FCanvasIcon BondageIcon; // 0x7e8(0x18)
	struct UDerivedWidgetsData* Widgets; // 0x800(0x08)
	struct UMaterialInterface* PlaceablePrimaryMatValid; // 0x808(0x08)
	struct UMaterialInterface* PlaceablePrimaryMatInvalid; // 0x810(0x08)
	struct UMaterialInterface* PlaceablePrimaryMatFriendlyFlag; // 0x818(0x08)
	struct UMaterialInterface* PlaceableOutlineMat; // 0x820(0x08)
	struct UMaterialInterface* PlaceableDepthMat; // 0x828(0x08)
	struct UMaterialInterface* PlaceableMaterialRadiusSphere; // 0x830(0x08)
	struct UMaterialInterface* ItemPlacementMatValid; // 0x838(0x08)
	struct UMaterialInterface* ItemPlacementMatInvalid; // 0x840(0x08)
	struct UMaterialInterface* WidgetMaterial; // 0x848(0x08)
	struct UBaseItemTag* ToolBoxItemTag; // 0x850(0x08)
	struct UBaseItemTag* MushroomItemTag; // 0x858(0x08)
	struct UBaseItemTag* AlcoholItemTag; // 0x860(0x08)
	struct UBaseItemTag* SoapItemTag; // 0x868(0x08)
	struct TSoftClassPtr<UObject> AnimalSkinItemClass; // 0x870(0x28)
	struct UTrapData* TrapData; // 0x898(0x08)
	struct TSoftClassPtr<UObject> DogTagItemClass; // 0x8a0(0x28)
	struct UDataTable* ItemGeneralParametersDataTable; // 0x8c8(0x08)
	struct TSoftObjectPtr<UDataTable> ItemSpawningParametersTable; // 0x8d0(0x28)
	enum class ECollisionChannel ItemObstructionCollisionChannel; // 0x8f8(0x01)
	bool ShouldTraceComplexCollisionForItemObstruction; // 0x8f9(0x01)
	char pad_8FA[0x6]; // 0x8fa(0x06)
	struct TSet<struct FPrimaryAssetId> AssetsHiddenFromAdminCommands; // 0x900(0x50)
	struct USoundClass* VoiceSoundClass; // 0x950(0x08)
	struct UNetworkDataIdAsset* NetworkDataIdAsset; // 0x958(0x08)
	struct UDecontaminateData* DecontaminateData; // 0x960(0x08)
	struct UBuryData* BuryData; // 0x968(0x08)
	struct UEmblemData* SquadEmblemData; // 0x970(0x08)
	struct UMaterialInterface* ItemTetrisMaterial; // 0x978(0x08)
	struct UPhysicalSurfacesEffectsData* PhysicalSurfaceEffectsData; // 0x980(0x08)
	struct UTexture2D* ChestLockedIcon; // 0x988(0x08)
	struct UTexture2D* ChestUnlockedIcon; // 0x990(0x08)
	struct UAkAudioEvent* ChestLockingSound; // 0x998(0x08)
	struct UGlobalUIData* UIData; // 0x9a0(0x08)
	struct UParticleSystem* WaterSplashParticleSystem; // 0x9a8(0x08)
	struct UAkAudioEvent* WaterSplashAudioEvent; // 0x9b0(0x08)
	struct UDialogueData* DialogueData; // 0x9b8(0x08)
	struct USurfaceHardnessData* SurfaceHardnessData; // 0x9c0(0x08)
	struct UDamageData* DamageData; // 0x9c8(0x08)
	struct UDamageCustomization* DefaultDamageCustomizationClass; // 0x9d0(0x08)
	struct UDamageCustomization* LandingDamageCustomizationClass; // 0x9d8(0x08)
	struct TSoftClassPtr<UObject> BackpackCharacterMeshClass; // 0x9e0(0x28)
	struct UGameResourceType* RainWaterResourceClass; // 0xa08(0x08)
	struct TArray<struct FGameResourceMixingRule> GameResourceMixingRules; // 0xa10(0x10)
	enum class EPhysicalSurface WaterSurfaceType; // 0xa20(0x01)
	char pad_A21[0x7]; // 0xa21(0x07)
	struct UAkAudioEvent* TransactionCompleteSound; // 0xa28(0x08)
	char pad_A30[0xe8]; // 0xa30(0xe8)
	struct FGameplayTag GenderEnumVsGenderTagMapping[0x3]; // 0xb18(0x18)
	struct TSoftClassPtr<UObject> SurgeryRoomClass; // 0xb30(0x28)
	struct TSoftClassPtr<UObject> BarberShopClass; // 0xb58(0x28)
	struct FLazyLoadedClassPtr DefaultPrisonerCommonDataLazy; // 0xb80(0x30)
	struct UPrisonerAppearanceSetDataAsset* PrisonerAppearanceSet; // 0xbb0(0x08)
	struct UCookingCommonData* CookingCommonData; // 0xbb8(0x08)
	struct UCookingRecipeRegistry* CookingRecipeRegistry; // 0xbc0(0x08)
	struct UAkAudioEvent* SprayCanAudio; // 0xbc8(0x08)
	struct UPaintJobColorsDataAsset* PaintJobColorsData; // 0xbd0(0x08)
	struct UVehiclePaintjobCommonData* VehiclePaintjobCommonData; // 0xbd8(0x08)
	struct UWeaponPaintjobCommonData* WeaponPaintjobCommonData; // 0xbe0(0x08)
	struct UTurretPaintjobCommonData* TurretPaintjobCommonData; // 0xbe8(0x08)
	struct UQuestCommonData* QuestCommonData; // 0xbf0(0x08)
	struct UArmedNPCAimCorrectionsData* ArmedNPCAimCorrectionsData; // 0xbf8(0x08)
	struct TSoftObjectPtr<UDataTable> CookingUtilityUIDataTable; // 0xc00(0x28)
	struct UFamePointSettings* FamePointSettings; // 0xc28(0x08)
	struct TArray<struct FPrimaryAssetId> AlwaysFunctioningVehicles; // 0xc30(0x10)
	struct FGameplayTagContainer VehicleSpawnGroupsIgnoredByServerSettings; // 0xc40(0x20)
	struct UEntitySystemSettings* DefaultEntitySystemSettings; // 0xc60(0x08)
	struct UBaseItemTag* LightFireTag; // 0xc68(0x08)
	struct TArray<struct FAbandonedBunkerAnnouncementSoundAndTime> AbandonedBunkerAnnouncementSoundsBeforeClosing; // 0xc70(0x10)
	struct UParticleSystem* FoliageDestructionParticleSystem; // 0xc80(0x08)
	float FoliageDestructionParticleSystemSpawnDistance; // 0xc88(0x04)
	float FoliageDestructionParticleSystemZOffset; // 0xc8c(0x04)
	struct UResourceSpotLightAnimator* ResourceSpotLightAnimatorClass; // 0xc90(0x08)
	struct UResourcePointLightAnimator* ResourcePointLightAnimatorClass; // 0xc98(0x08)
	char pad_CA0[0x58]; // 0xca0(0x58)
	struct UDataTable* _cookingUtilityTagToUIDataTable; // 0xcf8(0x08)
	float _noiseLevelValues[0x6]; // 0xd00(0x18)
	struct FAITeamAttitudeData _teamAttitudes[0xb]; // 0xd18(0x16b)
	char pad_E83[0x55]; // 0xe83(0x55)
	struct UDataTable* _economyTradeablesDataTable; // 0xed8(0x08)
	struct UEconomySpecificData* _economySpecificData; // 0xee0(0x08)
	struct UDataTable* _survivalTipsDataTable; // 0xee8(0x08)
	char _maxNumberOfVisibleSurvivalTips; // 0xef0(0x01)
	char pad_EF1[0x3]; // 0xef1(0x03)
	int32_t _numberOfFishesToCatchForSurvivalTip; // 0xef4(0x04)
};

// Class ConZ.DbAsyncWorker
// Size: 0x40 (Inherited: 0x28)
struct UDbAsyncWorker : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.DbConnection
// Size: 0xc8 (Inherited: 0x28)
struct UDbConnection : UObject {
	char pad_28[0xa0]; // 0x28(0xa0)
};

// Class ConZ.DbIdGenerator
// Size: 0x98 (Inherited: 0x28)
struct UDbIdGenerator : UObject {
	char pad_28[0x70]; // 0x28(0x70)
};

// Class ConZ.DbStatics
// Size: 0x28 (Inherited: 0x28)
struct UDbStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.DcxBike
// Size: 0x1600 (Inherited: 0x15b0)
struct ADcxBike : ADcxWheeledVehicle4W {
	bool _shouldApplyStabilization; // 0x15ac(0x01)
	struct FVector _centerOfMassOffset; // 0x15b0(0x0c)
	struct FVector _centerOfMassOffsetNotMounted; // 0x15bc(0x0c)
	float _angVelXDamping; // 0x15c8(0x04)
	float _angVelYDamping; // 0x15cc(0x04)
	float _angVelZDamping; // 0x15d0(0x04)
	char pad_15D5[0x3]; // 0x15d5(0x03)
	float _bicycleDriftAmount; // 0x15d8(0x04)
	float _bicycleDriftLeanAmount; // 0x15dc(0x04)
	float _impactSpeedForUnmount; // 0x15e0(0x04)
	bool _shouldUnmountWhenNotEnoughWheels; // 0x15e4(0x01)
	char pad_15E5[0x3]; // 0x15e5(0x03)
	float _maxReverseForce; // 0x15e8(0x04)
	float _maxReverseSpeed; // 0x15ec(0x04)
	char pad_15F0[0x10]; // 0x15f0(0x10)
};

// Class ConZ.DcxBicycle
// Size: 0x16d0 (Inherited: 0x1600)
struct ADcxBicycle : ADcxBike {
	float _baseStrengthChangeRate; // 0x1600(0x04)
	char pad_1604[0x4]; // 0x1604(0x04)
	struct UCurveFloat* _strengthChangeRateFactorVsVehicleSpeedKmh; // 0x1608(0x08)
	struct UCurveFloat* _strengthChangeRateFactorVsGroundSlope; // 0x1610(0x08)
	float _baseConstitutionChangeRate; // 0x1618(0x04)
	char pad_161C[0x4]; // 0x161c(0x04)
	struct UCurveFloat* _constitutionChangeRateFactorVsVehicleSpeedKmh; // 0x1620(0x08)
	struct UCurveFloat* _constitutionChangeRateFactorVsGroundSlope; // 0x1628(0x08)
	struct UCurveFloat* _runningSkillExperienceGainRateFactorVsVehicleSpeedKmh; // 0x1630(0x08)
	struct UCurveFloat* _runningSkillExperienceGainRateFactorVsGroundSlope; // 0x1638(0x08)
	float _baseEnduranceSkillExperienceGainRate; // 0x1640(0x04)
	char pad_1644[0x4]; // 0x1644(0x04)
	struct UCurveFloat* _enduranceSkillExperienceGainRateFactorVsVehicleSpeedKmh; // 0x1648(0x08)
	struct UCurveFloat* _enduranceSkillExperienceGainRateFactorVsGroundSlope; // 0x1650(0x08)
	float _baseActionDifficulty; // 0x1658(0x04)
	char pad_165C[0x4]; // 0x165c(0x04)
	struct UCurveFloat* _actionDifficultyFactorVsVehicleSpeedKmh; // 0x1660(0x08)
	struct UCurveFloat* _actionDifficultyFactorVsGroundSlope; // 0x1668(0x08)
	float _speedThresholdForAINoise; // 0x1670(0x04)
	char pad_1674[0x4]; // 0x1674(0x04)
	struct TMap<enum class EPrisonerMovementPace, float> _desiredPaceToAppliedThrottleMapping; // 0x1678(0x50)
	char pad_16C8[0x8]; // 0x16c8(0x08)
};

// Class ConZ.DcxBikeAnimInstance
// Size: 0xab0 (Inherited: 0xa50)
struct UDcxBikeAnimInstance : UDcxVehicleAnimInstance {
	float RPM; // 0xa48(0x04)
	float Speed; // 0xa4c(0x04)
	float SpeedKph; // 0xa50(0x04)
	float SteerAngle; // 0xa54(0x04)
	float SteerAngleMultiplierWhenPushed; // 0xa58(0x04)
	float SteerAmount; // 0xa5c(0x04)
	float ThrottleAmount; // 0xa60(0x04)
	float BrakeAmount; // 0xa64(0x04)
	struct FRotator FrontWheelRotator; // 0xa68(0x0c)
	struct FRotator RearWheelRotator; // 0xa74(0x0c)
	struct FRotator TransmissionRotator; // 0xa80(0x0c)
	float FrontSuspensionOffset; // 0xa8c(0x04)
	float RearSuspensionRotation; // 0xa90(0x04)
	struct FVector MeshLocation; // 0xa94(0x0c)
	bool IsMounteeDriver; // 0xaa0(0x01)
	char pad_AA9[0x7]; // 0xaa9(0x07)
};

// Class ConZ.DcxBicycleAnimInstance
// Size: 0xab0 (Inherited: 0xab0)
struct UDcxBicycleAnimInstance : UDcxBikeAnimInstance {
};

// Class ConZ.DcxBikeDriverMountSlot
// Size: 0x230 (Inherited: 0x190)
struct UDcxBikeDriverMountSlot : UVehicleBaseMountSlot {
	bool UseDashboardForHandleSockets; // 0x188(0x01)
	struct FName DriverLHandleSocketName; // 0x18c(0x08)
	struct FName DriverRHandleSocketName; // 0x194(0x08)
	struct FName DriverReverseSeatHandSocketName; // 0x19c(0x08)
	struct UBlendSpace* _forwardIdleAnimation; // 0x1a8(0x08)
	struct UBlendSpace* _forwardIdleAnimationFP; // 0x1b0(0x08)
	struct UAnimSequenceBase* _forwardSteeringAnimation; // 0x1b8(0x08)
	struct UAnimSequenceBase* _forwardSteeringAnimationFP; // 0x1c0(0x08)
	struct UBlendSpace* _reverseIdleAnimation; // 0x1c8(0x08)
	struct UAnimSequenceBase* _reverseSteeringAnimation; // 0x1d0(0x08)
	struct UAnimSequenceBase* _reverseSteeringAnimationFP; // 0x1d8(0x08)
	struct UAnimSequence* _standUpStartAnimation; // 0x1e0(0x08)
	struct UAnimSequence* _standUpLoopAnimation; // 0x1e8(0x08)
	struct UAnimSequence* _standUpEndAnimation; // 0x1f0(0x08)
	struct UAnimSequence* _startEngineStartAnimation; // 0x1f8(0x08)
	struct UAnimSequence* _startEngineLoopAnimation; // 0x200(0x08)
	struct UAnimSequence* _startEngineLongLoopAnimation; // 0x208(0x08)
	struct UAnimSequence* _startEngineEndAnimation; // 0x210(0x08)
	struct UAimOffsetBlendSpace* _turnAimOffset; // 0x218(0x08)
	float _playratePerMovementPace[0x3]; // 0x220(0x0c)
	char pad_22D[0x3]; // 0x22d(0x03)
};

// Class ConZ.DcxBikePassengerMountSlot
// Size: 0x190 (Inherited: 0x190)
struct UDcxBikePassengerMountSlot : UVehicleBaseMountSlot {
};

// Class ConZ.DcxBicycleDriverMountSlot
// Size: 0x230 (Inherited: 0x230)
struct UDcxBicycleDriverMountSlot : UDcxBikeDriverMountSlot {
};

// Class ConZ.DcxMotorcycle
// Size: 0x1600 (Inherited: 0x1600)
struct ADcxMotorcycle : ADcxBike {
};

// Class ConZ.DcxMotorcycleAnimInstance
// Size: 0xab0 (Inherited: 0xab0)
struct UDcxMotorcycleAnimInstance : UDcxBikeAnimInstance {
};

// Class ConZ.DcxWheeledVehicleDriveComponent4W
// Size: 0x4e8 (Inherited: 0x450)
struct UDcxWheeledVehicleDriveComponent4W : UDcxVehicleDriveComponent4W {
	struct FRuntimeFloatCurve _maxArtificialBrakingForceVsSpeedKph; // 0x450(0x88)
	struct TArray<struct FDcxWheeledVehicleFlatTireWheelConfiguration> _flatTireWheelConfigurations; // 0x4d8(0x10)

	void InflateWheelTire(int32_t WheelIndex); // Function ConZ.DcxWheeledVehicleDriveComponent4W.InflateWheelTire // (Final|Native|Public|BlueprintCallable) // @ game+0x23bdc80
	float GetEngineLoad(); // Function ConZ.DcxWheeledVehicleDriveComponent4W.GetEngineLoad // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23bdc50
	void DeflateWheelTire(int32_t WheelIndex); // Function ConZ.DcxWheeledVehicleDriveComponent4W.DeflateWheelTire // (Final|Native|Public|BlueprintCallable) // @ game+0x23bdb80
};

// Class ConZ.DcxWheeledVehicleEffectsComponent
// Size: 0x128 (Inherited: 0xb0)
struct UDcxWheeledVehicleEffectsComponent : UActorComponent {
	float _soundCullDistance; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct UAkAudioEvent* _chassisStartedMovingAudioEvent; // 0xb8(0x08)
	struct UAkAudioEvent* _chassisStoppedMovingAudioEvent; // 0xc0(0x08)
	float _speedOfSoundMultiplerForDoppler; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UTireToSurfaceAudioData* _tireToSurfaceAudioData; // 0xd0(0x08)
	int32_t _numAudioObjectsForTires; // 0xd8(0x04)
	char pad_DC[0x24]; // 0xdc(0x24)
	float _tireEffectUpdateRange; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct TArray<struct FDcxWheeledVehicleTireEffectProperties> _tireEffectProperties; // 0x108(0x10)
	char pad_118[0x10]; // 0x118(0x10)
};

// Class ConZ.DcxWheeledVehicleTire
// Size: 0x108 (Inherited: 0xe0)
struct UDcxWheeledVehicleTire : UDcxVehicleTire {
	struct FDcxVehicleTireParticleData ParticleTrail; // 0xe0(0x14)
	struct FDcxVehicleTireParticleData ParticleWave; // 0xf4(0x14)
};

// Class ConZ.DeathmatchParticipantStats
// Size: 0x58 (Inherited: 0x48)
struct UDeathmatchParticipantStats : UGameEventParticipantStats {
	float LongestHeadshot; // 0x48(0x04)
	int32_t MeleeKills; // 0x4c(0x04)
	float LongestLife; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class ConZ.DeathmatchGameEvent
// Size: 0x5a8 (Inherited: 0x588)
struct ADeathmatchGameEvent : AGameEventBase {
	struct FDeathmatchParameters _deathmatchParameters; // 0x588(0x14)
	char pad_59C[0xc]; // 0x59c(0x0c)

	void SetDeathmatchParameters(struct FDeathmatchParameters& Params); // Function ConZ.DeathmatchGameEvent.SetDeathmatchParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23be7b0
	void RestrictGameEventArea(); // Function ConZ.DeathmatchGameEvent.RestrictGameEventArea // (Native|Public|BlueprintCallable) // @ game+0x23bdd30
	struct FDeathmatchParameters GetDeathmatchParameters(); // Function ConZ.DeathmatchGameEvent.GetDeathmatchParameters // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23bdc10
};

// Class ConZ.DeathmatchLocationMarker
// Size: 0x440 (Inherited: 0x418)
struct ADeathmatchLocationMarker : AGameEventLocationMarker {
	struct FDeathmatchParameters DeathmatchParameters; // 0x418(0x14)
	struct FVector FocusOffset; // 0x42c(0x0c)
	float MinimalRadius; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
};

// Class ConZ.DebugRpcChannel
// Size: 0xb0 (Inherited: 0xb0)
struct UDebugRpcChannel : UActorComponent {

	void Server_Farming_SetWeedIntensity(struct AGarden* Garden, int32_t SlotId, float Intensity); // Function ConZ.DebugRpcChannel.Server_Farming_SetWeedIntensity // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be6a0
	void Server_Farming_SetGrowthState(struct AGarden* Garden, int32_t SlotId, enum class EPlantGrowthStage stage); // Function ConZ.DebugRpcChannel.Server_Farming_SetGrowthState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be590
	void Server_Farming_RemovePlant(struct AGarden* Garden, int32_t SlotId); // Function ConZ.DebugRpcChannel.Server_Farming_RemovePlant // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be4c0
	void Server_Farming_PlantAPlant(struct APrisoner* planter, struct AGarden* Garden, int32_t Slot, struct UPlantSpecies* species); // Function ConZ.DebugRpcChannel.Server_Farming_PlantAPlant // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be370
	void Server_Farming_KillPlant(struct AGarden* Garden, int32_t SlotId); // Function ConZ.DebugRpcChannel.Server_Farming_KillPlant // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be2a0
	void Server_Farming_CreateGarden(struct APrisoner* Owner, struct FVector Location, struct FRotator Rotation, struct FIntPoint Size); // Function ConZ.DebugRpcChannel.Server_Farming_CreateGarden // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x23be110
	void Server_Farming_ApplyPesticide(struct AGarden* Garden, int32_t Slot); // Function ConZ.DebugRpcChannel.Server_Farming_ApplyPesticide // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23be040
	void Server_Farming_ApplyFungicide(struct AGarden* Garden, int32_t Slot); // Function ConZ.DebugRpcChannel.Server_Farming_ApplyFungicide // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23bdf70
	void Server_Farming_AddWaterToSlot(struct AGarden* Garden, int32_t Slot, float Amount); // Function ConZ.DebugRpcChannel.Server_Farming_AddWaterToSlot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23bde60
	void Server_Farming_AddFertilizer(struct AGarden* Garden, int32_t Slot, bool isIndustrial); // Function ConZ.DebugRpcChannel.Server_Farming_AddFertilizer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23bdd50
};

// Class ConZ.DecontaminateData
// Size: 0x48 (Inherited: 0x30)
struct UDecontaminateData : UDataAsset {
	struct USkill* SkillToIncrease; // 0x30(0x08)
	float SkillIncreaseAmount; // 0x38(0x04)
	float SkillIncreaseModifier; // 0x3c(0x04)
	float RadiationDecontaminationAmountPerSoapUse; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.DedicatedServerRequest
// Size: 0xe8 (Inherited: 0x28)
struct UDedicatedServerRequest : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)
};

// Class ConZ.DedicatedServerResponse
// Size: 0xd0 (Inherited: 0x28)
struct UDedicatedServerResponse : UObject {
	char pad_28[0x30]; // 0x28(0x30)
	struct UDbConnection* _dbConnection; // 0x58(0x08)
	char pad_60[0x70]; // 0x60(0x70)
};

// Class ConZ.Deer2
// Size: 0xb90 (Inherited: 0xb50)
struct ADeer2 : AComplexAnimal2 {
	float _hartBaseScale; // 0xb48(0x04)
	float _hartScaleVariance; // 0xb4c(0x04)
	float _hindBaseScale; // 0xb50(0x04)
	float _hindScaleVariance; // 0xb54(0x04)
	float _maleChance; // 0xb58(0x04)
	bool _isMale; // 0xb5c(0x01)
	struct USkeletalMesh* _maleSkeletalMesh; // 0xb60(0x08)
	struct TArray<struct UStaticMesh*> _antlerMeshes; // 0xb68(0x10)
	struct UStaticMeshComponent* _antlers; // 0xb78(0x08)
	uint32_t _hartHind; // 0xb80(0x04)
	struct UChoppingRecipeDataAsset* _maleChoppingRecipeDataAsset; // 0xb88(0x08)

	void OnRep_HartHind(); // Function ConZ.Deer2.OnRep_HartHind // (Final|Native|Private) // @ game+0x23bdd10
};

// Class ConZ.DefaultDamageCustomization
// Size: 0x80 (Inherited: 0x28)
struct UDefaultDamageCustomization : UDamageCustomization {
	struct TArray<struct FPrisonerInjuryTypeLikelihoods> PrisonerInjuryTypeLikelihoodsPerBodyPart; // 0x28(0x10)
	struct TArray<float> PrisonerBleedingSeverityEnergyThreshold; // 0x38(0x10)
	float PrisonerDamageMultiplierPerBodyPart[0xc]; // 0x48(0x30)
	float StaminaDrainPerHundredJoules; // 0x78(0x04)
	float HeadshotInstantKillEnergyThreshold; // 0x7c(0x04)
};

// Class ConZ.DefusingCuttingToolItemTag
// Size: 0x40 (Inherited: 0x30)
struct UDefusingCuttingToolItemTag : UBaseItemTag {
	struct USkeletalMesh* SkeletalMesh; // 0x30(0x08)
	struct UAnimMontage* Montage; // 0x38(0x08)
};

// Class ConZ.DemolitionSkill
// Size: 0x360 (Inherited: 0xb0)
struct UDemolitionSkill : UDexteritySkill {
	struct FDemolitionSkillExperienceAwards NoSkillExperienceAwards; // 0xb0(0x20)
	struct FDemolitionSkillExperienceAwards BasicSkillExperienceAwards; // 0xd0(0x20)
	struct FDemolitionSkillExperienceAwards MediumSkillExperienceAwards; // 0xf0(0x20)
	struct FDemolitionSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x110(0x20)
	struct FDemolitionSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x130(0x20)
	struct FDemolitionSkillParametersPerSkillLevel NoSkillParameters; // 0x150(0x68)
	struct FDemolitionSkillParametersPerSkillLevel BasicSkillParameters; // 0x1b8(0x68)
	struct FDemolitionSkillParametersPerSkillLevel MediumSkillParameters; // 0x220(0x68)
	struct FDemolitionSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x288(0x68)
	struct FDemolitionSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x2f0(0x68)
	float _practiceTrapExperienceAwardBaseDuration; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
};

// Class ConZ.DepotItemUserData
// Size: 0x48 (Inherited: 0x28)
struct UDepotItemUserData : UVirtualizedItemUserData {
	struct FDbIntegerId OwnerUserProfileId; // 0x28(0x08)
	struct FString TraderPersistentId; // 0x30(0x10)
	bool ShouldClearContents; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.DepotItem
// Size: 0xbc0 (Inherited: 0xb90)
struct ADepotItem : AChestItem {
	char pad_B90[0x20]; // 0xb90(0x20)
	struct ATradePost* _assignedTradePost; // 0xbb0(0x08)
	char pad_BB8[0x8]; // 0xbb8(0x08)
};

// Class ConZ.DerivedWidgetsData
// Size: 0x1d0 (Inherited: 0x30)
struct UDerivedWidgetsData : UDataAsset {
	struct UUserWidget* AvailableItem; // 0x30(0x08)
	struct UWorldCraftingMarkerWidget* WorldCraftingMarker; // 0x38(0x08)
	struct UWorldQuestMarkerWidget* WorldQuestMarker; // 0x40(0x08)
	struct ULoadingScreen* LoadingScreen; // 0x48(0x08)
	struct UUserWidget* ItemWidgetClass; // 0x50(0x08)
	struct UUserWidget* InventorySlotWidgetClass; // 0x58(0x08)
	struct UUserWidget* WarningWidgetClass; // 0x60(0x08)
	struct UUserWidget* HudWidgetClass; // 0x68(0x08)
	struct UUserWidget* QuestTrackingWidgetClass; // 0x70(0x08)
	struct UUserWidget* LoadingWidgetClass; // 0x78(0x08)
	struct UUserWidget* LoadingIconWidgetClass; // 0x80(0x08)
	struct UUserWidget* SpawnScreenWidgetClass; // 0x88(0x08)
	struct UUserWidget* WaypointScreenWidgetClass; // 0x90(0x08)
	struct UUserWidget* ActionProgressWidgetClass; // 0x98(0x08)
	struct UUserWidget* TeamInvitationWidgetClass; // 0xa0(0x08)
	struct UUserWidget* CraftingComponentWidgetClass; // 0xa8(0x08)
	struct UUserWidget* EmptySlotWidgetClass; // 0xb0(0x08)
	struct UUserWidget* PreviousNextSwitchWidgetClass; // 0xb8(0x08)
	struct UUserWidget* QuickAccessItemWidget; // 0xc0(0x08)
	struct UChangeTextWidget* ChangeTextWidgetClass; // 0xc8(0x08)
	struct UItemStatusWidget* ItemStatusWidgetClass; // 0xd0(0x08)
	struct UHealthWidget* HealthWidgetClass; // 0xd8(0x08)
	struct UUserWidget* RaidProtectionSelectionWidgetClass; // 0xe0(0x08)
	struct UUserWidget* GameEventCardWidgetClass; // 0xe8(0x08)
	struct UUserWidget* GameEventScoreboardWidgetClass; // 0xf0(0x08)
	struct UUserWidget* GameEventMiniScoreboardWidgetClass; // 0xf8(0x08)
	struct UUserWidget* TournamentScoreboardWidgetClass; // 0x100(0x08)
	struct UUserWidget* CircularMenuWidgetClass; // 0x108(0x08)
	struct UUserWidget* CircularMenuSegmentWidgetClass; // 0x110(0x08)
	struct UUserWidget* LockpickingWidgetClass; // 0x118(0x08)
	struct UDoorUpgradeWidget* DoorUpgradeWidgetClass; // 0x120(0x08)
	struct UUserWidget* InventoryContainerWidget2Test; // 0x128(0x08)
	struct UUserWidget* InventoryItemWidget2Test; // 0x130(0x08)
	struct UUserWidget* ItemInventoryWidget2; // 0x138(0x08)
	struct UUserWidget* InventoryPanelSideLayerWidget; // 0x140(0x08)
	struct UUserWidget* ItemSplittingWidgetClass; // 0x148(0x08)
	struct TMap<enum class EWidgetType, struct UUserWidget*> Widgets; // 0x150(0x50)
	struct UUserWidget* StatisticsListRow; // 0x1a0(0x08)
	struct TArray<struct FTooltipPanelData> ItemTooltipPanels; // 0x1a8(0x10)
	struct UUserWidget* MalfunctionsContainerClass; // 0x1b8(0x08)
	struct UUserWidget* WeaponAmmoCountContainerClass; // 0x1c0(0x08)
	struct UUserWidget* PlaceableElementWidgetClass; // 0x1c8(0x08)
};

// Class ConZ.DetectableMetalAssetData
// Size: 0x28 (Inherited: 0x28)
struct UDetectableMetalAssetData : UAssetUserData {
};

// Class ConZ.DetectableTag
// Size: 0x30 (Inherited: 0x30)
struct UDetectableTag : UBaseItemTag {
};

// Class ConZ.DialLockMinigameBase
// Size: 0x3a0 (Inherited: 0x340)
struct ADialLockMinigameBase : AMinigame {
	struct UStaticMeshComponent* _lockBody; // 0x340(0x08)
	struct UStaticMeshComponent* _lockClamp; // 0x348(0x08)
	float _animationLength; // 0x350(0x04)
	char pad_354[0x4]; // 0x354(0x04)
	struct TArray<struct FWheelData> _wheels; // 0x358(0x10)
	char pad_368[0x30]; // 0x368(0x30)
	struct UAkAudioEvent* _wheelTurnedAudioEvent; // 0x398(0x08)
};

// Class ConZ.DialLockMinigame
// Size: 0x400 (Inherited: 0x3a0)
struct ADialLockMinigame : ADialLockMinigameBase {
	struct UAkAudioEvent* _incorrectCombinationAudioEvent; // 0x3a0(0x08)
	struct UAkAudioEvent* _unlockedAudioEvent; // 0x3a8(0x08)
	struct FTransform _protectionParticlesTransform; // 0x3b0(0x30)
	char pad_3E0[0x10]; // 0x3e0(0x10)
	float _throbberDelay; // 0x3f0(0x04)
	char pad_3F4[0xc]; // 0x3f4(0x0c)
};

// Class ConZ.LockpickingMinigameConfiguration
// Size: 0x70 (Inherited: 0x50)
struct ULockpickingMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x8]; // 0x50(0x08)
	struct ULockData* LockData; // 0x58(0x08)
	char pad_60[0x10]; // 0x60(0x10)
};

// Class ConZ.DialLockMinigameConfiguration
// Size: 0x70 (Inherited: 0x70)
struct UDialLockMinigameConfiguration : ULockpickingMinigameConfiguration {
};

// Class ConZ.DialLockSetCombinationMinigame
// Size: 0x3a8 (Inherited: 0x3a0)
struct ADialLockSetCombinationMinigame : ADialLockMinigameBase {
	char pad_3A0[0x8]; // 0x3a0(0x08)
};

// Class ConZ.DialLockSetConfigurationMinigameConfiguration
// Size: 0x78 (Inherited: 0x70)
struct UDialLockSetConfigurationMinigameConfiguration : UDialLockMinigameConfiguration {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class ConZ.DialLockWidget
// Size: 0x2a8 (Inherited: 0x280)
struct UDialLockWidget : UMinigameWidget {
	struct UWidgetAnimation* _onSuccess; // 0x280(0x08)
	struct UWidgetAnimation* _onFailure; // 0x288(0x08)
	struct UWidgetAnimation* _showThrobber; // 0x290(0x08)
	struct UWidgetAnimation* _hideThrobber; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class ConZ.DialogButton
// Size: 0x930 (Inherited: 0x268)
struct UDialogButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	bool PreviewSelectedState; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct UButton* _button; // 0x2c0(0x08)
	struct UTextBlock* _text; // 0x2c8(0x08)
	struct USizeBox* _sizeBox; // 0x2d0(0x08)
	struct FText _initialTitle; // 0x2d8(0x18)
	struct FTabButtonStyle _selectedButtonStyle; // 0x2f0(0x288)
	struct FTabButtonStyle _deselectedButtonStyle; // 0x578(0x288)
	struct FTabTextStyle _selectedTextStyle; // 0x800(0x98)
	struct FTabTextStyle _deselectedTextStyle; // 0x898(0x98)

	void OnClick(); // Function ConZ.DialogButton.OnClick // (Final|Native|Private) // @ game+0x23c3860
};

// Class ConZ.DialogueData
// Size: 0xd0 (Inherited: 0x30)
struct UDialogueData : UDataAsset {
	struct TMap<struct FName, struct FDialogueInfoContainer> GenericDialogues; // 0x30(0x50)
	struct TMap<struct FName, struct FDialogueInfoContainer> TaskDialogues; // 0x80(0x50)
};

// Class ConZ.DialogueSystemContainerWidget
// Size: 0x298 (Inherited: 0x268)
struct UDialogueSystemContainerWidget : UUserWidget {
	struct UWidgetAnimation* _showAvatarAnimation; // 0x268(0x08)
	struct UWidgetAnimation* _hideAvatarAnimation; // 0x270(0x08)
	struct USubtitleWidget* _subtitleWidget; // 0x278(0x08)
	struct UOverlay* _avatarImageOverlay; // 0x280(0x08)
	char pad_288[0x10]; // 0x288(0x10)
};

// Class ConZ.DialogueSystemUIController
// Size: 0xd0 (Inherited: 0x28)
struct UDialogueSystemUIController : UObject {
	char pad_28[0xa8]; // 0x28(0xa8)

	void PlayNextDialogue(); // Function ConZ.DialogueSystemUIController.PlayNextDialogue // (Final|Native|Public|BlueprintCallable) // @ game+0x23c38c0
	void HideSubtitles(); // Function ConZ.DialogueSystemUIController.HideSubtitles // (Final|Native|Private|BlueprintCallable) // @ game+0x23c3820
};

// Class ConZ.DialPadButtonAssetData
// Size: 0xf0 (Inherited: 0x28)
struct UDialPadButtonAssetData : UAssetUserData {
	struct FGameplayTag ButtonTag; // 0x28(0x08)
	enum class EDialPadButtonType ButtonType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString ButtonInput; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)
	struct FTransform ReleasedRelativeTransform; // 0x50(0x30)
	struct FTransform PressedRelativeTransform; // 0x80(0x30)
	float TransitionDuration; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct UAkAudioEvent* ToggleAudio; // 0xb8(0x08)
	struct FLinearColor PressedEmissiveColor; // 0xc0(0x10)
	struct FLinearColor ReleasedEmissiveColor; // 0xd0(0x10)
	struct UMaterialInterface* DefaultButtonMaterial; // 0xe0(0x08)
	struct UMaterialInterface* WornButtonMaterial; // 0xe8(0x08)
};

// Class ConZ.DialPadMinigame
// Size: 0x458 (Inherited: 0x340)
struct ADialPadMinigame : AMinigame {
	struct FVector _zoomStartLocation; // 0x340(0x0c)
	struct FVector _zoomEndLocation; // 0x34c(0x0c)
	struct UCurveFloat* _zoomCurve; // 0x358(0x08)
	struct UCurveFloat* _fadeCurve; // 0x360(0x08)
	struct FLinearColor _deactivatedColor; // 0x368(0x10)
	struct FLinearColor _activatedColor; // 0x378(0x10)
	struct FLinearColor _neutralColor; // 0x388(0x10)
	float _resetTime; // 0x398(0x04)
	int32_t _defaultCombinationLength; // 0x39c(0x04)
	struct UAkAudioEvent* _buttonPressedAudioEvent; // 0x3a0(0x08)
	struct UAkAudioEvent* _correctCodeAudioEvent; // 0x3a8(0x08)
	struct UAkAudioEvent* _incorrectCodeAudioEvent; // 0x3b0(0x08)
	char pad_3B8[0xa0]; // 0x3b8(0xa0)
};

// Class ConZ.DialPadMinigameConfiguration
// Size: 0x70 (Inherited: 0x50)
struct UDialPadMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x20]; // 0x50(0x20)
};

// Class ConZ.DialPadWidget
// Size: 0x298 (Inherited: 0x280)
struct UDialPadWidget : UMinigameWidget {
	struct UTextBlock* _screenText; // 0x280(0x08)
	struct UTextBlock* _timerText; // 0x288(0x08)
	int32_t _maxLettersOnScreen; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
};

// Class ConZ.DiegeticLockState
// Size: 0x2c8 (Inherited: 0x268)
struct UDiegeticLockState : UUserWidget {
	struct FSlateColor LockedColor; // 0x268(0x28)
	struct FSlateColor UnlockedColor; // 0x290(0x28)
	struct UTextBlock* _lockState; // 0x2b8(0x08)
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class ConZ.DisablingReason
// Size: 0x28 (Inherited: 0x28)
struct UDisablingReason : UObject {
};

// Class ConZ.DisablingReason_EMP
// Size: 0x28 (Inherited: 0x28)
struct UDisablingReason_EMP : UDisablingReason {
};

// Class ConZ.TemporaryDisableablePart
// Size: 0x28 (Inherited: 0x28)
struct UTemporaryDisableablePart : UInterface {
};

// Class ConZ.TemporaryDisableable
// Size: 0x28 (Inherited: 0x28)
struct UTemporaryDisableable : UInterface {
};

// Class ConZ.DistantLevel
// Size: 0x298 (Inherited: 0x220)
struct ADistantLevel : AActor {
	struct UStaticMeshComponent* _previewMeshComponent; // 0x220(0x08)
	struct FString _streamingLevelName; // 0x228(0x10)
	enum class EDistantMeshStreamingBehavior _meshStreamingBehavior; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float _maxDrawDistance; // 0x23c(0x04)
	bool _neverDistanceCull; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	struct FBoxSphereBounds _meshBounds; // 0x244(0x1c)
	struct TSoftObjectPtr<UStaticMesh> _collisionMesh; // 0x260(0x28)
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> _meshLODs; // 0x288(0x10)
};

// Class ConZ.DistantLevelManager
// Size: 0x430 (Inherited: 0x220)
struct ADistantLevelManager : AActor {
	struct USceneComponent* _rootComponent; // 0x220(0x08)
	float _minCameraLocationChangeToUpdateDistantLevels; // 0x228(0x04)
	float _distantMeshPreloadDistance; // 0x22c(0x04)
	int32_t _maxNumSimultaneouslyStreamedDistantMeshLODs; // 0x230(0x04)
	float _distantCollisionMeshUnloadDistance; // 0x234(0x04)
	int32_t _maxNumSimultaneouslyStreamedDistantCollisionMeshes; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct TArray<struct FDistantLevelDescription> _distantLevelDescriptions; // 0x240(0x10)
	float _releaseRecentlyUsedDistantMeshTime; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TMap<struct FString, struct FRecentlyUsedDistantLevelStaticMeshLODs> _recentlyUsedMesh; // 0x258(0x50)
	int32_t _preloadAllNeverCulledDistantLevelLOD; // 0x2a8(0x04)
	char pad_2AC[0x184]; // 0x2ac(0x184)

	void HandleStreamingLevelsVisibilityChanged(); // Function ConZ.DistantLevelManager.HandleStreamingLevelsVisibilityChanged // (Final|Native|Private) // @ game+0x23c3800
};

// Class ConZ.DivingMaskTag
// Size: 0x30 (Inherited: 0x30)
struct UDivingMaskTag : UBaseItemTag {
};

// Class ConZ.Trader
// Size: 0x9d0 (Inherited: 0x9a0)
struct ATrader : ASedentaryNPC {
	char pad_9A0[0x18]; // 0x9a0(0x18)
	struct TWeakObjectPtr<struct UTraderPersonalityDataAsset> _traderPersonalityDataAsset; // 0x9b8(0x08)
	char pad_9C0[0x10]; // 0x9c0(0x10)
};

// Class ConZ.Doctor
// Size: 0xa30 (Inherited: 0x9d0)
struct ADoctor : ATrader {
	char pad_9D0[0x48]; // 0x9d0(0x48)
	struct TArray<struct TSoftClassPtr<UObject>> _tradeableServicesForInteractions; // 0xa18(0x10)
	char pad_A28[0x8]; // 0xa28(0x08)
};

// Class ConZ.DogTagItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct ADogTagItem : AItem {
	struct FDbIntegerId _userProfileId; // 0x9a8(0x08)
	struct FString _userProfileName; // 0x9b0(0x10)
	struct UExpirableItemComponent* _expirableItemComponent; // 0x9c8(0x08)

	void OnRep_UserProfileName(); // Function ConZ.DogTagItem.OnRep_UserProfileName // (Final|Native|Private) // @ game+0x23c38a0
};

// Class ConZ.PriceCategory
// Size: 0x38 (Inherited: 0x30)
struct UPriceCategory : UDataAsset {
	float Price; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.Door
// Size: 0x580 (Inherited: 0x220)
struct ADoor : AActor {
	char pad_220[0x20]; // 0x220(0x20)
	struct FName ControlName; // 0x240(0x08)
	struct UMeshComponent* Mesh; // 0x248(0x08)
	struct FMulticastInlineDelegate OnOpened; // 0x250(0x10)
	char pad_260[0x70]; // 0x260(0x70)
	enum class EDoorType _doorType; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct USceneComponent* _rootComponent; // 0x2d8(0x08)
	char pad_2E0[0x4]; // 0x2e0(0x04)
	int32_t _maxNumberOfLocks; // 0x2e4(0x04)
	int32_t _maxNumberOfZappers; // 0x2e8(0x04)
	bool _shouldRemoveZappersAfterLocksAreNeutralized; // 0x2ec(0x01)
	bool _supportsRemoteSensor; // 0x2ed(0x01)
	bool CanOpenOnBothSides; // 0x2ee(0x01)
	bool _canOpen; // 0x2ef(0x01)
	float _openingDuration; // 0x2f0(0x04)
	float _closingDuration; // 0x2f4(0x04)
	bool _canInteractWhileInTransition; // 0x2f8(0x01)
	bool _shouldSelfClose; // 0x2f9(0x01)
	char pad_2FA[0x2]; // 0x2fa(0x02)
	float _openedDurationBeforeSelfClosing; // 0x2fc(0x04)
	float _selfCloseDuration; // 0x300(0x04)
	enum class EOpenStateNavigationControl _openStateNavigationControl; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	struct UAkAudioEvent* _openingSoundCue; // 0x308(0x08)
	struct UAkAudioEvent* _violentOpeningSoundCue; // 0x310(0x08)
	struct UAkAudioEvent* _openedSoundCue; // 0x318(0x08)
	struct UAkAudioEvent* _closingSoundCue; // 0x320(0x08)
	struct UAkAudioEvent* _closedSoundCue; // 0x328(0x08)
	float _noiseLoudness; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct UDoorUnlockData* _doorUnlockData; // 0x338(0x08)
	char pad_340[0x2a]; // 0x340(0x2a)
	bool _canEverBeOpened; // 0x36a(0x01)
	bool _canEverBeClosed; // 0x36b(0x01)
	float _violentOpeningRateMultiplier; // 0x36c(0x04)
	char pad_370[0x8]; // 0x370(0x08)
	struct UPriceCategory* _priceCategory; // 0x378(0x08)
	struct FTransform _unlockTransformInside; // 0x380(0x30)
	struct FTransform _unlockTransformOutside; // 0x3b0(0x30)
	float _forceUnlockMovementAcceptanceRadius; // 0x3e0(0x04)
	char pad_3E4[0x4]; // 0x3e4(0x04)
	struct TArray<struct UObject*> _originalUpgradeItemsClasses; // 0x3e8(0x10)
	char pad_3F8[0x20]; // 0x3f8(0x20)
	struct UDoorUpgradeWidget* _upgradeWidget; // 0x418(0x08)
	struct FDoorRepData _doorRepData; // 0x420(0x48)
	char pad_468[0x10]; // 0x468(0x10)
	struct FGameplayTagContainer _relevantLockabilityServerSettings; // 0x478(0x20)
	char pad_498[0x11]; // 0x498(0x11)
	bool _disableSerialization; // 0x4a9(0x01)
	char pad_4AA[0x1e]; // 0x4aa(0x1e)
	struct TArray<struct AItem*> _attachedItems; // 0x4c8(0x10)
	char pad_4D8[0x1c]; // 0x4d8(0x1c)
	struct FVector _leftNavLinkPoint; // 0x4f4(0x0c)
	struct FVector _rightNavLinkPoint; // 0x500(0x0c)
	enum class ENavLinkDirection _navLinkDirection; // 0x50c(0x01)
	char pad_50D[0x3]; // 0x50d(0x03)
	float _navLinkDistance; // 0x510(0x04)
	float _navLinkRayCastStartUpOffset; // 0x514(0x04)
	float _navLinkGroundOffset; // 0x518(0x04)
	struct FNavAgentSelector _navSupportedAgents; // 0x51c(0x04)
	bool _isYForwardAxis; // 0x520(0x01)
	bool _canEverBeBrokenDown; // 0x521(0x01)
	char pad_522[0x2]; // 0x522(0x02)
	float _brokenDownTime; // 0x524(0x04)
	struct UNavArea* _doorNavArea; // 0x528(0x08)
	char pad_530[0x18]; // 0x530(0x18)
	struct FActorPaintParams _actorPaintParams; // 0x548(0x38)

	bool ShouldOpen(); // Function ConZ.Door.ShouldOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23c38e0
	void OnUnlockFailed__DelegateSignature(); // DelegateFunction ConZ.Door.OnUnlockFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnUnlocked__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnUnlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnRep_OwningUserProfileId(); // Function ConZ.Door.OnRep_OwningUserProfileId // (Final|Native|Private) // @ game+0x23c3880
	void OnOpened__DelegateSignature(); // DelegateFunction ConZ.Door.OnOpened__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnLockRemoved__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnLockRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnLocked__DelegateSignature(struct ADoor* Door); // DelegateFunction ConZ.Door.OnLocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void OnAudioStopped(); // Function ConZ.Door.OnAudioStopped // (Final|Native|Private|Const) // @ game+0x23c3840
	void ChangeOpenState(bool ShouldOpen); // Function ConZ.Door.ChangeOpenState // (Final|Native|Public|BlueprintCallable) // @ game+0x23c3770
};

// Class ConZ.DoorEntitySave
// Size: 0x60 (Inherited: 0x28)
struct UDoorEntitySave : UObject {
	struct FDbIntegerId BaseElementDoorId; // 0x28(0x08)
	struct FDbIntegerId OwningUserProfileId; // 0x30(0x08)
	enum class EAccessLevel AccessLevel; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TArray<struct FDoorEntityUpgradeLock> Locks; // 0x40(0x10)
	struct TArray<struct FDoorEntityUpgradeAttachment> Attachments; // 0x50(0x10)
};

// Class ConZ.DoorEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UDoorEntitySetup : UEntitySetup {
};

// Class ConZ.DoorLockingRegistry
// Size: 0x108 (Inherited: 0xb0)
struct UDoorLockingRegistry : UActorComponent {
	struct TMap<enum class EDoorUnlockDataType, struct FDoorUnlockDataCollection> _doorUnlockDataByType; // 0xb0(0x50)
	int32_t _countNormalizationThreshold; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
};

// Class ConZ.DoorUnlockData
// Size: 0x58 (Inherited: 0x28)
struct UDoorUnlockData : UObject {
	enum class EDoorUnlockDataType Type; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FText DescriptionText; // 0x30(0x18)
	struct FString Description; // 0x48(0x10)
};

// Class ConZ.ExpirableItemComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UExpirableItemComponent : UItemComponent {
	int64_t _expirationTimeSeconds; // 0xc8(0x08)
	double _repCreatedAtPlayTime; // 0xd0(0x08)
	float _repExpirationTimeHours; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)

	void OnRep_ExpirationTime(); // Function ConZ.ExpirableItemComponent.OnRep_ExpirationTime // (Final|Native|Private) // @ game+0x23d7dd0
	void OnRep_CreatedAtPlayTime(); // Function ConZ.ExpirableItemComponent.OnRep_CreatedAtPlayTime // (Final|Native|Private) // @ game+0x23d7db0
};

// Class ConZ.DoorUnlockItemComponent
// Size: 0xf0 (Inherited: 0xe0)
struct UDoorUnlockItemComponent : UExpirableItemComponent {
	enum class EDoorUnlockDataType _unlockDataType; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct UDoorUnlockData* _doorUnlockData; // 0xe8(0x08)

	void OnRep_DoorLockingDescriptor(); // Function ConZ.DoorUnlockItemComponent.OnRep_DoorLockingDescriptor // (Final|Native|Private) // @ game+0xbbc480
};

// Class ConZ.UpgradeSlotWidget
// Size: 0x2e8 (Inherited: 0x268)
struct UUpgradeSlotWidget : UUserWidget {
	struct UImage* _itemIcon; // 0x268(0x08)
	struct UImage* _gridSymbol; // 0x270(0x08)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UImage* _defaultImage; // 0x280(0x08)
	struct FLinearColor _regularColour; // 0x288(0x10)
	struct FLinearColor _dropUnavailableColour; // 0x298(0x10)
	struct FLinearColor _dropAvailableColour; // 0x2a8(0x10)
	enum class ESlotType _slotType; // 0x2b8(0x01)
	char pad_2B9[0xf]; // 0x2b9(0x0f)
	struct TArray<struct AItem*> _buyableUpgrades; // 0x2c8(0x10)
	char pad_2D8[0x10]; // 0x2d8(0x10)
};

// Class ConZ.BCUUpgradeSlotWidget
// Size: 0x420 (Inherited: 0x2e8)
struct UBCUUpgradeSlotWidget : UUpgradeSlotWidget {
	struct FLinearColor _connectedBackgroundColor; // 0x2e8(0x10)
	struct FSlateBrush _connectedIconTexture; // 0x2f8(0x88)
	struct FSlateBrush _disconnectedIconTexture; // 0x380(0x88)
	char pad_408[0x18]; // 0x408(0x18)
};

// Class ConZ.DoorUpgradeWidget
// Size: 0x3a8 (Inherited: 0x340)
struct UDoorUpgradeWidget : UWaypointWidgetBase {
	struct UVerticalBox* _lockSlotsBox; // 0x340(0x08)
	struct UVerticalBox* _protectionSlotsBox; // 0x348(0x08)
	struct UVerticalBox* _sensorSlotsBox; // 0x350(0x08)
	struct UVerticalBox* _bcuLockSlotBox; // 0x358(0x08)
	struct ADoor* _door; // 0x360(0x08)
	char pad_368[0x40]; // 0x368(0x40)
};

// Class ConZ.DoubleDoor
// Size: 0x590 (Inherited: 0x580)
struct ADoubleDoor : ADoor {
	struct UMeshComponent* Mesh1; // 0x580(0x08)
	char pad_588[0x8]; // 0x588(0x08)
};

// Class ConZ.DoubleRegularDoorStatic
// Size: 0x5c0 (Inherited: 0x590)
struct ADoubleRegularDoorStatic : ADoubleDoor {
	struct FRotator _openRotation0; // 0x588(0x0c)
	struct FRotator _openRotation1; // 0x594(0x0c)
	struct FRotator _closedRotation0; // 0x5a0(0x0c)
	struct FRotator _closedRotation1; // 0x5ac(0x0c)
};

// Class ConZ.DoubleSlidingDoorStatic
// Size: 0x5c0 (Inherited: 0x590)
struct ADoubleSlidingDoorStatic : ADoubleDoor {
	struct USceneComponent* ClosedPositionComponent0; // 0x588(0x08)
	struct USceneComponent* ClosedPositionComponent1; // 0x590(0x08)
	struct USceneComponent* OpenPositionComponent0; // 0x598(0x08)
	struct USceneComponent* OpenPositionComponent1; // 0x5a0(0x08)
	char pad_5B0[0x10]; // 0x5b0(0x10)

	void AddDoorPartInfo(struct FVector& cloasedPosition, struct FVector& OpenedPosition, struct USceneComponent* moveableComponent); // Function ConZ.DoubleSlidingDoorStatic.AddDoorPartInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x23c7110
};

// Class ConZ.DrinkItem
// Size: 0xa60 (Inherited: 0xa50)
struct ADrinkItem : AFoodItem {
	struct UBasicGameResourceContainerComponent* _gameResourceContainer; // 0xa50(0x08)
	char pad_A58[0x8]; // 0xa58(0x08)
};

// Class ConZ.DrinkWaterAssetData
// Size: 0x50 (Inherited: 0x30)
struct UDrinkWaterAssetData : UInteractionAssetData {
	struct UGameResourceType* ResourceType; // 0x30(0x08)
	float QuantityPerDrink; // 0x38(0x04)
	float Salinity; // 0x3c(0x04)
	struct UAkAudioEvent* StartDrinkingAudioEvent; // 0x40(0x08)
	struct UAkAudioEvent* StopDrinkingAudioEvent; // 0x48(0x08)
};

// Class ConZ.DrivingSkill
// Size: 0x5d8 (Inherited: 0xb0)
struct UDrivingSkill : UVehicleHandlingSkill {
	struct FVehicleHandlingExperienceAwards NoSkillExperienceAwards; // 0xb0(0x08)
	struct FVehicleHandlingExperienceAwards BasicSkillExperienceAwards; // 0xb8(0x08)
	struct FVehicleHandlingExperienceAwards MediumSkillExperienceAwards; // 0xc0(0x08)
	struct FVehicleHandlingExperienceAwards AdvancedSkillExperienceAwards; // 0xc8(0x08)
	struct FVehicleHandlingExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xd0(0x08)
	struct FDrivingSkillParametersPerSkillLevel NoSkillParameters; // 0xd8(0x100)
	struct FDrivingSkillParametersPerSkillLevel BasicSkillParameters; // 0x1d8(0x100)
	struct FDrivingSkillParametersPerSkillLevel MediumSkillParameters; // 0x2d8(0x100)
	struct FDrivingSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x3d8(0x100)
	struct FDrivingSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x4d8(0x100)
};

// Class ConZ.Drone
// Size: 0x930 (Inherited: 0x830)
struct ADrone : AConZCharacter {
	struct UAkAudioEvent* _engineAudioEvent; // 0x828(0x08)
	struct UAkAudioEvent* _engineStopAudioEvent; // 0x830(0x08)
	struct TArray<float> _speedSteps; // 0x838(0x10)
	float _movementInertiaAI; // 0x848(0x04)
	float _movementRotationSpeedExpFactor; // 0x84c(0x04)
	float _engineParticlesChangeSpeedExpFactor; // 0x850(0x04)
	struct UCurveFloat* _engineVolumeFromSpeed; // 0x858(0x08)
	float _movementBreathingInterval; // 0x860(0x04)
	float _movementBreathingIntensity; // 0x864(0x04)
	struct UParticleSystem* _selfDestructParticles; // 0x868(0x08)
	struct UParticleSystem* _smokeParticles; // 0x870(0x08)
	struct UParticleSystemComponent* _smokeParticleSystemComponent; // 0x878(0x08)
	struct UAkAudioEvent* _selfDestructAudioEvent; // 0x880(0x08)
	char pad_88C[0x14]; // 0x88c(0x14)
	char _currentSpeedStep; // 0x8a0(0x01)
	char pad_8A1[0x3]; // 0x8a1(0x03)
	float _movementInertia; // 0x8a4(0x04)
	char pad_8A8[0x8]; // 0x8a8(0x08)
	struct UStaticMeshComponent* _cameraMesh; // 0x8b0(0x08)
	struct UParticleSystemComponent* _engineParticlesM; // 0x8b8(0x08)
	struct UParticleSystemComponent* _engineParticlesML; // 0x8c0(0x08)
	struct UParticleSystemComponent* _engineParticlesMR; // 0x8c8(0x08)
	struct UParticleSystemComponent* _engineParticlesLL; // 0x8d0(0x08)
	struct UParticleSystemComponent* _engineParticlesLR; // 0x8d8(0x08)
	struct USpotLightComponent* _lightComponent; // 0x8e0(0x08)
	float _speedOfSoundMultiplerForDoppler; // 0x8e8(0x04)
	char pad_8EC[0x3c]; // 0x8ec(0x3c)
	float _health; // 0x928(0x04)
	char pad_92C[0x4]; // 0x92c(0x04)

	void Server_SetCurrentSpeedStep(int32_t step); // Function ConZ.Drone.Server_SetCurrentSpeedStep // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23c7720
	void SelfDestruct(bool shouldSpawnItem); // Function ConZ.Drone.SelfDestruct // (Final|Native|Public|BlueprintCallable) // @ game+0x23c7690
	void OnRep_CurrentSpeedStep(); // Function ConZ.Drone.OnRep_CurrentSpeedStep // (Final|Native|Private) // @ game+0x23c7670
	void OnHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function ConZ.Drone.OnHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x23c7480
	void NetMulticast_ToggleSmokeParticles(bool shouldPlay); // Function ConZ.Drone.NetMulticast_ToggleSmokeParticles // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c73b0
	void NetMulticast_SpawnDestroyedEffects(); // Function ConZ.Drone.NetMulticast_SpawnDestroyedEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private|Const) // @ game+0x234bb80
	void NetMulticast_PlaySoundOnClients(enum class EDroneSound SoundToPlay, bool Force); // Function ConZ.Drone.NetMulticast_PlaySoundOnClients // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c72d0
};

// Class ConZ.DroneAIController
// Size: 0x568 (Inherited: 0x450)
struct ADroneAIController : AConZAIController {
	float _followingDuration; // 0x450(0x04)
	float _followingTargetSpeedThreshold; // 0x454(0x04)
	float _forcedSelfDestructTime; // 0x458(0x04)
	float _followingHeight; // 0x45c(0x04)
	float _followingDistance; // 0x460(0x04)
	float _resumeFollowingExtraDistance; // 0x464(0x04)
	float _resumeFollowingSeconds; // 0x468(0x04)
	float _resumeFollowingExtendedSeconds; // 0x46c(0x04)
	char pad_470[0x4]; // 0x470(0x04)
	float _followingCirclingMinTime; // 0x474(0x04)
	float _followingCirclingMaxTime; // 0x478(0x04)
	float _followingCirclingNewDirectionMinTime; // 0x47c(0x04)
	float _followingCirclingNewDirectionMaxTime; // 0x480(0x04)
	float _switchFollowingTargetsMaxDistance; // 0x484(0x04)
	char pad_488[0x30]; // 0x488(0x30)
	float _flybyHorizontalDistanceFromTarget; // 0x4b8(0x04)
	float _flybyVerticalDistanceFromTarget; // 0x4bc(0x04)
	float _flybyPathLength; // 0x4c0(0x04)
	float _minFlybyAngleDeg; // 0x4c4(0x04)
	float _maxFlybyAngleDeg; // 0x4c8(0x04)
	char pad_4CC[0x14]; // 0x4cc(0x14)
	float _crashingDistance; // 0x4e0(0x04)
	char pad_4E4[0x10]; // 0x4e4(0x10)
	float _leavingForwardDistance; // 0x4f4(0x04)
	float _leavingVerticalDistance; // 0x4f8(0x04)
	float _minimumNavigationProximityPerState[0x7]; // 0x4fc(0x1c)
	float _maxPathSegment; // 0x518(0x04)
	float _flyUpwardsDistance; // 0x51c(0x04)
	int32_t _maximumAttemptedHeightGains; // 0x520(0x04)
	char pad_524[0x4]; // 0x524(0x04)
	float _distanceForHighAcceleration; // 0x528(0x04)
	float _highAccelerationScaleMultiplier; // 0x52c(0x04)
	char pad_530[0x38]; // 0x530(0x38)

	void FollowCharacter(struct ACharacter* characterToFollow); // Function ConZ.DroneAIController.FollowCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x23c7240
};

// Class ConZ.DroneCameraActor
// Size: 0x7b0 (Inherited: 0x7b0)
struct ADroneCameraActor : ACameraActor {
};

// Class ConZ.DroneDestructibleItemComponent
// Size: 0xc8 (Inherited: 0xc8)
struct UDroneDestructibleItemComponent : UItemComponent {
};

// Class ConZ.DroneSoundComponent
// Size: 0x170 (Inherited: 0x128)
struct UDroneSoundComponent : UCharacterSoundComponent {
	struct USoundCue* IdleSound; // 0x128(0x08)
	struct UAkAudioEvent* IdleAudioEvent; // 0x130(0x08)
	struct USoundCue* AngrySound; // 0x138(0x08)
	struct UAkAudioEvent* AngryAudioEvent; // 0x140(0x08)
	struct USoundCue* AttackSound; // 0x148(0x08)
	struct UAkAudioEvent* AttackAudioEvent; // 0x150(0x08)
	struct USoundCue* KillSound; // 0x158(0x08)
	struct UAkAudioEvent* KillAudioEvent; // 0x160(0x08)
	float MinSilenceTimeout; // 0x168(0x04)
	float MaxSilenceTimeout; // 0x16c(0x04)
};

// Class ConZ.DroneTargetData
// Size: 0x30 (Inherited: 0x28)
struct UDroneTargetData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.DropdownContainerWithDialogue
// Size: 0x2a8 (Inherited: 0x268)
struct UDropdownContainerWithDialogue : UUserWidget {
	struct USelectionOverlayWidget* _selectionOverlay; // 0x268(0x08)
	struct UTextBlock* _label; // 0x270(0x08)
	struct UVerticalBox* _dropdownContainer; // 0x278(0x08)
	struct UButton* _cancelButton; // 0x280(0x08)
	struct UButton* _applyButton; // 0x288(0x08)
	struct FText dropdownLabel; // 0x290(0x18)

	void OnCancelButtonClicked(); // Function ConZ.DropdownContainerWithDialogue.OnCancelButtonClicked // (Native|Protected) // @ game+0x23c7460
	void OnApplyButtonClicked(); // Function ConZ.DropdownContainerWithDialogue.OnApplyButtonClicked // (Native|Protected) // @ game+0x23c7440
};

// Class ConZ.DropdownColorPicker
// Size: 0x2e8 (Inherited: 0x2a8)
struct UDropdownColorPicker : UDropdownContainerWithDialogue {
	char pad_2A8[0x30]; // 0x2a8(0x30)
	struct UImage* _colorPreviewSquare; // 0x2d8(0x08)
	struct UColorPicker* _colorPicker; // 0x2e0(0x08)
};

// Class ConZ.DropdownMenuSelectionWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UDropdownMenuSelectionWidget : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UImage* SelectionImage; // 0x298(0x08)
	struct UCustomBorder* SelectionBorder; // 0x2a0(0x08)
	struct UDropdownMenuWidget* _dropdownMenu; // 0x2a8(0x08)

	void Update(); // Function ConZ.DropdownMenuSelectionWidget.Update // (Native|Public) // @ game+0x23c7460
	void OnDropdownSelectionDelegate__DelegateSignature(struct UDropdownMenuSelectionWidget* Widget); // DelegateFunction ConZ.DropdownMenuSelectionWidget.OnDropdownSelectionDelegate__DelegateSignature // (Public|Delegate) // @ game+0x297fc00
	struct FEventReply Click(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.DropdownMenuSelectionWidget.Click // (Native|Public|HasOutParms) // @ game+0x23c9510
};

// Class ConZ.DropdownMenuColorSelectionWidget
// Size: 0x2c0 (Inherited: 0x2b0)
struct UDropdownMenuColorSelectionWidget : UDropdownMenuSelectionWidget {
	struct FLinearColor Color; // 0x2b0(0x10)
};

// Class ConZ.DropdownMenuTextureSelectionWidget
// Size: 0x2b8 (Inherited: 0x2b0)
struct UDropdownMenuTextureSelectionWidget : UDropdownMenuSelectionWidget {
	struct UTexture2D* Texture; // 0x2b0(0x08)
};

// Class ConZ.DropdownMenuWidget
// Size: 0x290 (Inherited: 0x268)
struct UDropdownMenuWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UScrollBox* ScrollPanel; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)
	struct UNamedSlot* _panelSlot; // 0x288(0x08)
};

// Class ConZ.DropItemOnStartEntityComponentSetup
// Size: 0x48 (Inherited: 0x48)
struct UDropItemOnStartEntityComponentSetup : UEntityComponentSetup {
};

// Class ConZ.DropshipEncounterSaveState
// Size: 0x70 (Inherited: 0x38)
struct UDropshipEncounterSaveState : UConZCharacterEncounterSaveState {
	float health; // 0x38(0x04)
	bool ShouldLeaveAfterSentryDeployment; // 0x3c(0x01)
	bool CanDropSentry; // 0x3d(0x01)
	bool IsSpawnedThroughSpawner; // 0x3e(0x01)
	char pad_3F[0x1]; // 0x3f(0x01)
	struct FVector SpawnerLocationZero; // 0x40(0x0c)
	struct FRotator SpawnerRotator; // 0x4c(0x0c)
	struct TArray<struct FVector> PatrolPointsRelativeLocations; // 0x58(0x10)
	float OperatingRange; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class ConZ.Dropship
// Size: 0xe90 (Inherited: 0x830)
struct ADropship : AConZCharacter {
	char pad_830[0x74]; // 0x830(0x74)
	float _maxHealth; // 0x8a4(0x04)
	char pad_8A8[0x8]; // 0x8a8(0x08)
	float _corpseDestroyTime; // 0x8b0(0x04)
	float _timeAtVelocityZeroAfterDeathToExplode; // 0x8b4(0x04)
	char pad_8B8[0x4]; // 0x8b8(0x04)
	float _explosionDistanceModifierValue; // 0x8bc(0x04)
	enum class EDropshipStance _dropshipStance; // 0x8c0(0x01)
	char pad_8C1[0x3]; // 0x8c1(0x03)
	struct FDropshipDataPerStance _dataPerStance[0xa]; // 0x8c4(0xf0)
	char pad_9B4[0x4]; // 0x9b4(0x04)
	float _breathingOffset; // 0x9b8(0x04)
	float _breathingFrequency; // 0x9bc(0x04)
	float _breathingSpeedMinFrequency; // 0x9c0(0x04)
	char pad_9C4[0x8]; // 0x9c4(0x08)
	float _muzzleEffectsScaleDistanceStart; // 0x9cc(0x04)
	float _muzzleEffectsScaleDistanceRange; // 0x9d0(0x04)
	float _muzzleEffectsScaleByDistanceFactor; // 0x9d4(0x04)
	struct AProjectile* _projectileClass; // 0x9d8(0x08)
	struct AProjectile* _projectileClassClient; // 0x9e0(0x08)
	float _projectileFireAtLocationMaxAngle; // 0x9e8(0x04)
	float _weaponAimingMaxAngle; // 0x9ec(0x04)
	float _weaponAimLerpFactor; // 0x9f0(0x04)
	float _aimAngleChangePerSecond; // 0x9f4(0x04)
	struct FName _leftMinigunSocketName; // 0x9f8(0x08)
	struct FName _rightMinigunSocketName; // 0xa00(0x08)
	struct FName _leftMinigunAimSocketName; // 0xa08(0x08)
	struct FName _rightMinigunAimSocketName; // 0xa10(0x08)
	struct UParticleSystem* _projectileMuzzlePS; // 0xa18(0x08)
	struct UAkAudioEvent* _projectileFiredSound; // 0xa20(0x08)
	struct FVector _baseAimLocationLeft; // 0xa28(0x0c)
	struct FVector _baseAimLocationRight; // 0xa34(0x0c)
	char pad_A40[0x80]; // 0xa40(0x80)
	struct AActor* _aimFoe; // 0xac0(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> _knownTargets; // 0xac8(0x10)
	struct FVector _aimLocation; // 0xad8(0x0c)
	char pad_AE4[0x1c]; // 0xae4(0x1c)
	struct AProjectile* _railgunProjectileClass; // 0xb00(0x08)
	struct AProjectile* _railgunProjectileClassClient; // 0xb08(0x08)
	float _railgunChargingTime; // 0xb10(0x04)
	float _railgunRecoilTime; // 0xb14(0x04)
	float _maxRailgunProjectileAngle; // 0xb18(0x04)
	struct FVector _railgunFirePointOffset; // 0xb1c(0x0c)
	struct UNiagaraSystem* _railgunChargingPS; // 0xb28(0x08)
	struct UNiagaraComponent* _railgunChargingPSC; // 0xb30(0x08)
	struct FName _railgunChargingSocket; // 0xb38(0x08)
	struct UParticleSystem* _railgunMuzzleEffect; // 0xb40(0x08)
	struct FName _railgunMuzzleSocket; // 0xb48(0x08)
	struct UAkAudioEvent* _railgunFiredSound; // 0xb50(0x08)
	char pad_B58[0x4]; // 0xb58(0x04)
	float _railgunShakeEffectRadius; // 0xb5c(0x04)
	float _railgunShakeMaxEffectRadius; // 0xb60(0x04)
	float _railgunShakeEffectFalloffExponent; // 0xb64(0x04)
	struct UMatineeCameraShake* _railgunCameraShake; // 0xb68(0x08)
	struct AItem* _tearGasGrenadeItemClass; // 0xb70(0x08)
	struct FName _tearGasGrenadeSpawnSocketName; // 0xb78(0x08)
	float _tearGasExtraZVelocity; // 0xb80(0x04)
	char pad_B84[0x4]; // 0xb84(0x04)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyLongRange; // 0xb88(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyRailgun; // 0xb90(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyLongRangeSP; // 0xb98(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyRailgunSP; // 0xba0(0x08)
	char pad_BA8[0x8]; // 0xba8(0x08)
	struct UParticleSystem* _explosionParticles; // 0xbb0(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0xbb8(0x08)
	struct TArray<struct FDropshipDamageEffectData> _damageParticleEffectsPSData; // 0xbc0(0x10)
	char pad_BD0[0x50]; // 0xbd0(0x50)
	struct TArray<struct FName> _damageParticleSockets; // 0xc20(0x10)
	char pad_C30[0x8]; // 0xc30(0x08)
	struct UAkAudioEvent* _onZeroHealthLeaveAudio; // 0xc38(0x08)
	struct FName _cameraBone; // 0xc40(0x08)
	struct UStaticMeshComponent* _scannerLight; // 0xc48(0x08)
	struct FTransform _sensorTransform; // 0xc50(0x30)
	bool _canDropSentry; // 0xc80(0x01)
	bool _shouldAddSentryToRogueCharacters; // 0xc81(0x01)
	char pad_C82[0xe]; // 0xc82(0x0e)
	struct FTransform _droppableSentryInitialTransform; // 0xc90(0x30)
	struct FVector _droppableSentryDropLocation; // 0xcc0(0x0c)
	struct FName _droppableSentryBone; // 0xccc(0x08)
	float _timeToStraightenSentry; // 0xcd4(0x04)
	char pad_CD8[0x8]; // 0xcd8(0x08)
	struct USkeletalMesh* _sentrySkeletalMesh; // 0xce0(0x08)
	struct USkeletalMeshComponent* _droppableSentryMeshComponent; // 0xce8(0x08)
	struct UDropshipDroppableSentryAnimInstance* _droppableSentryAnimationBlueprint; // 0xcf0(0x08)
	struct UCurveVector* _droppableSentryRelativeLocationCurve; // 0xcf8(0x08)
	enum class ESentrySpawnFlag _sentrySpawnFlag; // 0xd00(0x01)
	char pad_D01[0x7]; // 0xd01(0x07)
	struct TSoftClassPtr<UObject> _spawnableSentryClass; // 0xd08(0x28)
	char pad_D30[0x68]; // 0xd30(0x68)
	struct UNiagaraSystem* _engineParticles; // 0xd98(0x08)
	struct FName _engineParticleRAttachPoint; // 0xda0(0x08)
	struct UNiagaraComponent* _engineParticleComponentR; // 0xda8(0x08)
	struct FName _engineParticleLAttachPoint; // 0xdb0(0x08)
	struct UNiagaraComponent* _engineParticleComponentL; // 0xdb8(0x08)
	struct UNiagaraSystem* _sideEnginesParticles; // 0xdc0(0x08)
	struct FName _sideEngineParticleURAttachPoint; // 0xdc8(0x08)
	struct UNiagaraComponent* _sideEngineParticleComponentUR; // 0xdd0(0x08)
	struct FName _sideEngineParticleULAttachPoint; // 0xdd8(0x08)
	struct UNiagaraComponent* _sideEngineParticleComponentUL; // 0xde0(0x08)
	struct FName _sideEngineParticleDRAttachPoint; // 0xde8(0x08)
	struct UNiagaraComponent* _sideEngineParticleComponentDR; // 0xdf0(0x08)
	struct FName _sideEngineParticleDLAttachPoint; // 0xdf8(0x08)
	struct UNiagaraComponent* _sideEngineParticleComponentDL; // 0xe00(0x08)
	struct UNiagaraSystem* _sideRadiatorParticles; // 0xe08(0x08)
	struct FName _sideRadiatorParticleRAttachPoint; // 0xe10(0x08)
	struct UNiagaraComponent* _sideRadiatorParticleComponentR; // 0xe18(0x08)
	struct FName _sideRadiatorParticleLAttachPoint; // 0xe20(0x08)
	struct UNiagaraComponent* _sideRadiatorParticleComponentL; // 0xe28(0x08)
	float _engineParticlesMaxAcceleration; // 0xe30(0x04)
	float _engineParticleStrengthChangePerSecond; // 0xe34(0x04)
	float _engineParticleStrengthBackwardsMovementDotProductValueMultiplier; // 0xe38(0x04)
	float _engineParticleStrengthSideMovementDotProductValueMultiplier; // 0xe3c(0x04)
	struct FString _engineParticleStrengthParameterName; // 0xe40(0x10)
	char pad_E50[0x8]; // 0xe50(0x08)
	struct UAkAudioEvent* _engineAudioEventStart; // 0xe58(0x08)
	struct UAkAudioEvent* _engineAudioEventEnd; // 0xe60(0x08)
	float _maxEngineSoundIntensitySpeed; // 0xe68(0x04)
	char pad_E6C[0x4]; // 0xe6c(0x04)
	struct UAnimMontage* _dropshipMontages; // 0xe70(0x08)
	char pad_E78[0x8]; // 0xe78(0x08)
	int32_t _initialRandomSeed; // 0xe80(0x04)
	char pad_E84[0x2]; // 0xe84(0x02)
	uint16_t _repDataPacked; // 0xe86(0x02)
	char pad_E88[0x8]; // 0xe88(0x08)

	void OnRep_SentrySpawnFlag(); // Function ConZ.Dropship.OnRep_SentrySpawnFlag // (Final|Native|Private) // @ game+0x23c9970
	void OnRep_RepDataPacked(); // Function ConZ.Dropship.OnRep_RepDataPacked // (Final|Native|Private) // @ game+0x23c9950
	void OnRep_DropshipStance(); // Function ConZ.Dropship.OnRep_DropshipStance // (Final|Native|Private) // @ game+0x23c9930
	void NetMulticast_RemoveKnownTarget(struct AActor* Target); // Function ConZ.Dropship.NetMulticast_RemoveKnownTarget // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c98a0
	void NetMulticast_PlayRailgunFiredEffects(); // Function ConZ.Dropship.NetMulticast_PlayRailgunFiredEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9880
	void NetMulticast_PlayProjectileFiredEffects(); // Function ConZ.Dropship.NetMulticast_PlayProjectileFiredEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9860
	void NetMulticast_PlayDropshipMontage(enum class EDropshipMontageType montageType); // Function ConZ.Dropship.NetMulticast_PlayDropshipMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c97e0
	void NetMulticast_OnDropshipDeath(); // Function ConZ.Dropship.NetMulticast_OnDropshipDeath // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2361470
	void NetMulticast_Explode(); // Function ConZ.Dropship.NetMulticast_Explode // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c97c0
	void NetMulticast_DestroySentryMeshComponent(); // Function ConZ.Dropship.NetMulticast_DestroySentryMeshComponent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c97a0
	void NetMulticast_CancelRailgunEffects(); // Function ConZ.Dropship.NetMulticast_CancelRailgunEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9780
	void NetMulticast_AddKnownTarget(struct AActor* Target); // Function ConZ.Dropship.NetMulticast_AddKnownTarget // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c96f0
};

// Class ConZ.DropshipAIControllerEncounterSaveState
// Size: 0x88 (Inherited: 0x80)
struct UDropshipAIControllerEncounterSaveState : UConZAIControllerEncounterSaveState {
	enum class EDropshipState DropshipState; // 0x80(0x01)
	bool ShouldIgnoreStimuliDuringSearch; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
};

// Class ConZ.DropshipAIController
// Size: 0x7a8 (Inherited: 0x450)
struct ADropshipAIController : AConZAIController {
	char pad_450[0xc]; // 0x450(0x0c)
	float _turningSpeedPerDropshipStance[0xa]; // 0x45c(0x28)
	float _minimumFlyingNavigationProximityPerDropshipStance[0xa]; // 0x484(0x28)
	float _minDetectableHearingStimulusStrength; // 0x4ac(0x04)
	float _threatLevelIncreasePerSecondSight; // 0x4b0(0x04)
	float _threatLevelIncreasePerSecondHearing; // 0x4b4(0x04)
	float _onDamageTakenGenerateSightStimulusChance; // 0x4b8(0x04)
	float _threatLevelIncreasePerDamageValue; // 0x4bc(0x04)
	struct UAISenseConfig_Sight* _currentSightSenseConfig; // 0x4c0(0x08)
	struct UAISenseConfig_Hearing* _currentHearingSenseConfig; // 0x4c8(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigDefault; // 0x4d0(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigDefault; // 0x4d8(0x08)
	struct UAISenseConfig_Sight* _sightSearchingGuardCargoSenseConfigDefault; // 0x4e0(0x08)
	struct UAISenseConfig_Hearing* _hearingSearchingGuardCargoSenseConfigDefault; // 0x4e8(0x08)
	char pad_4F0[0x18]; // 0x4f0(0x18)
	float _approachLocationHeight; // 0x508(0x04)
	float _approachLocationXYDistance; // 0x50c(0x04)
	float _approachMovementSegmentMaxSize; // 0x510(0x04)
	char pad_514[0x1c]; // 0x514(0x1c)
	float _externalMoveToMovementSegmentMaxSize; // 0x530(0x04)
	char pad_534[0x40]; // 0x534(0x40)
	struct FFloatInterval _attackingFollowDistance2DInterval; // 0x574(0x08)
	struct FFloatInterval _attackingFollowMoveToDistance2DInterval; // 0x57c(0x08)
	float _attackingFloatHeight; // 0x584(0x04)
	float _attackingAboveBBElementsExtraHeight; // 0x588(0x04)
	char pad_58C[0x4]; // 0x58c(0x04)
	struct UCurveFloat* _foeLocationPredictionStrengthVsDistanceToFoe; // 0x590(0x08)
	float _outOfSightTimeToStartRelocating; // 0x598(0x04)
	struct FFloatInterval _relocateMoveToDistance; // 0x59c(0x08)
	struct FFloatInterval _combatRelocationCheckInterval; // 0x5a4(0x08)
	float _combatRelocationChance; // 0x5ac(0x04)
	float _attackFrequency; // 0x5b0(0x04)
	struct FFloatInterval _attackFrequencyMultiplier; // 0x5b4(0x08)
	float _searchingAttackTargetControllerRotationVelocityThreshold; // 0x5bc(0x04)
	float _attackModeWeights[0x3]; // 0x5c0(0x0c)
	struct FFloatInterval _attackModeChanceCheckTime; // 0x5cc(0x08)
	float _railgunAttackMinDistanceXY; // 0x5d4(0x04)
	struct FFloatInterval _railgunAimTime; // 0x5d8(0x08)
	float _tearGasDistanceBetweenDrops; // 0x5e0(0x04)
	int32_t _tearGasMaxDrops; // 0x5e4(0x04)
	float _distanceFromTargetInFlyingVehicleToForceKeepStimulus; // 0x5e8(0x04)
	float _vehicleCombatAdaptMaxSpeedDistance; // 0x5ec(0x04)
	float _vehicleCombatCatchUpSpeed; // 0x5f0(0x04)
	float _vehicleCombatMinSpeed; // 0x5f4(0x04)
	char pad_5F8[0x40]; // 0x5f8(0x40)
	struct FFloatInterval _attackedBaseElementDistanceInterval; // 0x638(0x08)
	struct FFloatInterval _attackedBaseElementMoveToDistance2DInterval; // 0x640(0x08)
	float _lineOfSightTimeWhileAttackingBBToSwitchToPlayer; // 0x648(0x04)
	float _attackingBBFrequency; // 0x64c(0x04)
	struct UCurveFloat* _chanceToHitBBElementVsElementBoundsSizeSquared; // 0x650(0x08)
	float _bbDamagePerShot; // 0x658(0x04)
	float _bbFoliageDestructionRadius; // 0x65c(0x04)
	float _sentryDropDistanceFromBaseBounds; // 0x660(0x04)
	float _sentryDropHeightAddition; // 0x664(0x04)
	float _sentryDeploymentBaseSightCheckZOffset; // 0x668(0x04)
	char pad_66C[0x30]; // 0x66c(0x30)
	struct FFloatInterval _timeUntilNextSearchLocationInterval; // 0x69c(0x08)
	struct FFloatInterval _searchLocationDistanceFromReferenceLocationInterval; // 0x6a4(0x08)
	struct FFloatInterval _timeUntilNextControlRotationChangeInterval; // 0x6ac(0x08)
	struct FFloatInterval _timeInSearchingStateBeforeLeaving; // 0x6b4(0x08)
	float _pauseBetweenOnDamageTakenStimulusGeneration; // 0x6bc(0x04)
	char pad_6C0[0x4]; // 0x6c0(0x04)
	struct FFloatInterval _leaveInitialForwardOffset; // 0x6c4(0x08)
	struct FFloatInterval _leaveForwardOffset; // 0x6cc(0x08)
	struct FFloatInterval _leaveInitialUpwardOffset; // 0x6d4(0x08)
	struct FFloatInterval _leaveUpwardOffset; // 0x6dc(0x08)
	char pad_6E4[0x3c]; // 0x6e4(0x3c)
	float _minDistanceBetweenSingleBBFlag; // 0x720(0x04)
	int32_t _foliageDestroyedPerShot; // 0x724(0x04)
	struct FFloatInterval _delayedLeaveTimeAfterDeploymentInterval; // 0x728(0x08)
	char pad_730[0x4]; // 0x730(0x04)
	float _sentryDropshipDistanceSquaredToChangeStance; // 0x734(0x04)
	char pad_738[0x10]; // 0x738(0x10)
	struct FFloatInterval _flybyDistance; // 0x748(0x08)
	float _flyByMoveToMovementSegmentMaxSize; // 0x750(0x04)
	float _flyByTearGaseDistanceBetweenDrops; // 0x754(0x04)
	float _flyByFlyHeight; // 0x758(0x04)
	float _flyByMaxGrenadeDrops; // 0x75c(0x04)
	char pad_760[0x48]; // 0x760(0x48)
};

// Class ConZ.DropshipAnimInstance
// Size: 0x310 (Inherited: 0x2c0)
struct UDropshipAnimInstance : UAnimInstance {
	int32_t _minigunBonesNum; // 0x2c0(0x04)
	float _minigunRotationSpeed; // 0x2c4(0x04)
	float _minigunRotationAcceleration; // 0x2c8(0x04)
	float _minigunRotationDeceleration; // 0x2cc(0x04)
	char pad_2D0[0x4]; // 0x2d0(0x04)
	float _droppableSentryFinalAngle; // 0x2d4(0x04)
	bool _isBraking; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct TArray<float> _minigunRotationAngles; // 0x2e0(0x10)
	struct FRotator _aimRotationLeft; // 0x2f0(0x0c)
	struct FRotator _aimRotationRight; // 0x2fc(0x0c)
	float _droppableSentryLeverAngle; // 0x308(0x04)
	enum class EDropshipStance _dropshipStance; // 0x30c(0x01)
	char pad_30D[0x3]; // 0x30d(0x03)

	void AnimNotify_DropshipRailgunStartCharging(); // Function ConZ.DropshipAnimInstance.AnimNotify_DropshipRailgunStartCharging // (Native|Event|Public|BlueprintEvent) // @ game+0x23c94f0
	void AnimNotify_DropshipRailgunFired(); // Function ConZ.DropshipAnimInstance.AnimNotify_DropshipRailgunFired // (Native|Event|Public|BlueprintEvent) // @ game+0x23c94d0
};

// Class ConZ.DropshipDroppableSentryAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UDropshipDroppableSentryAnimInstance : UAnimInstance {
	float _sentryUnfoldTimePassed; // 0x2c0(0x04)
	char pad_2C4[0xc]; // 0x2c4(0x0c)
};

// Class ConZ.DropshipMovementComponent
// Size: 0xde0 (Inherited: 0xda0)
struct UDropshipMovementComponent : UConZCharacterMovementComponent {
	char pad_DA0[0x8]; // 0xda0(0x08)
	float _movementForwardAccelerationMaxAngle; // 0xda8(0x04)
	float _movementStrafeAccelerationMaxAngle; // 0xdac(0x04)
	char pad_DB0[0xc]; // 0xdb0(0x0c)
	float _movementAngleRotationFactor; // 0xdbc(0x04)
	float _maxLeanSpeed; // 0xdc0(0x04)
	float _maxLeanAngularSpeed; // 0xdc4(0x04)
	float _maxInPlaceLeanSpeed; // 0xdc8(0x04)
	char pad_DCC[0xc]; // 0xdcc(0x0c)
	float _maxAccelerationMultiplierForOppositeVelocityDirection; // 0xdd8(0x04)
	float _oppositeDirectionHalfAngle; // 0xddc(0x04)
};

// Class ConZ.DropZoneDroppable
// Size: 0x280 (Inherited: 0x220)
struct ADropZoneDroppable : AActor {
	struct UStaticMeshComponent* Mesh; // 0x220(0x08)
	struct UAkAudioEvent* LandSound; // 0x228(0x08)
	struct ADropZoneGameEvent* _gameEvent; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UParticleSystemComponent* _flareParticles0; // 0x240(0x08)
	struct UParticleSystemComponent* _flareParticles1; // 0x248(0x08)
	struct UParticleSystemComponent* _flareParticles2; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
	struct FVector _endLocation; // 0x260(0x0c)
	float _fallingSpeed; // 0x26c(0x04)
	bool _flareParticlesEnabled; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	int32_t _flareParticlesTeam; // 0x274(0x04)
	char pad_278[0x8]; // 0x278(0x08)

	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneDroppable.SetGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23cdcc0
	void OnRep_FlareParticlesTeam(); // Function ConZ.DropZoneDroppable.OnRep_FlareParticlesTeam // (Final|Native|Private) // @ game+0x23cd9b0
	void OnRep_FlareParticlesEnabled(); // Function ConZ.DropZoneDroppable.OnRep_FlareParticlesEnabled // (Final|Native|Private) // @ game+0x23cd9b0
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneDroppable.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd680
};

// Class ConZ.DropZoneCargo
// Size: 0x290 (Inherited: 0x280)
struct ADropZoneCargo : ADropZoneDroppable {
	char pad_280[0x8]; // 0x280(0x08)
	struct UChildActorComponent* Slot; // 0x288(0x08)
};

// Class ConZ.DropZoneCrate
// Size: 0x290 (Inherited: 0x280)
struct ADropZoneCrate : ADropZoneDroppable {
	struct ADropZoneKey* KeyClass; // 0x280(0x08)
	bool _hasKey; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)

	void OnRep_HasKey(); // Function ConZ.DropZoneCrate.OnRep_HasKey // (Native|Protected) // @ game+0x23cd9d0
};

// Class ConZ.DropZoneEquipmentTable
// Size: 0x238 (Inherited: 0x220)
struct ADropZoneEquipmentTable : AActor {
	struct TArray<struct AItem*> _trackedItems; // 0x220(0x10)
	char pad_230[0x8]; // 0x230(0x08)

	void UntrackItem(struct AItem* Item); // Function ConZ.DropZoneEquipmentTable.UntrackItem // (Final|Native|Public|BlueprintCallable) // @ game+0x23ce130
	void TrackItem(struct AItem* Item); // Function ConZ.DropZoneEquipmentTable.TrackItem // (Final|Native|Public|BlueprintCallable) // @ game+0x23ce0a0
	void PerformItemCleanup(); // Function ConZ.DropZoneEquipmentTable.PerformItemCleanup // (Final|Native|Public) // @ game+0x23cdaa0
	void OnTrackedItemDestroyed(struct AActor* Actor); // Function ConZ.DropZoneEquipmentTable.OnTrackedItemDestroyed // (Final|Native|Public) // @ game+0x23cda10
	void BeginCleaningItems(); // Function ConZ.DropZoneEquipmentTable.BeginCleaningItems // (Final|Native|Public|BlueprintCallable) // @ game+0x23cd520
};

// Class ConZ.DropZoneParticipantStats
// Size: 0x50 (Inherited: 0x48)
struct UDropZoneParticipantStats : UGameEventParticipantStats {
	int32_t Activations; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.DropZoneGameEvent
// Size: 0x6e0 (Inherited: 0x588)
struct ADropZoneGameEvent : AGameEventBase {
	struct ADropZoneEquipmentTable* TableAClass; // 0x588(0x08)
	struct ADropZoneEquipmentTable* TableBClass; // 0x590(0x08)
	struct ADropZoneCrate* CrateClass; // 0x598(0x08)
	struct ADropZoneCargo* CargoClass; // 0x5a0(0x08)
	struct UAkAudioEvent* IntroAnnouncement; // 0x5a8(0x08)
	struct UAkAudioEvent* LocateTheKeyAnnouncement; // 0x5b0(0x08)
	struct UAkAudioEvent* BlueTeamFoundKeyAnnouncement; // 0x5b8(0x08)
	struct UAkAudioEvent* BlueTeamUnlockedAnnouncement; // 0x5c0(0x08)
	struct UAkAudioEvent* BlueTeamStolenAnnouncement; // 0x5c8(0x08)
	struct UAkAudioEvent* RedTeamFoundKeyAnnouncement; // 0x5d0(0x08)
	struct UAkAudioEvent* RedTeamUnlockedAnnouncement; // 0x5d8(0x08)
	struct UAkAudioEvent* RedTeamStolenAnnouncement; // 0x5e0(0x08)
	struct UAkAudioEvent* CargoDropAnnouncement; // 0x5e8(0x08)
	struct UAkAudioEvent* CargoLandedAnnouncement; // 0x5f0(0x08)
	struct UTexture2D* KeyIcon; // 0x5f8(0x08)
	struct UTexture2D* CargoIcon; // 0x600(0x08)
	struct FLinearColor FriendlyColor; // 0x608(0x10)
	struct FLinearColor EnemyColor; // 0x618(0x10)
	struct FDropZoneParameters _dropZoneParameters; // 0x628(0x2c)
	char pad_654[0xc]; // 0x654(0x0c)
	enum class EDropZoneGameEventPhase _phase; // 0x660(0x01)
	char pad_661[0x3]; // 0x661(0x03)
	int32_t _capturingTeam; // 0x664(0x04)
	float _phaseTimeLeft; // 0x668(0x04)
	float _captureProgress; // 0x66c(0x04)
	char pad_670[0x8]; // 0x670(0x08)
	struct AGameEventBorder* _barrierA; // 0x678(0x08)
	struct AGameEventBorder* _barrierB; // 0x680(0x08)
	struct ADropZoneEquipmentTable* _tableA; // 0x688(0x08)
	struct ADropZoneEquipmentTable* _tableB; // 0x690(0x08)
	struct ADropZoneCrate* _crateA; // 0x698(0x08)
	struct ADropZoneCrate* _crateB; // 0x6a0(0x08)
	struct ADropZoneKey* _key; // 0x6a8(0x08)
	struct APrisoner* _keyCarrier; // 0x6b0(0x08)
	struct AActor* _topmostKeyOwner; // 0x6b8(0x08)
	struct ADropZoneCargo* _cargo; // 0x6c0(0x08)
	struct ADropZoneSlot* _slot; // 0x6c8(0x08)
	char pad_6D0[0x10]; // 0x6d0(0x10)

	void SetDropZoneParameters(struct FDropZoneParameters& Params); // Function ConZ.DropZoneGameEvent.SetDropZoneParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23cdc20
	void OnRep_CapturingTeam(); // Function ConZ.DropZoneGameEvent.OnRep_CapturingTeam // (Final|Native|Private) // @ game+0x23cd990
	struct ADropZoneSlot* GetSlot(); // Function ConZ.DropZoneGameEvent.GetSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd800
	float GetPhaseTimeLeft(); // Function ConZ.DropZoneGameEvent.GetPhaseTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd7d0
	enum class EDropZoneGameEventPhase GetPhase(); // Function ConZ.DropZoneGameEvent.GetPhase // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd7a0
	struct APrisoner* GetKeyCarrier(); // Function ConZ.DropZoneGameEvent.GetKeyCarrier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd740
	struct ADropZoneKey* GetKey(); // Function ConZ.DropZoneGameEvent.GetKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd710
	struct FDropZoneParameters GetDropZoneParameters(); // Function ConZ.DropZoneGameEvent.GetDropZoneParameters // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd630
	struct ADropZoneCrate* GetCrateB(); // Function ConZ.DropZoneGameEvent.GetCrateB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd600
	struct ADropZoneCrate* GetCrateA(); // Function ConZ.DropZoneGameEvent.GetCrateA // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd5d0
	struct ADropZoneCargo* GetCargo(); // Function ConZ.DropZoneGameEvent.GetCargo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd5a0
	int32_t GetCapturingTeam(); // Function ConZ.DropZoneGameEvent.GetCapturingTeam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd570
	float GetCaptureProgress(); // Function ConZ.DropZoneGameEvent.GetCaptureProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd540
};

// Class ConZ.DropZoneKey
// Size: 0x9c0 (Inherited: 0x9b0)
struct ADropZoneKey : AItem {
	struct USphereComponent* SphereComponent; // 0x9a8(0x08)
	struct ADropZoneGameEvent* _gameEvent; // 0x9b0(0x08)

	void SphereOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.DropZoneKey.SphereOverlap // (Final|Native|Private|HasOutParms) // @ game+0x23cde70
	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneKey.SetGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23cdd50
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneKey.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd6b0
};

// Class ConZ.DropZoneLocationMarker
// Size: 0x520 (Inherited: 0x418)
struct ADropZoneLocationMarker : AGameEventLocationMarker {
	struct FDropZoneParameters DropZoneParameters; // 0x418(0x2c)
	struct FVector SpawnOffsetA; // 0x444(0x0c)
	struct FVector SpawnOffsetB; // 0x450(0x0c)
	float SpawnRadiusA; // 0x45c(0x04)
	float SpawnRadiusB; // 0x460(0x04)
	char pad_464[0xc]; // 0x464(0x0c)
	struct FTransform CargoDropOffset; // 0x470(0x30)
	struct FTransform CrateDropOffsetA; // 0x4a0(0x30)
	struct FTransform CrateDropOffsetB; // 0x4d0(0x30)
	struct UStaticMeshComponent* CrateAPreviewMesh; // 0x500(0x08)
	struct UStaticMeshComponent* CrateBPreviewMesh; // 0x508(0x08)
	struct UStaticMeshComponent* CargoPreviewMesh; // 0x510(0x08)
	char pad_518[0x8]; // 0x518(0x08)
};

// Class ConZ.DropZoneSlot
// Size: 0x250 (Inherited: 0x220)
struct ADropZoneSlot : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	float ActivationDuration; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct UStaticMesh* UnlockedMesh; // 0x238(0x08)
	struct UAkAudioEvent* ActivateSound; // 0x240(0x08)
	struct ADropZoneGameEvent* _gameEvent; // 0x248(0x08)

	void SetGameEvent(struct ADropZoneGameEvent* gameEvent); // Function ConZ.DropZoneSlot.SetGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23cdde0
	void Server_Activate(struct APrisoner* Prisoner); // Function ConZ.DropZoneSlot.Server_Activate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x23cdb90
	float GetOpeningDuration(); // Function ConZ.DropZoneSlot.GetOpeningDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd770
	struct ADropZoneGameEvent* GetGameEvent(); // Function ConZ.DropZoneSlot.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23cd6e0
};

// Class ConZ.DualArcedProgressBar
// Size: 0x2b8 (Inherited: 0x268)
struct UDualArcedProgressBar : UUserWidget {
	struct UImage* _frontFillImage; // 0x268(0x08)
	struct UImage* _backFillImage; // 0x270(0x08)
	struct UMaterialInstanceConstant* _frontFillMaterial; // 0x278(0x08)
	struct UMaterialInstanceConstant* _backFillMaterial; // 0x280(0x08)
	struct FLinearColor _frontFillColor; // 0x288(0x10)
	struct FLinearColor _backFillColor; // 0x298(0x10)
	char pad_2A8[0x10]; // 0x2a8(0x10)
};

// Class ConZ.DummyCollisionCapsule
// Size: 0x480 (Inherited: 0x480)
struct UDummyCollisionCapsule : UCapsuleComponent {
	struct FGameplayTag _attachment; // 0x478(0x08)
};

// Class ConZ.DynamicNavModifierVolumeActor
// Size: 0x228 (Inherited: 0x220)
struct ADynamicNavModifierVolumeActor : AActor {
	struct UBoxComponent* _volumeBoxComponent; // 0x220(0x08)
};

// Class ConZ.EconomyManagerRequest
// Size: 0xd8 (Inherited: 0x28)
struct UEconomyManagerRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0xb0]; // 0x28(0xb0)
};

// Class ConZ.EconomyManagerResponse
// Size: 0x30 (Inherited: 0x28)
struct UEconomyManagerResponse : UPlayerRpcChannelServerResponse {
	struct UEconomyManagerResponseData* _payload; // 0x28(0x08)
};

// Class ConZ.EconomySpecificData
// Size: 0x388 (Inherited: 0x30)
struct UEconomySpecificData : UDataAsset {
	struct TSoftClassPtr<UObject> CashItemClass; // 0x30(0x28)
	int32_t CashStackMaxValue; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct TSoftClassPtr<UObject> DepotItemClass; // 0x60(0x28)
	struct TSoftClassPtr<UObject> VehicleLockItemClass; // 0x88(0x28)
	float BasePriceModifierPerTradeCategory[0x1c]; // 0xb0(0x70)
	float BaseSalePriceReductionModifierPerTradeCategory[0x1c]; // 0x120(0x70)
	struct FCurrencyDescription CurrencyDescriptions[0x3]; // 0x190(0x138)
	struct TMap<enum class EBankCardType, struct FBankCardTypeData> CardDataPerBankCardType; // 0x2c8(0x50)
	float ATMProvisionPercentage; // 0x318(0x04)
	float BankerProvisionPercentage; // 0x31c(0x04)
	struct TMap<struct FGameplayTag, float> RotationRarityVsAvailabilityChance; // 0x320(0x50)
	float OutpostProsperityVsAvailabilityChanceIncrease[0x6]; // 0x370(0x18)
};

// Class ConZ.EconomyStatics
// Size: 0x28 (Inherited: 0x28)
struct UEconomyStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.EffectOverTimeDealer
// Size: 0x2a8 (Inherited: 0x220)
struct AEffectOverTimeDealer : AActor {
	double _budget; // 0x220(0x08)
	float _timeDilation; // 0x228(0x04)
	char pad_22C[0x7c]; // 0x22c(0x7c)
};

// Class ConZ.ElectricDoorAssetData
// Size: 0x28 (Inherited: 0x28)
struct UElectricDoorAssetData : UAssetUserData {
};

// Class ConZ.ElectricianGlovesTag
// Size: 0x38 (Inherited: 0x30)
struct UElectricianGlovesTag : UBaseItemTag {
	float PrisonerDamageModifier; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.ElectricityGeneratorItem
// Size: 0x9f0 (Inherited: 0x9b0)
struct AElectricityGeneratorItem : AItem {
	char pad_9B0[0x8]; // 0x9b0(0x08)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x9b8(0x08)
	struct URangedResourceProviderComponentContinousAmount* _rangedResourceProviderComponent; // 0x9c0(0x08)
	struct UAkAudioEvent* _turnOnAudioEvent; // 0x9c8(0x08)
	struct UAkAudioEvent* _turnOffAudioEvent; // 0x9d0(0x08)
	bool _isTurnedOn; // 0x9d8(0x01)
	char pad_9D9[0x3]; // 0x9d9(0x03)
	float _power; // 0x9dc(0x04)
	float _load; // 0x9e0(0x04)
	float _EMInterferenceDisabledTime; // 0x9e4(0x04)
	char pad_9E8[0x8]; // 0x9e8(0x08)

	void RangedResourceProvider_ResourceAmountChanged(struct URangedResourceProviderComponent* Component, float Value); // Function ConZ.ElectricityGeneratorItem.RangedResourceProvider_ResourceAmountChanged // (Final|Native|Private) // @ game+0x23cdac0
	void RangedResourceProvider_AvailableResourceAmountChanged(struct URangedResourceProviderComponent* Component, float Value); // Function ConZ.ElectricityGeneratorItem.RangedResourceProvider_AvailableResourceAmountChanged // (Final|Native|Private) // @ game+0x23cdac0
	void OnRep_IsTurnedOn(); // Function ConZ.ElectricityGeneratorItem.OnRep_IsTurnedOn // (Final|Native|Private) // @ game+0x23cd9f0
	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.ElectricityGeneratorItem.OnComponentDeactivated // (Final|Native|Private) // @ game+0x23cd900
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.ElectricityGeneratorItem.OnComponentActivated // (Final|Native|Private) // @ game+0x23cd830
};

// Class ConZ.EmblemData
// Size: 0x60 (Inherited: 0x30)
struct UEmblemData : UDataAsset {
	struct TArray<struct UTexture2D*> BackgroundTextures; // 0x30(0x10)
	struct TArray<struct UTexture2D*> SymbolTextures; // 0x40(0x10)
	struct TArray<struct FLinearColor> ColorPalette; // 0x50(0x10)
};

// Class ConZ.GrenadeItem
// Size: 0xa70 (Inherited: 0x9b0)
struct AGrenadeItem : AItem {
	float _explosionDamage; // 0x9a8(0x04)
	float _explosionOuterRadius; // 0x9ac(0x04)
	float _explosionInnerRadius; // 0x9b0(0x04)
	float _explosionFalloff; // 0x9b4(0x04)
	float _explosionDelay; // 0x9b8(0x04)
	float _explosionForce; // 0x9bc(0x04)
	struct FTargetTypeDamageMultiplier _explosionTargetTypeMultiplier; // 0x9c0(0x10)
	float _explosionImpulse_OBSOLETE; // 0x9d0(0x04)
	char pad_9DC[0x4]; // 0x9dc(0x04)
	struct UParticleSystem* _explosionParticle; // 0x9e0(0x08)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x9e8(0x08)
	float _hearingDamageRadius; // 0x9f0(0x04)
	char pad_9F4[0x4]; // 0x9f4(0x04)
	struct UAkAudioEvent* ExplosionAudioEvent; // 0x9f8(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0xa00(0x08)
	struct UAkAudioEvent* _pullPinAudioEvent; // 0xa08(0x08)
	struct USkeletalMeshComponent* _skeletalMesh; // 0xa10(0x08)
	struct UAnimMontage* _grenadeLongThrowMontage; // 0xa18(0x08)
	struct UAnimMontage* _grenadeLongThrowLoopMontage; // 0xa20(0x08)
	struct UAnimMontage* _grenadeShortThrowMontage; // 0xa28(0x08)
	struct UAnimMontage* _grenadeThrowbackMontage; // 0xa30(0x08)
	struct FName _leverReleasedSocketName; // 0xa38(0x08)
	struct UParticleSystem* _leverReleasedPS; // 0xa40(0x08)
	float _netCullDistanceSquaredMeters; // 0xa48(0x04)
	bool _pinPulled; // 0xa4c(0x01)
	char pad_A4D[0x3]; // 0xa4d(0x03)
	float _pinPullingDurationOnTheGround; // 0xa50(0x04)
	char pad_A54[0x4]; // 0xa54(0x04)
	struct UTakeInHandsAssetData* _takeInHandsWhenPinIsPulledAssetData; // 0xa58(0x08)
	char pad_A60[0x10]; // 0xa60(0x10)

	void Multicast_PlayPinPulledAudio(); // Function ConZ.GrenadeItem.Multicast_PlayPinPulledAudio // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x237a360
	void Multicast_PlayEffects(struct FVector zeroBasedLocation, struct FRotator Rotation); // Function ConZ.GrenadeItem.Multicast_PlayEffects // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x23f5400
	struct UAnimMontage* GetArmingMontage(enum class EThrowingType throwingType); // Function ConZ.GrenadeItem.GetArmingMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x23f5370
};

// Class ConZ.EMPGrenadeItem
// Size: 0xab0 (Inherited: 0xa70)
struct AEMPGrenadeItem : AGrenadeItem {
	float _radius; // 0xa70(0x04)
	float _expansionSpeed; // 0xa74(0x04)
	struct UNiagaraSystem* _empEffect; // 0xa78(0x08)
	struct UNiagaraSystem* _electricArcsEffect; // 0xa80(0x08)
	struct FName _onPinPulledMaterialParamName; // 0xa88(0x08)
	struct FFloatInterval _onPinPulledMaterialParamValue; // 0xa90(0x08)
	struct UAkAudioEvent* _electricArcAudioEvent; // 0xa98(0x08)
	float _arcAudioPlayDistance; // 0xaa0(0x04)
	char pad_AA4[0xc]; // 0xaa4(0x0c)
};

// Class ConZ.EmptySlot
// Size: 0x270 (Inherited: 0x268)
struct UEmptySlot : UUserWidget {
	struct UImage* MainImage; // 0x268(0x08)
};

// Class ConZ.VirtualizedEncounterData
// Size: 0x90 (Inherited: 0x28)
struct UVirtualizedEncounterData : UObject {
	struct TSoftClassPtr<UObject> EncounterBaseClass; // 0x28(0x28)
	struct FVector EncounterLocation; // 0x50(0x0c)
	bool HadZoneIndex; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	int32_t SubZoneIndex; // 0x60(0x04)
	float Radius; // 0x64(0x04)
	int32_t CurrentInnerRadiusStep; // 0x68(0x04)
	float InnerRadiusReferenceDistance; // 0x6c(0x04)
	float InnerRadius; // 0x70(0x04)
	float FixedDurationTimeElapsed; // 0x74(0x04)
	bool WasShutdown; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FDbIntegerId ParentID; // 0x80(0x08)
	struct FDbIntegerId ChildId; // 0x88(0x08)
};

// Class ConZ.VirtualizedEncounterData_BB
// Size: 0xe8 (Inherited: 0x90)
struct UVirtualizedEncounterData_BB : UVirtualizedEncounterData {
	struct FDbIntegerId BaseId; // 0x90(0x08)
	struct TSet<struct FDbIntegerId> FlagIds; // 0x98(0x50)
};

// Class ConZ.EncounterBBBase
// Size: 0x290 (Inherited: 0x210)
struct UEncounterBBBase : UEncounterBase {
	char pad_210[0x58]; // 0x210(0x58)
	float _encounterExtraRadiusDistance; // 0x268(0x04)
	float _encounterExtraRadiusMultiplier; // 0x26c(0x04)
	struct UNavArea* _blockingVolumeClass; // 0x270(0x08)
	struct AActor* _navigationInvokerClass; // 0x278(0x08)
	char pad_280[0x10]; // 0x280(0x10)
};

// Class ConZ.VirtualizedEncounterData_BBFlyingAttacker
// Size: 0x170 (Inherited: 0xe8)
struct UVirtualizedEncounterData_BBFlyingAttacker : UVirtualizedEncounterData_BB {
	struct TSoftClassPtr<UObject> CharacterClass; // 0xe8(0x28)
	struct FTransform CharacterTransform; // 0x110(0x30)
	struct FVector MoveToLocationAfterSpawn; // 0x140(0x0c)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct TArray<char> LoadData; // 0x150(0x10)
	struct TArray<struct FVirtualizedEncounterBBForeignCharacterData> ForeignCharacterData; // 0x160(0x10)
};

// Class ConZ.EncounterBBSpawnFlyingAttacker
// Size: 0x400 (Inherited: 0x290)
struct UEncounterBBSpawnFlyingAttacker : UEncounterBBBase {
	struct TMap<struct TSoftClassPtr<UObject>, float> _possibleCharacters; // 0x290(0x50)
	struct FGameplayTag _presetType; // 0x2e0(0x08)
	float _moveToLocationHeight; // 0x2e8(0x04)
	float _spawnDistanceXY; // 0x2ec(0x04)
	float _spawnDistanceZ; // 0x2f0(0x04)
	float _lifeSpanAfterDeath; // 0x2f4(0x04)
	bool _shouldUseExternalMoveToLocation; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	float _spawnPreciseLocationRaycastUpOffset; // 0x2fc(0x04)
	float _spawnPreciseLocationRaycastDownOffset; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
	struct TMap<enum class EEncounterPostExternalMoveAction, float> _postExternalMoveToActionsMap; // 0x308(0x50)
	float _flyingCharacterDespawnDistance; // 0x358(0x04)
	float _minOwningForeignCharacterRemovalDistance; // 0x35c(0x04)
	float _minOwningForeignCharacterRemovalSightDistance; // 0x360(0x04)
	float _baseElementsDestroyedPerSecondOfVirtualization; // 0x364(0x04)
	char pad_368[0x98]; // 0x368(0x98)

	void OnCharacterKilled(struct AConZCharacter* ConZCharacter); // Function ConZ.EncounterBBSpawnFlyingAttacker.OnCharacterKilled // (Final|Native|Private) // @ game+0x23d1280
	void OnCharacterAboutToBeDestroyed(struct AConZCharacter* ConZCharacter); // Function ConZ.EncounterBBSpawnFlyingAttacker.OnCharacterAboutToBeDestroyed // (Final|Native|Private) // @ game+0x23d11f0
};

// Class ConZ.EncounterSpawnCharacters
// Size: 0x460 (Inherited: 0x210)
struct UEncounterSpawnCharacters : UEncounterBase {
	float _minRemovalSightDistance; // 0x210(0x04)
	float _minRemovalDistance; // 0x214(0x04)
	struct FFloatInterval _characterSpawnRangeOverride; // 0x218(0x08)
	struct FFloatInterval _characterFallbackSpawnRangeOverride; // 0x220(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, int32_t> _limitedCharacters; // 0x228(0x50)
	bool _ignoreGlobalCharacterLimit; // 0x278(0x01)
	bool _ignoreCharactersOutsideOfZoneOrUnownedWhenCounting; // 0x279(0x01)
	bool _useOnlyOwnPossibleCharacters; // 0x27a(0x01)
	char _allowedSpawnPoints; // 0x27b(0x01)
	char _allowedGroupSpawnPoints; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct TArray<struct FEncounterSpawnPointTypeArrayData> _spawnPointTypesAdditionalData; // 0x280(0x10)
	struct TMap<struct UEncounterCharacterSpawnPreset*, float> _possibleCharacters; // 0x290(0x50)
	struct UCurveFloat* _characterBaseAmountCurve; // 0x2e0(0x08)
	struct FInt32Interval _characterBaseAmountRange; // 0x2e8(0x08)
	bool _isGroupSpawn; // 0x2f0(0x01)
	char pad_2F1[0x3]; // 0x2f1(0x03)
	int32_t _characterExtraAmountPerPlayer; // 0x2f4(0x04)
	int32_t _characterAmountPlayerCap; // 0x2f8(0x04)
	float _singleGroupPointFallbackGenerationRadius; // 0x2fc(0x04)
	bool _canKilledCharactersRespawn; // 0x300(0x01)
	bool _destroyEncounterAfterAllCharactersAreKilled; // 0x301(0x01)
	char pad_302[0x2]; // 0x302(0x02)
	struct FFloatInterval _characterRespawnTimeRange; // 0x304(0x08)
	struct FInt32Interval _characterRespawnBatchSize; // 0x30c(0x08)
	float _minDistanceBetweenCharacters; // 0x314(0x04)
	float _minDistanceBetweenGroupedCharacters; // 0x318(0x04)
	bool _checkAllowedSurfaces; // 0x31c(0x01)
	bool _allowFallbackSpawns; // 0x31d(0x01)
	bool _useComplexFallbackSpawns; // 0x31e(0x01)
	char pad_31F[0x1]; // 0x31f(0x01)
	float _deadCharacterRemovalTimeMinutes; // 0x320(0x04)
	int32_t _maxDeadCharacters; // 0x324(0x04)
	float _aggressiveSpawnChance; // 0x328(0x04)
	float _aggressiveSpawnChanceForRespawnedCharacters; // 0x32c(0x04)
	struct TMap<enum class EEncounterPostExternalMoveAction, float> _postExternalMoveToActionsMap; // 0x330(0x50)
	float _aiNoiseResponseRadius; // 0x380(0x04)
	float _periodicSpawnedCharacterAggravationCheckNoiseThreshold; // 0x384(0x04)
	float _periodicSpawnedCharacterAggravationCheckTime; // 0x388(0x04)
	float _periodicSpawnedCharacterAggravationChance; // 0x38c(0x04)
	float _periodicSpawnedCharacterAggravationChancePerCharacter; // 0x390(0x04)
	bool _canEverRemoveLowPriorityCharacters; // 0x394(0x01)
	char pad_395[0x3]; // 0x395(0x03)
	float _initialAreLowPriorityCharatersKilledTime; // 0x398(0x04)
	float _resetAreLowPriorityCharatersKilledTime; // 0x39c(0x04)
	bool _allowDifferentSubZoneSpawn; // 0x3a0(0x01)
	char pad_3A1[0x3]; // 0x3a1(0x03)
	float _spawnPreciseLocationRaycastUpOffset; // 0x3a4(0x04)
	float _spawnPreciseLocationRaycastDownOffset; // 0x3a8(0x04)
	float _raycastSpawnCheckHeight; // 0x3ac(0x04)
	bool _canRelocateEncounterOnVirtualization; // 0x3b0(0x01)
	char pad_3B1[0xaf]; // 0x3b1(0xaf)

	void OnCharacterKilled(struct AConZCharacter* ConZCharacter); // Function ConZ.EncounterSpawnCharacters.OnCharacterKilled // (Native|Protected) // @ game+0x23d3b20
	void OnCharacterAboutToBeDestroyed(struct AConZCharacter* ConZCharacter); // Function ConZ.EncounterSpawnCharacters.OnCharacterAboutToBeDestroyed // (Native|Protected) // @ game+0x23d3a90
};

// Class ConZ.EncounterCargoDropEvent
// Size: 0x478 (Inherited: 0x460)
struct UEncounterCargoDropEvent : UEncounterSpawnCharacters {
	struct FFloatInterval _cargoDropEventCharacterSpawnDistanceInterval; // 0x460(0x08)
	float _playerDistanceCharacterSpawn; // 0x468(0x04)
	char pad_46C[0x4]; // 0x46c(0x04)
	struct FGameplayTag _serverSettingsCargoEventTag; // 0x470(0x08)
};

// Class ConZ.EncounterCargoDropEventFlyingGuardian
// Size: 0x490 (Inherited: 0x478)
struct UEncounterCargoDropEventFlyingGuardian : UEncounterCargoDropEvent {
	struct FFloatInterval _spawnHeightInterval; // 0x478(0x08)
	struct FFloatInterval _approachHeightInterval; // 0x480(0x08)
	float _approachPointRadiusMultiplier; // 0x488(0x04)
	char pad_48C[0x4]; // 0x48c(0x04)
};

// Class ConZ.EncounterCharacterGroupObject
// Size: 0x40 (Inherited: 0x28)
struct UEncounterCharacterGroupObject : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.EncounterCharacterSpawnPreset
// Size: 0x88 (Inherited: 0x30)
struct UEncounterCharacterSpawnPreset : UDataAsset {
	struct FGameplayTag PresetType; // 0x30(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, float> CharacterClasses; // 0x38(0x50)
};

// Class ConZ.VirtualizedEncounterData_SpawnCharacters
// Size: 0xa8 (Inherited: 0x90)
struct UVirtualizedEncounterData_SpawnCharacters : UVirtualizedEncounterData {
	struct TArray<struct FVirtualizedEncounterCharacterData> CharacterDataArray; // 0x90(0x10)
	bool InitialSpawnFinished; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class ConZ.VirtualizedEncounterData_Horde
// Size: 0xc8 (Inherited: 0xa8)
struct UVirtualizedEncounterData_Horde : UVirtualizedEncounterData_SpawnCharacters {
	bool IsHordeActivated; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct TArray<struct FVirtualizedEncounterCharacterData> HordeCharacterDataArray; // 0xb0(0x10)
	int32_t CurrentHordePresetIndex; // 0xc0(0x04)
	bool IsHordeEndReached; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
};

// Class ConZ.EncounterHorde
// Size: 0x588 (Inherited: 0x460)
struct UEncounterHorde : UEncounterSpawnCharacters {
	struct TArray<struct FHordeParametersPresetPair> _hordeParameterPresets; // 0x460(0x10)
	struct TMap<struct FName, float> _hordeActivationChancePerNoiseTag; // 0x470(0x50)
	struct FFloatInterval _cooldownIntervalBetweenNoiseTriggerChecks; // 0x4c0(0x08)
	int32_t _hordeMaxDeadCharacters; // 0x4c8(0x04)
	float _periodicHordeTriggerCheckNoiseThreshold; // 0x4cc(0x04)
	float _periodicHordeTriggerCheckTime; // 0x4d0(0x04)
	float _periodicHordeTriggerChance; // 0x4d4(0x04)
	bool _prioritizeInteriorHordeSpawnPoints; // 0x4d8(0x01)
	bool _prioritizeExteriorHordeSpawnPoints; // 0x4d9(0x01)
	bool _checkZoneValidity; // 0x4da(0x01)
	bool _allowDifferentSubZoneHordeSpawn; // 0x4db(0x01)
	bool _spawnHordeOnlyIfBaitsArePresent; // 0x4dc(0x01)
	char pad_4DD[0x3]; // 0x4dd(0x03)
	float _LPCCharacterAlertOnHordeTriggerRadius; // 0x4e0(0x04)
	bool _useClosestPlayerForHordeSpawn; // 0x4e4(0x01)
	bool _collectExistingCharactersAsPartOfHorde; // 0x4e5(0x01)
	bool _useVisitedPointSpawnPrevention; // 0x4e6(0x01)
	char pad_4E7[0x71]; // 0x4e7(0x71)
	float _hordeSpawnPointCooldownAreaTime; // 0x558(0x04)
	float _hordeSpawnPointCooldownAreaExtent; // 0x55c(0x04)
	char pad_560[0x28]; // 0x560(0x28)
};

// Class ConZ.EncounterManagerCommonData
// Size: 0x388 (Inherited: 0x30)
struct UEncounterManagerCommonData : UDataAsset {
	int32_t MaxCharacters; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TMap<struct FGameplayTag, int32_t> MaxCharactersPerType; // 0x38(0x50)
	struct TSoftClassPtr<UObject> SuicidePuppetClass; // 0x88(0x28)
	struct TArray<enum class EPhysicalSurface> CharacterSpawnAllowedSurfaces; // 0xb0(0x10)
	struct UEncounterZoneData* LowThreatZoneData; // 0xc0(0x08)
	float GroupDistanceBetweenPlayers; // 0xc8(0x04)
	float PlayerDataArrayShufflePeriod; // 0xcc(0x04)
	float TimeForPlayerNoiseRateToStartDropping; // 0xd0(0x04)
	float PlayerNoiseDropRatePerSecond; // 0xd4(0x04)
	float AccumulatedNoiseCap; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TMap<struct FName, float> NoiseAccumulationMultiplierPerNoiseTag; // 0xe0(0x50)
	float PlayerAverageMovementDirectionChangeRate; // 0x130(0x04)
	float PlayerMovementDirectionResetTime; // 0x134(0x04)
	struct TMap<struct FGameplayTag, int32_t> LimitedEncounterTypes; // 0x138(0x50)
	struct TMap<struct FGameplayTag, struct FFloatInterval> CooldownsPerEncounterType; // 0x188(0x50)
	float EveryPlayerExperiencedCooldownDecayMultiplierDefault; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)
	struct TMap<struct FGameplayTag, float> EveryPlayerExperiencedCooldownDecayMultiplierPerType; // 0x1e0(0x50)
	float PercentageOfMaxCharactersToStartDespawningLowPriorityCharacters; // 0x230(0x04)
	float VisitedPointCheckInterval; // 0x234(0x04)
	float VisitedPointsAutosaveTime; // 0x238(0x04)
	float BBBaseBoundsExtentAddition; // 0x23c(0x04)
	int32_t BBEncounterMinBaseElementsNumRequired; // 0x240(0x04)
	int32_t BBEncounterBaseElementsNumToEnd; // 0x244(0x04)
	float BBEncounterTimeToFullMinNumToEnd; // 0x248(0x04)
	int32_t BBEncounterMaximumMinToEndReduction; // 0x24c(0x04)
	float TimeWithPresentPlayersAfterBBEncounterCheckCanBeMade; // 0x250(0x04)
	float BBEncounterSpawnChance; // 0x254(0x04)
	struct TArray<struct FPossibleEncounterData> PossibleBBEncounters; // 0x258(0x10)
	struct FFloatInterval BBEncounterCheckCooldownInterval; // 0x268(0x08)
	struct FFloatInterval BBEncounterCooldownInterval; // 0x270(0x08)
	float BBDataArrayShufflePeriod; // 0x278(0x04)
	float BBDataAutosavePeriod; // 0x27c(0x04)
	struct FFloatInterval LPCModeZoneCooldownOverride; // 0x280(0x08)
	float LPCModeVirtualizationTimeOverride; // 0x288(0x04)
	struct FGameplayTag LowPlayerCountModeEncounterSpecialCooldownTag; // 0x28c(0x08)
	float RogueCharacterCorpseRemovalTimeMinutes; // 0x294(0x04)
	float RogueCharacterRemovalDistance; // 0x298(0x04)
	float RogueCharacterRemovalDistanceOutsideOfSight; // 0x29c(0x04)
	float RogueCharactersAutosaveTime; // 0x2a0(0x04)
	float GlobalZoneCooldownsAutosaveTime; // 0x2a4(0x04)
	struct FGameplayTag EnabledPuppetWorldEncounterTag; // 0x2a8(0x08)
	struct FGameplayTag EnabledAnimalWorldEncounterTag; // 0x2b0(0x08)
	struct FGameplayTag EnabledDropshipWorldEncounterTag; // 0x2b8(0x08)
	struct FGameplayTag EnabledDropshipAbandonedBunkerEncounterTag; // 0x2c0(0x08)
	struct FGameplayTag EnabledDropshipBaseBuildingEncounterTag; // 0x2c8(0x08)
	struct FGameplayTag PuppetPresetTypeServerSettingsTag; // 0x2d0(0x08)
	struct FGameplayTag AnimalPresetTypeServerSettingsTag; // 0x2d8(0x08)
	struct FGameplayTag NPCPresetTypeServerSettingsTag; // 0x2e0(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, struct FColor> DrawDebugColor; // 0x2e8(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, struct FColor> DrawDebugVirtualizedColor; // 0x338(0x50)
};

// Class ConZ.EncounterManagerHordePreset
// Size: 0xc8 (Inherited: 0x30)
struct UEncounterManagerHordePreset : UDataAsset {
	struct TMap<struct UEncounterCharacterSpawnPreset*, float> PossibleHordeCharacters; // 0x30(0x50)
	struct FInt32Interval HordeGroupSizeInterval; // 0x80(0x08)
	struct FInt32Interval HordeSizeAdditionInterval; // 0x88(0x08)
	int32_t HordeGroupSizeExtraPerPlayer; // 0x90(0x04)
	int32_t HordeSizeExtraPerPlayer; // 0x94(0x04)
	int32_t HordeSizesAmountPlayerCap; // 0x98(0x04)
	struct FFloatInterval HordeSpawnDistanceInterval; // 0x9c(0x08)
	float FallbackLocationZCheckDistance; // 0xa4(0x04)
	struct FFloatInterval HordeGroupRefillTimeInterval; // 0xa8(0x08)
	struct FFloatInterval HordeRespawnCooldownInterval; // 0xb0(0x08)
	struct FFloatInterval HordeActivationSoundDelay; // 0xb8(0x08)
	struct UAkAudioEvent* HordeActivationAudioEvent; // 0xc0(0x08)
};

// Class ConZ.EncounterZoneSubZoneBoxComponent
// Size: 0x480 (Inherited: 0x480)
struct UEncounterZoneSubZoneBoxComponent : UBoxComponent {
};

// Class ConZ.VirtualizedEncounterData_SpawnAirborneCharacters
// Size: 0xc0 (Inherited: 0xa8)
struct UVirtualizedEncounterData_SpawnAirborneCharacters : UVirtualizedEncounterData_SpawnCharacters {
	struct TArray<struct FVirtualizedEncounterCharacterData> AirborneCharacterDataArray; // 0xa8(0x10)
	bool IsInitialSpawningOfAirborneCharactersFinished; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class ConZ.EncounterSpawnAirborneCharacters
// Size: 0x4f0 (Inherited: 0x460)
struct UEncounterSpawnAirborneCharacters : UEncounterSpawnCharacters {
	struct TMap<struct UEncounterCharacterSpawnPreset*, float> _possibleAirborneCharacters; // 0x460(0x50)
	struct FFloatInterval _spawnHeightInterval; // 0x4b0(0x08)
	struct FFloatInterval _approachHeightInterval; // 0x4b8(0x08)
	struct FInt32Interval _allowedAirborneCharactersInterval; // 0x4c0(0x08)
	char pad_4C8[0x4]; // 0x4c8(0x04)
	float _approachPointRadiusMultiplier; // 0x4cc(0x04)
	bool _useEncounterZoneApproachLocations; // 0x4d0(0x01)
	char pad_4D1[0x1f]; // 0x4d1(0x1f)
};

// Class ConZ.EncounterStaticZone
// Size: 0x2a0 (Inherited: 0x220)
struct AEncounterStaticZone : AActor {
	struct USceneComponent* _root; // 0x220(0x08)
	struct UStaticMeshComponent* _visualizationSphere; // 0x228(0x08)
	struct UStaticMeshComponent* _zoneActivationVisualizationSphere; // 0x230(0x08)
	struct UStaticMeshComponent* _LPCZoneActivationVisualizationSphere; // 0x238(0x08)
	struct UTextRenderComponent* _zoneNameTextRenderComponent; // 0x240(0x08)
	float _semiXAxisSize; // 0x248(0x04)
	float _semiYAxisSize; // 0x24c(0x04)
	float _zoneActivationRadiusMultiplier; // 0x250(0x04)
	float _LPCZoneActivationRadiusMultiplier; // 0x254(0x04)
	struct TArray<struct FTransform> _flyingSpawnedCharacterApproachLocations; // 0x258(0x10)
	struct UEncounterZoneData* _zoneData; // 0x268(0x08)
	struct UEncounterZoneData* _lpcZoneData; // 0x270(0x08)
	struct TArray<struct FEncounterSubZoneEditorData> _subZones; // 0x278(0x10)
	struct UMaterialInstance* _mainVisualizationMaterial; // 0x288(0x08)
	struct UMaterialInstance* _zoneActivationVisualizationMaterial; // 0x290(0x08)
	struct UMaterialInstance* _LPCZoneActivationVisualizationMaterial; // 0x298(0x08)
};

// Class ConZ.EncounterZoneData
// Size: 0xd0 (Inherited: 0x30)
struct UEncounterZoneData : UDataAsset {
	float EncounterSpawnChance; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FPossibleEncounterData> EncounterData; // 0x38(0x10)
	struct FFloatInterval InitialEncounterSpawnDelay; // 0x48(0x08)
	struct FFloatInterval EncounterSpawnCheckInterval; // 0x50(0x08)
	struct FFloatInterval EncounterCooldownInterval; // 0x58(0x08)
	struct FFloatInterval EncounterCooldownGlobalInterval; // 0x60(0x08)
	float SubzoneDirectionRelevanceMaxDistance; // 0x68(0x04)
	bool AllowParentZoneEncounterSpawn; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct FFloatInterval CharacterSpawnDistanceRange; // 0x70(0x08)
	struct FFloatInterval CharacterFallbackSpawnDistanceRange; // 0x78(0x08)
	struct FFloatInterval CharacterFallbackSpawnMoveToLocationRange; // 0x80(0x08)
	float ForcedStimulusKeepAliveTimePer100mDistance; // 0x88(0x04)
	float MinForcedStimulusKeepAliveTime; // 0x8c(0x04)
	float ForcedStimulusTrackOwnerTimePer100mDistance; // 0x90(0x04)
	float MinForcedStimulusTrackOwnerTime; // 0x94(0x04)
	float MovementDirectionSpawnHalfAngle; // 0x98(0x04)
	float MovementDirectionSpawnVerticalHalfAngle; // 0x9c(0x04)
	float InteriorSpawnPointsViewCheckDistance; // 0xa0(0x04)
	float ExteriorSpawnPointsViewCheckDistance; // 0xa4(0x04)
	float SpawnPointViewCheckHalfAngle; // 0xa8(0x04)
	float FallbackLocationZCheckDistance; // 0xac(0x04)
	bool UseFastSightCheck; // 0xb0(0x01)
	bool UseVisitedPointSpawnProhibition; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float VisitedPointsLockRadiusXY; // 0xb4(0x04)
	float VisitedPointsLockDistanceZ; // 0xb8(0x04)
	float VisitedPointOffsetDistance; // 0xbc(0x04)
	float VisitedPointsRemovalTime; // 0xc0(0x04)
	bool EverSubjectToSpawnPreventionAreasSpawnOnCharacterDeath; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float OnCharacterDeathVisitedPointsLockRadiusXY; // 0xc8(0x04)
	float OnCharacterDeathVisitedPointsLockDistanceZ; // 0xcc(0x04)
};

// Class ConZ.EnduranceSkill
// Size: 0x170 (Inherited: 0xc8)
struct UEnduranceSkill : UConstitutionSkill {
	struct FEnduranceSkillExperienceAwards NoSkillExperienceAwards; // 0xc8(0x0c)
	struct FEnduranceSkillExperienceAwards BasicSkillExperienceAwards; // 0xd4(0x0c)
	struct FEnduranceSkillExperienceAwards MediumSkillExperienceAwards; // 0xe0(0x0c)
	struct FEnduranceSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xec(0x0c)
	struct FEnduranceSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xf8(0x0c)
	struct FEnduranceSkillParametersPerSkillLevel NoSkillParameters; // 0x104(0x18)
	struct FEnduranceSkillParametersPerSkillLevel BasicSkillParameters; // 0x11c(0x18)
	struct FEnduranceSkillParametersPerSkillLevel MediumSkillParameters; // 0x134(0x18)
	struct FEnduranceSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x14c(0x18)
	char pad_164[0xc]; // 0x164(0x0c)
};

// Class ConZ.Prisoner
// Size: 0x2210 (Inherited: 0x830)
struct APrisoner : AConZCharacter {
	char pad_830[0x50]; // 0x830(0x50)
	struct UPrisonerSkillComponent* SkillComponent; // 0x880(0x08)
	struct UPrisonerInventoryComponent* InventoryComponent; // 0x888(0x08)
	struct UPrisonerAppearanceComponent* AppearanceComponent; // 0x890(0x08)
	struct UMeleeCombatComponent* MeleeCombatComponent; // 0x898(0x08)
	struct UHitReactComponent* HitReactComponent; // 0x8a0(0x08)
	struct UPhysicalAnimationComponent* PhysicalAnimationComponent; // 0x8a8(0x08)
	struct UInteractionComponent* InteractionComponent; // 0x8b0(0x08)
	struct UPawnSensingComponent* SensingComponent; // 0x8b8(0x08)
	struct UBaseInteractionComponent* BaseInteractionComponent; // 0x8c0(0x08)
	bool OverrideAimOffset; // 0x8c8(0x01)
	char pad_8C9[0x3]; // 0x8c9(0x03)
	struct FRotator AimOffsetOverride; // 0x8cc(0x0c)
	struct AActor* EyesLookAtTargetOverride; // 0x8d8(0x08)
	bool IsFriendly; // 0x8e0(0x01)
	bool CanEverBeKnockedOutByMeleeAttack; // 0x8e1(0x01)
	bool ShouldOverrideCharacterTemplate; // 0x8e2(0x01)
	char pad_8E3[0x5]; // 0x8e3(0x05)
	struct FCharacterTemplate CharacterTemplateOverride; // 0x8e8(0xe8)
	struct FAttachmentSocket LeftHandAttachmentSocket; // 0x9d0(0x10)
	struct FAttachmentSocket RightHandAttachmentSocket; // 0x9e0(0x10)
	struct FAttachmentSocket LeftShoulderHolsterSocket; // 0x9f0(0x10)
	struct FAttachmentSocket RightShoulderHolsterSocket; // 0xa00(0x10)
	char pad_A10[0x1c8]; // 0xa10(0x1c8)
	struct FMulticastInlineDelegate HoveredActorChanged; // 0xbd8(0x10)
	char pad_BE8[0x58]; // 0xbe8(0x58)
	bool RespawnOnKill; // 0xc40(0x01)
	char pad_C41[0x3]; // 0xc41(0x03)
	float IKOffsetLeftFoot; // 0xc44(0x04)
	float IKOffsetRightFoot; // 0xc48(0x04)
	enum class EPrisonerBorderCrossingPenalty BorderCrossingPenalty; // 0xc4c(0x01)
	char pad_C4D[0x3]; // 0xc4d(0x03)
	struct FMulticastInlineDelegate BorderCrossingPenaltyChange; // 0xc50(0x10)
	char pad_C60[0x208]; // 0xc60(0x208)
	struct UPrisonerBodySimulationComponent* _bodySimulationComponent; // 0xe68(0x08)
	struct UThermalSensorComponent* _skinThermalSensingComponent; // 0xe70(0x08)
	struct UPrisonerMeshManager* _prisonerMeshManager; // 0xe78(0x08)
	struct UUserProfile* _userProfile; // 0xe80(0x08)
	struct FString _userId; // 0xe88(0x10)
	struct FDbIntegerId _serverUserProfileId; // 0xe98(0x08)
	struct FString _userProfileName; // 0xea0(0x10)
	struct FString _userFakeName; // 0xeb0(0x10)
	char pad_EC0[0x68]; // 0xec0(0x68)
	struct UParticleSystemComponent* _waterParticlesComponentWhenIdle; // 0xf28(0x08)
	struct UParticleSystemComponent* _waterParticlesComponentWhenMoving; // 0xf30(0x08)
	struct UParticleSystemComponent* _waterParticlesComponentWhenDiving; // 0xf38(0x08)
	char pad_F40[0x19]; // 0xf40(0x19)
	enum class EPrisonerGroundStance _groundStance; // 0xf59(0x01)
	enum class EPrisonerAquaticMode _aquaticMode; // 0xf5a(0x01)
	enum class EPrisonerAerialPose _aerialPose; // 0xf5b(0x01)
	enum class EPrisonerMovementPace _desiredMovementPace; // 0xf5c(0x01)
	char pad_F5D[0xf]; // 0xf5d(0x0f)
	float _targetCrouchStage; // 0xf6c(0x04)
	enum class EPrisonerMontage _currentMontage; // 0xf70(0x01)
	char pad_F71[0x3]; // 0xf71(0x03)
	bool _freeLookEnabled; // 0xf74(0x01)
	char pad_F75[0x27]; // 0xf75(0x27)
	bool _postFreeLookControllerRotationBlendActive; // 0xf9c(0x01)
	char pad_F9D[0xf]; // 0xf9d(0x0f)
	struct FRotator _repAimOffset; // 0xfac(0x0c)
	char pad_FB8[0x40]; // 0xfb8(0x40)
	struct APrisonerCorpse* _lastCorpse; // 0xff8(0x08)
	struct APrisonerCorpse* _lastEventCorpse; // 0x1000(0x08)
	char pad_1008[0x24]; // 0x1008(0x24)
	float _targetLeanAmount; // 0x102c(0x04)
	char pad_1030[0x7d8]; // 0x1030(0x7d8)
	struct AActor* _meleeTarget; // 0x1808(0x08)
	char pad_1810[0x8]; // 0x1810(0x08)
	struct UMeleeSkill* _activeMeleeSkill; // 0x1818(0x08)
	char pad_1820[0x10]; // 0x1820(0x10)
	struct AActor* _rotationTarget; // 0x1830(0x08)
	struct UUnarmedCombatInputRedirector* _unarmedCombatInputRedirector; // 0x1838(0x08)
	struct USkillEventHandler* _skillEventHandler; // 0x1840(0x08)
	char pad_1848[0x10]; // 0x1848(0x10)
	struct AItem* _itemInHands; // 0x1858(0x08)
	char pad_1860[0x75]; // 0x1860(0x75)
	enum class EScopingWithItemInHandsState _scopingWithItemInHandsState; // 0x18d5(0x01)
	char pad_18D6[0x4a]; // 0x18d6(0x4a)
	char _itemInHandsVisualObstructionDepthRep; // 0x1920(0x01)
	char pad_1921[0x10f]; // 0x1921(0x10f)
	enum class EPrisonerCombatMode _combatMode; // 0x1a30(0x01)
	char pad_1A31[0x57]; // 0x1a31(0x57)
	struct AItem* _leftShoulderHolsteredItemReplicated; // 0x1a88(0x08)
	char pad_1A90[0x8]; // 0x1a90(0x08)
	struct AItem* _rightShoulderHolsteredItemReplicated; // 0x1a98(0x08)
	char pad_1AA0[0x30]; // 0x1aa0(0x30)
	struct FTimerHandle _interactDefaultContextMenuTimerHandle; // 0x1ad0(0x08)
	char pad_1AD8[0x8]; // 0x1ad8(0x08)
	struct TArray<struct APrisoner*> _examinedBy; // 0x1ae0(0x10)
	struct UMaterialInstanceDynamic* _tacticsBlobMaterial; // 0x1af0(0x08)
	struct TArray<struct UParticleSystemComponent*> _bodyPartEffects; // 0x1af8(0x10)
	struct UBondageComponent* _handsBondage; // 0x1b08(0x08)
	struct UPrisonerPrisonWalletComponent* _prisonWalletComponent; // 0x1b10(0x08)
	struct UPrisonerFishingComponent* _fishingComponent; // 0x1b18(0x08)
	struct UPrisonerMusicPlayerComponent* _musicPlayerComponent; // 0x1b20(0x08)
	struct UPrisonerTradingComponent* _tradingComponent; // 0x1b28(0x08)
	struct UPrisonerThrowComponent* _throwingComponent; // 0x1b30(0x08)
	struct UCharacterItemDragComponent* _itemDragComponent; // 0x1b38(0x08)
	char pad_1B40[0x18]; // 0x1b40(0x18)
	uint32_t _packedWaterWeight; // 0x1b58(0x04)
	char pad_1B5C[0x2c]; // 0x1b5c(0x2c)
	struct AGameEventBase* _gameEvent; // 0x1b88(0x08)
	struct UPrisonerLoadout* _gameEventLoadout; // 0x1b90(0x08)
	char pad_1B98[0xa0]; // 0x1b98(0xa0)
	struct TArray<struct AActor*> _instancedFoliageActors; // 0x1c38(0x10)
	char pad_1C48[0x8]; // 0x1c48(0x08)
	struct TArray<struct AActor*> _landscapeProxyActors; // 0x1c50(0x10)
	char pad_1C60[0x20]; // 0x1c60(0x20)
	struct UWidgetComponent* _nameWidgetComponent; // 0x1c80(0x08)
	struct UBaseItemTag* SaveSpawnLocationTag; // 0x1c88(0x08)
	char pad_1C90[0x28]; // 0x1c90(0x28)
	struct FDeluxeVersion _deluxeVersion; // 0x1cb8(0x0c)
	char pad_1CC4[0x4]; // 0x1cc4(0x04)
	struct TWeakObjectPtr<struct APrisoner> _examinedPrisoner; // 0x1cc8(0x08)
	bool _killClaimed; // 0x1cd0(0x01)
	char pad_1CD1[0x1f]; // 0x1cd1(0x1f)
	enum class EPlayingInstrumentState _playingInstrumentState; // 0x1cf0(0x01)
	char pad_1CF1[0x1]; // 0x1cf1(0x01)
	enum class ECarryingItemState _carryingItemState; // 0x1cf2(0x01)
	char pad_1CF3[0x2d]; // 0x1cf3(0x2d)
	bool _shouldShowGenitalsOverride; // 0x1d20(0x01)
	char pad_1D21[0x3f]; // 0x1d21(0x3f)
	struct FPrisonerMountReplication _repMount; // 0x1d60(0x10)
	char pad_1D70[0x8]; // 0x1d70(0x08)
	struct UMIDIDeviceController* _midiDeviceController; // 0x1d78(0x08)
	char pad_1D80[0x40]; // 0x1d80(0x40)
	bool _hasInfiniteAmmo; // 0x1dc0(0x01)
	bool _isInGodMode; // 0x1dc1(0x01)
	bool _isImmortal; // 0x1dc2(0x01)
	bool _isSuperJumpEnabled; // 0x1dc3(0x01)
	char pad_1DC4[0x24]; // 0x1dc4(0x24)
	bool _enablePerComponentReplicationFrequency; // 0x1de8(0x01)
	char pad_1DE9[0x3]; // 0x1de9(0x03)
	float _componentsReplicationFrequency[0x5]; // 0x1dec(0x14)
	char pad_1E00[0x60]; // 0x1e00(0x60)
	struct UNavigationInvokerComponent* _navigationInvokerComponent; // 0x1e60(0x08)
	char pad_1E68[0x7c]; // 0x1e68(0x7c)
	char _packedShade; // 0x1ee4(0x01)
	char pad_1EE5[0x27]; // 0x1ee5(0x27)
	struct FGameplayTag LegsInjuryTag; // 0x1f0c(0x08)
	char pad_1F14[0x90]; // 0x1f14(0x90)
	enum class EVehicleWeaponAimingStance _vehicleWeaponAimingStance; // 0x1fa4(0x01)
	char pad_1FA5[0x2b]; // 0x1fa5(0x2b)
	float _vehicleAimingYawReplicated; // 0x1fd0(0x04)
	char pad_1FD4[0xf8]; // 0x1fd4(0xf8)
	struct TWeakObjectPtr<struct AClothesItem> _activeParachute; // 0x20cc(0x08)
	char pad_20D4[0xc]; // 0x20d4(0x0c)
	char _replicatedBooleans; // 0x20e0(0x01)
	char pad_20E1[0x10f]; // 0x20e1(0x10f)
	struct USurvivalTipEventListener* _survivalTipEventListener; // 0x21f0(0x08)
	struct UPrisonerCommonData* _commonData; // 0x21f8(0x08)
	int32_t _meshForcedLodIfNotPlayerControlled; // 0x2200(0x04)
	char pad_2204[0xc]; // 0x2204(0x0c)

	void UpdateZoomEffect(float Fraction); // Function ConZ.Prisoner.UpdateZoomEffect // (Final|Native|Public|Const) // @ game+0x2477330
	void UpdateWristwatchVisibility(); // Function ConZ.Prisoner.UpdateWristwatchVisibility // (Final|Native|Public) // @ game+0x2477310
	void UpdateSquadPanel(); // Function ConZ.Prisoner.UpdateSquadPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x24772f0
	void UpdateDeluxePlayerStatus(); // Function ConZ.Prisoner.UpdateDeluxePlayerStatus // (Final|Native|Private) // @ game+0x2472e60
	void Teleport(struct FPrisonerTeleportRequest& request); // Function ConZ.Prisoner.Teleport // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2473750
	void TakeItemInHandsOnServer(struct AItem* Item); // Function ConZ.Prisoner.TakeItemInHandsOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2477260
	void TakeItemInHands(struct AItem* Item); // Function ConZ.Prisoner.TakeItemInHands // (Final|Native|Public|BlueprintCallable) // @ game+0x24771d0
	void StartPrimaryMeleeAttack(); // Function ConZ.Prisoner.StartPrimaryMeleeAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x2477170
	void StartMeleeDodge(enum class EDodgeDirectionType Direction); // Function ConZ.Prisoner.StartMeleeDodge // (Final|Native|Public|BlueprintCallable) // @ game+0x24770f0
	void StartMeleeAttack(struct FGameplayTag& meleeAttackType); // Function ConZ.Prisoner.StartMeleeAttack // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2477060
	void ShowSpawnScreen(bool loadoutMenu); // Function ConZ.Prisoner.ShowSpawnScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x2476fd0
	bool ShouldLookatMeleeTarget(); // Function ConZ.Prisoner.ShouldLookatMeleeTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2476fa0
	void SetWristwatchBrightness(float Value); // Function ConZ.Prisoner.SetWristwatchBrightness // (Final|Native|Public|BlueprintCallable) // @ game+0x2476f20
	void SetTargetOnServer(struct AActor* Target); // Function ConZ.Prisoner.SetTargetOnServer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc470
	void SetShouldIgnoreHeadTurningAndLeaning(bool Value); // Function ConZ.Prisoner.SetShouldIgnoreHeadTurningAndLeaning // (Final|Native|Public|BlueprintCallable) // @ game+0x2476e90
	void SetRotationTarget(struct AActor* rotationTarget); // Function ConZ.Prisoner.SetRotationTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x2476e00
	void SetPlayerSoundLevel(float Value); // Function ConZ.Prisoner.SetPlayerSoundLevel // (Final|Native|Private|BlueprintCallable) // @ game+0x2476d80
	void SetPartWaterWeight(enum class EPrisonerWettablePart part, float Value); // Function ConZ.Prisoner.SetPartWaterWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x2476cb0
	void SetNightVisionEnabled(bool Value); // Function ConZ.Prisoner.SetNightVisionEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x2476c20
	bool SetMidiDeviceByName(struct FString Name); // Function ConZ.Prisoner.SetMidiDeviceByName // (Final|Native|Public|BlueprintCallable) // @ game+0x2476b20
	bool SetMidiDeviceByIndex(int32_t Index); // Function ConZ.Prisoner.SetMidiDeviceByIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x2476a80
	void SetMeleeTargetSelectionMode(enum class EPrisonerMeleeTargetSelectionMode Value); // Function ConZ.Prisoner.SetMeleeTargetSelectionMode // (Final|Native|Public|BlueprintCallable) // @ game+0x2476a00
	void SetMeleeTarget(struct AActor* Value); // Function ConZ.Prisoner.SetMeleeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x2476970
	void SetItemInHandsOnClient(struct AItem* Item); // Function ConZ.Prisoner.SetItemInHandsOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24768e0
	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.Prisoner.SetGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x2476850
	void SetFreeLookEnabled(bool Value); // Function ConZ.Prisoner.SetFreeLookEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x24767c0
	void SetDesiredLeanAmount(float Value); // Function ConZ.Prisoner.SetDesiredLeanAmount // (Final|Native|Public|BlueprintCallable) // @ game+0x2476740
	void Server_UnloadAmmoFromMagazine(struct AWeaponAttachmentMagazine* magazine); // Function ConZ.Prisoner.Server_UnloadAmmoFromMagazine // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2476570
	void Server_TurnPrisonerInPlace(float targetRotationYaw); // Function ConZ.Prisoner.Server_TurnPrisonerInPlace // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24764e0
	void Server_ThrowRequested(); // Function ConZ.Prisoner.Server_ThrowRequested // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc2d0
	void Server_SyncWeaponState(struct AWeapon* Weapon, struct FWeaponStateSyncData Data); // Function ConZ.Prisoner.Server_SyncWeaponState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24763e0
	void Server_SwapWeaponAttachments(struct AWeapon* Weapon, struct AWeaponAttachment* oldAttachment, struct AWeaponAttachment* newAttachment); // Function ConZ.Prisoner.Server_SwapWeaponAttachments // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x24762d0
	void Server_StoreAmmoInAmmoBox(struct AAmmunitionItem* ammo, struct AAmmunitionBoxItem* Box); // Function ConZ.Prisoner.Server_StoreAmmoInAmmoBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2476200
	void Server_SplitCurrencyItem(struct AItem* currencyItem, int32_t newAmount); // Function ConZ.Prisoner.Server_SplitCurrencyItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2476130
	void Server_SplitAmmo(struct AAmmunitionItem* ammoItem); // Function ConZ.Prisoner.Server_SplitAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24760a0
	void Server_SpawnScreenWakeUp(); // Function ConZ.Prisoner.Server_SpawnScreenWakeUp // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2476080
	void Server_SpawnAmmunitionArrow(struct FAmmunitionArrowSpawningParamsHelper AmmunitionArrowSpawningParamsHelper, struct USceneComponent* AttachComponent, struct FName attachBoneName, struct FTransform relativeAttachTransform); // Function ConZ.Prisoner.Server_SpawnAmmunitionArrow // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2475ed0
	void Server_SetVehicleWeaponAimingStance(enum class EVehicleWeaponAimingStance stance); // Function ConZ.Prisoner.Server_SetVehicleWeaponAimingStance // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2475e50
	void Server_SetVehicleAimingYaw(float angle); // Function ConZ.Prisoner.Server_SetVehicleAimingYaw // (Final|Net|Native|Event|Private|NetServer) // @ game+0x2475dc0
	void Server_SetTargetLeanAmount(float Value); // Function ConZ.Prisoner.Server_SetTargetLeanAmount // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475d30
	void Server_SetTargetCrouchStage(float Value); // Function ConZ.Prisoner.Server_SetTargetCrouchStage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2475ca0
	void Server_SetShouldIgnoreHeadTurning(bool Value); // Function ConZ.Prisoner.Server_SetShouldIgnoreHeadTurning // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475c10
	void Server_SetScopingWithItemInHandsState(enum class EScopingWithItemInHandsState Value); // Function ConZ.Prisoner.Server_SetScopingWithItemInHandsState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475b90
	void Server_SetRotationTarget(struct AActor* rotationTarget); // Function ConZ.Prisoner.Server_SetRotationTarget // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475b00
	void Server_SetPlayingInstrumentState(enum class EPlayingInstrumentState Value); // Function ConZ.Prisoner.Server_SetPlayingInstrumentState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475a80
	void Server_SetPackedShade(char Value); // Function ConZ.Prisoner.Server_SetPackedShade // (Final|Net|Native|Event|Private|NetServer) // @ game+0x2475a00
	void Server_SetMeleeTarget(struct AActor* Value); // Function ConZ.Prisoner.Server_SetMeleeTarget // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475970
	void Server_SetItemInHandsVisualObstructionDepth(float Value); // Function ConZ.Prisoner.Server_SetItemInHandsVisualObstructionDepth // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24758e0
	void Server_SetItemInHandsActualObstructionDepth(float Value); // Function ConZ.Prisoner.Server_SetItemInHandsActualObstructionDepth // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475850
	void Server_SetHoldBreathState(enum class EHoldBreathState Value); // Function ConZ.Prisoner.Server_SetHoldBreathState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24757d0
	void Server_SetGameEventLoadout(struct AItem* primary, struct TArray<struct AItem*> primaryAttachments, struct AItem* secondary, struct TArray<struct AItem*> secondaryAttachments, struct AItem* tertiary, struct TArray<struct AItem*> tertiaryAttachments, struct TArray<struct AItem*> outfit, struct TArray<struct AItem*> support); // Function ConZ.Prisoner.Server_SetGameEventLoadout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2475500
	void Server_SetFreeLookEnabled(bool Value); // Function ConZ.Prisoner.Server_SetFreeLookEnabled // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475470
	void Server_SetExaminedPrisoner(struct APrisoner* Prisoner); // Function ConZ.Prisoner.Server_SetExaminedPrisoner // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24753e0
	void Server_SetDesiredMovementPace(char Value); // Function ConZ.Prisoner.Server_SetDesiredMovementPace // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475360
	void Server_SetDangerCooldown(float cooldown, struct APrisoner* Prisoner); // Function ConZ.Prisoner.Server_SetDangerCooldown // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2475280
	void Server_SetCombatMode(enum class EPrisonerCombatMode Value); // Function ConZ.Prisoner.Server_SetCombatMode // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475200
	void Server_SetCarryingItemState(enum class ECarryingItemState State); // Function ConZ.Prisoner.Server_SetCarryingItemState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2475180
	void Server_SetActiveParachute(struct AClothesItem* Parachute); // Function ConZ.Prisoner.Server_SetActiveParachute // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24750f0
	void Server_RespawnAtCommonSpawnLocation(enum class EPrisonerCommonSpawnLocation commonSpawnLocation, struct FSectorId SectorId); // Function ConZ.Prisoner.Server_RespawnAtCommonSpawnLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2475020
	void Server_ReportVote(bool Vote); // Function ConZ.Prisoner.Server_ReportVote // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2474f90
	void Server_RemoveInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.Prisoner.Server_RemoveInventoryNode // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2474e30
	void Server_PropagateFootstepEnhancerSound(); // Function ConZ.Prisoner.Server_PropagateFootstepEnhancerSound // (Net|Native|Event|Public|NetServer) // @ game+0x2474e10
	void Server_PrisonWalletHandleItemSpawning(struct FVector Location); // Function ConZ.Prisoner.Server_PrisonWalletHandleItemSpawning // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2474d80
	void Server_OnLockpickingProtectionTriggered(struct UObject* Lockpickable); // Function ConZ.Prisoner.Server_OnLockpickingProtectionTriggered // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2474cf0
	void Server_MinigameEnded(struct AMinigame* minigameClass, bool isPractice, bool Succeeded, struct TArray<struct TWeakObjectPtr<struct AItem>> tools, struct FMiniGameEndParams endParams); // Function ConZ.Prisoner.Server_MinigameEnded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2474b00
	void Server_lockpickingEnded(struct UObject* Lockpickable, bool Succeeded, struct FConZBaseElementIdentifier lockpickableBaseElement); // Function ConZ.Prisoner.Server_lockpickingEnded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2476600
	void Server_LoadAmmoIntoMagazine(struct AAmmunitionItem* AmmunitionItem, struct AWeaponAttachmentMagazine* magazine, int32_t Count); // Function ConZ.Prisoner.Server_LoadAmmoIntoMagazine // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x24749f0
	void Server_LeaveSquad(); // Function ConZ.Prisoner.Server_LeaveSquad // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24749d0
	void Server_JumpOffLadder(); // Function ConZ.Prisoner.Server_JumpOffLadder // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24749b0
	void Server_JoinCurrencyItem(struct AItem* finalItem, struct AItem* initiatingItem); // Function ConZ.Prisoner.Server_JoinCurrencyItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24748e0
	void Server_JoinAmmo(struct AAmmunitionItem* finalItem, struct AAmmunitionItem* initiatingItem); // Function ConZ.Prisoner.Server_JoinAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2474810
	void Server_InteractWithLadder(struct FVector traceOrigin, struct FVector traceDirection); // Function ConZ.Prisoner.Server_InteractWithLadder // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2474750
	void Server_InstrumentStopTone(enum class EPlayableInstrumentTone tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.Server_InstrumentStopTone // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2474640
	void Server_InstrumentPlayTone(enum class EPlayableInstrumentTone tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.Server_InstrumentPlayTone // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2474530
	void Server_InstrumentOctaveUp(); // Function ConZ.Prisoner.Server_InstrumentOctaveUp // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc580
	void Server_InstrumentOctaveDown(); // Function ConZ.Prisoner.Server_InstrumentOctaveDown // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc5e0
	void Server_InitiateCraftedUpgradePlacement(struct FConZBaseElementIdentifier elementToBeUpgraded, struct UPlaceableCraftingRecipe* upgradeRecipe, struct FTransform Transform); // Function ConZ.Prisoner.Server_InitiateCraftedUpgradePlacement // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24743a0
	void Server_InitiateCraftedPlacement(struct UPlaceableCraftingRecipe* CraftingRecipe, struct FVector Location); // Function ConZ.Prisoner.Server_InitiateCraftedPlacement // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24742c0
	void Server_HandleGearMotion(enum class EMotionIntensity motionIntensity, bool shouldMakeNoise); // Function ConZ.Prisoner.Server_HandleGearMotion // (Net|Native|Event|Public|NetServer) // @ game+0x24741e0
	void Server_HandleFootstep(enum class EMotionIntensity motionIntensity, bool shouldMakeNoise); // Function ConZ.Prisoner.Server_HandleFootstep // (Net|Native|Event|Public|NetServer) // @ game+0x2474100
	void Server_ForceUnmount(); // Function ConZ.Prisoner.Server_ForceUnmount // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24740e0
	void Server_DestroyPlaceable(struct FDbIntegerId ID); // Function ConZ.Prisoner.Server_DestroyPlaceable // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2474050
	void Server_DamageLockpickingTools(struct AItem* lockpick, struct AItem* tensionTool); // Function ConZ.Prisoner.Server_DamageLockpickingTools // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2473f80
	void Server_CommitSuicide(); // Function ConZ.Prisoner.Server_CommitSuicide // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2473f60
	void Server_ClimbWindow(); // Function ConZ.Prisoner.Server_ClimbWindow // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2473f40
	void Server_Climb(); // Function ConZ.Prisoner.Server_Climb // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x239a1e0
	void Server_ClearDangerCooldown(); // Function ConZ.Prisoner.Server_ClearDangerCooldown // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2473f20
	void Server_ApplyPointDamage(float Damage, struct FHitResult HitResult, enum class EDamageChannel damageChannel); // Function ConZ.Prisoner.Server_ApplyPointDamage // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2473da0
	void Server_AIMovementFinished(bool wasSuccessful); // Function ConZ.Prisoner.Server_AIMovementFinished // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2473bb0
	void Server_AddInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.Prisoner.Server_AddInventoryNode // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2473c40
	void SendSquadInvitationOnServer(struct APrisoner* invited); // Function ConZ.Prisoner.SendSquadInvitationOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2473b20
	void SendSquadInvitationOnClient(struct APrisoner* invitor, struct FString invitorName); // Function ConZ.Prisoner.SendSquadInvitationOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2473a30
	void SendMessageToClient(struct FString Message, struct UAkAudioEvent* AudioEvent); // Function ConZ.Prisoner.SendMessageToClient // (Final|Native|Public|BlueprintCallable) // @ game+0x2473950
	void RightShoulderHolsterInteract(); // Function ConZ.Prisoner.RightShoulderHolsterInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x2473930
	void Revive(); // Function ConZ.Prisoner.Revive // (Final|Native|Public|BlueprintCallable) // @ game+0x2473910
	void RespawnAtCommonSpawnLocation(enum class EPrisonerCommonSpawnLocation commonSpawnLocation, struct FSectorId SectorId); // Function ConZ.Prisoner.RespawnAtCommonSpawnLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x2473840
	void RequestRespawn(struct FPrisonerTeleportRequest& request); // Function ConZ.Prisoner.RequestRespawn // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2473750
	void RemoveWeaponAttachment(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.Prisoner.RemoveWeaponAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x2473680
	void RemoveItemFromHands(enum class EHandsHolstersType preferedHolsterType); // Function ConZ.Prisoner.RemoveItemFromHands // (Final|Native|Public|BlueprintCallable) // @ game+0x2473600
	void RemoveFromSquadOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.RemoveFromSquadOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2473570
	void RemoveBondage(); // Function ConZ.Prisoner.RemoveBondage // (Final|Native|Public|BlueprintCallable) // @ game+0x2473550
	void PromoteSquadMemberOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.PromoteSquadMemberOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24734c0
	void PlaceItemInInventoryOrHolster(struct AItem* Item, bool tryToJoinItems); // Function ConZ.Prisoner.PlaceItemInInventoryOrHolster // (Final|Native|Public|BlueprintCallable) // @ game+0x24733f0
	void OverrideIsLimping(bool Value); // Function ConZ.Prisoner.OverrideIsLimping // (Final|Native|Public|BlueprintCallable) // @ game+0x2473350
	void OpenInteractDefaultContextMenu(); // Function ConZ.Prisoner.OpenInteractDefaultContextMenu // (Final|Native|Public) // @ game+0x2473330
	void OnRep_VehicleWeaponAimingStance(); // Function ConZ.Prisoner.OnRep_VehicleWeaponAimingStance // (Final|Native|Protected) // @ game+0x2473310
	void OnRep_UserProfileName(); // Function ConZ.Prisoner.OnRep_UserProfileName // (Final|Native|Private) // @ game+0x2473250
	void OnRep_UserFakeName(); // Function ConZ.Prisoner.OnRep_UserFakeName // (Final|Native|Private) // @ game+0x2473210
	void OnRep_ThrowingComponent(); // Function ConZ.Prisoner.OnRep_ThrowingComponent // (Final|Native|Public) // @ game+0xbbc480
	void OnRep_ScopingWithItemInHandsState(); // Function ConZ.Prisoner.OnRep_ScopingWithItemInHandsState // (Final|Native|Private) // @ game+0x24731f0
	void OnRep_RotationTarget(); // Function ConZ.Prisoner.OnRep_RotationTarget // (Final|Native|Private) // @ game+0x24731d0
	void OnRep_RightShoulderHolsteredItem(); // Function ConZ.Prisoner.OnRep_RightShoulderHolsteredItem // (Final|Native|Private) // @ game+0x24731a0
	void OnRep_PlayingInstrumentState(); // Function ConZ.Prisoner.OnRep_PlayingInstrumentState // (Final|Native|Private) // @ game+0x2473170
	void OnRep_PackedWetness(uint32_t oldWetness); // Function ConZ.Prisoner.OnRep_PackedWetness // (Final|Native|Private) // @ game+0x24730e0
	void OnRep_PackedBooleans(); // Function ConZ.Prisoner.OnRep_PackedBooleans // (Final|Native|Private) // @ game+0x24730c0
	void OnRep_Mount(); // Function ConZ.Prisoner.OnRep_Mount // (Native|Protected) // @ game+0x24730a0
	void OnRep_MeleeTarget(); // Function ConZ.Prisoner.OnRep_MeleeTarget // (Final|Native|Private) // @ game+0x2473080
	void OnRep_LeftShoulderHolsteredItem(); // Function ConZ.Prisoner.OnRep_LeftShoulderHolsteredItem // (Final|Native|Private) // @ game+0x2473050
	void OnRep_ItemInHandsVisualObstructionDepth(char oldValue); // Function ConZ.Prisoner.OnRep_ItemInHandsVisualObstructionDepth // (Final|Native|Private) // @ game+0x2472fd0
	void OnRep_HandBondage(); // Function ConZ.Prisoner.OnRep_HandBondage // (Final|Native|Public) // @ game+0x2472fb0
	void OnRep_GroundStance(enum class EPrisonerGroundStance oldValue); // Function ConZ.Prisoner.OnRep_GroundStance // (Final|Native|Private) // @ game+0x2472f30
	void OnRep_GameEvent(struct AGameEventBase* oldValue); // Function ConZ.Prisoner.OnRep_GameEvent // (Final|Native|Public) // @ game+0x2472ea0
	void OnRep_FreeLookEnabled(); // Function ConZ.Prisoner.OnRep_FreeLookEnabled // (Final|Native|Private) // @ game+0x2472e80
	void OnRep_FishingComponent(); // Function ConZ.Prisoner.OnRep_FishingComponent // (Final|Native|Public) // @ game+0xbbc480
	void OnRep_DeluxeVersion(); // Function ConZ.Prisoner.OnRep_DeluxeVersion // (Final|Native|Private) // @ game+0x2472e60
	void OnRep_CurrentMontage(enum class EPrisonerMontage oldGesture); // Function ConZ.Prisoner.OnRep_CurrentMontage // (Final|Native|Private) // @ game+0x2472de0
	void OnRep_CombatMode(enum class EPrisonerCombatMode oldValue); // Function ConZ.Prisoner.OnRep_CombatMode // (Final|Native|Private) // @ game+0x2472d60
	void OnRep_CarryingItemState(); // Function ConZ.Prisoner.OnRep_CarryingItemState // (Final|Native|Private) // @ game+0x2472d40
	void OnRep_AquaticMode(enum class EPrisonerAquaticMode oldValue); // Function ConZ.Prisoner.OnRep_AquaticMode // (Final|Native|Private) // @ game+0x2472ca0
	void OnRep_AimOffset(); // Function ConZ.Prisoner.OnRep_AimOffset // (Final|Native|Private) // @ game+0x2472d20
	void OnRep_AerialPose(enum class EPrisonerAerialPose oldValue); // Function ConZ.Prisoner.OnRep_AerialPose // (Final|Native|Private) // @ game+0x2472ca0
	void OnPlaceableDestroyed(struct AActor* Actor); // Function ConZ.Prisoner.OnPlaceableDestroyed // (Final|Native|Public) // @ game+0x2472bd0
	void OnMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function ConZ.Prisoner.OnMovementUpdated // (Native|Public|HasDefaults) // @ game+0x2472aa0
	void OnMidiEvent(struct UMIDIDeviceController* MIDIDeviceController, int32_t Timestamp, enum class EMIDIEventType EventType, int32_t Channel, int32_t ControlID, int32_t Velocity, int32_t RawEventType); // Function ConZ.Prisoner.OnMidiEvent // (Final|Native|Private) // @ game+0x2472890
	void OnHearNoise(struct APawn* instigatorPawn, struct FVector& Location, float Volume); // Function ConZ.Prisoner.OnHearNoise // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x2472770
	void OnExaminedPrisonerUnequippedItem(struct UPrisonerInventoryComponent* inventory, struct AItem* Item); // Function ConZ.Prisoner.OnExaminedPrisonerUnequippedItem // (Final|Native|Public) // @ game+0x24726a0
	void OnExaminedPrisonerEquippedItem(struct UPrisonerInventoryComponent* inventory, struct AItem* Item); // Function ConZ.Prisoner.OnExaminedPrisonerEquippedItem // (Final|Native|Public) // @ game+0x24725d0
	void OnBorderCrossingPenaltyChange(struct APrisoner* Prisoner, enum class EPrisonerBorderCrossingPenalty newPenalty); // Function ConZ.Prisoner.OnBorderCrossingPenaltyChange // (Final|Native|Public) // @ game+0x2472500
	void NetMulticast_UpdateAdminStates(char states); // Function ConZ.Prisoner.NetMulticast_UpdateAdminStates // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2472480
	void NetMulticast_TurnPrisonerInPlace(float targetRotationYaw); // Function ConZ.Prisoner.NetMulticast_TurnPrisonerInPlace // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x24723f0
	void NetMulticast_SpawnVomitingEffects(bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnVomitingEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2472360
	void NetMulticast_SpawnUrinationEffects(bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnUrinationEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24722d0
	void NetMulticast_SpawnDefecationEffects(bool shouldBeDiarrhea, bool isForced); // Function ConZ.Prisoner.NetMulticast_SpawnDefecationEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24721f0
	void NetMulticast_SetUserFakeName(struct FString fakeName); // Function ConZ.Prisoner.NetMulticast_SetUserFakeName // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2472130
	void NetMulticast_SetupInitialHandBondage(); // Function ConZ.Prisoner.NetMulticast_SetupInitialHandBondage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x24721d0
	void NetMulticast_SetActiveParachute(struct AClothesItem* Parachute); // Function ConZ.Prisoner.NetMulticast_SetActiveParachute // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c96f0
	void NetMulticast_PostAudioEventOnPrisoner(struct UAkAudioEvent* akEvent, bool multiCastToClients); // Function ConZ.Prisoner.NetMulticast_PostAudioEventOnPrisoner // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2472060
	void NetMulticast_PlayLockpickingProtectionEffects(struct UObject* Lockpickable); // Function ConZ.Prisoner.NetMulticast_PlayLockpickingProtectionEffects // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2471fd0
	void NetMulticast_PlayFootstepEnhancerSound(); // Function ConZ.Prisoner.NetMulticast_PlayFootstepEnhancerSound // (Net|Native|Event|NetMulticast|Public) // @ game+0x2471fb0
	void NetMulticast_InstrumentStopTone(enum class EPlayableInstrumentTone tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.NetMulticast_InstrumentStopTone // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2471ea0
	void NetMulticast_InstrumentPlayTone(enum class EPlayableInstrumentTone tone, float timeOffset, int32_t octave); // Function ConZ.Prisoner.NetMulticast_InstrumentPlayTone // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2471d90
	void NetMulticast_InstrumentOctaveUp(); // Function ConZ.Prisoner.NetMulticast_InstrumentOctaveUp // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23dbf20
	void NetMulticast_InstrumentOctaveDown(); // Function ConZ.Prisoner.NetMulticast_InstrumentOctaveDown // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2383ac0
	void NetMulticast_HandleLanded(struct FVector impactVelocity, struct FHitResult HitResult); // Function ConZ.Prisoner.NetMulticast_HandleLanded // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x2471c70
	void NetMulticast_ForceDeluxePlayer(enum class EDeluxeVersion DeluxeVersion); // Function ConZ.Prisoner.NetMulticast_ForceDeluxePlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2471bf0
	void NetMulticast_DespawnUrinationEffects(); // Function ConZ.Prisoner.NetMulticast_DespawnUrinationEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c9860
	void NetMulticast_ApplyPlasticSurgery(struct FCharacterTemplate CharacterTemplate); // Function ConZ.Prisoner.NetMulticast_ApplyPlasticSurgery // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2471b10
	void NetMulticast_ApplyHaircutAndMakeup(struct FCharacterTemplate CharacterTemplate); // Function ConZ.Prisoner.NetMulticast_ApplyHaircutAndMakeup // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2471a30
	void NetMulticast_AIMovementFinished(bool wasSuccessful); // Function ConZ.Prisoner.NetMulticast_AIMovementFinished // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x24719a0
	void LeftShoulderHolsterInteract(); // Function ConZ.Prisoner.LeftShoulderHolsterInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x2471980
	bool IsThrowing(); // Function ConZ.Prisoner.IsThrowing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471950
	bool IsThrowAiming(); // Function ConZ.Prisoner.IsThrowAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471920
	bool IsTeleportInProgress(); // Function ConZ.Prisoner.IsTeleportInProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24718f0
	bool IsSquadInvitationReceived(); // Function ConZ.Prisoner.IsSquadInvitationReceived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24718c0
	bool IsPostFreeLookControllerRotationBlendActive(); // Function ConZ.Prisoner.IsPostFreeLookControllerRotationBlendActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471890
	bool IsNightVisionEnabled(); // Function ConZ.Prisoner.IsNightVisionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471860
	bool IsMemberOfMySquad(struct APrisoner* Prisoner); // Function ConZ.Prisoner.IsMemberOfMySquad // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24717c0
	bool IsMemberOf(struct AConZSquad* Squad); // Function ConZ.Prisoner.IsMemberOf // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471720
	bool IsLimping(); // Function ConZ.Prisoner.IsLimping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24716e0
	bool IsInFishingMinigame(); // Function ConZ.Prisoner.IsInFishingMinigame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24716b0
	bool IsInCombatMode(); // Function ConZ.Prisoner.IsInCombatMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471680
	bool IsGameEventRoundStarted(); // Function ConZ.Prisoner.IsGameEventRoundStarted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471650
	bool IsFreeLookEnabled(); // Function ConZ.Prisoner.IsFreeLookEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471620
	bool IsFishing(); // Function ConZ.Prisoner.IsFishing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24715f0
	bool IsAliveInGameEvent(); // Function ConZ.Prisoner.IsAliveInGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24715c0
	bool IsActorMeleeTargetCandidate(struct AActor* Actor); // Function ConZ.Prisoner.IsActorMeleeTargetCandidate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2471520
	bool IsActivelyParticipatingInGameEvent(); // Function ConZ.Prisoner.IsActivelyParticipatingInGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24714f0
	bool IsActivelyFishing(); // Function ConZ.Prisoner.IsActivelyFishing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24714c0
	void InventoryComponent_ItemUnequipped(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.Prisoner.InventoryComponent_ItemUnequipped // (Final|Native|Private) // @ game+0x24713f0
	void InventoryComponent_ItemEquipped(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.Prisoner.InventoryComponent_ItemEquipped // (Final|Native|Private) // @ game+0x2471320
	void InteractWithObjectOnServer(struct UObject* interactable, enum class EInteractionType interactionType, struct FInteractionData InteractionData); // Function ConZ.Prisoner.InteractWithObjectOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2471180
	void InputComponent_TryInteractDefault(); // Function ConZ.Prisoner.InputComponent_TryInteractDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x2471160
	void InitFromCharacterTemplate(struct FCharacterTemplate& CharacterTemplate); // Function ConZ.Prisoner.InitFromCharacterTemplate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2471080
	void HoveredActorChanged__DelegateSignature(struct AActor* hoveredActor); // DelegateFunction ConZ.Prisoner.HoveredActorChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void HolsterItemOnServer(struct AItem* Item, int32_t attachmentSocketHelper); // Function ConZ.Prisoner.HolsterItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2470fb0
	void HitReactComponent_StateChanged(); // Function ConZ.Prisoner.HitReactComponent_StateChanged // (Final|Native|Private) // @ game+0x2470f90
	void HideSpawnScreen(); // Function ConZ.Prisoner.HideSpawnScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x2470f70
	bool HasItemOfClass(struct UObject* ItemClass); // Function ConZ.Prisoner.HasItemOfClass // (Final|Native|Public|BlueprintCallable) // @ game+0x2470ed0
	bool HasItem(struct AItem* Item); // Function ConZ.Prisoner.HasItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470e30
	bool HasHandsUp(); // Function ConZ.Prisoner.HasHandsUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470e00
	bool HasHandBondage(); // Function ConZ.Prisoner.HasHandBondage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470dd0
	void HandleIntroCinematicFinished(struct AConZCameraManager* cameraManager); // Function ConZ.Prisoner.HandleIntroCinematicFinished // (Final|Native|Public) // @ game+0x2470d40
	float GetWetness(); // Function ConZ.Prisoner.GetWetness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470d10
	float GetWeightLoad(); // Function ConZ.Prisoner.GetWeightLoad // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470ce0
	struct UPrisonerThrowComponent* GetThrowingComponent(); // Function ConZ.Prisoner.GetThrowingComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470cb0
	struct UMaterialInstanceDynamic* GetTacticsBlobMaterial(); // Function ConZ.Prisoner.GetTacticsBlobMaterial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470c80
	struct AConZSquad* GetSquad(); // Function ConZ.Prisoner.GetSquad // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470c50
	bool GetShouldIgnoreHeadTurningAndLeaning(); // Function ConZ.Prisoner.GetShouldIgnoreHeadTurningAndLeaning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470c20
	struct FRotator GetSavedSpawnRotation(); // Function ConZ.Prisoner.GetSavedSpawnRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470be0
	bool GetSavedSpawnLocationActive(); // Function ConZ.Prisoner.GetSavedSpawnLocationActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470bb0
	struct FVector GetSavedSpawnLocation(); // Function ConZ.Prisoner.GetSavedSpawnLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470b70
	struct AActor* GetRotationTarget(); // Function ConZ.Prisoner.GetRotationTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470b50
	struct UPrisonerPrisonWalletComponent* GetPrisonWalletComponent(); // Function ConZ.Prisoner.GetPrisonWalletComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470af0
	struct UPrisonerAnimInstance* GetPrisonerAnimInstance(); // Function ConZ.Prisoner.GetPrisonerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470b20
	struct USkeletalMeshComponent* GetPenisSkeletalMeshComponent(); // Function ConZ.Prisoner.GetPenisSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470ac0
	float GetPartWetness(enum class EPrisonerWettablePart part); // Function ConZ.Prisoner.GetPartWetness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470a30
	float GetPartWaterWeight(enum class EPrisonerWettablePart part); // Function ConZ.Prisoner.GetPartWaterWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24709a0
	struct UPrisonerMusicPlayerComponent* GetMusicPlayerComponent(); // Function ConZ.Prisoner.GetMusicPlayerComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470970
	enum class EMotionIntensity GetMotionIntensity(); // Function ConZ.Prisoner.GetMotionIntensity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470940
	enum class EPrisonerMeleeTargetSelectionMode GetMeleeTargetSelectionMode(); // Function ConZ.Prisoner.GetMeleeTargetSelectionMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470910
	struct AActor* GetMeleeTarget(); // Function ConZ.Prisoner.GetMeleeTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24708e0
	float GetMaxPartWaterWeight(enum class EPrisonerWettablePart part); // Function ConZ.Prisoner.GetMaxPartWaterWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470850
	struct FRotator GetLookatMeleeTargetAimOffset(); // Function ConZ.Prisoner.GetLookatMeleeTargetAimOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470810
	float GetLeanAmount(); // Function ConZ.Prisoner.GetLeanAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24707e0
	struct AItem* GetItemOfClass(struct UObject* ItemClass); // Function ConZ.Prisoner.GetItemOfClass // (Final|Native|Public|BlueprintCallable) // @ game+0x2470740
	struct AItem* GetItemInHands(); // Function ConZ.Prisoner.GetItemInHands // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470720
	bool GetIsInFirstPersonView(); // Function ConZ.Prisoner.GetIsInFirstPersonView // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24706f0
	struct UBondageComponent* GetHandBondage(); // Function ConZ.Prisoner.GetHandBondage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24706c0
	enum class EPrisonerGroundStance GetGroundStance(); // Function ConZ.Prisoner.GetGroundStance // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470680
	struct AGameEventBase* GetGameEvent(); // Function ConZ.Prisoner.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470650
	struct UPrisonerFishingComponent* GetFishingComponent(); // Function ConZ.Prisoner.GetFishingComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470620
	float GetDesiredLeanAmount(); // Function ConZ.Prisoner.GetDesiredLeanAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24705f0
	struct FGameplayTag GetCurrentHitReactType(); // Function ConZ.Prisoner.GetCurrentHitReactType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24705b0
	float GetAngularVelocity(); // Function ConZ.Prisoner.GetAngularVelocity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470580
	struct FRotator GetAimOffset(); // Function ConZ.Prisoner.GetAimOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2470540
	bool GameEventFriendlyFireCheck(struct APrisoner* Other); // Function ConZ.Prisoner.GameEventFriendlyFireCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24704a0
	struct AActor* FindNextOrPreviousMeleeTarget(struct AActor* Target, bool Next); // Function ConZ.Prisoner.FindNextOrPreviousMeleeTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24703d0
	void ExamineItem(struct AItem* Item); // Function ConZ.Prisoner.ExamineItem // (Final|Native|Public|BlueprintCallable) // @ game+0x2470340
	void EquippedNightVisionGoggles_ActivatedChanged(struct ANightVisionGogglesItem* Item); // Function ConZ.Prisoner.EquippedNightVisionGoggles_ActivatedChanged // (Final|Native|Private) // @ game+0x24702b0
	void DropItemFromHands(); // Function ConZ.Prisoner.DropItemFromHands // (Final|Native|Public|BlueprintCallable) // @ game+0x2470290
	void DetonateHead(bool shouldDestroyHeadgear); // Function ConZ.Prisoner.DetonateHead // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2470200
	void DestroyThrowingComponent(); // Function ConZ.Prisoner.DestroyThrowingComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x24701e0
	void DestroyPrisonWalletComponent(); // Function ConZ.Prisoner.DestroyPrisonWalletComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x24701c0
	void DestroyPlaceable(struct FDbIntegerId ID); // Function ConZ.Prisoner.DestroyPlaceable // (Final|Native|Public) // @ game+0x2470140
	void DestroyFishingComponent(); // Function ConZ.Prisoner.DestroyFishingComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x2470120
	void DemoteSquadMemberOnServer(struct FDbIntegerId UserProfileId); // Function ConZ.Prisoner.DemoteSquadMemberOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2470090
	struct UPrisonerThrowComponent* CreateThrowingComponent(struct AItem* itemToThrow, enum class EThrowingAnimationType animationType); // Function ConZ.Prisoner.CreateThrowingComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x246ffc0
	void CreateSquadOnServer(); // Function ConZ.Prisoner.CreateSquadOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x246ffa0
	struct UPrisonerPrisonWalletComponent* CreatePrisonWalletComponent(); // Function ConZ.Prisoner.CreatePrisonWalletComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x246ff70
	struct UPrisonerMusicPlayerComponent* CreateMusicPlayerComponent(); // Function ConZ.Prisoner.CreateMusicPlayerComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x246ff40
	struct UPrisonerFishingComponent* CreateFishingComponent(); // Function ConZ.Prisoner.CreateFishingComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x246ff10
	void ConstructWristwatchChildActor(); // Function ConZ.Prisoner.ConstructWristwatchChildActor // (Final|Native|Public|BlueprintCallable) // @ game+0x246fef0
	void CommitSuicide(); // Function ConZ.Prisoner.CommitSuicide // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x246fed0
	void Client_TriggerMeleeHitEffect(); // Function ConZ.Prisoner.Client_TriggerMeleeHitEffect // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x246feb0
	void Client_TriggerBulletHitEffectWithOverride(struct UProjectileImpactEffects* overrideProjectileImpactEffects, struct FHitResult overrideHitResult); // Function ConZ.Prisoner.Client_TriggerBulletHitEffectWithOverride // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x246fd80
	void Client_TriggerBulletHitEffect(); // Function ConZ.Prisoner.Client_TriggerBulletHitEffect // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x246fd60
	void Client_SpawnScreenAllowWakeUp(); // Function ConZ.Prisoner.Client_SpawnScreenAllowWakeUp // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x240a660
	void Client_ShowSurvivalTip(struct FName tipName); // Function ConZ.Prisoner.Client_ShowSurvivalTip // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246fcd0
	void Client_ShowSpawnScreen(bool loadoutMenu); // Function ConZ.Prisoner.Client_ShowSpawnScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2454cc0
	void Client_SetSavedSpawnLocation(bool Active, struct FVector Location, struct FVector Velocity, struct FRotator Rotation); // Function ConZ.Prisoner.Client_SetSavedSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x246fb40
	void Client_SetIsEligibleForFreePlasticSurgeryChanged(bool Value); // Function ConZ.Prisoner.Client_SetIsEligibleForFreePlasticSurgeryChanged // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x246fab0
	void Client_OpenParachute(struct AClothesItem* Parachute); // Function ConZ.Prisoner.Client_OpenParachute // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x246fa20
	void Client_OnTakeDamage(float Damage, struct FDamageEvent DamageEvent, struct AController* eventInstigator, struct AActor* damageObject); // Function ConZ.Prisoner.Client_OnTakeDamage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f8c0
	void Client_OnPhoenixTearsInjection(); // Function ConZ.Prisoner.Client_OnPhoenixTearsInjection // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x234bb80
	void Client_OnNoiseInstigated(float noiseLevel); // Function ConZ.Prisoner.Client_OnNoiseInstigated // (Net|Native|Event|Public|NetClient) // @ game+0x246f830
	void Client_OnExitPhotoMode(); // Function ConZ.Prisoner.Client_OnExitPhotoMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f810
	void Client_OnEnterPhotoMode(); // Function ConZ.Prisoner.Client_OnEnterPhotoMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f7f0
	void Client_OnAIDetectionTimerChanged(float detectionTimer); // Function ConZ.Prisoner.Client_OnAIDetectionTimerChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f760
	void Client_LoadAmmoIntoMagazine(struct AWeaponAttachmentMagazine* magazine, struct TArray<struct FAmmunitionData> ammoData); // Function ConZ.Prisoner.Client_LoadAmmoIntoMagazine // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x246f670
	void Client_Interact(struct UObject* interactable, enum class EInteractionType interactionType, struct FInteractionData InteractionData); // Function ConZ.Prisoner.Client_Interact // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f4d0
	void Client_HighlightKeyboardOnDamage(); // Function ConZ.Prisoner.Client_HighlightKeyboardOnDamage // (Final|Net|Native|Event|Private|NetClient) // @ game+0x246f4b0
	void Client_HideSpawnScreen(); // Function ConZ.Prisoner.Client_HideSpawnScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x246f490
	void Client_FadeInVision(float Duration); // Function ConZ.Prisoner.Client_FadeInVision // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x246f400
	void Client_DeSyncReportPositionData(struct FDateTime Time, struct FVector position); // Function ConZ.Prisoner.Client_DeSyncReportPositionData // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x246f330
	void Client_DeSyncReportInitialTime(struct FDateTime initialTime); // Function ConZ.Prisoner.Client_DeSyncReportInitialTime // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x246f2b0
	void Client_ActivateIntroCinematic(float initialAltitude); // Function ConZ.Prisoner.Client_ActivateIntroCinematic // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2383da0
	void ClearMalfunction(enum class EWeaponMalfunction malfunction); // Function ConZ.Prisoner.ClearMalfunction // (Final|Native|Public|BlueprintCallable) // @ game+0x246f230
	void ClearIsLimpingOverride(); // Function ConZ.Prisoner.ClearIsLimpingOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x246f200
	void ClearGameEventLoadout(); // Function ConZ.Prisoner.ClearGameEventLoadout // (Final|Native|Public|BlueprintCallable) // @ game+0x246f1e0
	void ClearEquipment(); // Function ConZ.Prisoner.ClearEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x246f1c0
	struct AActor* ChooseFirstMeleeTarget(); // Function ConZ.Prisoner.ChooseFirstMeleeTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x246f190
	void ChangeSquadData(struct FString Name, struct FString Message, struct FString information, struct FConZSquadEmblem emblem); // Function ConZ.Prisoner.ChangeSquadData // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x246f000
	void CarryItem(struct AItem* Item); // Function ConZ.Prisoner.CarryItem // (Final|Native|Public|BlueprintCallable) // @ game+0x246ef70
	void CarriedItemsVisibilityChanged__DelegateSignature(bool Visible); // DelegateFunction ConZ.Prisoner.CarriedItemsVisibilityChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void CapsuleComponent_PhysicsVolumeChanged(struct APhysicsVolume* Volume); // Function ConZ.Prisoner.CapsuleComponent_PhysicsVolumeChanged // (Final|Native|Private) // @ game+0x246eee0
	bool CanTakeItemInHands(struct AItem* Item); // Function ConZ.Prisoner.CanTakeItemInHands // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x246ee00
	void CancelSquadInvitationOnServer(); // Function ConZ.Prisoner.CancelSquadInvitationOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x246eec0
	void CancelSquadInvitationOnClient(); // Function ConZ.Prisoner.CancelSquadInvitationOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x239a020
	void CancelInteractableDragging(); // Function ConZ.Prisoner.CancelInteractableDragging // (Final|Native|Public) // @ game+0x246eea0
	int32_t CalculateRespawnPriceBasedOnSquadSize(int32_t defaultPrice, enum class EPrisonerCommonSpawnLocation spawnLocation); // Function ConZ.Prisoner.CalculateRespawnPriceBasedOnSquadSize // (Final|Native|Public|BlueprintCallable) // @ game+0x246ed30
	float CalculateAIPerceptionPercentage(); // Function ConZ.Prisoner.CalculateAIPerceptionPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x246ed00
	void BorderCrossingPenaltyChange__DelegateSignature(struct APrisoner* sender, enum class EPrisonerBorderCrossingPenalty newPenalty); // DelegateFunction ConZ.Prisoner.BorderCrossingPenaltyChange__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void BaseInteractionComponent_OnBaseInteractionEvent(struct UBaseInteractionComponent* Component, struct FBaseInteractionEvent& BaseInteractionEvent); // Function ConZ.Prisoner.BaseInteractionComponent_OnBaseInteractionEvent // (Final|Native|Private|HasOutParms) // @ game+0x246ec10
	bool AreGenitalsExposed(); // Function ConZ.Prisoner.AreGenitalsExposed // (Final|Native|Public|Const) // @ game+0x246ebe0
	bool AreBreastsExposed(); // Function ConZ.Prisoner.AreBreastsExposed // (Final|Native|Public|Const) // @ game+0x246ebb0
	void AddWeaponAttachment(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.Prisoner.AddWeaponAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x246eae0
	void AddToSquadOnServer(struct FDbIntegerId squadId); // Function ConZ.Prisoner.AddToSquadOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x246ea50
	void AddHandBondage(struct AItem* bondageItem); // Function ConZ.Prisoner.AddHandBondage // (Final|Native|Public|BlueprintCallable) // @ game+0x246e9c0
	void AcceptSquadInvitationOnServer(struct APrisoner* invitor, bool accepted); // Function ConZ.Prisoner.AcceptSquadInvitationOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x246e8f0
};

// Class ConZ.PrisonerUIData
// Size: 0x808 (Inherited: 0x28)
struct UPrisonerUIData : UObject {
	struct FText _attributeDescriptions[0x54]; // 0x28(0x7e0)
};

// Class ConZ.PrisonerSkillsUIData
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerSkillsUIData : UObject {
};

// Class ConZ.PrisonerSkillUIData
// Size: 0x50 (Inherited: 0x28)
struct UPrisonerSkillUIData : UObject {
	struct FText _description; // 0x28(0x18)
	struct USkill* _skillClass; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class ConZ.PrisonerSkillUIData_Endurance
// Size: 0x60 (Inherited: 0x50)
struct UPrisonerSkillUIData_Endurance : UPrisonerSkillUIData {
	char pad_50[0x10]; // 0x50(0x10)
};

// Class ConZ.EngineeringSkill
// Size: 0x190 (Inherited: 0xb0)
struct UEngineeringSkill : UIntelligenceSkill {
	struct FEngineeringSkillExperienceAwards NoSkillExperienceAwards; // 0xb0(0x10)
	struct FEngineeringSkillExperienceAwards BasicSkillExperienceAwards; // 0xc0(0x10)
	struct FEngineeringSkillExperienceAwards MediumSkillExperienceAwards; // 0xd0(0x10)
	struct FEngineeringSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xe0(0x10)
	struct FEngineeringSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xf0(0x10)
	struct FEngineeringSkillParametersPerSkillLevel NoSkillParameters; // 0x100(0x1c)
	struct FEngineeringSkillParametersPerSkillLevel BasicSkillParameters; // 0x11c(0x1c)
	struct FEngineeringSkillParametersPerSkillLevel MediumSkillParameters; // 0x138(0x1c)
	struct FEngineeringSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x154(0x1c)
	struct FEngineeringSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x170(0x1c)
	char pad_18C[0x4]; // 0x18c(0x04)
};

// Class ConZ.EntityDebuggerEntitySetup
// Size: 0x90 (Inherited: 0x80)
struct UEntityDebuggerEntitySetup : UEntitySetup {
	bool DrawQuerySphere; // 0x80(0x01)
	bool DrawTopLevelEntitiesOnly; // 0x81(0x01)
	bool DrawEntityBounds; // 0x82(0x01)
	bool DrawEntityDebugStrings; // 0x83(0x01)
	bool DrawEntityComponentDebugStrings; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	int32_t DebugStringLineBreak; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class ConZ.EntityLifeTimeComponentSetup
// Size: 0x48 (Inherited: 0x48)
struct UEntityLifeTimeComponentSetup : UEntityComponentSetup {
};

// Class ConZ.EntityOverlapDetectionComponent
// Size: 0x180 (Inherited: 0xb0)
struct UEntityOverlapDetectionComponent : UActorComponent {
	char pad_B0[0x30]; // 0xb0(0x30)
	struct TArray<struct UEntitySetup*> _observedEntitySetupClasses; // 0xe0(0x10)
	float _narrowPhaseRadius; // 0xf0(0x04)
	char pad_F4[0x8c]; // 0xf4(0x8c)
};

// Class ConZ.EntitySystem
// Size: 0x7a0 (Inherited: 0x28)
struct UEntitySystem : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UEntitySystemSettings* _settings; // 0x38(0x08)
	char pad_40[0x6c0]; // 0x40(0x6c0)
	struct TMap<struct UObject*, int32_t> _uobjectReferences; // 0x700(0x50)
	char pad_750[0x50]; // 0x750(0x50)
};

// Class ConZ.EntitySystemSettings
// Size: 0x88 (Inherited: 0x28)
struct UEntitySystemSettings : UObject {
	struct TArray<struct FEntityToCreateOnStartupParams> EntitiesToCreateOnStartup; // 0x28(0x10)
	struct TMap<struct FName, struct UEntitySetup*> EntitiesToDestroyOnDisabledSetting; // 0x38(0x50)
};

// Class ConZ.EntitySystemSettingsProvider
// Size: 0x28 (Inherited: 0x28)
struct UEntitySystemSettingsProvider : UInterface {
};

// Class ConZ.EnvironmentDescriptionComponent
// Size: 0x500 (Inherited: 0x500)
struct UEnvironmentDescriptionComponent : UStaticMeshComponent {
	enum class EEnvironmentClass EnvironmentClass; // 0x4f8(0x01)
	bool IsUnderground; // 0x4f9(0x01)
	bool IsAbandonedBunker; // 0x4fa(0x01)
	bool ShouldBlockWeatherEffects; // 0x4fb(0x01)
};

// Class ConZ.EventInsertCartridge
// Size: 0xa0 (Inherited: 0x90)
struct UEventInsertCartridge : UWeaponActionReloadSequence {
	struct FName MontageEndSectionName; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)

	int32_t GetMaxCartridgesCount(); // Function ConZ.EventInsertCartridge.GetMaxCartridgesCount // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x23d7cf0
};

// Class ConZ.EventInsertMagazine
// Size: 0x98 (Inherited: 0x90)
struct UEventInsertMagazine : UWeaponActionReloadSequence {
	bool _addAmmoOnBegin; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)

	void AddAmmo(); // Function ConZ.EventInsertMagazine.AddAmmo // (Final|Native|Public|BlueprintCallable) // @ game+0x23d7cb0
};

// Class ConZ.ExamineAction
// Size: 0xa8 (Inherited: 0xa8)
struct UExamineAction : UInteractionAction {
};

// Class ConZ.ExamineAssetData
// Size: 0x200 (Inherited: 0x30)
struct UExamineAssetData : UInteractionAssetData {
	struct FExamineItemSpawnerData ExamineData; // 0x30(0xb0)
	struct FItemSpawnerPresetWithOverrides SpawnerPreset; // 0xe0(0xb8)
	struct UAkAudioEvent* StartExamineAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* StopExamineAudioEvent; // 0x1a0(0x08)
	enum class ENoiseLevel noiseLevel; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
	struct TArray<struct UExamineMeshNotify*> ExamineMeshNotifies; // 0x1b0(0x10)
	bool CanStore; // 0x1c0(0x01)
	bool CanSave; // 0x1c1(0x01)
	char pad_1C2[0x3e]; // 0x1c2(0x3e)
};

// Class ConZ.ExaminePrisonerAction
// Size: 0xb0 (Inherited: 0xa8)
struct UExaminePrisonerAction : UExamineAction {
	char pad_A8[0x8]; // 0xa8(0x08)
};

// Class ConZ.ExpandableContainer
// Size: 0x288 (Inherited: 0x268)
struct UExpandableContainer : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _titleText; // 0x278(0x08)
	struct UNamedSlot* _contentNamedSlot; // 0x280(0x08)

	void InvokeExpansionChanged(bool maximized); // Function ConZ.ExpandableContainer.InvokeExpansionChanged // (Final|Native|Private|BlueprintCallable) // @ game+0x23d7d20
};

// Class ConZ.ExpirableEntityComponentSetup
// Size: 0x50 (Inherited: 0x48)
struct UExpirableEntityComponentSetup : UEntityComponentSetup {
	float ExpirationTimeHours; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.ExplosionDamageType
// Size: 0x40 (Inherited: 0x40)
struct UExplosionDamageType : UDamageType {
};

// Class ConZ.FailurePenalty
// Size: 0x30 (Inherited: 0x28)
struct UFailurePenalty : UObject {
	bool _shouldExecuteOnClients; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class ConZ.ExplosionFailurePenalty
// Size: 0x68 (Inherited: 0x30)
struct UExplosionFailurePenalty : UFailurePenalty {
	float _explosionBaseDamage; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0x38(0x10)
	float _minimumDamage; // 0x48(0x04)
	float _damageInnerRadius; // 0x4c(0x04)
	float _damageOuterRadius; // 0x50(0x04)
	float _damageFalloff; // 0x54(0x04)
	struct UParticleSystem* _explosionPS; // 0x58(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x60(0x08)
};

// Class ConZ.ExplosiveProtectionItemComponentState
// Size: 0x48 (Inherited: 0x40)
struct UExplosiveProtectionItemComponentState : UItemComponentStateBase {
	bool IsArmed; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.ExplosiveProtectionItemComponent
// Size: 0x150 (Inherited: 0xc8)
struct UExplosiveProtectionItemComponent : UItemComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct AMinigame* _minigameClass; // 0xd0(0x08)
	struct UBaseItemTag* _minigameToolTag; // 0xd8(0x08)
	struct ULockItemTag* _lockItem; // 0xe0(0x08)
	struct ULockData* _lockData; // 0xe8(0x08)
	struct UParticleSystem* _explosionParticles; // 0xf0(0x08)
	struct FVector _explosionParticlesLocation; // 0xf8(0x0c)
	char pad_104[0x4]; // 0x104(0x04)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x108(0x08)
	float _explosionBaseDamage; // 0x110(0x04)
	float _explosionMinimalDamage; // 0x114(0x04)
	float _explosionDamagePositionOffset; // 0x118(0x04)
	float _explosionDamageFalloff; // 0x11c(0x04)
	float _explosionInnerRadius; // 0x120(0x04)
	float _explosionOuterRadius; // 0x124(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0x128(0x10)
	float _hearingDamageRadius; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x140(0x08)
	bool _isArmed; // 0x148(0x01)
	char pad_149[0x7]; // 0x149(0x07)

	void NetMulticast_PlayDetonationEffects(); // Function ConZ.ExplosiveProtectionItemComponent.NetMulticast_PlayDetonationEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2353de0
};

// Class ConZ.ExplosiveTrapItem
// Size: 0xbe0 (Inherited: 0xae0)
struct AExplosiveTrapItem : ATrapItem {
	float _detonationDelay; // 0xae0(0x04)
	struct FVector _trapForwardVector; // 0xae4(0x0c)
	float _netCullDistanceSquaredMeters; // 0xaf0(0x04)
	char pad_AF4[0x4]; // 0xaf4(0x04)
	struct UAkAudioEvent* _triggerSound; // 0xaf8(0x08)
	struct UAkAudioEvent* _detonationSound; // 0xb00(0x08)
	struct UParticleSystem* _detonationParticles; // 0xb08(0x08)
	struct FTransform _detonationParticlesTransform; // 0xb10(0x30)
	bool _hasPrimaryExplosion; // 0xb40(0x01)
	char pad_B41[0x3]; // 0xb41(0x03)
	float _primaryBaseDamage; // 0xb44(0x04)
	float _primaryMinimumDamage; // 0xb48(0x04)
	float _primaryDamageInnerRadius; // 0xb4c(0x04)
	float _primaryDamageOuterRadius; // 0xb50(0x04)
	float _primaryDamageMinAngleDeg; // 0xb54(0x04)
	float _primaryDamageMaxAngleDeg; // 0xb58(0x04)
	float _primaryDamageChanceMultiplier; // 0xb5c(0x04)
	float _primaryDamageMinChance; // 0xb60(0x04)
	float _primaryDamageMaxChance; // 0xb64(0x04)
	float _primaryDamageFalloff; // 0xb68(0x04)
	float _primaryDamageAngleFalloff; // 0xb6c(0x04)
	struct FTargetTypeDamageMultiplier _primaryTargetTypeMultiplier; // 0xb70(0x10)
	bool _hasSecondaryExplosion; // 0xb80(0x01)
	char pad_B81[0x3]; // 0xb81(0x03)
	float _secondaryBaseDamage; // 0xb84(0x04)
	float _secondaryMinimumDamage; // 0xb88(0x04)
	float _secondaryDamageInnerRadius; // 0xb8c(0x04)
	float _secondaryDamageOuterRadius; // 0xb90(0x04)
	float _secondaryDamageFalloff; // 0xb94(0x04)
	struct FTargetTypeDamageMultiplier _secondaryTargetTypeMultiplier; // 0xb98(0x10)
	bool _instantlyDestroysStructures; // 0xba8(0x01)
	char pad_BA9[0x3]; // 0xba9(0x03)
	float _structureDestructionRadius; // 0xbac(0x04)
	float _minimalElementAreaCovered; // 0xbb0(0x04)
	float _structureDestructionMinAngleDeg; // 0xbb4(0x04)
	float _structureDestructionMaxAngleDeg; // 0xbb8(0x04)
	float _explosionDamagePositionOffset; // 0xbbc(0x04)
	float _explosionForce; // 0xbc0(0x04)
	char pad_BC4[0x1c]; // 0xbc4(0x1c)

	void Detonate(); // Function ConZ.ExplosiveTrapItem.Detonate // (Final|Native|Private) // @ game+0x23d7cd0
};

// Class ConZ.ExteriorCharacterSpawnerComponent
// Size: 0x210 (Inherited: 0x210)
struct UExteriorCharacterSpawnerComponent : UCharacterSpawnerComponent {
};

// Class ConZ.FakeItem
// Size: 0x298 (Inherited: 0x220)
struct AFakeItem : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _staticMesh; // 0x228(0x08)
	struct UNiagaraComponent* _niagaraComponent; // 0x230(0x08)
	struct FVector _spawnLocationOffset; // 0x238(0x0c)
	struct FRotator _spawnRotationOffset; // 0x244(0x0c)
	float _spawnRotationRandomization; // 0x250(0x04)
	float _lifeTimeAfterInteraction; // 0x254(0x04)
	float _additionalLifetimeForParticles; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct UAkAudioEvent* _interactionAudioEvent; // 0x260(0x08)
	struct UMaterialInterface* _niagaraParticleMaterial; // 0x268(0x08)
	float _niagaraParticleForce; // 0x270(0x04)
	float _niagaraParticleAmount; // 0x274(0x04)
	struct TArray<struct UMaterialInstanceDynamic*> _meshMaterials; // 0x278(0x10)
	struct UMaterialInstanceDynamic* _particleMaterial; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class ConZ.FamePointDebugComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UFamePointDebugComponent : UActorComponent {
	struct UFamePointDebugWidget* _widgetClass; // 0xb0(0x08)
	struct UFamePointDebugWidget* _widget; // 0xb8(0x08)
	float _famePoints; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)

	void OnRep_FamePoints(); // Function ConZ.FamePointDebugComponent.OnRep_FamePoints // (Final|Native|Private) // @ game+0x23d7df0
};

// Class ConZ.FamePointDebugWidget
// Size: 0x270 (Inherited: 0x268)
struct UFamePointDebugWidget : UUserWidget {
	struct UTextBlock* _famePointsText; // 0x268(0x08)
};

// Class ConZ.FamePointSettings
// Size: 0x198 (Inherited: 0x30)
struct UFamePointSettings : UDataAsset {
	struct FFamePointAwards Awards; // 0x30(0x138)
	struct FFamePointPenalties Penalties; // 0x168(0x1c)
	char pad_184[0x4]; // 0x184(0x04)
	struct UFamePointTagSettings* FamePointTagSettings; // 0x188(0x08)
	struct UCurveFloat* FameGainCurve; // 0x190(0x08)
};

// Class ConZ.FamePointStatics
// Size: 0x28 (Inherited: 0x28)
struct UFamePointStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.FamePointTagSettings
// Size: 0x120 (Inherited: 0x30)
struct UFamePointTagSettings : UDataAsset {
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenLootedForTag; // 0x30(0x50)
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenSellingForTag; // 0x80(0x50)
	struct TMap<struct FGameplayTag, float> _famePointAmountWhenBuyingForTag; // 0xd0(0x50)
};

// Class ConZ.FarmingSkill
// Size: 0x2e8 (Inherited: 0xb0)
struct UFarmingSkill : UIntelligenceSkill {
	struct FFarmingSkillParametersPerSkillLevel NoSkillParameters; // 0xb0(0x70)
	struct FFarmingSkillParametersPerSkillLevel BasicSkillParameters; // 0x120(0x70)
	struct FFarmingSkillParametersPerSkillLevel MediumSkillParameters; // 0x190(0x70)
	struct FFarmingSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x200(0x70)
	struct FFarmingSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0x270(0x70)
	char pad_2E0[0x8]; // 0x2e0(0x08)
};

// Class ConZ.FertilizerItemComponent
// Size: 0xd8 (Inherited: 0xc8)
struct UFertilizerItemComponent : UItemComponent {
	enum class EFertilizerType _type; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct UAnimMontage* _addFertilizerMontage; // 0xd0(0x08)
};

// Class ConZ.FillItemWithReplenishableResourceAssetData
// Size: 0x70 (Inherited: 0x30)
struct UFillItemWithReplenishableResourceAssetData : UInteractionAssetData {
	struct FFillItemWithReplenishableResourceInteractionData InteractionData; // 0x30(0x40)
};

// Class ConZ.FillWaterAction
// Size: 0xd0 (Inherited: 0xa8)
struct UFillWaterAction : UInteractionAction {
	char pad_A8[0x28]; // 0xa8(0x28)
};

// Class ConZ.FireItem
// Size: 0x9d0 (Inherited: 0x9c0)
struct AFireItem : AEquipmentItem {
	float _touchDamage; // 0x9c0(0x04)
	char pad_9C4[0x4]; // 0x9c4(0x04)
	struct UHeatSourceItemComponent* _heatSourceItemComponent; // 0x9c8(0x08)
};

// Class ConZ.FireplaceItem
// Size: 0x9f0 (Inherited: 0x9d0)
struct AFireplaceItem : AFireItem {
	struct UStaticMeshComponent* _collisionMesh; // 0x9d0(0x08)
	float _fireDamageProcessingPeriod; // 0x9d8(0x04)
	char pad_9DC[0x4]; // 0x9dc(0x04)
	float _fireBaseDamageToItemsPerSecond; // 0x9e0(0x04)
	float _fireDamageRadius; // 0x9e4(0x04)
	int32_t _minBurningStageForManualPutOut; // 0x9e8(0x04)
	char pad_9EC[0x4]; // 0x9ec(0x04)
};

// Class ConZ.FireworksItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct AFireworksItem : AItem {
	bool _isFiring; // 0x9a8(0x01)
	int32_t _totalShells; // 0x9b0(0x04)
	char pad_9B5[0xb]; // 0x9b5(0x0b)
	float _secondsBetweenLaunches; // 0x9c0(0x04)
	float _noiseLoudnessOnLaunch; // 0x9c4(0x04)
	bool _canBePickedUpWhenLit; // 0x9c8(0x01)
	bool _hasFuse; // 0x9c9(0x01)
	char pad_9CA[0x6]; // 0x9ca(0x06)

	void OnRep_IsFiring(); // Function ConZ.FireworksItem.OnRep_IsFiring // (Final|Native|Private) // @ game+0x23dc2d0
	void OnFuseLit(); // Function ConZ.FireworksItem.OnFuseLit // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void LaunchShell(); // Function ConZ.FireworksItem.LaunchShell // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void AutoLaunchShells(); // Function ConZ.FireworksItem.AutoLaunchShells // (Final|Native|Public|BlueprintCallable) // @ game+0x23dbc50
};

// Class ConZ.FireworksTrapItem
// Size: 0xb10 (Inherited: 0xae0)
struct AFireworksTrapItem : ATrapItem {
	struct UAkAudioEvent* _triggerSound; // 0xae0(0x08)
	int32_t _numShells; // 0xae8(0x04)
	float _shellLaunchPeriod; // 0xaec(0x04)
	float _detonationDelay; // 0xaf0(0x04)
	char pad_AF4[0xd]; // 0xaf4(0x0d)
	bool _isFiring; // 0xb01(0x01)
	char pad_B02[0xe]; // 0xb02(0x0e)

	void OnRep_IsFiring(); // Function ConZ.FireworksTrapItem.OnRep_IsFiring // (Final|Native|Private) // @ game+0x23dc2f0
	void LaunchShell(); // Function ConZ.FireworksTrapItem.LaunchShell // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void Detonate(); // Function ConZ.FireworksTrapItem.Detonate // (Final|Native|Private) // @ game+0x23dbd10
};

// Class ConZ.FishInstancedStaticMeshComponent
// Size: 0x5a0 (Inherited: 0x5a0)
struct UFishInstancedStaticMeshComponent : UInstancedStaticMeshComponent {
};

// Class ConZ.FishingAttachment
// Size: 0x9d0 (Inherited: 0x9b0)
struct AFishingAttachment : AItem {
	struct UStaticMesh* _staticMeshWhenAttached; // 0x9a8(0x08)
	char pad_9B8[0x18]; // 0x9b8(0x18)

	void Unequip(); // Function ConZ.FishingAttachment.Unequip // (Final|Native|Public|BlueprintCallable) // @ game+0x23dcfe0
	struct UStaticMesh* GetStaticMeshWhenAttached(); // Function ConZ.FishingAttachment.GetStaticMeshWhenAttached // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x23dbeb0
	struct USkeletalMesh* GetSkeletalMeshWhenAttached(); // Function ConZ.FishingAttachment.GetSkeletalMeshWhenAttached // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x23dbe80
	struct AFishingRod* GetOwningFishingRod(); // Function ConZ.FishingAttachment.GetOwningFishingRod // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23dbdf0
	void Equip(struct AFishingRod* FishingRod); // Function ConZ.FishingAttachment.Equip // (Native|Public|BlueprintCallable) // @ game+0x23dbd30
};

// Class ConZ.FishingAttachmentBait
// Size: 0xa20 (Inherited: 0x9d0)
struct AFishingAttachmentBait : AFishingAttachment {
	struct TMap<enum class EFishSpecies, float> _baitCatchingChanceMultiplier; // 0x9c8(0x50)
};

// Class ConZ.FishingAttachmentFloater
// Size: 0xb30 (Inherited: 0x9d0)
struct AFishingAttachmentFloater : AFishingAttachment {
	struct FBuoyancy _buoyancy; // 0x9c8(0x70)
	int32_t _floaterBreakSegmentIndex; // 0xa38(0x04)
	float _sinkSpeed; // 0xa3c(0x04)
	float _sinkSpeedDuringFastReel; // 0xa40(0x04)
	float _minDistanceForSizeIncrease; // 0xa44(0x04)
	float _maxDistanceForSizeIncrease; // 0xa48(0x04)
	float _maxScale; // 0xa4c(0x04)
	float _velocityThreshold; // 0xa50(0x04)
	float _shouldCheckVelocityThreshold; // 0xa54(0x04)
	float _movingRippleThreshold; // 0xa58(0x04)
	struct FVector _floaterWaterCheckOffset; // 0xa5c(0x0c)
	float _sendStateInterval; // 0xa68(0x04)
	char pad_A74[0x6c]; // 0xa74(0x6c)
	struct UParticleSystem* _hitWaterParticles; // 0xae0(0x08)
	struct UParticleSystemComponent* _rippleParticleSystemComponent; // 0xae8(0x08)
	struct UParticleSystemComponent* _movingRippleParticleSystemComponent; // 0xaf0(0x08)
	struct UParticleSystemComponent* _sinkParticleSystemComponent; // 0xaf8(0x08)
	struct UMaterialInterface* _scaledMaterial; // 0xb00(0x08)
	struct UMaterialInterface* _storedMaterial; // 0xb08(0x08)
	char pad_B10[0x20]; // 0xb10(0x20)

	void Server_SendState(float DeltaTime, struct FRigidBodyState State); // Function ConZ.FishingAttachmentFloater.Server_SendState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc890
};

// Class ConZ.FishingAttachmentHook
// Size: 0xa50 (Inherited: 0x9d0)
struct AFishingAttachmentHook : AFishingAttachment {
	float _visibilityFactor; // 0x9c8(0x04)
	float _maxTension; // 0x9cc(0x04)
	float _hookedWeight; // 0x9d0(0x04)
	char pad_9DC[0x4]; // 0x9dc(0x04)
	struct FTransform _hookedFishTransform; // 0x9e0(0x30)
	struct UStaticMeshComponent* _hookedFishMesh; // 0xa10(0x08)
	struct FName _hookedFishHookPositionName; // 0xa18(0x08)
	float _checkIfFishIsHookedRate; // 0xa20(0x04)
	float _timeToLooseTheFishWhenHookBitten; // 0xa24(0x04)
	struct UParticleSystemComponent* _movingRippleParticleSystemComponent; // 0xa28(0x08)
	struct UParticleSystemComponent* _splashParticleSystemComponent; // 0xa30(0x08)
	char pad_A38[0x18]; // 0xa38(0x18)
};

// Class ConZ.FishingAttachmentReel
// Size: 0xa80 (Inherited: 0x9d0)
struct AFishingAttachmentReel : AFishingAttachment {
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9c8(0x08)
	struct FName ReelHandIK; // 0x9d0(0x08)
	float _reelHandleAcceleration; // 0x9d8(0x04)
	float _fastReelHandleAcceleration; // 0x9dc(0x04)
	float _reelFriction; // 0x9e0(0x04)
	float _fastReelFriction; // 0x9e4(0x04)
	float _reelVelocityThreshold; // 0x9e8(0x04)
	float _reelVelocityLimit; // 0x9ec(0x04)
	float _reelAccelerationModifier; // 0x9f0(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct FTransform _leftHandOffset; // 0xa00(0x30)
	struct UAnimMontage* _lockAfterLongCastAnimMontage; // 0xa30(0x08)
	struct UAnimMontage* _lockAfterShortCastAnimMontage; // 0xa38(0x08)
	struct UAnimMontage* _reelCastAnimMontage; // 0xa40(0x08)
	struct UAnimSequenceBase* _reelingAnimSequence; // 0xa48(0x08)
	struct UAkAudioEvent* _reelingStartAudioEvent; // 0xa50(0x08)
	struct UAkAudioEvent* _reelingEndAudioEvent; // 0xa58(0x08)
	char pad_A60[0xc]; // 0xa60(0x0c)
	struct FVector _leftHandIKLocationCache; // 0xa6c(0x0c)
	char pad_A78[0x8]; // 0xa78(0x08)
};

// Class ConZ.FishingAttachmentSinker
// Size: 0x9d0 (Inherited: 0x9d0)
struct AFishingAttachmentSinker : AFishingAttachment {
};

// Class ConZ.FishingAttachmentWire
// Size: 0xa40 (Inherited: 0x9d0)
struct AFishingAttachmentWire : AFishingAttachment {
	struct FName ReelSocketName; // 0x9c8(0x08)
	struct UFishingWireComponent* _wireComponent; // 0x9d0(0x08)
	struct UFishingWireComponent* _wireComponentClass; // 0x9d8(0x08)
	struct UParticleSystemComponent* _rippleParticleSystemComponent; // 0x9e0(0x08)
	float _visibilityFactor; // 0x9e8(0x04)
	float _wireWeightThreshold; // 0x9ec(0x04)
	float _wireThickness; // 0x9f0(0x04)
	float _minWireLength; // 0x9f4(0x04)
	float _maxWireLength; // 0x9f8(0x04)
	float _reelInTensionThreshold; // 0x9fc(0x04)
	float _wireBreakThreshold; // 0xa00(0x04)
	float _instantWireBreakThreshold; // 0xa04(0x04)
	float _wireBreakTimerThreshold; // 0xa08(0x04)
	float _wireStrength; // 0xa0c(0x04)
	bool _simulate; // 0xa10(0x01)
	char pad_A19[0x27]; // 0xa19(0x27)
};

// Class ConZ.FishingBarWidget
// Size: 0x438 (Inherited: 0x268)
struct UFishingBarWidget : UUserWidget {
	struct FLinearColor TopSegmentGradientColorBottom; // 0x268(0x10)
	struct FLinearColor TopSegmentGradientColorTop; // 0x278(0x10)
	float BarBoxesTotalHeight; // 0x288(0x04)
	float BarSegmentsTotalHeight; // 0x28c(0x04)
	int32_t BarSegmentNum; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
	struct FSlateBrush ProgressBarBackgroundBoxBrush; // 0x298(0x88)
	struct FLinearColor ProgressBarBackgroundBoxColorAndOpacity; // 0x320(0x10)
	float ProgressBarBackgroundBoxPadding; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct FSlateBrush ProgressBarSegmentBrush; // 0x338(0x88)
	struct FLinearColor ProgressBarSegmentColorAndOpacity; // 0x3c0(0x10)
	float ProgressBarSegmentPadding; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct UVerticalBox* _progressBarSegmentBackgroundBoxesContainer; // 0x3d8(0x08)
	struct UVerticalBox* _progressBarSegmentsContainer; // 0x3e0(0x08)
	struct USizeBox* _simulatedProgressBar; // 0x3e8(0x08)
	char pad_3F0[0x48]; // 0x3f0(0x48)

	void SetSegmentBarNum(int32_t numOfSegments); // Function ConZ.FishingBarWidget.SetSegmentBarNum // (Final|Native|Public|BlueprintCallable) // @ game+0x23dcf50
	void SetProgressPercentage(float Value); // Function ConZ.FishingBarWidget.SetProgressPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x23dced0
	float GetProgressPercentage(); // Function ConZ.FishingBarWidget.GetProgressPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x23dbe20
};

// Class ConZ.FishingContainerWidget
// Size: 0x280 (Inherited: 0x268)
struct UFishingContainerWidget : UUserWidget {
	struct UFishingBarWidget* _castingBarWidget; // 0x268(0x08)
	struct UFishingBarWidget* _fishingBarWidget; // 0x270(0x08)
	float _tensionBarInterpSpeed; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class ConZ.FishingReelAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UFishingReelAnimInstance : UAnimInstance {
	float _reelHandleRotationAnimationExplicitTime; // 0x2b8(0x04)
	enum class EPrisonerGroundStance _owningPrisonerStance; // 0x2bc(0x01)
	bool _isOwningPrisonerInFirstPersonView; // 0x2bd(0x01)
	bool _isLocked; // 0x2be(0x01)
	bool _isCasting; // 0x2bf(0x01)

	struct UAnimSequenceBase* GetReelingAnimSequence(); // Function ConZ.FishingReelAnimInstance.GetReelingAnimSequence // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x23dbe50
};

// Class ConZ.FishingRod
// Size: 0xcc0 (Inherited: 0x9b0)
struct AFishingRod : AItem {
	struct FMulticastInlineDelegate AttachmentAdded; // 0x9a8(0x10)
	struct FMulticastInlineDelegate AttachmentRemoved; // 0x9b8(0x10)
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9c8(0x08)
	float FishingAreaRadius; // 0x9d0(0x04)
	struct APrisoner* _fishingRodOwner; // 0x9d8(0x08)
	char pad_9E4[0x14]; // 0x9e4(0x14)
	struct TArray<struct AFishingAttachment*> _fishingAttachmentsReplicated; // 0x9f8(0x10)
	float _reelingAmount; // 0xa08(0x04)
	char pad_A0C[0x4c]; // 0xa0c(0x4c)
	struct UFishSpeciesData* _fishSpeciesData; // 0xa58(0x08)
	char pad_A60[0x78]; // 0xa60(0x78)
	struct AItem* _minigameCaughtItem; // 0xad8(0x08)
	struct AFishingTrophyActor* _minigameTrophyActor; // 0xae0(0x08)
	char pad_AE8[0x1]; // 0xae8(0x01)
	bool _isInTrophyState; // 0xae9(0x01)
	char pad_AEA[0x6]; // 0xaea(0x06)
	float _floaterSimulatedWeight; // 0xaf0(0x04)
	float _floaterSimulatedWeightDuringFastReeling; // 0xaf4(0x04)
	float _shortCastingPower; // 0xaf8(0x04)
	float _minCastingPower; // 0xafc(0x04)
	float _maxCastingPower; // 0xb00(0x04)
	float _safeAreaRadius; // 0xb04(0x04)
	float _fishNotBitingAreaRadius; // 0xb08(0x04)
	float _minigameSafeAreaRadius; // 0xb0c(0x04)
	float _baseReelingSpeed; // 0xb10(0x04)
	float _fastReelingSpeed; // 0xb14(0x04)
	float _defaultWaterVelocityMultiplier; // 0xb18(0x04)
	float _shortCastingAngle; // 0xb1c(0x04)
	float _longCastingAngle; // 0xb20(0x04)
	float _fishingLineTensionToHookThreshold; // 0xb24(0x04)
	char pad_B28[0x8]; // 0xb28(0x08)
	struct FTransform _caughtFishOffsetTransform; // 0xb30(0x30)
	struct AFishingTrophyActor* _trophyActorClass; // 0xb60(0x08)
	float _sendStateInterval; // 0xb68(0x04)
	char pad_B6C[0x74]; // 0xb6c(0x74)
	float _fishIdleTimeAtStart; // 0xbe0(0x04)
	float _fishStruggleOffsetAmplitude; // 0xbe4(0x04)
	float _fishStruggleOffsetPeriod; // 0xbe8(0x04)
	float _minDistanceToApplyStruggleOffset; // 0xbec(0x04)
	float _fishToSurfaceRadius; // 0xbf0(0x04)
	float _fishGenericSpeed; // 0xbf4(0x04)
	float _minFishDirectionChangeTime; // 0xbf8(0x04)
	float _maxFishDirectionChangeTime; // 0xbfc(0x04)
	float _fishDrainStaminaModifier; // 0xc00(0x04)
	float _fishRecoveryStaminaModifier; // 0xc04(0x04)
	float _lineBreakConstant; // 0xc08(0x04)
	float _reelingTensionModifier; // 0xc0c(0x04)
	float _fishRecoveryRadiusBuffer; // 0xc10(0x04)
	float _fishUnderWaterSurfaceOffset; // 0xc14(0x04)
	float _fishStrengthModifier; // 0xc18(0x04)
	float _fishingBoundsAngle; // 0xc1c(0x04)
	float _fishingBoundsRadius; // 0xc20(0x04)
	float _fishingLineInTensionDamageAmount; // 0xc24(0x04)
	float _fishingLineOnBreakDamageAmount; // 0xc28(0x04)
	float _fishStuckTimeThreshold; // 0xc2c(0x04)
	float _fishNewDirectionAngleStep; // 0xc30(0x04)
	bool _useRodAsRootLocation; // 0xc34(0x01)
	char pad_C35[0x3]; // 0xc35(0x03)
	struct UAkAudioEvent* _castingObjectDropToWaterAudioEvent; // 0xc38(0x08)
	struct UAkAudioEvent* _fishHookedAudioEvent; // 0xc40(0x08)
	struct UAkAudioEvent* _wireBreakAudioEvent; // 0xc48(0x08)
	struct UAkAudioEvent* _wireTensionStartAudioEvent; // 0xc50(0x08)
	struct UAkAudioEvent* _wireTensionEndAudioEvent; // 0xc58(0x08)
	struct UAkAudioEvent* _menuButtonClickAudioEvent; // 0xc60(0x08)
	float _castPower; // 0xc68(0x04)
	bool _shouldShortCast; // 0xc6c(0x01)
	char pad_C6D[0xf]; // 0xc6d(0x0f)
	float _minFishRecoveryTime; // 0xc7c(0x04)
	float _maxFishRecoveryTime; // 0xc80(0x04)
	float _minFishStaminaDrainTime; // 0xc84(0x04)
	float _maxFishStaminaDrainTime; // 0xc88(0x04)
	bool _randomFishDrainAndRecovery; // 0xc8c(0x01)
	char pad_C8D[0x7]; // 0xc8d(0x07)
	bool _isFastReeling; // 0xc94(0x01)
	char pad_C95[0x2b]; // 0xc95(0x2b)

	void Server_SwapAttachments(struct AFishingAttachment* oldAttachment, struct AFishingAttachment* newAttachment); // Function ConZ.FishingRod.Server_SwapAttachments // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dce00
	void Server_SpawnCaughtFish(enum class EFishSpecies fishSpecies, float caughtFishMass, float caughtFishSize); // Function ConZ.FishingRod.Server_SpawnCaughtFish // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dcce0
	void Server_SetShouldShortCast(bool Value); // Function ConZ.FishingRod.Server_SetShouldShortCast // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dcc50
	void Server_SetFishingState(enum class EFishingState fishingState); // Function ConZ.FishingRod.Server_SetFishingState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dcbd0
	void Server_SetCastPower(float Value); // Function ConZ.FishingRod.Server_SetCastPower // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dcb40
	void Server_SendState(float DeltaTime, struct FRigidBodyState State, float reelingAmount, bool isFastReeling); // Function ConZ.FishingRod.Server_SendState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc990
	void Server_ResetAttachments(); // Function ConZ.FishingRod.Server_ResetAttachments // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc870
	void Server_RemoveAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.Server_RemoveAttachment // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc7e0
	void Server_ReleaseCastingObject(struct FVector Location, struct FVector Direction, float castingPower, enum class EFishingState nextState); // Function ConZ.FishingRod.Server_ReleaseCastingObject // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x23dc640
	void Server_OnWireBreak(); // Function ConZ.FishingRod.Server_OnWireBreak // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc620
	void Server_OnLeaveActiveFishingState(); // Function ConZ.FishingRod.Server_OnLeaveActiveFishingState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc600
	void Server_OnEnterActiveFishingState(); // Function ConZ.FishingRod.Server_OnEnterActiveFishingState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc5e0
	void Server_InitiateCast(); // Function ConZ.FishingRod.Server_InitiateCast // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc5c0
	void Server_HookFish(); // Function ConZ.FishingRod.Server_HookFish // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc5a0
	void Server_EnterTrophyState(); // Function ConZ.FishingRod.Server_EnterTrophyState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc580
	void Server_CleanupTrophyState(bool keptFish); // Function ConZ.FishingRod.Server_CleanupTrophyState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x236cc30
	void Server_CheckIfFishBitBait(struct FVector Location); // Function ConZ.FishingRod.Server_CheckIfFishBitBait // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x23dc500
	void Server_AddAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.Server_AddAttachment // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23dc470
	void RemoveAttachmentLocal(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.RemoveAttachmentLocal // (Final|Native|Public|BlueprintCallable) // @ game+0x23dc3e0
	void RemoveAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.RemoveAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x23dc350
	void OnRep_MinigameTrophy(); // Function ConZ.FishingRod.OnRep_MinigameTrophy // (Final|Native|Private) // @ game+0x23dc330
	void OnRep_MinigameItem(); // Function ConZ.FishingRod.OnRep_MinigameItem // (Final|Native|Private) // @ game+0x23dc310
	void OnRep_FishingAttachmentsReplicated(); // Function ConZ.FishingRod.OnRep_FishingAttachmentsReplicated // (Final|Native|Private) // @ game+0x23dc2b0
	void OnReleaseFishClicked(); // Function ConZ.FishingRod.OnReleaseFishClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x23dc290
	void OnKeepFishClicked(); // Function ConZ.FishingRod.OnKeepFishClicked // (Final|Native|Private|BlueprintCallable) // @ game+0x23dc270
	void OnFishingActionAnimNotify(enum class EFishingActionNotifyType notifyType); // Function ConZ.FishingRod.OnFishingActionAnimNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x23dc1f0
	void NetMulticast_SetHookBitten(bool Value, struct UFishSpeciesData* speciesData); // Function ConZ.FishingRod.NetMulticast_SetHookBitten // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23dc120
	void NetMulticast_ResetAttachments(); // Function ConZ.FishingRod.NetMulticast_ResetAttachments // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23dc100
	void NetMulticast_ReleaseCastingObject(struct FVector Location, struct FVector Direction, float castingPower, enum class EFishingState nextState); // Function ConZ.FishingRod.NetMulticast_ReleaseCastingObject // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x23dbf60
	void NetMulticast_OnWireBreak(); // Function ConZ.FishingRod.NetMulticast_OnWireBreak // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23dbf40
	void NetMulticast_OnLeaveActiveFishingState(); // Function ConZ.FishingRod.NetMulticast_OnLeaveActiveFishingState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23dbf20
	void NetMulticast_OnEnterActiveFishingState(); // Function ConZ.FishingRod.NetMulticast_OnEnterActiveFishingState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23612e0
	void NetMulticast_InitiateCast(); // Function ConZ.FishingRod.NetMulticast_InitiateCast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23dbf00
	void NetMulticast_HookFish(); // Function ConZ.FishingRod.NetMulticast_HookFish // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x23dbee0
	struct APrisoner* GetFishingRodOwner(); // Function ConZ.FishingRod.GetFishingRodOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23dbdc0
	bool CanAddAttachment(struct AFishingAttachment* Attachment); // Function ConZ.FishingRod.CanAddAttachment // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x23dbc70
	void AttachmentRemovedSignature__DelegateSignature(struct AFishingRod* sender, struct AFishingAttachment* Attachment); // DelegateFunction ConZ.FishingRod.AttachmentRemovedSignature__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void AttachmentAddedSignature__DelegateSignature(struct AFishingRod* sender, struct AFishingAttachment* Attachment); // DelegateFunction ConZ.FishingRod.AttachmentAddedSignature__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void AddAttachmentLocal(struct AFishingAttachment* Attachment, bool attach); // Function ConZ.FishingRod.AddAttachmentLocal // (Final|Native|Public|BlueprintCallable) // @ game+0x23dbb80
	void AddAttachment(struct AFishingAttachment* Attachment, bool attach, bool removeExistingOnTheSameMountType); // Function ConZ.FishingRod.AddAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x23dba70
};

// Class ConZ.FishingRodAnimInstance
// Size: 0x2f0 (Inherited: 0x2c0)
struct UFishingRodAnimInstance : UAnimInstance {
	bool IsInMinigame; // 0x2b8(0x01)
	struct FVector RodTipLocation; // 0x2bc(0x0c)
	struct FVector BentRodTipLocation; // 0x2c8(0x0c)
	struct FVector BendDirection; // 0x2d4(0x0c)
	float BendAmount; // 0x2e0(0x04)
	char pad_2E9[0x7]; // 0x2e9(0x07)
};

// Class ConZ.FishingTrophyActor
// Size: 0x230 (Inherited: 0x220)
struct AFishingTrophyActor : AActor {
	struct USkeletalMeshComponent* _skeletalMeshComponent; // 0x220(0x08)
	struct UStaticMeshComponent* _staticMeshComponent; // 0x228(0x08)
};

// Class ConZ.FishingTrophyWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UFishingTrophyWidget : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UTextBlock* _fishNameText; // 0x298(0x08)
	struct UTextBlock* _fishWeightText; // 0x2a0(0x08)
	struct UTextBlock* _fishSizeText; // 0x2a8(0x08)
	struct UTextBlock* _keepFishHotkeyText; // 0x2b0(0x08)
	struct UTextBlock* _releaseFishHotkeyText; // 0x2b8(0x08)
	struct UButton* _keepButton; // 0x2c0(0x08)
	struct UButton* _releaseButton; // 0x2c8(0x08)

	void OnReleasedPressed(); // Function ConZ.FishingTrophyWidget.OnReleasedPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x23e0250
	void OnKeepPressed(); // Function ConZ.FishingTrophyWidget.OnKeepPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x23e0230
};

// Class ConZ.FishingWireComponent
// Size: 0x770 (Inherited: 0x720)
struct UFishingWireComponent : UVDRopeComponent {
	char pad_720[0x50]; // 0x720(0x50)
};

// Class ConZ.FishingZoneIndicator
// Size: 0x240 (Inherited: 0x220)
struct AFishingZoneIndicator : AActor {
	struct USceneComponent* _sceneComponent; // 0x220(0x08)
	struct UParticleSystemComponent* _fishIconParticles; // 0x228(0x08)
	struct UParticleSystemComponent* _rippleParticles; // 0x230(0x08)
	float _radius; // 0x238(0x04)
	float _catchingChanceMultiplier; // 0x23c(0x04)

	void OnRep_Radius(); // Function ConZ.FishingZoneIndicator.OnRep_Radius // (Final|Native|Private) // @ game+0xbbc480
};

// Class ConZ.FishSchoolActor
// Size: 0x480 (Inherited: 0x220)
struct AFishSchoolActor : AActor {
	enum class EFishBehavior _currentState; // 0x220(0x01)
	char pad_221[0x2f]; // 0x221(0x2f)
	struct UCapsuleComponent* _capsuleComponent; // 0x250(0x08)
	struct UFishInstancedStaticMeshComponent* _schoolInstancedStaticMeshComponent; // 0x258(0x08)
	char pad_260[0x2c]; // 0x260(0x2c)
	float _minDistanceToTarget; // 0x28c(0x04)
	float _boundsInflation; // 0x290(0x04)
	float _findPathBypassMultiplier; // 0x294(0x04)
	int32_t _maxTimesSameDestinationAllowed; // 0x298(0x04)
	float _maxTimePerDestinationMultiplier; // 0x29c(0x04)
	char pad_2A0[0x4]; // 0x2a0(0x04)
	float _schoolMovementRecoveryTurningSpeed; // 0x2a4(0x04)
	float _schoolMovementRecoveryAcceleration; // 0x2a8(0x04)
	float _schoolMovementRecoveryDeceleration; // 0x2ac(0x04)
	float _schoolCloseToSurfaceTurningSpeed; // 0x2b0(0x04)
	float _schoolCloseToSurfaceAcceleration; // 0x2b4(0x04)
	float _schoolCloseToSurfaceDeceleration; // 0x2b8(0x04)
	float _surfaceOffset; // 0x2bc(0x04)
	char pad_2C0[0x4]; // 0x2c0(0x04)
	float _upperForbiddenZoneDepthPercentage; // 0x2c4(0x04)
	float _swimmingDepthPercentage; // 0x2c8(0x04)
	float _lowerForbiddenZoneDepthPercentage; // 0x2cc(0x04)
	struct UParticleSystem* _waterParticles; // 0x2d0(0x08)
	float _waterParticlesInterval; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct UParticleSystemComponent* _waterParticlesComponent; // 0x2e0(0x08)
	char pad_2E8[0x4]; // 0x2e8(0x04)
	int32_t _forcedNumberOfGroups; // 0x2ec(0x04)
	float _groupSpeed; // 0x2f0(0x04)
	float _groupSeparationSpeed; // 0x2f4(0x04)
	float _groupCatchUpSpeed; // 0x2f8(0x04)
	float _groupSeparationDistance; // 0x2fc(0x04)
	char pad_300[0x4]; // 0x300(0x04)
	float _groupSeparationTime; // 0x304(0x04)
	int32_t _minNumberOfFish; // 0x308(0x04)
	int32_t _maxNumberOfFish; // 0x30c(0x04)
	char pad_310[0x4]; // 0x310(0x04)
	float _maxFishDistance; // 0x314(0x04)
	char pad_318[0x4]; // 0x318(0x04)
	float _fishSeparationDistance; // 0x31c(0x04)
	float _fishSeparationTime; // 0x320(0x04)
	char pad_324[0x4]; // 0x324(0x04)
	float _fishTurnSpeedRangeModifier; // 0x328(0x04)
	float _fishMinScale; // 0x32c(0x04)
	float _fishMaxScale; // 0x330(0x04)
	float _fishNormalSpeed; // 0x334(0x04)
	float _fishSeparationSpeed; // 0x338(0x04)
	float _fishCatchUpSpeed; // 0x33c(0x04)
	float _fishMaxSpeed; // 0x340(0x04)
	float _fishAcceleration; // 0x344(0x04)
	float _fishDeceleration; // 0x348(0x04)
	char pad_34C[0x4c]; // 0x34c(0x4c)
	struct FVector _moveToLocationRep; // 0x398(0x0c)
	char pad_3A4[0xc]; // 0x3a4(0x0c)
	struct TMap<enum class EFishBehavior, struct FFishStateParameters> _behaviorMap; // 0x3b0(0x50)
	struct FVector _randomMovementExtent; // 0x400(0x0c)
	float _fleeingDistanceFromEnemy; // 0x40c(0x04)
	float _fleeingPathLength; // 0x410(0x04)
	float _returnToNormalBehaviorDistance; // 0x414(0x04)
	float _schoolInternalMovementRelevancyDistanceSquared; // 0x418(0x04)
	char pad_41C[0x10]; // 0x41c(0x10)
	float _fadeInTime; // 0x42c(0x04)
	char pad_430[0x4]; // 0x430(0x04)
	float _fadeOutTime; // 0x434(0x04)
	char pad_438[0x48]; // 0x438(0x48)

	void OnRep_MoveToLocationRep(); // Function ConZ.FishSchoolActor.OnRep_MoveToLocationRep // (Final|Native|Private) // @ game+0x23e0290
	void OnRep_CurrentState(); // Function ConZ.FishSchoolActor.OnRep_CurrentState // (Final|Native|Private) // @ game+0x23e0270
};

// Class ConZ.FishSpawningPreset
// Size: 0x38 (Inherited: 0x30)
struct UFishSpawningPreset : UDataAsset {
	float SpawningChance; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.FishSpeciesData
// Size: 0x88 (Inherited: 0x30)
struct UFishSpeciesData : UDataAsset {
	enum class EFishSpecies fishSpecies; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UStaticMesh* SingleFishStaticMesh; // 0x38(0x08)
	struct USkeletalMesh* SingleFishSkeletalMesh; // 0x40(0x08)
	struct UMaterialInterface* MaterialOverride; // 0x48(0x08)
	struct UAnimSequence* CaughtFishAnimSequence; // 0x50(0x08)
	struct AFishSchoolActor* SchoolClass; // 0x58(0x08)
	struct AActor* CaughtFishClass; // 0x60(0x08)
	bool Predator; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float MinDepth; // 0x6c(0x04)
	float MaxDepth; // 0x70(0x04)
	float MinMass; // 0x74(0x04)
	float MaxMass; // 0x78(0x04)
	float MaxLength; // 0x7c(0x04)
	struct UCurveFloat* TimeOfDayPercentageCurve; // 0x80(0x08)
};

// Class ConZ.FishSpeciesPreset
// Size: 0x40 (Inherited: 0x30)
struct UFishSpeciesPreset : UDataAsset {
	struct TArray<struct FFishSpawnData> FishSpawnData; // 0x30(0x10)
};

// Class ConZ.FlagAreaVisualizer
// Size: 0x230 (Inherited: 0x220)
struct AFlagAreaVisualizer : AActor {
	struct UStaticMeshComponent* _staticMeshComponent; // 0x220(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void DestroyVisualizer(); // Function ConZ.FlagAreaVisualizer.DestroyVisualizer // (Final|Native|Private) // @ game+0x23e01f0
};

// Class ConZ.FlagElementsExpansionItem
// Size: 0x9b0 (Inherited: 0x9b0)
struct AFlagElementsExpansionItem : AItem {
	int32_t _numberOfElements; // 0x9a8(0x04)
};

// Class ConZ.RaidProtectionManager
// Size: 0x3d0 (Inherited: 0x220)
struct ARaidProtectionManager : AActor {
	struct FRaidProtectionArray _activeRaidProtections; // 0x220(0x188)
	uint16_t _currentServerRealTimeInSyncs; // 0x3a8(0x02)
	char pad_3AA[0x6]; // 0x3aa(0x06)
	uint32_t _serverUtcDayTimeAtServerStartup; // 0x3b0(0x04)
	char pad_3B4[0x1c]; // 0x3b4(0x1c)

	void OnRep_ServerTimeZone(); // Function ConZ.RaidProtectionManager.OnRep_ServerTimeZone // (Final|Native|Private) // @ game+0x24da040
	void OnRep_ServerTime(); // Function ConZ.RaidProtectionManager.OnRep_ServerTime // (Final|Native|Private) // @ game+0x24da020
};

// Class ConZ.FlagSpecificRaidProtectionManager
// Size: 0x3e8 (Inherited: 0x3d0)
struct AFlagSpecificRaidProtectionManager : ARaidProtectionManager {
	char pad_3D0[0x18]; // 0x3d0(0x18)
};

// Class ConZ.FlamethrowerComponent
// Size: 0x450 (Inherited: 0xb0)
struct UFlamethrowerComponent : UActorComponent {
	struct UNiagaraSystem* _flamethrowerParticleSystem; // 0xb0(0x08)
	float _particleSpawnRate; // 0xb8(0x04)
	struct FFloatInterval _particleSpeed; // 0xbc(0x08)
	int32_t _translucencySortPriority; // 0xc4(0x04)
	struct UNiagaraComponent* _flamethrowerNiagaraComponent; // 0xc8(0x08)
	struct UStaticMesh* _lightSourceMesh; // 0xd0(0x08)
	struct UMaterialInterface* _lightSourceMaterial; // 0xd8(0x08)
	struct UStaticMeshComponent* _lightSourceMeshComponent; // 0xe0(0x08)
	struct FVector _lightSourceScale; // 0xe8(0x0c)
	float _maxLightSourceIntensity; // 0xf4(0x04)
	char pad_F8[0x4]; // 0xf8(0x04)
	float _lightSourceIntensityChangeTime; // 0xfc(0x04)
	struct FLinearColor _lightSourceColor; // 0x100(0x10)
	char pad_110[0x10]; // 0x110(0x10)
	float _lightSourceOcclusionDistanceChangeTime; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	bool _automaticallyAttachToParentsMesh; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	int32_t _meshComponentId; // 0x12c(0x04)
	char pad_130[0x8]; // 0x130(0x08)
	struct FName _socketName; // 0x138(0x08)
	struct FVector _effectScale; // 0x140(0x0c)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0x150(0x10)
	char pad_160[0x40]; // 0x160(0x40)
	float _coneHalfAngle; // 0x1a0(0x04)
	char pad_1A4[0x8]; // 0x1a4(0x08)
	float _coneLength; // 0x1ac(0x04)
	struct FFloatInterval _temperature; // 0x1b0(0x08)
	float _offcenterTemperatureFalloffExp; // 0x1b8(0x04)
	bool _useWeaponItemOverlap; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
	struct FVector _weaponItemOverlapBoxExtent; // 0x1c0(0x0c)
	struct FVector _weaponItemOverlapBoxCenter; // 0x1cc(0x0c)
	float _rotationalInertia; // 0x1d8(0x04)
	char pad_1DC[0x34]; // 0x1dc(0x34)
	float _turnRateStallThreshold; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
	float _stallRecoveryTime; // 0x218(0x04)
	char pad_21C[0x5]; // 0x21c(0x05)
	bool _ignoreSelf; // 0x221(0x01)
	bool _deflectedFlameDealsDamage; // 0x222(0x01)
	char pad_223[0x1]; // 0x223(0x01)
	float _deflectedFlameThreshold; // 0x224(0x04)
	float _deflectedFlameRadius; // 0x228(0x04)
	char pad_22C[0xc]; // 0x22c(0x0c)
	struct UAkAudioEvent* _activeAudioEvent; // 0x238(0x08)
	struct UAkAudioEvent* _stopAudioEvent; // 0x240(0x08)
	char pad_248[0x8]; // 0x248(0x08)
	struct UNiagaraSystem* _firePointsEffect; // 0x250(0x08)
	struct FFloatInterval _firePointsLifetime; // 0x258(0x08)
	struct FVector2D _firePointsBaseSize; // 0x260(0x08)
	struct FFloatInterval _firePointsSizeScale; // 0x268(0x08)
	int32_t _maxFirePointsNumPerObject; // 0x270(0x04)
	char pad_274[0x1dc]; // 0x274(0x1dc)
};

// Class ConZ.IgnitableItemComponent
// Size: 0x198 (Inherited: 0xc8)
struct UIgnitableItemComponent : UItemComponent {
	bool _canBurnUnderwater; // 0xc8(0x01)
	bool _canBeIgnitedUnderwater; // 0xc9(0x01)
	bool _canBeIgnitedWet; // 0xca(0x01)
	bool _canBeIgnitedOnGround; // 0xcb(0x01)
	bool _canBePutOut; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	float _autoDestroyTimeOnUse; // 0xd0(0x04)
	struct FName _effectsSocket; // 0xd4(0x08)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UAnimMontage* _prisonerIgniteMontage; // 0xe0(0x08)
	struct UAkAudioEvent* _ignitionAudioEvent; // 0xe8(0x08)
	struct UAkAudioEvent* _extinguishAudioEvent; // 0xf0(0x08)
	struct UParticleSystem* _ignitionParticle; // 0xf8(0x08)
	struct UParticleSystem* _burningParticle; // 0x100(0x08)
	struct UParticleSystem* _extinguishParticle; // 0x108(0x08)
	struct UNiagaraSystem* _ignitionNiagaraParticle; // 0x110(0x08)
	struct UNiagaraSystem* _burningNiagaraParticle; // 0x118(0x08)
	struct UNiagaraSystem* _extinguishNiagaraParticle; // 0x120(0x08)
	float _ignitionParticleDuration; // 0x128(0x04)
	float _particlesLoopDuration; // 0x12c(0x04)
	float _extinguishParticleDuration; // 0x130(0x04)
	char pad_134[0x1]; // 0x134(0x01)
	enum class EIgnitableItemState _repState; // 0x135(0x01)
	bool _wasEverIgnited; // 0x136(0x01)
	char pad_137[0x9]; // 0x137(0x09)
	float _particlesLoopStartBlend; // 0x140(0x04)
	float _noiseLoudnessWhileIgnited; // 0x144(0x04)
	float _noiseLoudnessUpdateFrequencyPerHour; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct TArray<struct FIgnitableItemIgnitionRequirements> _ignitionRequirements; // 0x150(0x10)
	float _ignitionDurationOnTheGround; // 0x160(0x04)
	bool _shouldControlUsage; // 0x164(0x01)
	char pad_165[0x33]; // 0x165(0x33)

	void OnRep_WasEverIgnited(); // Function ConZ.IgnitableItemComponent.OnRep_WasEverIgnited // (Native|Protected) // @ game+0x23fd4c0
	void OnRep_State(); // Function ConZ.IgnitableItemComponent.OnRep_State // (Final|Native|Private) // @ game+0x23fd4a0
};

// Class ConZ.FlareItemComponent
// Size: 0x1b8 (Inherited: 0x198)
struct UFlareItemComponent : UIgnitableItemComponent {
	char pad_198[0x8]; // 0x198(0x08)
	struct FLinearColor _pointLightColor; // 0x1a0(0x10)
	struct UMaterialInterface* _pointLightMaterial; // 0x1b0(0x08)
};

// Class ConZ.FlareTrapItem
// Size: 0xb30 (Inherited: 0xae0)
struct AFlareTrapItem : ATrapItem {
	struct UAkAudioEvent* _triggerSound; // 0xae0(0x08)
	float _detonationDelay; // 0xae8(0x04)
	char pad_AEC[0x4]; // 0xaec(0x04)
	struct AProjectile* _projectileClass; // 0xaf0(0x08)
	struct FVector _projectileLocation; // 0xaf8(0x0c)
	struct FRotator _projectileRotation; // 0xb04(0x0c)
	float _projectileMuzzleVelocity; // 0xb10(0x04)
	float _projectileLifetime; // 0xb14(0x04)
	char pad_B18[0x18]; // 0xb18(0x18)

	void Detonate(); // Function ConZ.FlareTrapItem.Detonate // (Final|Native|Private) // @ game+0x23e0210
};

// Class ConZ.FlashbangItem
// Size: 0xa80 (Inherited: 0xa70)
struct AFlashbangItem : AGrenadeItem {
	struct AFlashbangItemEffects* _flashbangEffectsClass; // 0xa70(0x08)
	char pad_A78[0x8]; // 0xa78(0x08)
};

// Class ConZ.FlashbangItemEffects
// Size: 0x270 (Inherited: 0x220)
struct AFlashbangItemEffects : AActor {
	struct UParticleSystem* _explosionParticles; // 0x220(0x08)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x228(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x230(0x08)
	struct UAkAudioEvent* _startStunnedSoundEffectsAudioEvent; // 0x238(0x08)
	struct UAkAudioEvent* _stopStunnedSoundEffectsAudioEvent; // 0x240(0x08)
	float _minFlashbangDurationToStartStunnedSoundEffects; // 0x248(0x04)
	float _fullFlashDuration; // 0x24c(0x04)
	float _flashFadeOutDuration; // 0x250(0x04)
	float _flashRadius; // 0x254(0x04)
	float _flashLineTraceDistance; // 0x258(0x04)
	char pad_25C[0x14]; // 0x25c(0x14)
};

// Class ConZ.FloatingWidgetCanvas
// Size: 0x148 (Inherited: 0x138)
struct UFloatingWidgetCanvas : UCanvasPanel {
	char pad_138[0x10]; // 0x138(0x10)
};

// Class ConZ.FocusableWidgetInterface
// Size: 0x28 (Inherited: 0x28)
struct UFocusableWidgetInterface : UInterface {
};

// Class ConZ.FogSphere
// Size: 0x230 (Inherited: 0x220)
struct AFogSphere : AActor {
	bool _shouldExistOnDedicatedServer; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct UCurveFloat* _densityVersusTimeOfDay; // 0x228(0x08)

	void SetFogDensity(float Density); // Function ConZ.FogSphere.SetFogDensity // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.FogSphere.OnTimeOfDayChanged // (Final|Native|Public) // @ game+0x23e02b0
};

// Class ConZ.FoliageAssetData
// Size: 0xa0 (Inherited: 0x28)
struct UFoliageAssetData : UAssetUserData {
	enum class EFoliageType Type; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FFoliageGeneralData GeneralData; // 0x2c(0x14)
	struct FFoliageEffectsData EffectsData; // 0x40(0x18)
	struct FFoliageAIPerceptionData AIPerceptionData; // 0x58(0x04)
	struct FFoliageCanopyData CanopyData; // 0x5c(0x40)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class ConZ.FoliageInstanceCache
// Size: 0xd0 (Inherited: 0x28)
struct UFoliageInstanceCache : UObject {
	char pad_28[0xa8]; // 0x28(0xa8)
};

// Class ConZ.FoliageInstancedComponent
// Size: 0x6c0 (Inherited: 0x6c0)
struct UFoliageInstancedComponent : UFoliageInstancedStaticMeshComponent {
};

// Class ConZ.FoliageInstancedBush
// Size: 0x6c0 (Inherited: 0x6c0)
struct UFoliageInstancedBush : UFoliageInstancedComponent {
};

// Class ConZ.FoliageInstancedGrass
// Size: 0x6c0 (Inherited: 0x6c0)
struct UFoliageInstancedGrass : UFoliageInstancedComponent {
};

// Class ConZ.FoliageInstancedTree
// Size: 0x6c0 (Inherited: 0x6c0)
struct UFoliageInstancedTree : UFoliageInstancedComponent {
};

// Class ConZ.FollowsMouseActor
// Size: 0x228 (Inherited: 0x220)
struct AFollowsMouseActor : AActor {
	float DistanceFromCamera; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
};

// Class ConZ.ForceUnlockItemTag
// Size: 0x30 (Inherited: 0x30)
struct UForceUnlockItemTag : UBaseItemTag {
};

// Class ConZ.Metabolism
// Size: 0x1108 (Inherited: 0x28)
struct UMetabolism : UObject {
	char pad_28[0xc80]; // 0x28(0xc80)
	struct FMetabolismConfiguration _configuration; // 0xca8(0x460)
};

// Class ConZ.ForeignSubstance
// Size: 0xa8 (Inherited: 0x28)
struct UForeignSubstance : UObject {
	struct FText _name; // 0x28(0x18)
	enum class EDisposition _disposition; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float _absorptionCapacity; // 0x44(0x04)
	float _absorptionRate; // 0x48(0x04)
	float _baseDiscardRate; // 0x4c(0x04)
	struct TMap<struct UForeignSubstance*, struct FRuntimeFloatCurve> _discardRateMultiplierPerOtherSubstance; // 0x50(0x50)
	float _amountToDiscardPerWaterTransferredToBladder; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class ConZ.Fortifiable
// Size: 0x28 (Inherited: 0x28)
struct UFortifiable : UInterface {
};

// Class ConZ.FortificationComponent
// Size: 0x590 (Inherited: 0x500)
struct UFortificationComponent : UStaticMeshComponent {
	char pad_500[0x28]; // 0x500(0x28)
	struct UParticleSystem* _destructionParticles; // 0x528(0x08)
	struct UAkAudioEvent* _destructionAudio; // 0x530(0x08)
	float _health; // 0x538(0x04)
	char pad_53C[0x4]; // 0x53c(0x04)
	struct FRepairableParams _repairableParams; // 0x540(0x38)
	float _collisionEnergyResistance; // 0x578(0x04)
	float _explosionResistance; // 0x57c(0x04)
	float _hardness; // 0x580(0x04)
	char pad_584[0xc]; // 0x584(0x0c)
};

// Class ConZ.FortificationEntityComponentSave
// Size: 0x50 (Inherited: 0x28)
struct UFortificationEntityComponentSave : UObject {
	struct FFortificationData FortificationData; // 0x28(0x28)
};

// Class ConZ.FortificationEntityComponentSetup
// Size: 0x48 (Inherited: 0x48)
struct UFortificationEntityComponentSetup : UEntityComponentSetup {
};

// Class ConZ.FortificationManager
// Size: 0x1c8 (Inherited: 0xb0)
struct UFortificationManager : UActorComponent {
	char pad_B0[0x118]; // 0xb0(0x118)

	void NetMulticast_UpdateFortification(int32_t dataVersion, struct FVector fortifiableLocation, struct FFortificationData fortificationRepData); // Function ConZ.FortificationManager.NetMulticast_UpdateFortification // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23e7a20
	void NetMulticast_RemoveAllFortifications(int32_t dataVersion, struct FVector fortifiableLocation); // Function ConZ.FortificationManager.NetMulticast_RemoveAllFortifications // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23e7940
	void NetMulticast_DestroyFortification(int32_t dataVersion, struct FVector fortifiableLocation, struct FVector fortificationLocation); // Function ConZ.FortificationManager.NetMulticast_DestroyFortification // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23e7810
	void NetMulticast_AddFortifications(int32_t dataVersion, struct FVector fortifiableLocation, struct TArray<struct FFortificationData> fortificationsRepData); // Function ConZ.FortificationManager.NetMulticast_AddFortifications // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23e76d0
	void NetMulticast_AddFortification(int32_t dataVersion, struct FVector fortifiableLocation, struct FFortificationData fortificationRepData); // Function ConZ.FortificationManager.NetMulticast_AddFortification // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23e7570
};

// Class ConZ.FragGrenadeItem
// Size: 0xa80 (Inherited: 0xa70)
struct AFragGrenadeItem : AGrenadeItem {
	char pad_A70[0x10]; // 0xa70(0x10)
};

// Class ConZ.FuelItemTag
// Size: 0x38 (Inherited: 0x30)
struct UFuelItemTag : UBaseItemTag {
	struct FCombustibleItemParams CombustionParams; // 0x30(0x08)
};

// Class ConZ.FireFanningItemTag
// Size: 0x68 (Inherited: 0x30)
struct UFireFanningItemTag : UBaseItemTag {
	struct UAnimMontage* BlowAirIntoFireMontage; // 0x30(0x08)
	struct UAnimMontage* BlowAirIntoLowFireMontage; // 0x38(0x08)
	struct UAnimMontage* ItemSwingAnimOpen; // 0x40(0x08)
	struct FName ItemSwingAnimOpenSection; // 0x48(0x08)
	struct UAnimMontage* ItemSwingAnimClose; // 0x50(0x08)
	struct FName ItemSwingAnimCloseSection; // 0x58(0x08)
	float AirAmountMultiplier; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class ConZ.FundsOverviewUIController
// Size: 0x30 (Inherited: 0x28)
struct UFundsOverviewUIController : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.FuseItemTag
// Size: 0x40 (Inherited: 0x30)
struct UFuseItemTag : UBaseItemTag {
	float MaximumLoad; // 0x30(0x04)
	float BaseHealthLossRate; // 0x34(0x04)
	float AdditionalHealthLossRatePer100A; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class ConZ.GameEventBorder
// Size: 0x290 (Inherited: 0x220)
struct AGameEventBorder : AActor {
	struct UStaticMeshComponent* Mesh; // 0x220(0x08)
	struct UMaterialInstanceDynamic* Material; // 0x228(0x08)
	struct UChildActorComponent* SoundSpline; // 0x230(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x238(0x08)
	enum class EGameEventBorderState _state; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float _desiredRadius; // 0x244(0x04)
	char pad_248[0x4]; // 0x248(0x04)
	struct FVector _desiredOffset; // 0x24c(0x0c)
	char pad_258[0xc]; // 0x258(0x0c)
	float _desiredHeat; // 0x264(0x04)
	char pad_268[0x4]; // 0x268(0x04)
	float _radiusChangeSpeed; // 0x26c(0x04)
	float _offsetChangeSpeed; // 0x270(0x04)
	float _heatChangeSpeed; // 0x274(0x04)
	bool _collisionEnabled; // 0x278(0x01)
	bool _blockPawns; // 0x279(0x01)
	char pad_27A[0x16]; // 0x27a(0x16)

	void SetEnablePawnCollision(bool Value); // Function ConZ.GameEventBorder.SetEnablePawnCollision // (Final|Native|Public) // @ game+0x23ebcb0
	void OnRep_Collision(); // Function ConZ.GameEventBorder.OnRep_Collision // (Final|Native|Private) // @ game+0x23ebc70
	void Multicast_SetRadius(float Radius); // Function ConZ.GameEventBorder.Multicast_SetRadius // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x23eb9f0
	void Multicast_SetOffset(struct FVector Offset); // Function ConZ.GameEventBorder.Multicast_SetOffset // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x23eb960
	bool IsActive(); // Function ConZ.GameEventBorder.IsActive // (Final|Native|Public|BlueprintCallable) // @ game+0x23eb930
	void HeatUpAndChangeArea(float Radius, struct FVector focus, float Duration, float heatUpDuration); // Function ConZ.GameEventBorder.HeatUpAndChangeArea // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23eb7b0
	enum class EGameEventBorderState GetState(); // Function ConZ.GameEventBorder.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb780
	float GetRadius(); // Function ConZ.GameEventBorder.GetRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb750
	struct FVector GetOffset(); // Function ConZ.GameEventBorder.GetOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb710
	struct FVector GetBorderCenter(); // Function ConZ.GameEventBorder.GetBorderCenter // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb670
	void ChangeState(enum class EGameEventBorderState State, float Duration); // Function ConZ.GameEventBorder.ChangeState // (Final|Native|Public|BlueprintCallable) // @ game+0x23eb2b0
	void ChangeArea(float Radius, struct FVector focus, float Duration); // Function ConZ.GameEventBorder.ChangeArea // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23eb190
};

// Class ConZ.GameEventCardWidget
// Size: 0x488 (Inherited: 0x268)
struct UGameEventCardWidget : UUserWidget {
	struct AGameEventBase* _gameEvent; // 0x268(0x08)
	struct UPrimaryButton* _joinButton; // 0x270(0x08)
	struct FText _joinEventTooltipText; // 0x278(0x18)
	struct FText _registerForEventTooltipText; // 0x290(0x18)
	struct FText _cancelTooltipText; // 0x2a8(0x18)
	struct UPrimaryButton* _joinBlueButton; // 0x2c0(0x08)
	struct FText _joinBlueTeamTooltipText; // 0x2c8(0x18)
	struct UPrimaryButton* _joinRedButton; // 0x2e0(0x08)
	struct FText _joinRedTeamTooltipText; // 0x2e8(0x18)
	struct UPrimaryButton* _switchTeamButton; // 0x300(0x08)
	struct FText _switchTeamTooltipText; // 0x308(0x18)
	struct UGameEventInfoWidget* _gameEventInfoWidget; // 0x320(0x08)
	struct UOverlay* _scoreboardSlot; // 0x328(0x08)
	struct UTextBlock* _eventName; // 0x330(0x08)
	struct UTextBlock* _numberOfPlayersText; // 0x338(0x08)
	struct UTextBlock* _roundsText; // 0x340(0x08)
	struct UTextBlock* _statusText; // 0x348(0x08)
	struct UTextBlock* _timeText; // 0x350(0x08)
	struct UImage* _screenshot; // 0x358(0x08)
	struct UTextBlock* _entryFeeTag; // 0x360(0x08)
	struct UOverlay* _buttons; // 0x368(0x08)
	struct UPrimaryButton* _leaveButton; // 0x370(0x08)
	struct FText _leaveEventTooltipText; // 0x378(0x18)
	struct UBorder* _joinDisabledMsgBorder; // 0x390(0x08)
	struct UBorder* _cooldownThrobber; // 0x398(0x08)
	struct FSlateBrush _defaultScreenshotBrush; // 0x3a0(0x88)
	struct UAkAudioEvent* _menuButtonClick; // 0x428(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x430(0x08)
	char pad_438[0x50]; // 0x438(0x50)

	void OnSwitchTeamButtonClicked(); // Function ConZ.GameEventCardWidget.OnSwitchTeamButtonClicked // (Final|Native|Private) // @ game+0x23ebc90
	void OnLeaveButtonClicked(); // Function ConZ.GameEventCardWidget.OnLeaveButtonClicked // (Final|Native|Private) // @ game+0x23ebc30
	void OnJoinRedButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinRedButtonClicked // (Final|Native|Private) // @ game+0x23ebc10
	void OnJoinButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinButtonClicked // (Final|Native|Private) // @ game+0x23ebbf0
	void OnJoinBlueButtonClicked(); // Function ConZ.GameEventCardWidget.OnJoinBlueButtonClicked // (Final|Native|Private) // @ game+0x23ebbd0
	struct AGameEventBase* GetGameEvent(); // Function ConZ.GameEventCardWidget.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb6b0
};

// Class ConZ.GameEventInfoWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UGameEventInfoWidget : UUserWidget {
	struct UTextBlock* RespawnText; // 0x268(0x08)
	struct UTextBlock* MinPlayersText; // 0x270(0x08)
	struct UTextBlock* NumTeamsText; // 0x278(0x08)
	struct UTextBlock* DescriptionText; // 0x280(0x08)
	struct UTextBlock* PrerequisitesText; // 0x288(0x08)
	struct UTextBlock* WeaponsText; // 0x290(0x08)
	struct UTextBlock* RewardsText; // 0x298(0x08)
};

// Class ConZ.GameEventLeaderboardRow
// Size: 0x2b0 (Inherited: 0x268)
struct UGameEventLeaderboardRow : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UBorder* Background; // 0x270(0x08)
	struct UTextBlock* Player; // 0x278(0x08)
	struct UTextBlock* Fame; // 0x280(0x08)
	struct UTextBlock* Score; // 0x288(0x08)
	struct UTextBlock* KDA; // 0x290(0x08)
	struct UTextBlock* RankText; // 0x298(0x08)
	struct FLinearColor BackgroundColor; // 0x2a0(0x10)
};

// Class ConZ.GameEventLeaderboardWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UGameEventLeaderboardWidget : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UGameEventLeaderboardRow* _leaderboardRowClass; // 0x298(0x08)
	int32_t MaxStats; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UVerticalBox* TopPlayers; // 0x2a8(0x08)
	struct UVerticalBox* PlayerRanking; // 0x2b0(0x08)
	struct UCircularThrobber* CircularThrobber_Ranking; // 0x2b8(0x08)
	struct UCircularThrobber* CircularThrobber_TopPlayers; // 0x2c0(0x08)
};

// Class ConZ.GameEventLeftPanel
// Size: 0x2b8 (Inherited: 0x268)
struct UGameEventLeftPanel : UTabMenuPanel {
	struct UComboBoxWrapper* AllEventsComboBox; // 0x268(0x08)
	struct UOverlay* EventArea; // 0x270(0x08)
	struct UVerticalBox* VerticalBox_5; // 0x278(0x08)
	struct USizeBox* _eventSizeBox; // 0x280(0x08)
	struct TArray<struct AGameEventBase*> _allEvents; // 0x288(0x10)
	struct TArray<struct AGameEventBase*> _currentEvents; // 0x298(0x10)
	struct TArray<struct AGameEventBase*> _nextEvents; // 0x2a8(0x10)

	void OnEventComboBoxSelectionChanged(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function ConZ.GameEventLeftPanel.OnEventComboBoxSelectionChanged // (Final|Native|Public) // @ game+0x23ebaa0
	void OnEventComboBoxOpened(); // Function ConZ.GameEventLeftPanel.OnEventComboBoxOpened // (Final|Native|Public) // @ game+0x23eba80
};

// Class ConZ.GameEventLoadoutMenuWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UGameEventLoadoutMenuWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct TArray<struct UItemSelection*> _mandatoryGear; // 0x270(0x10)
	struct UItemSelectionSlotWidget* _primarySelection; // 0x280(0x08)
	struct UItemSelectionSlotWidget* _secondarySelection; // 0x288(0x08)
	struct UItemSelectionSlotWidget* _tertiarySelection; // 0x290(0x08)
	struct UItemSelectionSlotWidget* _outfitSelection; // 0x298(0x08)

	void SetGameEvent(struct AGameEventBase* gameEvent); // Function ConZ.GameEventLoadoutMenuWidget.SetGameEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x23ebd40
	struct AGameEventBase* GetGameEvent(); // Function ConZ.GameEventLoadoutMenuWidget.GetGameEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eb6e0
	void CreateLoadout(struct AItem*& primary, struct AItem*& secondary, struct AItem*& tertiary, struct TArray<struct AItem*>& outfit, struct TArray<struct AItem*>& support, struct UPrisonerLoadout* loadout); // Function ConZ.GameEventLoadoutMenuWidget.CreateLoadout // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23eb3e0
};

// Class ConZ.GameEventManager
// Size: 0x260 (Inherited: 0x220)
struct AGameEventManager : AActor {
	int32_t EventHistoryLimit; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct TArray<struct AGameEventBase*> _announcedGameEvents; // 0x228(0x10)
	struct TArray<struct AGameEventBase*> _currentGameEvents; // 0x238(0x10)
	struct TArray<struct AGameEventBase*> _endedGameEvents; // 0x248(0x10)
	char pad_258[0x8]; // 0x258(0x08)

	void OnRep_EndedGameEvents(); // Function ConZ.GameEventManager.OnRep_EndedGameEvents // (Final|Native|Private) // @ game+0x23ebc50
	void OnRep_CurrentGameEvents(); // Function ConZ.GameEventManager.OnRep_CurrentGameEvents // (Final|Native|Private) // @ game+0x23ebc50
	void OnRep_AnnouncedGameEvents(); // Function ConZ.GameEventManager.OnRep_AnnouncedGameEvents // (Final|Native|Private) // @ game+0x23ebc50
};

// Class ConZ.GameEventNotificationPanel
// Size: 0x2c8 (Inherited: 0x268)
struct UGameEventNotificationPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UBorder* _nextEventBox; // 0x270(0x08)
	struct UTextBlock* _nextEventText; // 0x278(0x08)
	struct UTextBlock* _nextEventCountdown; // 0x280(0x08)
	struct UBorder* _eventCancelBox; // 0x288(0x08)
	struct UTextBlock* _eventCancelTime; // 0x290(0x08)
	struct UBorder* _eventTimeBox; // 0x298(0x08)
	struct UTextBlock* _eventTimeText; // 0x2a0(0x08)
	struct FLinearColor _nonAlertedColor; // 0x2a8(0x10)
	struct FLinearColor _alertedColor; // 0x2b8(0x10)
};

// Class ConZ.GameEventNotificationUIController
// Size: 0x30 (Inherited: 0x28)
struct UGameEventNotificationUIController : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.GameEventParticipantInfoCardWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UGameEventParticipantInfoCardWidget : UUserWidget {
	struct UTextBlock* Name; // 0x268(0x08)
	struct UTextBlock* SteamID; // 0x270(0x08)
	struct UTextBlock* Ping; // 0x278(0x08)
	struct UTextBlock* FameLevel; // 0x280(0x08)
	struct UTextBlock* Kills; // 0x288(0x08)
	struct UTextBlock* Deaths; // 0x290(0x08)
	struct UTextBlock* Assists; // 0x298(0x08)
	struct UTextBlock* Revenges; // 0x2a0(0x08)
	struct UTextBlock* Headshots; // 0x2a8(0x08)
};

// Class ConZ.GameEventParticipantStatsWidget
// Size: 0x310 (Inherited: 0x268)
struct UGameEventParticipantStatsWidget : UUserWidget {
	struct AGameEventBase* _gameEvent; // 0x268(0x08)
	int32_t _index; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UGameEventScoreboardWidget* _scoreboard; // 0x278(0x08)
	int32_t _teamIndex; // 0x280(0x04)
	char pad_284[0x8c]; // 0x284(0x8c)
};

// Class ConZ.GameEventParticipantStatsWidgetCTF
// Size: 0x3a0 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetCTF : UGameEventParticipantStatsWidget {
	struct UTextBlock* Assists; // 0x310(0x08)
	struct UTextBlock* Captures; // 0x318(0x08)
	struct UTextBlock* Deaths; // 0x320(0x08)
	struct UTextBlock* Headshots; // 0x328(0x08)
	struct UTextBlock* Kills; // 0x330(0x08)
	struct UTextBlock* Number; // 0x338(0x08)
	struct UTextBlock* PlayerName; // 0x340(0x08)
	struct UTextBlock* Score; // 0x348(0x08)
	struct UBorder* NumberBorder; // 0x350(0x08)
	struct UBorder* SelectedOverlay; // 0x358(0x08)
	struct UBorder* InactiveOverlay; // 0x360(0x08)
	struct UBorder* Border_384; // 0x368(0x08)
	struct UBorder* Border_387; // 0x370(0x08)
	struct UBorder* Border_1; // 0x378(0x08)
	struct UBorder* Border_386; // 0x380(0x08)
	struct UBorder* Border_389; // 0x388(0x08)
	struct UBorder* Border_388; // 0x390(0x08)
	struct UBorder* Border_2; // 0x398(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetCTFMini
// Size: 0x348 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetCTFMini : UGameEventParticipantStatsWidget {
	struct UTextBlock* Captures; // 0x310(0x08)
	struct UTextBlock* Kills; // 0x318(0x08)
	struct UTextBlock* Number; // 0x320(0x08)
	struct UTextBlock* PlayerName; // 0x328(0x08)
	struct UTextBlock* Score; // 0x330(0x08)
	struct UTextBlock* Deaths; // 0x338(0x08)
	struct UBorder* Border_87; // 0x340(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetDeathmatch
// Size: 0x3a0 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetDeathmatch : UGameEventParticipantStatsWidget {
	struct UTextBlock* Assists; // 0x310(0x08)
	struct UTextBlock* Deaths; // 0x318(0x08)
	struct UTextBlock* Headshots; // 0x320(0x08)
	struct UTextBlock* Kills; // 0x328(0x08)
	struct UTextBlock* Number; // 0x330(0x08)
	struct UTextBlock* PlayerName; // 0x338(0x08)
	struct UTextBlock* Score; // 0x340(0x08)
	struct UTextBlock* Suicides; // 0x348(0x08)
	struct UBorder* NumberBorder; // 0x350(0x08)
	struct UBorder* SelectedOverlay; // 0x358(0x08)
	struct UBorder* InactiveOverlay; // 0x360(0x08)
	struct UBorder* Border_384; // 0x368(0x08)
	struct UBorder* Border_385; // 0x370(0x08)
	struct UBorder* Border_386; // 0x378(0x08)
	struct UBorder* Border_387; // 0x380(0x08)
	struct UBorder* Border_388; // 0x388(0x08)
	struct UBorder* Border_389; // 0x390(0x08)
	struct UBorder* Border_1; // 0x398(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetDeathmatchMini
// Size: 0x340 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetDeathmatchMini : UGameEventParticipantStatsWidget {
	struct UTextBlock* Deaths; // 0x310(0x08)
	struct UTextBlock* Kills; // 0x318(0x08)
	struct UTextBlock* Number; // 0x320(0x08)
	struct UTextBlock* PlayerName; // 0x328(0x08)
	struct UTextBlock* Score; // 0x330(0x08)
	struct UBorder* Border_87; // 0x338(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetDropZone
// Size: 0x3b0 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetDropZone : UGameEventParticipantStatsWidget {
	struct UTextBlock* Assists; // 0x310(0x08)
	struct UTextBlock* Captures; // 0x318(0x08)
	struct UTextBlock* Deaths; // 0x320(0x08)
	struct UTextBlock* Headshots; // 0x328(0x08)
	struct UTextBlock* Kills; // 0x330(0x08)
	struct UTextBlock* Number; // 0x338(0x08)
	struct UTextBlock* PlayerName; // 0x340(0x08)
	struct UTextBlock* Suicides; // 0x348(0x08)
	struct UTextBlock* Score; // 0x350(0x08)
	struct UBorder* NumberBorder; // 0x358(0x08)
	struct UBorder* SelectedOverlay; // 0x360(0x08)
	struct UBorder* InactiveOverlay; // 0x368(0x08)
	struct UBorder* Border_384; // 0x370(0x08)
	struct UBorder* Border_1; // 0x378(0x08)
	struct UBorder* Border_387; // 0x380(0x08)
	struct UBorder* Border_386; // 0x388(0x08)
	struct UBorder* Border_389; // 0x390(0x08)
	struct UBorder* Border_3; // 0x398(0x08)
	struct UBorder* Border_388; // 0x3a0(0x08)
	struct UBorder* Border_2; // 0x3a8(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetDropZoneMini
// Size: 0x348 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetDropZoneMini : UGameEventParticipantStatsWidget {
	struct UTextBlock* Captures; // 0x310(0x08)
	struct UTextBlock* Deaths; // 0x318(0x08)
	struct UTextBlock* Kills; // 0x320(0x08)
	struct UTextBlock* Number; // 0x328(0x08)
	struct UTextBlock* PlayerName; // 0x330(0x08)
	struct UTextBlock* Score; // 0x338(0x08)
	struct UBorder* Border_87; // 0x340(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetTeamDeathmatch
// Size: 0x3a0 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetTeamDeathmatch : UGameEventParticipantStatsWidget {
	struct UTextBlock* Assists; // 0x310(0x08)
	struct UTextBlock* Deaths; // 0x318(0x08)
	struct UTextBlock* Headshots; // 0x320(0x08)
	struct UTextBlock* Kills; // 0x328(0x08)
	struct UTextBlock* Number; // 0x330(0x08)
	struct UTextBlock* PlayerName; // 0x338(0x08)
	struct UTextBlock* Score; // 0x340(0x08)
	struct UTextBlock* Suicides; // 0x348(0x08)
	struct UBorder* NumberBorder; // 0x350(0x08)
	struct UBorder* SelectedOverlay; // 0x358(0x08)
	struct UBorder* InactiveOverlay; // 0x360(0x08)
	struct UBorder* Border_384; // 0x368(0x08)
	struct UBorder* Border_1; // 0x370(0x08)
	struct UBorder* Border_386; // 0x378(0x08)
	struct UBorder* Border_389; // 0x380(0x08)
	struct UBorder* Border_3; // 0x388(0x08)
	struct UBorder* Border_388; // 0x390(0x08)
	struct UBorder* Border_2; // 0x398(0x08)
};

// Class ConZ.GameEventParticipantStatsWidgetTeamDeathmatchMini
// Size: 0x340 (Inherited: 0x310)
struct UGameEventParticipantStatsWidgetTeamDeathmatchMini : UGameEventParticipantStatsWidget {
	struct UTextBlock* Deaths; // 0x310(0x08)
	struct UTextBlock* Kills; // 0x318(0x08)
	struct UTextBlock* Number; // 0x320(0x08)
	struct UTextBlock* PlayerName; // 0x328(0x08)
	struct UTextBlock* Score; // 0x330(0x08)
	struct UBorder* Border_87; // 0x338(0x08)
};

// Class ConZ.GameEventRightPanel
// Size: 0x268 (Inherited: 0x268)
struct UGameEventRightPanel : UTabMenuPanel {
};

// Class ConZ.GameEventRoundInfoWidget
// Size: 0x290 (Inherited: 0x268)
struct UGameEventRoundInfoWidget : UUserWidget {
	struct AGameEventBase* _gameEvent; // 0x268(0x08)
	struct UTextBlock* TimeLeft; // 0x270(0x08)
	struct UTextBlock* TimeLeftLabel; // 0x278(0x08)
	struct UTextBlock* RoundStatus; // 0x280(0x08)
	struct UHorizontalBox* TimeLeftBox; // 0x288(0x08)
};

// Class ConZ.GameEventRoundInfoWidgetDeathmatch
// Size: 0x298 (Inherited: 0x290)
struct UGameEventRoundInfoWidgetDeathmatch : UGameEventRoundInfoWidget {
	struct UTextBlock* KillLimit; // 0x290(0x08)
};

// Class ConZ.GameEventRoundInfoWidgetDropZone
// Size: 0x2a0 (Inherited: 0x290)
struct UGameEventRoundInfoWidgetDropZone : UGameEventRoundInfoWidget {
	struct UTextBlock* TextBlock_1; // 0x290(0x08)
	struct UTextBlock* Objective; // 0x298(0x08)
};

// Class ConZ.GameEventRoundInfoWidgetTeamDeathmatch
// Size: 0x298 (Inherited: 0x290)
struct UGameEventRoundInfoWidgetTeamDeathmatch : UGameEventRoundInfoWidget {
	struct UTextBlock* KillLimit; // 0x290(0x08)
};

// Class ConZ.GameEventScoreboardWidget
// Size: 0x2f8 (Inherited: 0x268)
struct UGameEventScoreboardWidget : UUserWidget {
	struct UGameEventTeamInfoWidget* TeamInfoWidgetClass; // 0x268(0x08)
	char pad_270[0x18]; // 0x270(0x18)
	struct TArray<struct UGameEventParticipantStatsWidget*> StatWidgets; // 0x288(0x10)
	struct TArray<struct FGameEventTeamColours> TeamColours; // 0x298(0x10)
	struct AGameEventBase* _gameEvent; // 0x2a8(0x08)
	int32_t _selected; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct UBorder* RoundInfo; // 0x2b8(0x08)
	struct UTextBlock* TextBlock_1; // 0x2c0(0x08)
	struct UGameEventParticipantInfoCardWidget* UI_GameEventParticipantInfoCardWidget; // 0x2c8(0x08)
	struct UUniformGridPanel* TeamGrid; // 0x2d0(0x08)
	struct TArray<struct UGameEventTeamInfoWidget*> TeamWidgets_1; // 0x2d8(0x10)
	struct TArray<struct FText> TeamNames; // 0x2e8(0x10)
};

// Class ConZ.GameEventScoreboardWidgetMini
// Size: 0x318 (Inherited: 0x2f8)
struct UGameEventScoreboardWidgetMini : UGameEventScoreboardWidget {
	struct UBorder* Header; // 0x2f8(0x08)
	struct UScrollBox* Rows; // 0x300(0x08)
	struct UUniformGridPanel* Info; // 0x308(0x08)
	struct UTextBlock* EmptyMsg; // 0x310(0x08)
};

// Class ConZ.GameEventsUIController
// Size: 0x40 (Inherited: 0x28)
struct UGameEventsUIController : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.GameEventTeamHeaderWidget
// Size: 0x270 (Inherited: 0x268)
struct UGameEventTeamHeaderWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
};

// Class ConZ.GameEventTeamHeaderWidgetCTF
// Size: 0x2d8 (Inherited: 0x270)
struct UGameEventTeamHeaderWidgetCTF : UGameEventTeamHeaderWidget {
	struct UWinCounterWidget* WinCounterWidgetClass; // 0x270(0x08)
	struct UTextBlock* TeamNameLeft; // 0x278(0x08)
	struct UTextBlock* TeamNameRight; // 0x280(0x08)
	struct UImage* BackgroundImage; // 0x288(0x08)
	struct UHorizontalBox* LeftSideLayoutBox; // 0x290(0x08)
	struct UHorizontalBox* RightSideLayoutBox; // 0x298(0x08)
	struct UHorizontalBox* LeftStarBox; // 0x2a0(0x08)
	struct UHorizontalBox* RightStarBox; // 0x2a8(0x08)
	struct UTextBlock* LeftTeamScore; // 0x2b0(0x08)
	struct UTextBlock* RightTeamScore; // 0x2b8(0x08)
	struct UTextBlock* PlayerTextLeft; // 0x2c0(0x08)
	struct UTextBlock* PlayerTextRight; // 0x2c8(0x08)
	struct AGameEventBase* _gameEvent; // 0x2d0(0x08)
};

// Class ConZ.GameEventTeamHeaderWidgetDropZone
// Size: 0x2d8 (Inherited: 0x270)
struct UGameEventTeamHeaderWidgetDropZone : UGameEventTeamHeaderWidget {
	struct UWinCounterWidget* WinCounterWidgetClass; // 0x270(0x08)
	struct UTextBlock* TeamNameLeft; // 0x278(0x08)
	struct UTextBlock* TeamNameRight; // 0x280(0x08)
	struct UImage* BackgroundImage; // 0x288(0x08)
	struct UHorizontalBox* LeftSideLayoutBox; // 0x290(0x08)
	struct UHorizontalBox* RightSideLayoutBox; // 0x298(0x08)
	struct UHorizontalBox* LeftStarBox; // 0x2a0(0x08)
	struct UHorizontalBox* RightStarBox; // 0x2a8(0x08)
	struct UTextBlock* LeftTeamScore; // 0x2b0(0x08)
	struct UTextBlock* RightTeamScore; // 0x2b8(0x08)
	struct UTextBlock* PlayerTextLeft; // 0x2c0(0x08)
	struct UTextBlock* PlayerTextRight; // 0x2c8(0x08)
	struct AGameEventBase* _gameEvent; // 0x2d0(0x08)
};

// Class ConZ.GameEventTeamHeaderWidgetTeamDeathmatch
// Size: 0x2d8 (Inherited: 0x270)
struct UGameEventTeamHeaderWidgetTeamDeathmatch : UGameEventTeamHeaderWidget {
	struct UWinCounterWidget* WinCounterWidgetClass; // 0x270(0x08)
	struct UTextBlock* TeamNameLeft; // 0x278(0x08)
	struct UTextBlock* TeamNameRight; // 0x280(0x08)
	struct UImage* BackgroundImage; // 0x288(0x08)
	struct UHorizontalBox* LeftSideLayoutBox; // 0x290(0x08)
	struct UHorizontalBox* RightSideLayoutBox; // 0x298(0x08)
	struct UHorizontalBox* LeftStarBox; // 0x2a0(0x08)
	struct UHorizontalBox* RightStarBox; // 0x2a8(0x08)
	struct UTextBlock* LeftTeamScore; // 0x2b0(0x08)
	struct UTextBlock* RightTeamScore; // 0x2b8(0x08)
	struct UTextBlock* PlayerTextLeft; // 0x2c0(0x08)
	struct UTextBlock* PlayerTextRight; // 0x2c8(0x08)
	struct AGameEventBase* _gameEvent; // 0x2d0(0x08)
};

// Class ConZ.GameEventTeamInfoWidget
// Size: 0x2f0 (Inherited: 0x268)
struct UGameEventTeamInfoWidget : UUserWidget {
	struct UPanelWidget* StatTextContainer; // 0x268(0x08)
	struct UBorder* TeamHeader; // 0x270(0x08)
	struct UScrollBox* TeamRows; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)
	struct UGameEventTeamHeaderWidget* HeaderWidget; // 0x288(0x08)
	char pad_290[0x60]; // 0x290(0x60)
};

// Class ConZ.GameEventTransport
// Size: 0x2a8 (Inherited: 0x220)
struct AGameEventTransport : AActor {
	struct USphereComponent* Sphere; // 0x220(0x08)
	struct UStaticMeshComponent* PodMesh; // 0x228(0x08)
	struct UStaticMeshComponent* TargetMesh; // 0x230(0x08)
	float TravelSpeed; // 0x238(0x04)
	float TravelHeight; // 0x23c(0x04)
	float HoverHeight; // 0x240(0x04)
	float LargerRadius; // 0x244(0x04)
	float SmallerRadius; // 0x248(0x04)
	enum class EGameEventTransportState _state; // 0x24c(0x01)
	char pad_24D[0x3]; // 0x24d(0x03)
	struct FVector _lastPosition; // 0x250(0x0c)
	struct FVector _targetPosition; // 0x25c(0x0c)
	float _blend; // 0x268(0x04)
	char pad_26C[0x3c]; // 0x26c(0x3c)

	void TravelToDestination(struct FVector Destination); // Function ConZ.GameEventTransport.TravelToDestination // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23eec40
	void SkipToDestination(); // Function ConZ.GameEventTransport.SkipToDestination // (Final|Native|Public|BlueprintCallable) // @ game+0x23eec20
	void ReserveForPrisoner(struct APrisoner* Prisoner); // Function ConZ.GameEventTransport.ReserveForPrisoner // (Final|Native|Public|BlueprintCallable) // @ game+0x23eeb90
	void OnRep_TargetPosition(); // Function ConZ.GameEventTransport.OnRep_TargetPosition // (Final|Native|Private) // @ game+0x23eeb70
	void OnRep_LastPosition(); // Function ConZ.GameEventTransport.OnRep_LastPosition // (Final|Native|Private) // @ game+0x23eeb50
	void OnOrderComplete(); // Function ConZ.GameEventTransport.OnOrderComplete // (Native|Event|Public|BlueprintEvent) // @ game+0x236c4d0
	void LeaveIsland(); // Function ConZ.GameEventTransport.LeaveIsland // (Final|Native|Public|BlueprintCallable) // @ game+0x23eeb30
	void LandAtLocation(struct FVector Destination); // Function ConZ.GameEventTransport.LandAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23eeaa0
	bool IsInteractable(); // Function ConZ.GameEventTransport.IsInteractable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eea70
	struct APrisoner* GetReservedParticipant(); // Function ConZ.GameEventTransport.GetReservedParticipant // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23eea40
	void CancelOrder(); // Function ConZ.GameEventTransport.CancelOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x23eea20
};

// Class ConZ.GamePaymentTransactionRequest
// Size: 0x40 (Inherited: 0x28)
struct UGamePaymentTransactionRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.GamePaymentTransactionResponse
// Size: 0x30 (Inherited: 0x28)
struct UGamePaymentTransactionResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.GameResourceConsumptionData
// Size: 0xe8 (Inherited: 0x28)
struct UGameResourceConsumptionData : UObject {
	enum class EGameResourceConsumptionMethod ConsumptionMethod; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FGameplayTag ConsumptionDuration; // 0x2c(0x08)
	struct FGameplayTag DigestionDuration; // 0x34(0x08)
	float Density; // 0x3c(0x04)
	float TotalCarbohydrate; // 0x40(0x04)
	float Fiber; // 0x44(0x04)
	float Starch; // 0x48(0x04)
	float Sugars; // 0x4c(0x04)
	float TotalFat; // 0x50(0x04)
	float SaturatedFat; // 0x54(0x04)
	float Protein; // 0x58(0x04)
	float VitaminA; // 0x5c(0x04)
	float VitaminC; // 0x60(0x04)
	float VitaminD; // 0x64(0x04)
	float VitaminE; // 0x68(0x04)
	float VitaminK; // 0x6c(0x04)
	float VitaminB1; // 0x70(0x04)
	float VitaminB2; // 0x74(0x04)
	float VitaminB3; // 0x78(0x04)
	float VitaminB6; // 0x7c(0x04)
	float VitaminB9; // 0x80(0x04)
	float VitaminB12; // 0x84(0x04)
	float VitaminB5; // 0x88(0x04)
	float VitaminB4; // 0x8c(0x04)
	float Calcium; // 0x90(0x04)
	float Iron; // 0x94(0x04)
	float Magnesium; // 0x98(0x04)
	float Phosphorus; // 0x9c(0x04)
	float Potassium; // 0xa0(0x04)
	float Sodium; // 0xa4(0x04)
	float Zinc; // 0xa8(0x04)
	float Copper; // 0xac(0x04)
	float Manganese; // 0xb0(0x04)
	float Selenium; // 0xb4(0x04)
	float Alcohol; // 0xb8(0x04)
	float Water; // 0xbc(0x04)
	struct TArray<struct FGameResourceConsumptionDataForeignSubstance> ForeignSubstances; // 0xc0(0x10)
	float DisgustAmountPerGramOfRawFood; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct TArray<struct UConsumableDigestionHandler*> DigestionHandlers; // 0xd8(0x10)
};

// Class ConZ.GameResourceContainer
// Size: 0x28 (Inherited: 0x28)
struct UGameResourceContainer : UInterface {
};

// Class ConZ.GameResourceContainerProxyRegistry
// Size: 0x150 (Inherited: 0xb0)
struct UGameResourceContainerProxyRegistry : UActorComponent {
	char pad_B0[0xa0]; // 0xb0(0xa0)
};

// Class ConZ.GameResourceContainerProxyForInfiniteResource
// Size: 0x88 (Inherited: 0x28)
struct UGameResourceContainerProxyForInfiniteResource : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UGameResourceType* _resourceType; // 0x30(0x08)
	char pad_38[0x40]; // 0x38(0x40)
	struct TArray<struct UBaseItemTag*> _requiredItemTagsForFilling; // 0x78(0x10)
};

// Class ConZ.GameResourceContainerProxyForReplenishableResource
// Size: 0x48 (Inherited: 0x28)
struct UGameResourceContainerProxyForReplenishableResource : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.GameResourceItemTag
// Size: 0x70 (Inherited: 0x30)
struct UGameResourceItemTag : UBaseItemTag {
	struct UGameResourceType* ResourceType; // 0x30(0x08)
	struct FGameplayTagContainer SocketTypes; // 0x38(0x20)
	float ResourceAmountPerUse; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFueling; // 0x60(0x10)
};

// Class ConZ.GameResourceSlotEntityComponentSave
// Size: 0x38 (Inherited: 0x28)
struct UGameResourceSlotEntityComponentSave : UObject {
	struct FEntityComponentId ResourceComponentId; // 0x28(0x10)
};

// Class ConZ.GameResourceSlotEntityComponentSetup
// Size: 0x88 (Inherited: 0x48)
struct UGameResourceSlotEntityComponentSetup : UEntityComponentSetup {
	struct UGameResourceType* ResourceType; // 0x48(0x08)
	struct FGameplayTagContainer ResourceSocketTypes; // 0x50(0x20)
	float RequiredResourceAmount; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct UEntitySetup* ResourceToSpawn; // 0x78(0x08)
	struct FName ComponentNameToAttach; // 0x80(0x08)
};

// Class ConZ.GameResourceType
// Size: 0xb8 (Inherited: 0x28)
struct UGameResourceType : UObject {
	struct FText ResourceName; // 0x28(0x18)
	struct FString ConfigSectionName; // 0x40(0x10)
	struct UGameResourceWashData* WashData; // 0x50(0x08)
	bool CanPutOutFireWith; // 0x58(0x01)
	bool CanDisinfectWith; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	struct FGameplayTag CookingIngredientTag; // 0x5c(0x08)
	char pad_64[0x4]; // 0x64(0x04)
	struct TSoftObjectPtr<UTexture2D> ResourceImage; // 0x68(0x28)
	struct FLinearColor Color; // 0x90(0x10)
	struct UGameResourceConsumptionData* ConsumptionData; // 0xa0(0x08)
	struct TArray<struct UBaseItemTag*> ItemTags; // 0xa8(0x10)
};

// Class ConZ.GameResourceType_Liquid
// Size: 0xb8 (Inherited: 0xb8)
struct UGameResourceType_Liquid : UGameResourceType {
};

// Class ConZ.GameResourceType_Alcohol
// Size: 0xb8 (Inherited: 0xb8)
struct UGameResourceType_Alcohol : UGameResourceType_Liquid {
};

// Class ConZ.GameResourceType_Money
// Size: 0xb8 (Inherited: 0xb8)
struct UGameResourceType_Money : UGameResourceType {
};

// Class ConZ.GameResourceType_Water
// Size: 0xc0 (Inherited: 0xb8)
struct UGameResourceType_Water : UGameResourceType_Liquid {
	float Salinity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.GameResourceType_SoftDrink
// Size: 0xc0 (Inherited: 0xc0)
struct UGameResourceType_SoftDrink : UGameResourceType_Water {
};

// Class ConZ.GameResourceType_Solid
// Size: 0xb8 (Inherited: 0xb8)
struct UGameResourceType_Solid : UGameResourceType {
};

// Class ConZ.WashEyesHandler
// Size: 0x30 (Inherited: 0x28)
struct UWashEyesHandler : UObject {
	float WashEyesDuration; // 0x28(0x04)
	float WashEyesResourceAmount; // 0x2c(0x04)
};

// Class ConZ.WashEyesHandler_Clean
// Size: 0x40 (Inherited: 0x30)
struct UWashEyesHandler_Clean : UWashEyesHandler {
	struct TArray<struct UPrisonerBodyEffect*> _bodyEffectsToClean; // 0x30(0x10)
};

// Class ConZ.WashEyesHandler_Irritate
// Size: 0x40 (Inherited: 0x30)
struct UWashEyesHandler_Irritate : UWashEyesHandler {
	struct TArray<struct UPrisonerBodyEffect*> _bodyEffectsToAdd; // 0x30(0x10)
};

// Class ConZ.GameResourceWashData
// Size: 0x40 (Inherited: 0x30)
struct UGameResourceWashData : UDataAsset {
	bool CanWashItemsWith; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UWashEyesHandler* WashEyesHandler; // 0x38(0x08)
};

// Class ConZ.Garden
// Size: 0x470 (Inherited: 0x220)
struct AGarden : AActor {
	uint16_t _gardenId; // 0x220(0x02)
	char pad_222[0x6]; // 0x222(0x06)
	struct FGardenSlotArray _gardenSlots; // 0x228(0x120)
	float _health; // 0x348(0x04)
	char pad_34C[0xc]; // 0x34c(0x0c)
	struct FIntPoint _numSlots; // 0x358(0x08)
	char pad_360[0x4]; // 0x360(0x04)
	float _radius; // 0x364(0x04)
	char pad_368[0x108]; // 0x368(0x108)

	void OnRep_NumSlots(); // Function ConZ.Garden.OnRep_NumSlots // (Final|Native|Private) // @ game+0x23f2260
};

// Class ConZ.GardenManager
// Size: 0x6e8 (Inherited: 0x220)
struct AGardenManager : AActor {
	char pad_220[0x28]; // 0x220(0x28)
	struct AGarden* GardenClass; // 0x248(0x08)
	float NearGardenDistance; // 0x250(0x04)
	struct FPlantGrowthStageData _seedingStageData; // 0x254(0x60)
	struct FPlantGrowthStageData _vegetatingStageData; // 0x2b4(0x60)
	struct FPlantGrowthStageData _floweringStageData; // 0x314(0x60)
	struct FPlantGrowthStageData _ripeningStageData; // 0x374(0x60)
	struct FInt32Interval _gardenMinMaxSize; // 0x3d4(0x08)
	char pad_3DC[0x64]; // 0x3dc(0x64)
	struct TArray<struct AGarden*> _gardens; // 0x440(0x10)
	char pad_450[0x30]; // 0x450(0x30)
	float _updateTimestepSeconds; // 0x480(0x04)
	uint32_t _minUpdateBatchCount; // 0x484(0x04)
	float _dataSampleFadeSeconds; // 0x488(0x04)
	uint32_t _heightDataSampleCount; // 0x48c(0x04)
	struct FFloatInterval _pestsDiseasesCheckTimeHours; // 0x490(0x08)
	struct FFloatInterval _weedCheckTimeHours; // 0x498(0x08)
	float _pestsDiseasesGrowthTimeHours; // 0x4a0(0x04)
	float _weedGrowthTimeHours; // 0x4a4(0x04)
	float _pestsDiseasesSpreadTimeHours; // 0x4a8(0x04)
	float _weedSpreadTimeHours; // 0x4ac(0x04)
	struct FVector2D _pestsDiseasesSpreadScaleThreshold; // 0x4b0(0x08)
	struct FVector2D _weedSpreadScaleThreshold; // 0x4b8(0x08)
	float _maxWaterLitersPerSlot; // 0x4c0(0x04)
	float _maxWaterLitersFromRainPerSlot; // 0x4c4(0x04)
	struct UMaterialParameterCollection* _mainMPC; // 0x4c8(0x08)
	struct UMaterialParameterCollection* _gardenMPC; // 0x4d0(0x08)
	struct TArray<struct FStaticMeshMaterialPair> _gardenEdgeMesh; // 0x4d8(0x10)
	float _gardenEdgeVerticalOffset; // 0x4e8(0x04)
	float _gardenEdgeHorizontalOffset; // 0x4ec(0x04)
	struct TArray<struct FStaticMeshMaterialPair> _gardenSoilMesh; // 0x4f0(0x10)
	float _gardenSoilVerticalOffset; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct FStaticMeshMaterialPair _cubeCollisionMesh; // 0x508(0x18)
	float _maxHealthPerSlot; // 0x520(0x04)
	char pad_524[0x4]; // 0x524(0x04)
	struct TArray<struct FStaticMeshMaterialPair> _weedMesh; // 0x528(0x10)
	float _weedsVerticalOffset; // 0x538(0x04)
	char pad_53C[0x4]; // 0x53c(0x04)
	struct TArray<struct UPlantSpecies*> _plantSpecies; // 0x540(0x10)
	struct UFarmingSkill* _farmingSkillDataAsset; // 0x550(0x08)
	struct TMap<struct FStaticMeshMaterialPair, struct UIndexedHierarchicalInstancedStaticMeshComponent*> _hismcMap; // 0x558(0x50)
	struct TArray<struct FStaticMeshMaterialPair> _activeIHISMCMeshes; // 0x5a8(0x10)
	bool _showPreplacement; // 0x5b8(0x01)
	char pad_5B9[0x3]; // 0x5b9(0x03)
	float _databaseUpdateInterval; // 0x5bc(0x04)
	struct UChoppingRecipeDataAsset* _destroyChoppingRecipeAsset; // 0x5c0(0x08)
	float _prisonerInteractionDistance; // 0x5c8(0x04)
	float _decayProcessingPeriod; // 0x5cc(0x04)
	int32_t _decayProcessingNumberOfFrames; // 0x5d0(0x04)
	int32_t _decayProcessingMaxDestroyedElementsPerUpdate; // 0x5d4(0x04)
	int32_t _numberOfGardensAllowedBeforeDecay; // 0x5d8(0x04)
	int32_t _hoursToDecay; // 0x5dc(0x04)
	int32_t _hoursToDecayOutsideFlagArea; // 0x5e0(0x04)
	char pad_5E4[0x4]; // 0x5e4(0x04)
	struct FRepairableParams repairableParameters; // 0x5e8(0x38)
	char pad_620[0xc8]; // 0x620(0xc8)

	void DebugPlantAPlantAtLookedLocation(struct UPlantSpecies* species); // Function ConZ.GardenManager.DebugPlantAPlantAtLookedLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x23f2140
	void DebugGenerateGardensInSquare(struct FVector Location, struct FIntPoint countXY, struct FVector2D distanceXY, struct FIntPoint MinSize, struct FIntPoint MaxSize); // Function ConZ.GardenManager.DebugGenerateGardensInSquare // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23f1fa0
	void DebugGenerateGardensInRadius(int32_t Count, struct FVector Location, float Spread, struct FIntPoint MinSize, struct FIntPoint MaxSize); // Function ConZ.GardenManager.DebugGenerateGardensInRadius // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23f1de0
	void DebugAddWaterToPlantAtLookedLocation(float Amount); // Function ConZ.GardenManager.DebugAddWaterToPlantAtLookedLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x23f1d60
	void ClearAllMeshInstances(); // Function ConZ.GardenManager.ClearAllMeshInstances // (Final|Native|Private|BlueprintCallable) // @ game+0x23f1d40
};

// Class ConZ.GasMaskTag
// Size: 0x30 (Inherited: 0x30)
struct UGasMaskTag : UBaseItemTag {
};

// Class ConZ.GasTankItem
// Size: 0xa00 (Inherited: 0x9b0)
struct AGasTankItem : AItem {
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x9a8(0x08)
	struct URangedResourceProviderComponent* _rangedResourceProviderComponent; // 0x9b0(0x08)
	float _explosionDamage; // 0x9b8(0x04)
	float _explosionInnerRadius; // 0x9bc(0x04)
	float _explosionOuterRadius; // 0x9c0(0x04)
	float _explosionFalloff; // 0x9c4(0x04)
	float _explosionForce; // 0x9c8(0x04)
	struct FTargetTypeDamageMultiplier _explosionTargetTypeMultiplier; // 0x9d0(0x10)
	struct UParticleSystem* _explosionParticle; // 0x9e0(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x9e8(0x08)
	float _hearingDamageRadius; // 0x9f0(0x04)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x9f8(0x08)

	void Multicast_PlayExplosionEffects(struct FVector zeroBasedLocation); // Function ConZ.GasTankItem.Multicast_PlayExplosionEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23f21d0
};

// Class ConZ.GaugeAssetData
// Size: 0xe0 (Inherited: 0x28)
struct UGaugeAssetData : UAssetUserData {
	struct FGameplayTag GaugeTag; // 0x28(0x08)
	float MinimumValue; // 0x30(0x04)
	float MaximumValue; // 0x34(0x04)
	char pad_38[0x8]; // 0x38(0x08)
	struct FTransform MinimumRelativeTransform; // 0x40(0x30)
	struct FTransform MaximumRelativeTransform; // 0x70(0x30)
	float TransitionDuration; // 0xa0(0x04)
	char pad_A4[0x3c]; // 0xa4(0x3c)
};

// Class ConZ.GaugeLightAssetData
// Size: 0x48 (Inherited: 0x28)
struct UGaugeLightAssetData : UAssetUserData {
	struct FGameplayTag GaugeTag; // 0x28(0x08)
	struct FVector UnderTheLimitLightColor; // 0x30(0x0c)
	struct FVector OverTheLimitLightColor; // 0x3c(0x0c)
};

// Class ConZ.GaugeClusterComponent
// Size: 0x1f0 (Inherited: 0xb0)
struct UGaugeClusterComponent : UActorComponent {
	char pad_B0[0x140]; // 0xb0(0x140)
};

// Class ConZ.ItemWithSkeletalMesh
// Size: 0x9b0 (Inherited: 0x9b0)
struct AItemWithSkeletalMesh : AItem {
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9a8(0x08)
};

// Class ConZ.GeigerCounter
// Size: 0x9f0 (Inherited: 0x9b0)
struct AGeigerCounter : AItemWithSkeletalMesh {
	char pad_9B0[0x8]; // 0x9b0(0x08)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9b8(0x08)
	bool _hasVisualIndicator; // 0x9c0(0x01)
	char pad_9C1[0x3]; // 0x9c1(0x03)
	float _maxAmountDetectable; // 0x9c4(0x04)
	float _maxDetectionRadius; // 0x9c8(0x04)
	float _lightIndicatorBaseEmisiveStrength; // 0x9cc(0x04)
	struct UAkAudioEvent* _startEvent; // 0x9d0(0x08)
	struct UAkAudioEvent* _stopEvent; // 0x9d8(0x08)
	char pad_9E0[0x10]; // 0x9e0(0x10)

	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.GeigerCounter.OnResourceComponentDeactivated // (Final|Native|Private) // @ game+0x23f2350
	void OnResourceComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.GeigerCounter.OnResourceComponentActivated // (Final|Native|Private) // @ game+0x23f2280
};

// Class ConZ.GeigerCounterAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UGeigerCounterAnimInstance : UAnimInstance {
	float _radiationRatio; // 0x2c0(0x04)
	bool _isTurnedOn; // 0x2c4(0x01)
	char pad_2C5[0xb]; // 0x2c5(0x0b)
};

// Class ConZ.GenericTooltip
// Size: 0x4e0 (Inherited: 0x268)
struct UGenericTooltip : UUserWidget {
	struct FTextBlockStyle TextStyle; // 0x268(0x270)
	struct UExtendedRichTextBlock* DescriptionText; // 0x4d8(0x08)
};

// Class ConZ.GhostTrailComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UGhostTrailComponent : UActorComponent {

	void SetTrailActive(bool Active); // Function ConZ.GhostTrailComponent.SetTrailActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
	bool GetTrailActive(); // Function ConZ.GhostTrailComponent.GetTrailActive // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x297fc00
};

// Class ConZ.Gib
// Size: 0x230 (Inherited: 0x220)
struct AGib : AActor {
	struct UStaticMeshComponent* MeshComponent; // 0x220(0x08)
	float ShrinkFactor; // 0x228(0x04)
	float ImpulseMultiplier; // 0x22c(0x04)
};

// Class ConZ.GlobalAquaticLifeManager
// Size: 0x1740 (Inherited: 0x220)
struct AGlobalAquaticLifeManager : AActor {
	float _updateRegisteredPrisonersTickTime; // 0x220(0x04)
	char pad_224[0x13f4]; // 0x224(0x13f4)
	struct TMap<int64_t, struct FAquaticLifeSpawningVolumeDescription> _fishSpawningVolumes; // 0x1618(0x50)
	char pad_1668[0x20]; // 0x1668(0x20)
	float _localFishSchoolManagerRelevancyRange; // 0x1688(0x04)
	float _distanceBetweenLocalFishSchoolManagers; // 0x168c(0x04)
	float _localFishSchoolManagerTickTime; // 0x1690(0x04)
	float _localFishSchoolManagerDestructionTime; // 0x1694(0x04)
	float _prisonerWaterImmersionRelevancyThreshold; // 0x1698(0x04)
	float _waterSplinePitchThresholdForSchools; // 0x169c(0x04)
	int32_t _maxSpawnedSchools; // 0x16a0(0x04)
	char pad_16A4[0x1c]; // 0x16a4(0x1c)
	float _localFishingZoneIndicatorManagerRelevancyRange; // 0x16c0(0x04)
	float _localFishingZoneIndicatorManagerTickTime; // 0x16c4(0x04)
	float _localFishingZoneIndicatorManagerDestructionTime; // 0x16c8(0x04)
	char pad_16CC[0x4]; // 0x16cc(0x04)
	struct AFishingZoneIndicator* _indicatorClass; // 0x16d0(0x08)
	float _fishingPrecision; // 0x16d8(0x04)
	char pad_16DC[0x4]; // 0x16dc(0x04)
	struct UCurveFloat* _weatherPercentageCurve; // 0x16e0(0x08)
	int32_t _maxSpawnedIndicators; // 0x16e8(0x04)
	char pad_16EC[0x24]; // 0x16ec(0x24)
	int32_t _maxLargeAquaticAnimals; // 0x1710(0x04)
	char pad_1714[0x4]; // 0x1714(0x04)
	struct TArray<struct ULargeAquaticAnimalSpeciesData*> _possibleLargeAquaticAnimals; // 0x1718(0x10)
	float _distanceBetweenLargeAquaticAnimals; // 0x1728(0x04)
	float _largeAquaticAnimalSpawningRangeMin; // 0x172c(0x04)
	float _largeAquaticAnimalSpawningRangeMax; // 0x1730(0x04)
	float _requiredTimeInWaterToSpawnLargeAquaticAnimal; // 0x1734(0x04)
	float _requiredTimeInWaterWhileBleedingToSpawnLargeAquaticAnimal; // 0x1738(0x04)
	float _timeToReenableLargeAquaticAnimalSpawnZone; // 0x173c(0x04)
};

// Class ConZ.GlobalBirdSpawner2
// Size: 0x2f8 (Inherited: 0x220)
struct AGlobalBirdSpawner2 : AActor {
	int32_t MaxSpawnInstances; // 0x220(0x04)
	int32_t MaxCoastalBirdSpawnPerPlayer; // 0x224(0x04)
	int32_t MaxContinentalBirdSpawnPerPlayer; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct TArray<struct ABird2*> CoastalBirds; // 0x230(0x10)
	struct TArray<struct ABird2*> ContinentalBirds; // 0x240(0x10)
	float FlyingBirdSpawnAwayDistanceMin; // 0x250(0x04)
	float FlyingBirdSpawnAwayDistanceMax; // 0x254(0x04)
	float GroundBirdSpawnAwayDistanceMin; // 0x258(0x04)
	float GroundBirdSpawnAwayDistanceMax; // 0x25c(0x04)
	float MinSpawnInfrontDistance; // 0x260(0x04)
	struct FGameplayTag BirdSpawnerMask; // 0x264(0x08)
	int32_t BulkSpawn; // 0x26c(0x04)
	struct TArray<enum class EPhysicalSurface> AllowedSurfaces; // 0x270(0x10)
	struct UBillboardComponent* Sprite; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)
	struct TArray<struct ABird2*> _birds; // 0x290(0x10)
	char pad_2A0[0x58]; // 0x2a0(0x58)
};

// Class ConZ.GlobalEncounterManager
// Size: 0x680 (Inherited: 0x220)
struct AGlobalEncounterManager : AActor {
	struct TArray<struct FEncounterStaticZoneDescription> _staticZoneDescriptions; // 0x220(0x10)
	char pad_230[0x8]; // 0x230(0x08)
	struct TArray<struct FEncounterGroupedCharacterSpawnPoint> _encounterGroupedCharacterSpawnPoints; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)
	struct TArray<struct FEncounterLegacyCharacterSpawnPoint> _encounterLegacyCharacterSpawnPoints; // 0x250(0x10)
	char pad_260[0x1d0]; // 0x260(0x1d0)
	struct UEncounterManagerCommonData* _commonData; // 0x430(0x08)
	char pad_438[0x248]; // 0x438(0x248)
};

// Class ConZ.GlobalGuardedZoneManager
// Size: 0x3a0 (Inherited: 0x220)
struct AGlobalGuardedZoneManager : AActor {
	char pad_220[0x50]; // 0x220(0x50)
	float _guardedZoneTickTime; // 0x270(0x04)
	float _guardedZoneManagerPlayerLogicTickTime; // 0x274(0x04)
	char pad_278[0x4]; // 0x278(0x04)
	float _timeToDeactivateSentrySpawners; // 0x27c(0x04)
	float _timeToRespawnSentry; // 0x280(0x04)
	float _dropshipSpawnDistanceXY; // 0x284(0x04)
	float _dropshipSpawnDistanceZ; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct TSoftClassPtr<UObject> _dropshipSentryRespawnClass; // 0x290(0x28)
	int32_t _maxConsecutiveSentryHitsBeforeDefenderSpawns; // 0x2b8(0x04)
	float _maxConsecutiveSentryHitsResetTime; // 0x2bc(0x04)
	float _abandonedBunkerZoneManagerPlayerLogicTickTime; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct UAbandonedBunkerZoneCommonData* _abandonedBunkerZoneCommonData; // 0x2c8(0x08)
	char pad_2D0[0x4]; // 0x2d0(0x04)
	float _distanceToPlayerToKeepDebugCharacterAlive; // 0x2d4(0x04)
	float _debugCharacterLifespanAfterDeath; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct TSoftClassPtr<UObject> _debugRazorClass; // 0x2e0(0x28)
	struct TSoftClassPtr<UObject> _debugBrennerClass; // 0x308(0x28)
	struct TSoftClassPtr<UObject> _dropshipClass; // 0x330(0x28)
	struct UEncounterBase* _defenderHordeEncounterClass; // 0x358(0x08)
	char pad_360[0x40]; // 0x360(0x40)
};

// Class ConZ.GlobalRaidProtectionManager
// Size: 0x3f0 (Inherited: 0x3d0)
struct AGlobalRaidProtectionManager : ARaidProtectionManager {
	char pad_3D0[0x20]; // 0x3d0(0x20)

	void NetMulticast_ShowRaidTimesMessages(struct TArray<struct FGlobalRaidProtectionRaidPeriod> raidPeriods); // Function ConZ.GlobalRaidProtectionManager.NetMulticast_ShowRaidTimesMessages // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f56a0
	void NetMulticast_ShowRaidStartAnnouncementMessage(struct FGlobalRaidProtectionRaidPeriod raidPeriod); // Function ConZ.GlobalRaidProtectionManager.NetMulticast_ShowRaidStartAnnouncementMessage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f5600
	void NetMulticast_ShowRaidEndAnnouncementMessage(int32_t timeUntilRaidConcludes); // Function ConZ.GlobalRaidProtectionManager.NetMulticast_ShowRaidEndAnnouncementMessage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125ccc0
	void NetMulticast_ShowRaidConcludedMessage(); // Function ConZ.GlobalRaidProtectionManager.NetMulticast_ShowRaidConcludedMessage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f55e0
	void NetMulticast_ShowRaidAllowedMessage(); // Function ConZ.GlobalRaidProtectionManager.NetMulticast_ShowRaidAllowedMessage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x125cc10
};

// Class ConZ.GlobalUIData
// Size: 0x2a0 (Inherited: 0x28)
struct UGlobalUIData : UObject {
	struct UModularTooltip* DefaultModularTooltipClass; // 0x28(0x08)
	struct TMap<struct UModularTooltipElementData*, struct UModularTooltipElement*> ModularTooltipElementClassMapping; // 0x30(0x50)
	struct TMap<struct UModularCodexEntryElementData*, struct UModularCodexEntryElement*> ModularCodexEntryElementClassMapping; // 0x80(0x50)
	struct TMap<enum class ECodexCategory, struct FSlateBrush> CodexCategoryIconTypeMap; // 0xd0(0x50)
	struct TMap<enum class ESurvivalTipCodexCategory, struct FSlateBrush> SurvivalTipCodexCategoryIconTypeMap; // 0x120(0x50)
	struct UManualEnhancedImageWidget* ManualEnhancedImageWidgetClass; // 0x170(0x08)
	struct UManualEnhancedImageTextWidget* ManualEnhancedImageTextWidgetClass; // 0x178(0x08)
	struct UMessageBox* MessageBox; // 0x180(0x08)
	struct UMessageBoxWithNote* MessageBoxWithNote; // 0x188(0x08)
	struct ULogoutMessageBox* LogoutMessageBox; // 0x190(0x08)
	struct UMessageBoxWithList* MessageBoxWithList; // 0x198(0x08)
	struct UMessageBoxWithEditableText* MessageBoxWithEditableText; // 0x1a0(0x08)
	struct UMessageBoxWithCheckBox* MessageBoxWithCheckBox; // 0x1a8(0x08)
	struct UMessageBox* PartialPriceSellConfirmation; // 0x1b0(0x08)
	struct UUserWidget* MessageBoxButton; // 0x1b8(0x08)
	struct UUserWidget* LabeledSliderWithNumber; // 0x1c0(0x08)
	struct UUserWidget* LabeledCarousel; // 0x1c8(0x08)
	struct UUserWidget* LabeledDropdown; // 0x1d0(0x08)
	struct UUserWidget* LabeledTextBlock; // 0x1d8(0x08)
	struct UUserWidget* LabeledControlMapping; // 0x1e0(0x08)
	struct UUIRepresentableObjectWidget* UIRepresentableObjectWidgetSubtype; // 0x1e8(0x08)
	struct TMap<enum class EButtonType, struct FButtonIcons> ButtonIconTypeMap; // 0x1f0(0x50)
	struct UUISoundsData* UISoundsData; // 0x240(0x08)
	struct UQuestUIData* QuestUIData; // 0x248(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, struct FGameplayTag> SkillClassToWidgetHighlightMap; // 0x250(0x50)
};

// Class ConZ.GloveStatsTag
// Size: 0x40 (Inherited: 0x30)
struct UGloveStatsTag : UBaseItemTag {
	float ElectricalDamageModifier; // 0x30(0x04)
	float LockpkickingPressureModifier; // 0x34(0x04)
	bool PreventsHandAbrasions; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float DecayMultiplierWhileDoingAbrasiveActions; // 0x3c(0x04)
};

// Class ConZ.GradedArcedProgressBar
// Size: 0x2c0 (Inherited: 0x268)
struct UGradedArcedProgressBar : UUserWidget {
	struct UImage* _fillImage; // 0x268(0x08)
	struct UMaterialInstanceConstant* _fillMaterial; // 0x270(0x08)
	struct FLinearColor _fillColorStart; // 0x278(0x10)
	struct FLinearColor _fillColorMiddle; // 0x288(0x10)
	struct FLinearColor _fillColorEnd; // 0x298(0x10)
	float _maxRateOfChangePerSecond; // 0x2a8(0x04)
	char pad_2AC[0x14]; // 0x2ac(0x14)
};

// Class ConZ.Graph2DWidget
// Size: 0x1f8 (Inherited: 0x110)
struct UGraph2DWidget : UWidget {
	struct FSlateBrush Brush; // 0x110(0x88)
	struct FDelegate BrushDelegate; // 0x198(0x10)
	struct FLinearColor ColorAndOpacity; // 0x1a8(0x10)
	struct FDelegate ColorAndOpacityDelegate; // 0x1b8(0x10)
	float GraphLineThickness; // 0x1c8(0x04)
	float GraphLineSpriteSpacing; // 0x1cc(0x04)
	struct FVector2D GraphSize; // 0x1d0(0x08)
	bool InitializeGraphWithDefaultValue; // 0x1d8(0x01)
	char pad_1D9[0x3]; // 0x1d9(0x03)
	int32_t SampleMax; // 0x1dc(0x04)
	float DefaultSampleValue; // 0x1e0(0x04)
	bool UseLineAntialiasing; // 0x1e4(0x01)
	char pad_1E5[0x13]; // 0x1e5(0x13)
};

// Class ConZ.GraphicsSettingsManager
// Size: 0x28 (Inherited: 0x28)
struct UGraphicsSettingsManager : UObject {
};

// Class ConZ.GrappleActionComponent
// Size: 0x110 (Inherited: 0xb0)
struct UGrappleActionComponent : UActorComponent {
	struct AConZCharacter* _grappler; // 0xb0(0x08)
	struct APrisoner* _prisonerVictim; // 0xb8(0x08)
	struct UGrappleActionParameters* _grappleActionParameters; // 0xc0(0x08)
	bool _isReleaseInProgress; // 0xc8(0x01)
	char pad_C9[0x47]; // 0xc9(0x47)

	void OnRep_IsReleaseInProgress(); // Function ConZ.GrappleActionComponent.OnRep_IsReleaseInProgress // (Final|Native|Private) // @ game+0x23f59b0
	void NetMulticast_PlayReleaseMontagePairAtIndex(int32_t Index); // Function ConZ.GrappleActionComponent.NetMulticast_PlayReleaseMontagePairAtIndex // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23f5550
	void NetMulticast_PlayMontagePairAtIndex(int32_t Index); // Function ConZ.GrappleActionComponent.NetMulticast_PlayMontagePairAtIndex // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23f54c0
	void Client_OnVictimDamaged(struct APrisoner* Prisoner, float damageAmount, struct FDamageEvent DamageEvent, struct AController* eventInstigator, struct AActor* damageObject); // Function ConZ.GrappleActionComponent.Client_OnVictimDamaged // (Final|Net|Native|Event|Private|NetClient) // @ game+0x23f51b0
};

// Class ConZ.GrappleActionParameters
// Size: 0x1a0 (Inherited: 0x30)
struct UGrappleActionParameters : UDataAsset {
	bool IsGrappleAttackInWater; // 0x30(0x01)
	bool ShouldVictimGoToRagdoll; // 0x31(0x01)
	enum class EGrappleActionMeshDetachmentRule MeshDetachmentRule; // 0x32(0x01)
	char pad_33[0xd]; // 0x33(0x0d)
	struct FTransform MeshDetachmentOffsetTransform; // 0x40(0x30)
	struct FTransform MeshReatttachmentRelativeTransform; // 0x70(0x30)
	enum class EGrappleActionPerspectiveSwitchType PerspectiveSwitchType; // 0xa0(0x01)
	bool ShouldIgnoreTurnInput; // 0xa1(0x01)
	bool ShouldTurnOffPanini; // 0xa2(0x01)
	bool ShouldUseGrappleAnimInstance; // 0xa3(0x01)
	bool ShouldOverrideCameraFOV; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	float CameraFOVOverride; // 0xa8(0x04)
	bool CanEverApplyWallProximityAnimationOffset; // 0xac(0x01)
	char pad_AD[0x3]; // 0xad(0x03)
	float WallProximityAnimationOffset; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct UAnimSequence* GrapplerIdleAnimation; // 0xb8(0x08)
	struct UAnimSequence* GrapplerIdleFPAnimation; // 0xc0(0x08)
	struct UAnimMontage* GrapplerInitialGrabMontage; // 0xc8(0x08)
	float GrappleAttackMaxExpectedDistance; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct UAnimMontage* VictimInitialGrabMontage; // 0xd8(0x08)
	struct TArray<struct FGrappleActionMontagePair> GrappleActionMontagePairs; // 0xe0(0x10)
	struct TArray<struct FGrappleActionMontagePair> GrappleActionReleaseMontagePairs; // 0xf0(0x10)
	struct UAnimMontage* GrappleActionVictimGetUpMontageAfterGrapplerDeath; // 0x100(0x08)
	struct UAkAudioEvent* StartGrappleAudioEvent; // 0x108(0x08)
	struct UAkAudioEvent* StopGrappleAudioEvent; // 0x110(0x08)
	struct FName AttackerAttachSocketName; // 0x118(0x08)
	bool ShouldSetAttackerLocationToVictimLocation; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	struct FVector AttackerLocationToVictimLocationOffset; // 0x124(0x0c)
	bool ShouldOffsetAttacker; // 0x130(0x01)
	char pad_131[0x3]; // 0x131(0x03)
	float AttackerReleaseOffset; // 0x134(0x04)
	struct UAnimSequence* DefenderIdleAnimation; // 0x138(0x08)
	struct UAnimSequence* DefenderIdleFPAnimation; // 0x140(0x08)
	struct FName DefenderAttachBoneName; // 0x148(0x08)
	bool ShouldOffsetDefender; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	float DefenderReleaseOffset; // 0x154(0x04)
	float DefenderReleaseOffsetOnServerAfterRelease; // 0x158(0x04)
	float DefensePercentageIncreasePerInput; // 0x15c(0x04)
	float DefensePercentageDecreasePerSecond; // 0x160(0x04)
	float DefensePercentageDecreasePerDamageTaken; // 0x164(0x04)
	char pad_168[0x8]; // 0x168(0x08)
	struct FTransform CameraSpringArmOffset; // 0x170(0x30)
};

// Class ConZ.GrapplingWidget
// Size: 0x280 (Inherited: 0x268)
struct UGrapplingWidget : UUserWidget {
	struct UImage* _grapplingValue; // 0x268(0x08)
	struct UTextBlock* _instructionText; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
};

// Class ConZ.GrenadeAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UGrenadeAnimInstance : UAnimInstance {
	enum class EPrisonerGroundStance _owningPrisonerStance; // 0x2c0(0x01)
	bool _isOwningPrisonerInFirstPersonView; // 0x2c1(0x01)
	bool _isPinPulled; // 0x2c2(0x01)
	char pad_2C3[0xd]; // 0x2c3(0x0d)
};

// Class ConZ.GroupedCharacterSpawnerComponent
// Size: 0x210 (Inherited: 0x210)
struct UGroupedCharacterSpawnerComponent : UCharacterSpawnerComponent {
	enum class ESpawnType _spawnType; // 0x208(0x01)
	char _allowedGroupSpawnPointsType; // 0x209(0x01)
};

// Class ConZ.GuardedZoneManager
// Size: 0x250 (Inherited: 0x220)
struct AGuardedZoneManager : AActor {
	struct UBillboardComponent* _sprite; // 0x220(0x08)
	struct TArray<struct ASentrySpawner2*> _sentrySpawners; // 0x228(0x10)
	char pad_238[0x18]; // 0x238(0x18)
};

// Class ConZ.HaircutAndMakeupService
// Size: 0x38 (Inherited: 0x38)
struct UHaircutAndMakeupService : UTraderService {
};

// Class ConZ.HalloweenSacrificePit
// Size: 0x4c0 (Inherited: 0x220)
struct AHalloweenSacrificePit : AActor {
	bool _shouldUseDeactivationTime; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	int64_t _deactivationTime; // 0x228(0x08)
	struct FVector _sacrificePitCenter; // 0x230(0x0c)
	float _sacrificePitRadius; // 0x23c(0x04)
	struct TArray<struct FHalloweenSacrificePitRequiredItemVariants> _requiredItemsInSacrificePit; // 0x240(0x10)
	float _giftSpawningTimeWindowDuration; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TSoftClassPtr<UObject> _giftItem; // 0x258(0x28)
	struct FTransform _giftItemSpawnTransform; // 0x280(0x30)
	float _giftItemAlreadySpawnedCheckRadius; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawningPreludeAudioEvent; // 0x2b8(0x28)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawningPreludeParticleSystem; // 0x2e0(0x28)
	char pad_308[0x8]; // 0x308(0x08)
	struct FTransform _giftSpawningPreludeParticlesTransform; // 0x310(0x30)
	struct TSoftObjectPtr<UAkAudioEvent> _giftSpawningFinishedAudioEvent; // 0x340(0x28)
	struct TSoftObjectPtr<UParticleSystem> _giftSpawningFinishedParticleSystem; // 0x368(0x28)
	struct FTransform _giftSpawningFinishedParticlesTransform; // 0x390(0x30)
	struct ADecalActor* _demonicSigilDecal; // 0x3c0(0x08)
	struct FName _demonicSigilDecalEmissiveColorParameterName; // 0x3c8(0x08)
	struct FRuntimeFloatCurve _demonicSigilDecalEmissiveColorMultiplierVsTime; // 0x3d0(0x88)
	int32_t _numZombiesToSpawn; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct TArray<struct TSoftClassPtr<UObject>> _possibleZombies; // 0x460(0x10)
	struct TArray<struct FTransform> _zombieSpawnTransforms; // 0x470(0x10)
	float _zombieSpawnAreaSlack; // 0x480(0x04)
	char pad_484[0x3c]; // 0x484(0x3c)

	void NetMulticast_StartLoadingAssets(struct TArray<struct FSoftObjectPath> assetPaths); // Function ConZ.HalloweenSacrificePit.NetMulticast_StartLoadingAssets // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f58e0
	void NetMulticast_SpawnGiftSpawningPreludeEffects(struct UAkAudioEvent* AudioEvent, struct UParticleSystem* Particles); // Function ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningPreludeEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f5810
	void NetMulticast_SpawnGiftSpawningFinishedEffects(struct UAkAudioEvent* AudioEvent, struct UParticleSystem* Particles); // Function ConZ.HalloweenSacrificePit.NetMulticast_SpawnGiftSpawningFinishedEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f5740
};

// Class ConZ.HandgunSkill
// Size: 0x218 (Inherited: 0x218)
struct UHandgunSkill : URangedWeaponsSkill {
};

// Class ConZ.HandheldLightItem
// Size: 0x9e0 (Inherited: 0x9b0)
struct AHandheldLightItem : AItem {
	int32_t _currentLightAngleIndex; // 0x9b0(0x04)
	char pad_9B4[0x4]; // 0x9b4(0x04)
	struct TArray<float> _possibleLightAngles; // 0x9b8(0x10)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9c8(0x08)
	struct UResourcePoweredLightItemComponent* _batteryPoweredLightItemComponent; // 0x9d0(0x08)
	struct UBasicGameResourceContainerComponent* _resourceContainerComponent; // 0x9d8(0x08)

	void OnRep_CurrentLightAngleIndex(); // Function ConZ.HandheldLightItem.OnRep_CurrentLightAngleIndex // (Final|Native|Private) // @ game+0xbbc480
	float GetCurrentLightAngle(); // Function ConZ.HandheldLightItem.GetCurrentLightAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9370
};

// Class ConZ.HandheldLightItemAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UHandheldLightItemAnimInstance : UAnimInstance {
	float _lightAngle; // 0x2b8(0x04)
};

// Class ConZ.HandheldSkeletalMeshLightItem
// Size: 0x9f0 (Inherited: 0x9e0)
struct AHandheldSkeletalMeshLightItem : AHandheldLightItem {
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9e0(0x08)
	char pad_9E8[0x8]; // 0x9e8(0x08)
};

// Class ConZ.HandheldSkeletalMeshLightItemWithGameResourceSlot
// Size: 0x9f0 (Inherited: 0x9f0)
struct AHandheldSkeletalMeshLightItemWithGameResourceSlot : AHandheldSkeletalMeshLightItem {
};

// Class ConZ.HandPanel3
// Size: 0x2f0 (Inherited: 0x268)
struct UHandPanel3 : UTabMenuPanel {
	struct UHandsHolstersWidget2* _handInventory; // 0x268(0x08)
	struct UHandsHolstersWidget2* _holsterInventory0; // 0x270(0x08)
	struct UHandsHolstersWidget2* _holsterInventory1; // 0x278(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher0; // 0x280(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher3; // 0x288(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher4; // 0x290(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher5; // 0x298(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher6; // 0x2a0(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher7; // 0x2a8(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher8; // 0x2b0(0x08)
	struct UQuickAccessItemSwitcher3* _quickAccessItemSwitcher9; // 0x2b8(0x08)
	struct USizeBox* _mainSizeBox; // 0x2c0(0x08)
	struct UTextBlock* _famePointsText; // 0x2c8(0x08)
	struct UTextBlock* _accountBalanceText; // 0x2d0(0x08)
	struct UTextBlock* _goldBalanceText; // 0x2d8(0x08)
	float _mainPanelWidth; // 0x2e0(0x04)
	char pad_2E4[0xc]; // 0x2e4(0x0c)
};

// Class ConZ.InventoryContainerWidget2
// Size: 0x268 (Inherited: 0x268)
struct UInventoryContainerWidget2 : UUserWidget {
};

// Class ConZ.HandsHolstersWidget2
// Size: 0x330 (Inherited: 0x268)
struct UHandsHolstersWidget2 : UInventoryContainerWidget2 {
	struct UTextBlock* _slotTypeText; // 0x268(0x08)
	struct UInventoryContainer2D* _container; // 0x270(0x08)
	struct UInventoryContainerHandsHolsters* _handsHolstersContainer; // 0x278(0x08)
	struct UTextBlock* _nameText; // 0x280(0x08)
	struct UInventorySlotUserWidget* _itemSlotWidget; // 0x288(0x08)
	struct UItemWidget2* _itemWidget; // 0x290(0x08)
	struct UTextBlock* _price; // 0x298(0x08)
	struct UOverlay* _priceOverlay; // 0x2a0(0x08)
	struct UExpandableContainer* _expandableContainer; // 0x2a8(0x08)
	struct UGridPanel* _inventoryGrid; // 0x2b0(0x08)
	struct UInventorySlotUserWidget* _attachmentSlotWidget; // 0x2b8(0x08)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets; // 0x2c0(0x10)
	struct TArray<struct UItemWidget2*> _attachmentWidgets; // 0x2d0(0x10)
	enum class EHandsHolstersType _type; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)
	struct TScriptInterface<IInventoryNode> _item; // 0x2e8(0x10)
	struct FName _conzMappingName; // 0x2f8(0x08)
	struct FText _slotName; // 0x300(0x18)
	char pad_318[0x18]; // 0x318(0x18)

	void OnFishingAttachmentRemoved(struct AFishingRod* FishingRod, struct AFishingAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentRemoved // (Final|Native|Private) // @ game+0x23fa040
	void OnFishingAttachmentDestroyed(struct AActor* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentDestroyed // (Final|Native|Private) // @ game+0x23f9fb0
	void OnFishingAttachmentAdded(struct AFishingRod* FishingRod, struct AFishingAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnFishingAttachmentAdded // (Final|Native|Private) // @ game+0x23f9ee0
	void OnAttachmentRemoved(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentRemoved // (Final|Native|Private) // @ game+0x23fa040
	void OnAttachmentDestroyed(struct AActor* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentDestroyed // (Final|Native|Private) // @ game+0x23f9fb0
	void OnAttachmentAdded(struct AWeapon* Weapon, struct AWeaponAttachment* Attachment); // Function ConZ.HandsHolstersWidget2.OnAttachmentAdded // (Final|Native|Private) // @ game+0x23f9ee0
};

// Class ConZ.HasCustomRadialDamageHandler
// Size: 0x28 (Inherited: 0x28)
struct UHasCustomRadialDamageHandler : UInterface {
};

// Class ConZ.HasLadderMarkersInterface
// Size: 0x28 (Inherited: 0x28)
struct UHasLadderMarkersInterface : UInterface {

	void GetLadderMarkers(struct TArray<struct FLadderMarker>& Result); // Function ConZ.HasLadderMarkersInterface.GetLadderMarkers // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23f93a0
};

// Class ConZ.HasOwningUser
// Size: 0x28 (Inherited: 0x28)
struct UHasOwningUser : UInterface {
};

// Class ConZ.HasProcessViewRotation
// Size: 0x28 (Inherited: 0x28)
struct UHasProcessViewRotation : UInterface {
};

// Class ConZ.HazmatSuitTag
// Size: 0x30 (Inherited: 0x30)
struct UHazmatSuitTag : UBaseItemTag {
};

// Class ConZ.HeadLamp
// Size: 0xa70 (Inherited: 0xa50)
struct AHeadLamp : AClothesItem {
	struct USpotLightComponent* _spotLightComponent; // 0xa50(0x08)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0xa58(0x08)
	struct UResourcePoweredLightItemComponent* _batteryPoweredLightItemComponent; // 0xa60(0x08)
	char pad_A68[0x8]; // 0xa68(0x08)
};

// Class ConZ.HealthWidget
// Size: 0x340 (Inherited: 0x340)
struct UHealthWidget : UWaypointWidgetBase {

	void SetMaxHealthPercentage(float Value); // Function ConZ.HealthWidget.SetMaxHealthPercentage // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void SetHealthPercentage(float Value); // Function ConZ.HealthWidget.SetHealthPercentage // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.HeatSourceDebuggerEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UHeatSourceDebuggerEntitySetup : UEntitySetup {
};

// Class ConZ.HeatSourceEntityComponentState
// Size: 0x38 (Inherited: 0x28)
struct UHeatSourceEntityComponentState : UObject {
	struct UGameResourceType* ResourceType; // 0x28(0x08)
	float DesiredHeatIntensity; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.HeatSourceEntityComponentSetup
// Size: 0x178 (Inherited: 0x48)
struct UHeatSourceEntityComponentSetup : UEntityComponentSetup {
	struct UGameResourceType* ResourceType; // 0x48(0x08)
	float MaxTemperature; // 0x50(0x04)
	float InnerRadius; // 0x54(0x04)
	float OuterRadius; // 0x58(0x04)
	bool AutoFindResourceSupplier; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	struct FName ResourceSupplierName; // 0x60(0x08)
	struct FRuntimeFloatCurve ResourceSupplierUsageRateVsHeatIntensity; // 0x68(0x88)
	struct FRuntimeFloatCurve MaxHeatIntensityVsSupplierResourceAmountRatio; // 0xf0(0x88)
};

// Class ConZ.HeatSourceLinkUserData
// Size: 0x38 (Inherited: 0x28)
struct UHeatSourceLinkUserData : UAssetUserData {
	int32_t _heatSourceIndex; // 0x28(0x04)
	int32_t _cookingSlotIndex; // 0x2c(0x04)
	bool _sameHeatSourceCookingSlotIndex; // 0x30(0x01)
	bool _linkAllCookingSlotsToHeatSource; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class ConZ.HeatSourceItemComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UHeatSourceItemComponent : UItemComponent {
	struct TArray<struct UFueledHeatSource*> HeatSources; // 0xc8(0x10)
	bool HasUses; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
};

// Class ConZ.HeatSourceItemTag
// Size: 0xe8 (Inherited: 0x30)
struct UHeatSourceItemTag : UBaseItemTag {
	struct FHeatSource HeatSource; // 0x30(0xa8)
	char pad_D8[0x10]; // 0xd8(0x10)
};

// Class ConZ.HeatSourceManager
// Size: 0x2e8 (Inherited: 0x220)
struct AHeatSourceManager : AActor {
	float MassOfAdditionalOxygenUsedPerGramOfFuelBurned; // 0x220(0x04)
	char pad_224[0xc4]; // 0x224(0xc4)
};

// Class ConZ.HeatSourceMarker
// Size: 0x260 (Inherited: 0x220)
struct AHeatSourceMarker : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct USceneComponent* _sceneComponent; // 0x228(0x08)
	struct FHeatSourceParameters _heatSourceParameters; // 0x230(0x24)
	char pad_254[0xc]; // 0x254(0x0c)
};

// Class ConZ.HeatSourceMarkersComponent
// Size: 0x210 (Inherited: 0x200)
struct UHeatSourceMarkersComponent : USceneComponent {
	struct TArray<struct FHeatSource> _heatSources; // 0x1f8(0x10)
};

// Class ConZ.HitReactComponent
// Size: 0x2e0 (Inherited: 0xb0)
struct UHitReactComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	struct TArray<struct UHitReactMapping*> HitReactMappings; // 0xc8(0x10)
	struct FPhysicalHitReactData PhysicalHitReactData; // 0xd8(0x18)
	struct FName RagdollConstraintProfileName; // 0xf0(0x08)
	float RagdollRestThresholdSingleBodyMax; // 0xf8(0x04)
	float RagdollRestThresholdAverageBodyMax; // 0xfc(0x04)
	char pad_100[0x28]; // 0x100(0x28)
	struct FName _pelvisBoneName; // 0x128(0x08)
	struct FName _rootBoneName; // 0x130(0x08)
	struct UAnimMontage* _getUpFromFaceMontage; // 0x138(0x08)
	struct UAnimMontage* _getUpFromBackMontage; // 0x140(0x08)
	bool _shouldSnapToServerLocation; // 0x148(0x01)
	char pad_149[0x75]; // 0x149(0x75)
	enum class ERagdollTransitionState _ragdollTransitionState; // 0x1be(0x01)
	char pad_1BF[0x1]; // 0x1bf(0x01)
	struct FVector _serverRagdollLocation; // 0x1c0(0x0c)
	char pad_1CC[0x2c]; // 0x1cc(0x2c)
	bool _buoyancyEnabled; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
	struct FBuoyancy _serverBuoyancy; // 0x200(0x70)
	struct FBuoyancy _buoyancy; // 0x270(0x70)

	void RecoverFromRagdollImmediately(); // Function ConZ.HitReactComponent.RecoverFromRagdollImmediately // (Final|Native|Public|BlueprintCallable) // @ game+0x23fa240
	void RecoverFromRagdoll(); // Function ConZ.HitReactComponent.RecoverFromRagdoll // (Final|Native|Public|BlueprintCallable) // @ game+0x23fa220
	void OnRep_ServerRagdollLocation(); // Function ConZ.HitReactComponent.OnRep_ServerRagdollLocation // (Final|Native|Private) // @ game+0x23fa200
	void OnRep_RagdollTransitionState(); // Function ConZ.HitReactComponent.OnRep_RagdollTransitionState // (Final|Native|Private) // @ game+0x23fa1e0
	void OnMontageBlendingOut(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.HitReactComponent.OnMontageBlendingOut // (Final|Native|Private) // @ game+0x23fa110
	void NetMulticast_RecoverFromRagdoll(bool immediately); // Function ConZ.HitReactComponent.NetMulticast_RecoverFromRagdoll // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23f9e50
	void NetMulticast_HandleHit(struct FName HitReactType, enum class EDetectHitCollisionType detectHitCollisionType, enum class EDamageMagnitudeType hitMagnitude, enum class EHitDirectionType hitDirectionType); // Function ConZ.HitReactComponent.NetMulticast_HandleHit // (Net|Native|Event|NetMulticast|Public) // @ game+0x23f9d00
	void NetMulticast_GoToRagdollNoImpulse(enum class ERagdollTransitionState transitionState, struct FName ConstraintProfileName, enum class EGoToRagdollCaller caller, enum class ERagdollSpawnType creationType, struct FVector serverLocation); // Function ConZ.HitReactComponent.NetMulticast_GoToRagdollNoImpulse // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23f9b60
	void NetMulticast_GoToRagdoll(enum class ERagdollTransitionState transitionState, struct FName ConstraintProfileName, enum class EGoToRagdollCaller caller, enum class ERagdollSpawnType creationType, struct FVector serverLocation, float impulseIntensity, struct FVector Location, struct FVector Direction, struct FName Bone); // Function ConZ.HitReactComponent.NetMulticast_GoToRagdoll // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x23f9880
	void MoveRagdollMesh(struct UPrimitiveComponent* MeshComponent, struct FVector& currentLocation, struct FVector& TargetLocation); // Function ConZ.HitReactComponent.MoveRagdollMesh // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x23f9750
	bool IsRagdollAtRest(); // Function ConZ.HitReactComponent.IsRagdollAtRest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9340
	bool IsPlayingGetUpMontage(); // Function ConZ.HitReactComponent.IsPlayingGetUpMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9720
	bool IsInRagdoll(); // Function ConZ.HitReactComponent.IsInRagdoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f96f0
	bool IsCapsuleOverlapped(); // Function ConZ.HitReactComponent.IsCapsuleOverlapped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f96c0
	bool IsBlendingRagdoll(); // Function ConZ.HitReactComponent.IsBlendingRagdoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9690
	void GoToRagdoll(enum class ERagdollSpawnType creationType, float impulseIntensity, struct FVector Location, struct FVector Direction, struct FName Bone); // Function ConZ.HitReactComponent.GoToRagdoll // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23f94d0
	struct FQuat GetPelvisRotation(); // Function ConZ.HitReactComponent.GetPelvisRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9490
	struct FName GetPelvisBoneName(); // Function ConZ.HitReactComponent.GetPelvisBoneName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9450
	bool CanRecoverFromRagdoll(); // Function ConZ.HitReactComponent.CanRecoverFromRagdoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23f9340
	void ApplyPhysicalAnimationData(struct FPhysicalAnimationDesc& desc); // Function ConZ.HitReactComponent.ApplyPhysicalAnimationData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x23f9280
};

// Class ConZ.HitReactLandingParams
// Size: 0x60 (Inherited: 0x30)
struct UHitReactLandingParams : UDataAsset {
	struct UAnimMontage* MontageToPlay; // 0x30(0x08)
	float RegainControlDurationMultiplier; // 0x38(0x04)
	struct FFloatInterval RagdollImpactSpeedRange; // 0x3c(0x08)
	struct FFloatInterval RagdollDuration; // 0x44(0x08)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UCurveFloat* LandingDamageCurve; // 0x50(0x08)
	struct UCurveFloat* WaterImpactDamageCurve; // 0x58(0x08)
};

// Class ConZ.HitReactMapping
// Size: 0x3e0 (Inherited: 0x30)
struct UHitReactMapping : UDataAsset {
	struct FGameplayTagContainer HitReactTypes; // 0x30(0x20)
	float RegainControlMultiplier; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct FHitReactMagnitudeData HeadHit; // 0x58(0x120)
	struct FHitReactMagnitudeData BodyHit; // 0x178(0x120)
	struct FHitReactMagnitudeData LegsHit; // 0x298(0x120)
	struct FHitReactLandingData LandingHit; // 0x3b8(0x28)
};

// Class ConZ.HoverPanelWidget
// Size: 0x268 (Inherited: 0x268)
struct UHoverPanelWidget : UUserWidget {

	void SetWorldPosition(struct FVector position); // Function ConZ.HoverPanelWidget.SetWorldPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x23fd4e0
	void SetScreenPosition(struct FVector2D position); // Function ConZ.HoverPanelWidget.SetScreenPosition // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x297fc00
	struct UVerticalBox* GetContentBox(); // Function ConZ.HoverPanelWidget.GetContentBox // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void ClearPanel(); // Function ConZ.HoverPanelWidget.ClearPanel // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.HUD_John
// Size: 0x360 (Inherited: 0x310)
struct AHUD_John : AHUD {
	char pad_310[0x8]; // 0x310(0x08)
	struct UFont* NormalFont; // 0x318(0x08)
	char pad_320[0x40]; // 0x320(0x40)
};

// Class ConZ.HUDHighlightingWidget
// Size: 0x370 (Inherited: 0x268)
struct UHUDHighlightingWidget : UUserWidget {
	float _invisibleTickRate; // 0x268(0x04)
	float _fadeDuration; // 0x26c(0x04)
	struct FRuntimeFloatCurve _fadeCurve; // 0x270(0x88)
	struct UImage* _image; // 0x2f8(0x08)
	char pad_300[0x70]; // 0x300(0x70)
};

// Class ConZ.HUDNotification
// Size: 0x30 (Inherited: 0x30)
struct UHUDNotification : UConZNotification {
};

// Class ConZ.HUDNotificationDescription
// Size: 0x60 (Inherited: 0x40)
struct UHUDNotificationDescription : UNotificationDescription {
	struct FText Message; // 0x40(0x18)
	struct UAkAudioEvent* AudioEvent; // 0x58(0x08)
};

// Class ConZ.HudWidget
// Size: 0x430 (Inherited: 0x268)
struct UHudWidget : UUserWidget {
	struct UCanvasPanel* _mainCanvasPanel; // 0x268(0x08)
	struct USizeBox* _quickAccessBarSizeBox; // 0x270(0x08)
	struct UQuickAccessBarWidget* _quickAccessBar; // 0x278(0x08)
	struct UThrowingQuickAccessItemWidget* _throwingAccess; // 0x280(0x08)
	struct UQuickAccessItemWidget* _handQuickAccessItemWidget; // 0x288(0x08)
	struct UChatWidget* _chatWidget; // 0x290(0x08)
	struct UDialogueSystemContainerWidget* _dialogueSystemContainerWidget; // 0x298(0x08)
	struct UQuestTrackingWidget* _questTrackingWidget; // 0x2a0(0x08)
	bool _chatOpen; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UMessageContainer* _messages; // 0x2b0(0x08)
	struct UWarning* _warningMessage; // 0x2b8(0x08)
	struct UMicInputIndicator* _micInputIndicator; // 0x2c0(0x08)
	struct UVerticalBox* _warningsVerticalBox; // 0x2c8(0x08)
	struct UVerticalBox* _killNotificationVerticalBox; // 0x2d0(0x08)
	struct UWarningSignWidget* _warningSignWidgetClass; // 0x2d8(0x08)
	struct UKillNotificationWidget* _killNotificationWidgetClass; // 0x2e0(0x08)
	char pad_2E8[0x10]; // 0x2e8(0x10)
	struct UTabMenu* _tabMenuReborn; // 0x2f8(0x08)
	struct UPrisonerLifeIndicatorsSprite* _prisonerLifeIndicatorsSprite; // 0x300(0x08)
	struct UCompassWidget* _compassWidget; // 0x308(0x08)
	struct UScreenSpaceHealthWidget* _screenSpaceHealthWidget; // 0x310(0x08)
	struct UResourceIndicatorWidget* _nightVisionGogglesBatteryWidget; // 0x318(0x08)
	struct UShotsFiredTrackerWidget* _shotsFiredTrackerWidget; // 0x320(0x08)
	struct UFishingContainerWidget* _fishingContainerWidget; // 0x328(0x08)
	struct UGrapplingWidget* _grapplingWidget; // 0x330(0x08)
	struct UMusicPlayerDisplayWidget* _musicPlayerDisplayWidget; // 0x338(0x08)
	struct UFishingTrophyWidget* _fishingTrophyWidget; // 0x340(0x08)
	struct UVehicleHudWidget* _vehicleHUD; // 0x348(0x08)
	struct UPlasticSurgeryMenuWidget* _plasticSurgeryPanel; // 0x350(0x08)
	struct UBarberShopMenuWidget* _barberShopPanel; // 0x358(0x08)
	struct UCanvasPanel* _chatCanvas; // 0x360(0x08)
	struct UFloatingWidgetCanvas* _floatingWidgetCanvas; // 0x368(0x08)
	struct UGameEventNotificationPanel* _gameEventNotificationPanel; // 0x370(0x08)
	struct UNotificationPanelWidget* _notificationPanelWidget; // 0x378(0x08)
	struct ULevelUpNotificationWidget* _levelUpNotification; // 0x380(0x08)
	struct UNotificationWidget* _notificationWidgetClass; // 0x388(0x08)
	struct UNotificationWidget* _updateableNotification; // 0x390(0x08)
	struct UHUDHighlightingWidget* _hudHighlightingWidget; // 0x398(0x08)
	struct FMargin _adjustmentPaddingForVicinityWhenTrading; // 0x3a0(0x10)
	char pad_3B0[0x4]; // 0x3b0(0x04)
	float _notificationSoundCooldownInMinutes; // 0x3b4(0x04)
	char pad_3B8[0x58]; // 0x3b8(0x58)
	struct UTextBlock* _debugInfo; // 0x410(0x08)
	char pad_418[0x8]; // 0x418(0x08)
	struct UInteractionContextMenuBase* _contextMenuBase; // 0x420(0x08)
	struct UInteractionContextMenuSide* _contextMenuSide; // 0x428(0x08)
};

// Class ConZ.HuntingClue
// Size: 0x2c8 (Inherited: 0x220)
struct AHuntingClue : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct USceneComponent* _rootComponent; // 0x228(0x08)
	struct UParticleSystemComponent* _focusModeParticles; // 0x230(0x08)
	struct UDecalComponent* _clueDecalComponent; // 0x238(0x08)
	struct UStaticMeshComponent* _clueStaticMeshComponent; // 0x240(0x08)
	struct UArrowComponent* _debugArrowComponent; // 0x248(0x08)
	struct TArray<struct FHuntingClueVisuals> _firstClueVisuals; // 0x250(0x10)
	struct TArray<struct FHuntingClueVisuals> _visuals; // 0x260(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _firstClueSoundVariations; // 0x270(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _secondClueSoundVariations; // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UAkAudioEvent>> _thirdPlusClueSoundVariations; // 0x290(0x10)
	float _hearingDistance; // 0x2a0(0x04)
	float _minApparentDistance; // 0x2a4(0x04)
	float _fadeTime; // 0x2a8(0x04)
	float _lifetimeAfterFadeOut; // 0x2ac(0x04)
	char _packedClueIndexData; // 0x2b0(0x01)
	char pad_2B1[0x17]; // 0x2b1(0x17)
};

// Class ConZ.HuntingManager
// Size: 0x430 (Inherited: 0x220)
struct AHuntingManager : AActor {
	char pad_220[0x18]; // 0x220(0x18)
	float _huntInitTickBudgetInMilliseconds; // 0x238(0x04)
	int32_t _maxActiveHuntsNum; // 0x23c(0x04)
	float _daytimeSpawnMultipliers[0x4]; // 0x240(0x10)
	struct TMap<struct TSoftClassPtr<UObject>, struct TSoftClassPtr<UObject>> _huntingCluesPerAnimal; // 0x250(0x50)
	struct TArray<enum class EPhysicalSurface> _allowedClueSpawnSurfaces; // 0x2a0(0x10)
	float _huntStartPlayerCheckRadius; // 0x2b0(0x04)
	float _oldClueRemovalDistance; // 0x2b4(0x04)
	float _huntFailureTime; // 0x2b8(0x04)
	float _huntFailureAnimalDistance; // 0x2bc(0x04)
	float _corpseLifetimeMinutes; // 0x2c0(0x04)
	float _corpseRemovalDistanceInSight; // 0x2c4(0x04)
	float _corpseRemovalDistanceOutsideSight; // 0x2c8(0x04)
	float _corpseRemovalAngle; // 0x2cc(0x04)
	int32_t _maxSpawnPointGenerationFailures; // 0x2d0(0x04)
	float _timeToPlaySoundAfterClueInteractionMin; // 0x2d4(0x04)
	float _timeToPlaySoundAfterClueInteractionMax; // 0x2d8(0x04)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	struct FGameplayTagContainer _overrideableBiomes; // 0x2e0(0x20)
	struct TArray<struct FHuntingBiomeDescription> _huntingBiomes; // 0x300(0x10)
	char pad_310[0x120]; // 0x310(0x120)

	void OnAnimalKilled(struct AConZCharacter* ConZCharacter); // Function ConZ.HuntingManager.OnAnimalKilled // (Final|Native|Private) // @ game+0x23fd410
	void OnAnimalActorDestroyed(struct AConZCharacter* ConZCharacter); // Function ConZ.HuntingManager.OnAnimalActorDestroyed // (Final|Native|Private) // @ game+0x23fd380
	void NetMulticast_PlayClueSound(struct TSoftObjectPtr<UAkAudioEvent> clueAudioEvent, struct FVector clueLocation, float clueHearingDistance, float clueMinApparentDistance); // Function ConZ.HuntingManager.NetMulticast_PlayClueSound // (Final|Net|Native|Event|NetMulticast|Private|HasDefaults) // @ game+0x23fd1f0
};

// Class ConZ.IgnitableExplosiveItemComponent
// Size: 0x210 (Inherited: 0x198)
struct UIgnitableExplosiveItemComponent : UIgnitableItemComponent {
	float _explosionDamage; // 0x198(0x04)
	float _explosionOuterRadius; // 0x19c(0x04)
	float _explosionInnerRadius; // 0x1a0(0x04)
	float _explosionFalloff; // 0x1a4(0x04)
	float _explosionForce; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0x1b0(0x10)
	char pad_1C0[0x8]; // 0x1c0(0x08)
	struct UParticleSystem* _explosionParticle; // 0x1c8(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x1d0(0x08)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x1d8(0x08)
	float _hearingDamageRadius; // 0x1e0(0x04)
	float _minExternalDamageForDetonation; // 0x1e4(0x04)
	float _activeNetCullDistanceSquaredMeters; // 0x1e8(0x04)
	bool _canExplodeUnderwater; // 0x1ec(0x01)
	char pad_1ED[0x23]; // 0x1ed(0x23)

	void Multicast_OnDetonate(struct FVector zeroBasedLocation); // Function ConZ.IgnitableExplosiveItemComponent.Multicast_OnDetonate // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x23fd170
};

// Class ConZ.ImageSlotWidget
// Size: 0x3e0 (Inherited: 0x268)
struct UImageSlotWidget : UUserWidget {
	char pad_268[0x48]; // 0x268(0x48)
	struct UImage* _availabilityGrid; // 0x2b0(0x08)
	struct UImage* _backgroundImage; // 0x2b8(0x08)
	struct UImage* _displayedImage; // 0x2c0(0x08)
	struct FSlateBrush _defaultImageBrush; // 0x2c8(0x88)
	char pad_350[0x8]; // 0x350(0x08)
	struct FLinearColor _regularColor; // 0x358(0x10)
	struct FLinearColor _dropUnavailableColor; // 0x368(0x10)
	struct FLinearColor _dropAvailableColor; // 0x378(0x10)
	float _defaultBackgroundOpacity; // 0x388(0x04)
	float _slottedBackgroundOpacity; // 0x38c(0x04)
	struct FSlateColor _defaultIconTint; // 0x390(0x28)
	struct FSlateColor _slottedIconTint; // 0x3b8(0x28)
};

// Class ConZ.IndexedHierarchicalInstancedStaticMeshComponent
// Size: 0x740 (Inherited: 0x690)
struct UIndexedHierarchicalInstancedStaticMeshComponent : UHierarchicalInstancedStaticMeshComponent {
	char pad_690[0xb0]; // 0x690(0xb0)
};

// Class ConZ.InfiniteResourceAssetData
// Size: 0xb0 (Inherited: 0x30)
struct UInfiniteResourceAssetData : UInteractionAssetData {
	struct UGameResourceType* ResourceType; // 0x30(0x08)
	struct FGameplayTagContainer InSocketTypes; // 0x38(0x20)
	struct FGameplayTagContainer OutSocketTypes; // 0x58(0x20)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFilling; // 0x78(0x10)
	float FillBaseActionDuration; // 0x88(0x04)
	float FillActionDurationPerAmountFilled; // 0x8c(0x04)
	float FillResourceFillingExperiencePerAmount; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct UAnimMontage* FillMontage; // 0x98(0x08)
	struct UAkAudioEvent* FillStartAudioEvent; // 0xa0(0x08)
	struct UAkAudioEvent* FillStopAudioEvent; // 0xa8(0x08)
};

// Class ConZ.InfluenceAreaVisualizer
// Size: 0x230 (Inherited: 0x220)
struct AInfluenceAreaVisualizer : AActor {
	struct UStaticMeshComponent* _staticMeshComponent; // 0x220(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void DestroyVisualizer(); // Function ConZ.InfluenceAreaVisualizer.DestroyVisualizer // (Final|Native|Private) // @ game+0x23e01f0
};

// Class ConZ.IngredientsForRecipeWidget
// Size: 0x288 (Inherited: 0x268)
struct UIngredientsForRecipeWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UWrapBox* _ingredientsWrapBox; // 0x270(0x08)
	struct UInteractiveIngredientWidget* _interactiveIngredientWidgetClass; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.InjectableSubstance
// Size: 0x28 (Inherited: 0x28)
struct UInjectableSubstance : UInterface {
};

// Class ConZ.InsertCartridge
// Size: 0xa0 (Inherited: 0x90)
struct UInsertCartridge : UWeaponActionReloadSequence {
	struct FName MontageEndSectionName; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class ConZ.InsertCartridgeIntoMagazine
// Size: 0xa0 (Inherited: 0x90)
struct UInsertCartridgeIntoMagazine : UWeaponActionReloadSequence {
	struct FName MontageEndSectionName; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class ConZ.InsertMagazine
// Size: 0x90 (Inherited: 0x90)
struct UInsertMagazine : UWeaponActionReloadSequence {

	bool IsMagazineToLoadEmpty(struct FWeaponReloadData& Data); // Function ConZ.InsertMagazine.IsMagazineToLoadEmpty // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x23fd0b0
};

// Class ConZ.InsertMagazineInsertCartridge
// Size: 0xa0 (Inherited: 0x90)
struct UInsertMagazineInsertCartridge : UWeaponActionReloadSequence {
	struct FName MontageEndSectionName; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class ConZ.InspectedItemWidget
// Size: 0x280 (Inherited: 0x268)
struct UInspectedItemWidget : UUserWidget {
	struct UItemClassWidget* ItemWidget; // 0x268(0x08)
	struct UTextBlock* SkillText; // 0x270(0x08)
	struct UTextBlock* SkillLevelText; // 0x278(0x08)
};

// Class ConZ.InstrumentItem
// Size: 0xbb0 (Inherited: 0x9b0)
struct AInstrumentItem : AItem {
	char pad_9B0[0x4]; // 0x9b0(0x04)
	int32_t _numberOfOctaves; // 0x9b4(0x04)
	struct UAnimMontage* _playInstrumentStartMontageFP; // 0x9b8(0x08)
	struct UAnimMontage* _playInstrumentStartMontageTP; // 0x9c0(0x08)
	struct UAnimMontage* _playInstrumentStopMontageFP; // 0x9c8(0x08)
	struct UAnimMontage* _playInstrumentStopMontageTP; // 0x9d0(0x08)
	struct UAnimSequenceBase* _playInstrumentIdleAnimationFP; // 0x9d8(0x08)
	struct UAnimSequenceBase* _playInstrumentPlayingAnimationFP; // 0x9e0(0x08)
	struct UAnimSequenceBase* _playInstrumentIdleAnimationTP; // 0x9e8(0x08)
	struct UAnimSequenceBase* _playInstrumentPlayingAnimationTP; // 0x9f0(0x08)
	float _playingPoseHoldTime; // 0x9f8(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct TArray<struct UAkAudioEvent*> _noteCStart; // 0xa00(0x10)
	struct TArray<struct UAkAudioEvent*> _noteCStop; // 0xa10(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDStart; // 0xa20(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDStop; // 0xa30(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDbStart; // 0xa40(0x10)
	struct TArray<struct UAkAudioEvent*> _noteDbStop; // 0xa50(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEStart; // 0xa60(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEStop; // 0xa70(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEbStart; // 0xa80(0x10)
	struct TArray<struct UAkAudioEvent*> _noteEbStop; // 0xa90(0x10)
	struct TArray<struct UAkAudioEvent*> _noteFStart; // 0xaa0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteFStop; // 0xab0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGStart; // 0xac0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGStop; // 0xad0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGbStart; // 0xae0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteGbStop; // 0xaf0(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAStart; // 0xb00(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAStop; // 0xb10(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAbStart; // 0xb20(0x10)
	struct TArray<struct UAkAudioEvent*> _noteAbStop; // 0xb30(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBStart; // 0xb40(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBStop; // 0xb50(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBbStart; // 0xb60(0x10)
	struct TArray<struct UAkAudioEvent*> _noteBbStop; // 0xb70(0x10)
	struct TArray<struct UAkAudioEvent*> _noteC2Start; // 0xb80(0x10)
	struct TArray<struct UAkAudioEvent*> _noteC2Stop; // 0xb90(0x10)
	float _aiNoiseLoudness; // 0xba0(0x04)
	char pad_BA4[0xc]; // 0xba4(0x0c)
};

// Class ConZ.InteractableInterface
// Size: 0x28 (Inherited: 0x28)
struct UInteractableInterface : UInterface {

	void OnHovered(struct APrisoner* Prisoner); // Function ConZ.InteractableInterface.OnHovered // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2402530
	bool IsAbleToInteractWithItem(struct AItem* Item); // Function ConZ.InteractableInterface.IsAbleToInteractWithItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2402390
	void InteractWithItem(struct APlayerController* PlayerController, struct AItem* Item, enum class EInteractionType interactionType, struct FInteractionData& InteractionData); // Function ConZ.InteractableInterface.InteractWithItem // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x2402180
	bool Interactable_WantsHealthBarVisible(); // Function ConZ.InteractableInterface.Interactable_WantsHealthBarVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2402360
	void Interact(struct AController* userController, enum class EInteractionType interactionType, struct FInteractionData& InteractionData); // Function ConZ.InteractableInterface.Interact // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x2401fd0
	enum class EInteractionState GetStateForInteractionWithItem(struct AItem* Item); // Function ConZ.InteractableInterface.GetStateForInteractionWithItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401f30
	struct TArray<struct FInteractionStruct> GetInteractionsWithItem(struct UObject* User, struct AItem* Item); // Function ConZ.InteractableInterface.GetInteractionsWithItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401e40
	struct TArray<struct FInteractionStruct> GetInteractions(struct UObject* User, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetInteractions // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401cf0
	struct FText GetInteractionHint(struct UObject* User); // Function ConZ.InteractableInterface.GetInteractionHint // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401bf0
	struct FText GetInteractableName(struct UObject* User); // Function ConZ.InteractableInterface.GetInteractableName // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401af0
	struct FInteractionStruct GetDefaultInteractionForPrisoner(struct APrisoner* Prisoner, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetDefaultInteractionForPrisoner // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2401950
	struct FInteractionStruct GetDefaultInteractionForDrone(struct ADrone* Drone, struct FInteractionQueryParameters& Params); // Function ConZ.InteractableInterface.GetDefaultInteractionForDrone // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x24017b0
	bool CanInteract(struct AController* userController); // Function ConZ.InteractableInterface.CanInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2400f00
};

// Class ConZ.SpawnExaminedObjectsInterface
// Size: 0x28 (Inherited: 0x28)
struct USpawnExaminedObjectsInterface : UInterface {
};

// Class ConZ.InteractionComponent
// Size: 0x280 (Inherited: 0xb0)
struct UInteractionComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	float ExamineActionDuration; // 0xb8(0x04)
	float ExamineReplicationDelay; // 0xbc(0x04)
	float PickupItemActionDuration; // 0xc0(0x04)
	float PickupItemReplicationDelay; // 0xc4(0x04)
	float StoreItemActionDuration; // 0xc8(0x04)
	float TickFrequency; // 0xcc(0x04)
	float MinLandscapeInteractionDistanceSquared; // 0xd0(0x04)
	int32_t SavedGroundSearchLocationsCount; // 0xd4(0x04)
	struct AActor* GhostActorToSpawnAfterExamine; // 0xd8(0x08)
	char pad_E0[0x8]; // 0xe0(0x08)
	int32_t InitialMinNumEmptyContainersToSearchToSpawnGhostActor; // 0xe8(0x04)
	int32_t InitialMaxNumEmptyContainersToSearchToSpawnGhostActor; // 0xec(0x04)
	int32_t MinNumEmptyContainersToSearchToSpawnGhostActor; // 0xf0(0x04)
	int32_t MaxNumEmptyContainersToSearchToSpawnGhostActor; // 0xf4(0x04)
	bool ShouldSpawnGhostActorRelativeToExaminer; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	float GhostActorSpawnDistanceToExaminer; // 0xfc(0x04)
	int64_t ExamineGhostSpawnEndTime; // 0x100(0x08)
	struct TArray<struct UInteractionAction*> _actions; // 0x108(0x10)
	char pad_118[0xf0]; // 0x118(0xf0)
	struct FSpawnedItems _replicatedExamineSpawnedItems; // 0x208(0x18)
	struct FSpawnedItems _replicatedPickupSpawnedItem; // 0x220(0x18)
	char pad_238[0x2c]; // 0x238(0x2c)
	float _drinkAllowedThreshold; // 0x264(0x04)
	float _reexamineFrequency; // 0x268(0x04)
	char pad_26C[0x14]; // 0x26c(0x14)

	void UseItemOnServer(struct AItem* Item, int32_t Usage, float UsageWeight, bool Eat); // Function ConZ.InteractionComponent.UseItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2403160
	void UpdateExistenceOnClient(bool Exists); // Function ConZ.InteractionComponent.UpdateExistenceOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24030d0
	void UnspawnExaminedItemsOnServer(bool destroyItems); // Function ConZ.InteractionComponent.UnspawnExaminedItemsOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2403040
	void UnexamineItemOnServer(struct AItem* Item); // Function ConZ.InteractionComponent.UnexamineItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402fb0
	void UnexamineItemOnClient(struct AItem* Item); // Function ConZ.InteractionComponent.UnexamineItemOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x235cbf0
	void StopExamining(); // Function ConZ.InteractionComponent.StopExamining // (Final|Native|Public) // @ game+0x2402f90
	void Server_UpdateLockHPOnServer(struct UObject* Lockpickable, float lockHP); // Function ConZ.InteractionComponent.Server_UpdateLockHPOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402eb0
	void Server_UncraftItem(struct AItem* Item); // Function ConZ.InteractionComponent.Server_UncraftItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402e20
	void Server_RemoveLockOnServer(struct UObject* Lockpickable); // Function ConZ.InteractionComponent.Server_RemoveLockOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402d90
	void Server_InteractWithBaseElement(enum class EInteractionType interactionType, struct FConZBaseInteractionData baseData, struct FConZBaseElementInteractionData elementData); // Function ConZ.InteractionComponent.Server_InteractWithBaseElement // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402c10
	void Server_FindOrCreateGardenSlotMeshComponentForInteraction(struct UStaticMesh* PlantMesh); // Function ConZ.InteractionComponent.Server_FindOrCreateGardenSlotMeshComponentForInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402b80
	void Server_CraftItem(struct UItemCraftingRecipe* recipe, struct TArray<struct AItem*> Ingredients); // Function ConZ.InteractionComponent.Server_CraftItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2402a90
	void PickupItemOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct UStaticMesh* StaticMesh, struct FVector pickupLocation, enum class EPickupItemOperation Operation); // Function ConZ.InteractionComponent.PickupItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24028c0
	void PickupItemOnClients(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct UStaticMesh* StaticMesh, struct FVector pickupLocation); // Function ConZ.InteractionComponent.PickupItemOnClients // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x2402750
	void OpenItemOnServer(struct AFoodItem* FoodItem, struct AItem* openingItem); // Function ConZ.InteractionComponent.OpenItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2402680
	void OnRep_PickupSpawnedItem(); // Function ConZ.InteractionComponent.OnRep_PickupSpawnedItem // (Final|Native|Private) // @ game+0x2402620
	void OnRep_ExamineSpawnedItems(); // Function ConZ.InteractionComponent.OnRep_ExamineSpawnedItems // (Final|Native|Private) // @ game+0x2402600
	void NetMulticast_UpdateLockHPOnClients(struct UObject* Lockpickable, float lockHP); // Function ConZ.InteractionComponent.NetMulticast_UpdateLockHPOnClients // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2402430
	void FinishPickupItemOnServer(); // Function ConZ.InteractionComponent.FinishPickupItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401790
	void FinishExaminePrisonerOnServer(struct APrisoner* Prisoner); // Function ConZ.InteractionComponent.FinishExaminePrisonerOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401700
	void FinishExamineObjectOnServer(); // Function ConZ.InteractionComponent.FinishExamineObjectOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24016e0
	void FillWaterOnServer(struct AItem* Item, float Ratio, float Salinity, struct UGameResourceType* ResourceType); // Function ConZ.InteractionComponent.FillWaterOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2401590
	void ExaminePrisonerOnServer(struct APrisoner* Prisoner); // Function ConZ.InteractionComponent.ExaminePrisonerOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401500
	void ExamineObjectOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, struct FVector instanceLocation, struct UObject* Spawner); // Function ConZ.InteractionComponent.ExamineObjectOnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2401390
	void CutObjectOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId, bool collectOnly); // Function ConZ.InteractionComponent.CutObjectOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401280
	void CutObjectOnClients(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId); // Function ConZ.InteractionComponent.CutObjectOnClients // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x24011a0
	void Client_SendGroundSearchLocation(struct FVector Location); // Function ConZ.InteractionComponent.Client_SendGroundSearchLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x2401110
	void ChopOnServer(struct UObject* choppedObject); // Function ConZ.InteractionComponent.ChopOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401080
	void CheckExistenceOnServer(struct UMeshComponent* MeshComponent, struct FMeshInstanceId InstanceId); // Function ConZ.InteractionComponent.CheckExistenceOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2400fa0
};

// Class ConZ.InteractionContextMenuBase
// Size: 0x290 (Inherited: 0x268)
struct UInteractionContextMenuBase : UUserWidget {
	struct UVerticalBox* _interactionListPanel; // 0x268(0x08)
	int32_t _maximumInteractionsInGroupWithoutSideMenu; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UInteractionContextMenuLeaf* _leafSubclass; // 0x278(0x08)
	struct UInteractionContextMenuGroupHeader* _categoryHeaderSubclass; // 0x280(0x08)
	struct UInteractionContextMenuLeafGroup* _leafGroupSubclass; // 0x288(0x08)
};

// Class ConZ.InteractionContextMenuGroupHeader
// Size: 0x270 (Inherited: 0x268)
struct UInteractionContextMenuGroupHeader : UUserWidget {
	struct UTextBlock* _name; // 0x268(0x08)
};

// Class ConZ.InteractionContextMenuLeaf
// Size: 0x2a0 (Inherited: 0x268)
struct UInteractionContextMenuLeaf : UUserWidget {
	struct UTextBlock* _nameBlock; // 0x268(0x08)
	struct UButton* _visualButton; // 0x270(0x08)
	char pad_278[0x28]; // 0x278(0x28)

	void OnUnhovered(); // Function ConZ.InteractionContextMenuLeaf.OnUnhovered // (Final|Native|Private) // @ game+0x2402640
	void OnHovered(); // Function ConZ.InteractionContextMenuLeaf.OnHovered // (Final|Native|Private) // @ game+0x24025c0
	void OnClick(); // Function ConZ.InteractionContextMenuLeaf.OnClick // (Final|Native|Private) // @ game+0x2402510
};

// Class ConZ.InteractionContextMenuLeafGroup
// Size: 0x2b0 (Inherited: 0x268)
struct UInteractionContextMenuLeafGroup : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UTextBlock* _nameBlock; // 0x288(0x08)
	struct UButton* _visualButton; // 0x290(0x08)
	char pad_298[0x18]; // 0x298(0x18)

	void OnUnhovered(); // Function ConZ.InteractionContextMenuLeafGroup.OnUnhovered // (Final|Native|Private) // @ game+0x2402660
	void OnHovered(); // Function ConZ.InteractionContextMenuLeafGroup.OnHovered // (Final|Native|Private) // @ game+0x24025e0
};

// Class ConZ.InteractionContextMenuSide
// Size: 0x2a8 (Inherited: 0x268)
struct UInteractionContextMenuSide : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UVerticalBox* _interactionListPanel; // 0x298(0x08)
	struct UInteractionContextMenuLeaf* _leafSubclass; // 0x2a0(0x08)
};

// Class ConZ.InteractionContextMenuUIController
// Size: 0x188 (Inherited: 0x28)
struct UInteractionContextMenuUIController : UObject {
	char pad_28[0x160]; // 0x28(0x160)
};

// Class ConZ.InteractionObject
// Size: 0x28 (Inherited: 0x28)
struct UInteractionObject : UInterface {
};

// Class ConZ.InteractiveIngredientWidget
// Size: 0x340 (Inherited: 0x268)
struct UInteractiveIngredientWidget : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)
	struct UWidgetSwitcher* _mainSwitcher; // 0x2a0(0x08)
	struct UImage* _ingredientIcon; // 0x2a8(0x08)
	struct UImage* _overlayHighlight; // 0x2b0(0x08)
	struct UWidgetSwitcher* _quantitySwitcher; // 0x2b8(0x08)
	struct UTextBlock* _useAmountText; // 0x2c0(0x08)
	struct UTextBlock* _currentVolumeTextBlock; // 0x2c8(0x08)
	struct UTextBlock* _requiredVolumeTextBlock; // 0x2d0(0x08)
	struct UImage* _mainIngredientIndication; // 0x2d8(0x08)
	char pad_2E0[0x4]; // 0x2e0(0x04)
	struct FLinearColor _unacceptableItemDraggedColor; // 0x2e4(0x10)
	struct FLinearColor _acceptableItemDraggedColor; // 0x2f4(0x10)
	struct FLinearColor _defaultBorderColor; // 0x304(0x10)
	float _uncoloredVignetteExponent; // 0x314(0x04)
	float _coloredVignetteExponent; // 0x318(0x04)
	struct FLinearColor _mainIngredientTriangleColor; // 0x31c(0x10)
	struct FLinearColor _optionalIngredientTriangleColor; // 0x32c(0x10)
	char pad_33C[0x4]; // 0x33c(0x04)
};

// Class ConZ.InteriorCharacterSpawnerComponent
// Size: 0x210 (Inherited: 0x210)
struct UInteriorCharacterSpawnerComponent : UCharacterSpawnerComponent {
};

// Class ConZ.InteriorReflEnvCubeSceneCapture
// Size: 0x2d8 (Inherited: 0x238)
struct AInteriorReflEnvCubeSceneCapture : ASceneCaptureCube {
	int32_t NumRecaptures; // 0x238(0x04)
	float CaputreSaturation; // 0x23c(0x04)
	float EndSaturation; // 0x240(0x04)
	float CaptureBrightnessCurve; // 0x244(0x04)
	float EndBrightnessCurve; // 0x248(0x04)
	float CaptureBrighntess; // 0x24c(0x04)
	float EndCaptureBrighntess; // 0x250(0x04)
	enum class TextureMipGenSettings MipGenSettings; // 0x254(0x01)
	bool AttemptToGetNameAutomatically; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	struct FString OutputTexturePrefix; // 0x258(0x10)
	struct FString OutputTexturePostfix; // 0x268(0x10)
	bool DeleteTemporaryCubemaps; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
	struct AStaticMeshActor* OutsideEnvironmentMesh; // 0x280(0x08)
	bool HideOutsideEnvironemntMesh; // 0x288(0x01)
	char pad_289[0x3]; // 0x289(0x03)
	float OutsideEnvironmentBrightness; // 0x28c(0x04)
	struct FName OutsideEnvironmentBrightnessParamName; // 0x290(0x08)
	struct AReflectionCapture* EnvironmentReflectionCapture; // 0x298(0x08)
	struct TArray<struct UTextureCube*> _createdTxCubes; // 0x2a0(0x10)
	struct UTextureCube* _usedTxCube; // 0x2b0(0x08)
	char pad_2B8[0x20]; // 0x2b8(0x20)

	void TriggerCapture(); // Function ConZ.InteriorReflEnvCubeSceneCapture.TriggerCapture // (Final|Native|Public|BlueprintCallable) // @ game+0xbbc480
};

// Class ConZ.InteriorStaticMeshComponent
// Size: 0x500 (Inherited: 0x500)
struct UInteriorStaticMeshComponent : UStaticMeshComponent {
};

// Class ConZ.IntroVideoGameMode
// Size: 0x308 (Inherited: 0x308)
struct AIntroVideoGameMode : AGameMode {
};

// Class ConZ.IntroVideoMenu
// Size: 0x270 (Inherited: 0x268)
struct UIntroVideoMenu : UBaseMenu {
	struct UCutsceneWidget* _cutsceneWidget; // 0x268(0x08)
};

// Class ConZ.InventoryCentralPanel
// Size: 0x280 (Inherited: 0x268)
struct UInventoryCentralPanel : UTabMenuPanel {
	struct UVicinityPanel3* _vicinityPanel; // 0x268(0x08)
	struct UVicinityContainer3* _vicinityContainer; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
};

// Class ConZ.InventoryPositionData
// Size: 0x28 (Inherited: 0x28)
struct UInventoryPositionData : UObject {
};

// Class ConZ.InventoryContainer
// Size: 0x28 (Inherited: 0x28)
struct UInventoryContainer : UInterface {
};

// Class ConZ.InventorySizeData
// Size: 0x28 (Inherited: 0x28)
struct UInventorySizeData : UObject {
};

// Class ConZ.InventorySizeData2D
// Size: 0x40 (Inherited: 0x28)
struct UInventorySizeData2D : UInventorySizeData {
	int32_t SizeX; // 0x28(0x04)
	int32_t SizeY; // 0x2c(0x04)
	struct TArray<bool> Bitmask; // 0x30(0x10)
};

// Class ConZ.InventoryPositionData2D
// Size: 0x38 (Inherited: 0x28)
struct UInventoryPositionData2D : UInventoryPositionData {
	int32_t PositionX; // 0x28(0x04)
	int32_t PositionY; // 0x2c(0x04)
	char Rotation; // 0x30(0x01)
	bool IsLoading; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class ConZ.InventoryContainer2D
// Size: 0x140 (Inherited: 0xb0)
struct UInventoryContainer2D : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FInventoryContainer2DRepData _data; // 0xb8(0x20)
	struct FInventoryContainer2DRepData _oldData; // 0xd8(0x20)
	struct TScriptInterface<IInventoryNode> _parent; // 0xf8(0x10)
	struct TArray<struct UInventoryContainerWidget2*> _widgets; // 0x108(0x10)
	struct TArray<bool> _grid; // 0x118(0x10)
	struct TArray<bool> _gridDamaged; // 0x128(0x10)
	char pad_138[0x8]; // 0x138(0x08)

	void OnRep_Parent(); // Function ConZ.InventoryContainer2D.OnRep_Parent // (Final|Native|Private) // @ game+0x2407690
	void OnRep_Items(struct TArray<struct UObject*> _oldItems); // Function ConZ.InventoryContainer2D.OnRep_Items // (Final|Native|Private) // @ game+0x24075a0
	void OnRep_Data(); // Function ConZ.InventoryContainer2D.OnRep_Data // (Final|Native|Private) // @ game+0x2407540
	void OnActorItemDestroyed(struct AActor* Actor); // Function ConZ.InventoryContainer2D.OnActorItemDestroyed // (Final|Native|Private) // @ game+0x2407420
};

// Class ConZ.InventoryContainer2DLight
// Size: 0x140 (Inherited: 0x140)
struct UInventoryContainer2DLight : UInventoryContainer2D {
};

// Class ConZ.InventoryPositionDataClothes
// Size: 0x30 (Inherited: 0x28)
struct UInventoryPositionDataClothes : UInventoryPositionData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.InventoryContainerClothes
// Size: 0x90 (Inherited: 0x28)
struct UInventoryContainerClothes : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UInventoryContainerWidget2* _widget; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
	struct FInventoryContainerClothesData _data; // 0x48(0x20)
	struct FInventoryContainerClothesData _oldData; // 0x68(0x20)
	char pad_88[0x8]; // 0x88(0x08)

	void OnRep_Data(); // Function ConZ.InventoryContainerClothes.OnRep_Data // (Final|Native|Private) // @ game+0x2407560
};

// Class ConZ.InventoryContainerGrid
// Size: 0x2a0 (Inherited: 0x268)
struct UInventoryContainerGrid : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UUIRepresentableObjectWidget* _uiroWidgetClass; // 0x270(0x08)
	struct USizeBox* _mainSizeBox; // 0x278(0x08)
	struct UInventoryGridWidget* _backgroundGrid; // 0x280(0x08)
	struct UCanvasPanel* _mainCanvas; // 0x288(0x08)
	struct URetainerBox* _retainerBoxDeadCells; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.InventoryPositionDataHandsHolsters
// Size: 0x30 (Inherited: 0x28)
struct UInventoryPositionDataHandsHolsters : UInventoryPositionData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.InventoryContainerHandsHolsters
// Size: 0xb8 (Inherited: 0x28)
struct UInventoryContainerHandsHolsters : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UInventoryContainerWidget2* _handWidget; // 0x30(0x08)
	struct UInventoryContainerWidget2* _shoulderLeftWidget; // 0x38(0x08)
	struct UInventoryContainerWidget2* _shoulderRightWidget; // 0x40(0x08)
	struct UInventoryContainerWidget2* _tradingHandWidget; // 0x48(0x08)
	struct UInventoryContainerWidget2* _tradingShoulderLeftWidget; // 0x50(0x08)
	struct UInventoryContainerWidget2* _tradingShoulderRightWidget; // 0x58(0x08)
	char pad_60[0x10]; // 0x60(0x10)
	struct FInventoryContainerHandsHolstersData _data; // 0x70(0x20)
	struct FInventoryContainerHandsHolstersData _oldData; // 0x90(0x20)
	char pad_B0[0x8]; // 0xb0(0x08)

	void OnRep_Data(); // Function ConZ.InventoryContainerHandsHolsters.OnRep_Data // (Final|Native|Private) // @ game+0x2407580
};

// Class ConZ.InventoryItemWidget2Test
// Size: 0x278 (Inherited: 0x268)
struct UInventoryItemWidget2Test : UUserWidget {
	struct UImage* _itemIcon; // 0x268(0x08)
	struct UTextBlock* _itemCaption; // 0x270(0x08)
};

// Class ConZ.InventoryContainerWidget2Test
// Size: 0x2e0 (Inherited: 0x268)
struct UInventoryContainerWidget2Test : UInventoryContainerWidget2 {
	struct UImage* _itemIcon; // 0x268(0x08)
	struct UTextBlock* _itemCaption; // 0x270(0x08)
	struct UVerticalBox* _itemContainer; // 0x278(0x08)
	char pad_280[0x60]; // 0x280(0x60)
};

// Class ConZ.InventoryPanelWidget2Test
// Size: 0x2c0 (Inherited: 0x268)
struct UInventoryPanelWidget2Test : UInventoryContainerWidget2 {
	struct UScrollBox* _itemContainer; // 0x268(0x08)
	char pad_270[0x50]; // 0x270(0x50)
};

// Class ConZ.InventoryContainerWidgetReborn
// Size: 0x2b8 (Inherited: 0x268)
struct UInventoryContainerWidgetReborn : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UOverlay* _genericWidgetOverlay; // 0x270(0x08)
	struct UUIRepresentableObjectWidget* _uiroWidget; // 0x278(0x08)
	struct UTextBlock* _nameTextBlock; // 0x280(0x08)
	struct UTextBlock* _temperatureTextBlock; // 0x288(0x08)
	struct UTextBlock* _wetnessWeightTextBlock; // 0x290(0x08)
	struct URichTextBlock* _weightRatio; // 0x298(0x08)
	struct UCheckBox* _expandToggle; // 0x2a0(0x08)
	struct UHorizontalBox* _contentBox; // 0x2a8(0x08)
	struct UInventoryContainerGrid* _inventoryContainerGrid; // 0x2b0(0x08)

	void OnExpandToggled(bool toggled); // Function ConZ.InventoryContainerWidgetReborn.OnExpandToggled // (Final|Native|Private) // @ game+0x24074b0
};

// Class ConZ.InventoryGridWidget
// Size: 0x270 (Inherited: 0x268)
struct UInventoryGridWidget : UUserWidget {
	struct UImage* _image; // 0x268(0x08)
};

// Class ConZ.InventoryNode
// Size: 0x28 (Inherited: 0x28)
struct UInventoryNode : UInterface {

	void IncrementUIDisplayStateVersion(); // Function ConZ.InventoryNode.IncrementUIDisplayStateVersion // (Native|Public|BlueprintCallable) // @ game+0x2407400
	struct FText GetInventoryNodeName(); // Function ConZ.InventoryNode.GetInventoryNodeName // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2407360
	struct TSoftObjectPtr<UTexture2D> GetInventoryNodeIcon(); // Function ConZ.InventoryNode.GetInventoryNodeIcon // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2407300
	struct FText GetInventoryNodeDescription(); // Function ConZ.InventoryNode.GetInventoryNodeDescription // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2407260
	bool CanBeEverDropped(); // Function ConZ.InventoryNode.CanBeEverDropped // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2407230
};

// Class ConZ.InventoryPanel
// Size: 0x2d8 (Inherited: 0x268)
struct UInventoryPanel : UTabMenuPanel {
	char pad_268[0x8]; // 0x268(0x08)
	struct UInventoryContainerWidgetReborn* _inventoryContainerWidgetClass; // 0x270(0x08)
	struct UImage* _availabilityOverlayImage; // 0x278(0x08)
	struct UWidgetSwitcher* _titleTabsSwitcher; // 0x280(0x08)
	struct UTextBlock* _playerName; // 0x288(0x08)
	struct UTabContainer* _tabRow; // 0x290(0x08)
	struct UWidgetSwitcher* _inventoryAndHolstersSwitcher; // 0x298(0x08)
	struct UVerticalBox* _inventoryPage; // 0x2a0(0x08)
	struct UScrollBox* _inventoryScrollBox; // 0x2a8(0x08)
	struct UVerticalBox* _handsHolstersPage; // 0x2b0(0x08)
	struct UHandsHolstersWidget2* _leftHolster; // 0x2b8(0x08)
	struct UHandsHolstersWidget2* _rightHolster; // 0x2c0(0x08)
	struct UHandsHolstersWidget2* _hands; // 0x2c8(0x08)
	struct UVerticalBox* _equipmentVerticalBox; // 0x2d0(0x08)
};

// Class ConZ.InventoryPanelSideLayerWidget
// Size: 0x270 (Inherited: 0x268)
struct UInventoryPanelSideLayerWidget : UUserWidget {
	struct UItemWidget2* _itemWidget; // 0x268(0x08)
};

// Class ConZ.InventoryPanelThirdIteration
// Size: 0x3e8 (Inherited: 0x268)
struct UInventoryPanelThirdIteration : UTabMenuPanel {
	struct UHandsHolstersWidget2* Hands; // 0x268(0x08)
	struct UHandsHolstersWidget2* LeftHolster; // 0x270(0x08)
	struct UHandsHolstersWidget2* RightHolster; // 0x278(0x08)
	struct TWeakObjectPtr<struct ACharacter> _displayedCharacter; // 0x280(0x08)
	struct UTabContainer* _tabRow; // 0x288(0x08)
	struct UScrollBox* _inventoriesScrollBox; // 0x290(0x08)
	struct UVerticalBox* _nonContainerBox; // 0x298(0x08)
	struct UVerticalBox* _nonTradingBits; // 0x2a0(0x08)
	struct UVerticalBox* _tradingBits; // 0x2a8(0x08)
	struct UWidgetSwitcher* _inventoryAndHolstersSwitcher; // 0x2b0(0x08)
	struct UWidgetSwitcher* _inventoryTradingSwitcher; // 0x2b8(0x08)
	struct UTextBlock* _playerName; // 0x2c0(0x08)
	struct UImage* _availabilityOverlayImage; // 0x2c8(0x08)
	struct TMap<struct TWeakObjectPtr<struct UObject>, struct UItemInventoryWidget2*> _inventories; // 0x2d0(0x50)
	struct TMap<struct TWeakObjectPtr<struct UObject>, struct UInventoryPanelSideLayerWidget*> _sideLayers; // 0x320(0x50)
	struct TMap<struct TWeakObjectPtr<struct UObject>, struct UItemWidget2*> _nonContainerItems; // 0x370(0x50)
	struct FMargin _nonContainerItemsPadding; // 0x3c0(0x10)
	char pad_3D0[0x18]; // 0x3d0(0x18)
};

// Class ConZ.InventoryPanelWidget2
// Size: 0x268 (Inherited: 0x268)
struct UInventoryPanelWidget2 : UUserWidget {
};

// Class ConZ.InventorySlotUserWidget
// Size: 0x2b8 (Inherited: 0x268)
struct UInventorySlotUserWidget : UUserWidget {
	bool HasItem; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct UImage* ImageWidget; // 0x270(0x08)
	struct USizeBox* SizeBoxWrapper; // 0x278(0x08)
	struct UBaseItemContainerWidget* ParentContainerWidget; // 0x280(0x08)
	struct FLinearColor BaseColor; // 0x288(0x10)
	struct FLinearColor RedColor; // 0x298(0x10)
	struct FLinearColor GreenColor; // 0x2a8(0x10)

	void OnDraggedItemPreRotated(struct UItemWidget2* Widget); // Function ConZ.InventorySlotUserWidget.OnDraggedItemPreRotated // (Final|Native|Protected) // @ game+0x240b320
	void OnDraggedItemPostRotated(struct UItemWidget2* Widget); // Function ConZ.InventorySlotUserWidget.OnDraggedItemPostRotated // (Final|Native|Protected) // @ game+0x240b290
};

// Class ConZ.InventoryUIController
// Size: 0x188 (Inherited: 0x28)
struct UInventoryUIController : UObject {
	char pad_28[0x160]; // 0x28(0x160)
};

// Class ConZ.InventoryUIControllerReborn
// Size: 0x70 (Inherited: 0x28)
struct UInventoryUIControllerReborn : UObject {
	char pad_28[0x48]; // 0x28(0x48)
};

// Class ConZ.IsUnmountedOrMountedOnGroundCondition
// Size: 0x30 (Inherited: 0x28)
struct UIsUnmountedOrMountedOnGroundCondition : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.ItemActionDescription
// Size: 0x28 (Inherited: 0x28)
struct UItemActionDescription : UObject {
};

// Class ConZ.ItemAction
// Size: 0x50 (Inherited: 0x28)
struct UItemAction : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct UItemActionDescription* _description; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)

	bool IsStandAloneOrOwningClient(); // Function ConZ.ItemAction.IsStandAloneOrOwningClient // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f690
	struct AItem* GetItem(); // Function ConZ.ItemAction.GetItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f560
	void End(bool Regular); // Function ConZ.ItemAction.End // (Native|Event|Public|BlueprintEvent) // @ game+0x240f460
	bool CanBeSelected(struct UItemActionDescription* Description); // Function ConZ.ItemAction.CanBeSelected // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240f230
	bool CanBegin(); // Function ConZ.ItemAction.CanBegin // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x115be80
	float Begin(); // Function ConZ.ItemAction.Begin // (Native|Event|Public|BlueprintEvent) // @ game+0x240f1c0
};

// Class ConZ.ItemActionSequenceDescription
// Size: 0x30 (Inherited: 0x28)
struct UItemActionSequenceDescription : UItemActionDescription {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.ItemActionSequence
// Size: 0x88 (Inherited: 0x50)
struct UItemActionSequence : UItemAction {
	bool _canBeCanceled; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct FCharacterAndItemAnimation _animations; // 0x58(0x10)
	char pad_68[0x20]; // 0x68(0x20)

	void StopAnimation(); // Function ConZ.ItemActionSequence.StopAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x2410430
	void SetNextAnimationSectionFromPrevious(struct FName& previousSection, struct FName& NextSection); // Function ConZ.ItemActionSequence.SetNextAnimationSectionFromPrevious // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2410350
	void SetNextAnimationSection(struct FName& Section, bool allowLoop); // Function ConZ.ItemActionSequence.SetNextAnimationSection // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2410270
	float PlayAnimation(struct ACharacter* Character, float PlayRate, struct FName& startSection, bool assignCallbacks); // Function ConZ.ItemActionSequence.PlayAnimation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24100f0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.ItemActionSequence.OnMontageEnded // (Native|Protected) // @ game+0x240fb10
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.ItemActionSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x240fa40
	void OnAnimNotify(enum class ECharacterActionNotifyType notifyType); // Function ConZ.ItemActionSequence.OnAnimNotify // (Native|Event|Public|BlueprintEvent) // @ game+0x240f8a0
	void JumpToAnimationSection(struct FName& Section); // Function ConZ.ItemActionSequence.JumpToAnimationSection // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x240f6c0
	bool IsPlayingAnimation(); // Function ConZ.ItemActionSequence.IsPlayingAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f660
	struct FCharacterActionAnimationDescription GetPlayingAnimations(); // Function ConZ.ItemActionSequence.GetPlayingAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f620
	int32_t GetNumberOfPendingNotifiesInCurrentSection(enum class ECharacterActionNotifyType notifyType); // Function ConZ.ItemActionSequence.GetNumberOfPendingNotifiesInCurrentSection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f590
	struct FCharacterAndItemAnimation GetAnimations(); // Function ConZ.ItemActionSequence.GetAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f4f0
	bool CanEverBeCanceled(); // Function ConZ.ItemActionSequence.CanEverBeCanceled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x240f2d0
	void Cancel(bool Regular); // Function ConZ.ItemActionSequence.Cancel // (Native|Public|BlueprintCallable) // @ game+0x240f300
	bool CanBeCanceled(); // Function ConZ.ItemActionSequence.CanBeCanceled // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240f200
};

// Class ConZ.ItemActionDescriptionLoadMagazine
// Size: 0x48 (Inherited: 0x30)
struct UItemActionDescriptionLoadMagazine : UItemActionSequenceDescription {
	int32_t RequestedAmmoCount; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct AAmmunitionItem* ammoItem; // 0x38(0x08)
	float PlayRate; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.ItemActionSequenceLoadMagazine
// Size: 0x90 (Inherited: 0x88)
struct UItemActionSequenceLoadMagazine : UItemActionSequence {
	int32_t _loadedAmmoCount; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)

	struct FName GetEndSectionName(); // Function ConZ.ItemActionSequenceLoadMagazine.GetEndSectionName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x240f520
};

// Class ConZ.ItemActionSequenceLoadMagazine_M1Clip
// Size: 0x90 (Inherited: 0x90)
struct UItemActionSequenceLoadMagazine_M1Clip : UItemActionSequenceLoadMagazine {
};

// Class ConZ.ItemActionSequenceLoadMagazine_RPKDrum
// Size: 0x98 (Inherited: 0x90)
struct UItemActionSequenceLoadMagazine_RPKDrum : UItemActionSequenceLoadMagazine {
	char pad_90[0x8]; // 0x90(0x08)
};

// Class ConZ.ItemClassWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UItemClassWidget : UUserWidget {
	struct UImage* BackgroundImage; // 0x268(0x08)
	struct UImage* MainImage; // 0x270(0x08)
	bool BackgroundVisible; // 0x278(0x01)
	char pad_279[0x37]; // 0x279(0x37)
};

// Class ConZ.ItemContainerManager
// Size: 0x380 (Inherited: 0x220)
struct AItemContainerManager : AActor {
	char pad_220[0x48]; // 0x220(0x48)
	struct TMap<struct AItemContainer*, struct FBox2D> _itemContainers; // 0x268(0x50)
	struct TMap<struct FDbIntegerId, struct FItemContainersArray> _itemContainersOwned; // 0x2b8(0x50)
	char pad_308[0x8]; // 0x308(0x08)
	struct FItemContainersReplicationHelper _itemContainersDataRepHelper; // 0x310(0x70)

	void NetMulticast_UpdateItemContainerData(int32_t dataVersion, struct FString runtimeId, struct FItemContainerRepData ItemContainerData); // Function ConZ.ItemContainerManager.NetMulticast_UpdateItemContainerData // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x240f750
};

// Class ConZ.ItemDropCircumstancesItemTag
// Size: 0x38 (Inherited: 0x30)
struct UItemDropCircumstancesItemTag : UBaseItemTag {
	bool ShouldDropOnSwimmingStarted; // 0x30(0x01)
	bool ShouldDropOnTeleportStarted; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class ConZ.ItemDropPlaceholder
// Size: 0x288 (Inherited: 0x220)
struct AItemDropPlaceholder : AActor {
	struct USceneComponent* _rootComponent; // 0x220(0x08)
	struct UBoxComponent* _boxCollisionComponent; // 0x228(0x08)
	struct UStaticMeshComponent* _staticMeshComponent; // 0x230(0x08)
	struct USkeletalMeshComponent* _skeletalMeshComponent; // 0x238(0x08)
	char pad_240[0x48]; // 0x240(0x48)
};

// Class ConZ.ItemEntitySpawnerRegistrySetup
// Size: 0x80 (Inherited: 0x80)
struct UItemEntitySpawnerRegistrySetup : UEntitySetup {
};

// Class ConZ.ItemGroup
// Size: 0x40 (Inherited: 0x30)
struct UItemGroup : UDataAsset {
	struct TArray<struct AItem*> Items; // 0x30(0x10)
};

// Class ConZ.ItemInventoryDepotWidget2
// Size: 0x2e0 (Inherited: 0x268)
struct UItemInventoryDepotWidget2 : UInventoryContainerWidget2 {
	struct UInventoryContainer2D* _container; // 0x268(0x08)
	struct UCanvasPanel* _inventoryCanvas; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	struct TScriptInterface<IInventoryNode> _item; // 0x280(0x10)
	struct UGridPanel* _inventoryGrid; // 0x290(0x08)
	struct UWidget* _loadingWidget; // 0x298(0x08)
	struct UInventoryGridWidget* _inventoryGridWidget; // 0x2a0(0x08)
	struct UHorizontalBox* _contentBox; // 0x2a8(0x08)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets; // 0x2b0(0x10)
	struct UWidgetAnimation* BlinkAnim; // 0x2c0(0x08)
	struct URetainerBox* RetainerBoxDeadCells; // 0x2c8(0x08)
	bool _canMinimize; // 0x2d0(0x01)
	char pad_2D1[0xf]; // 0x2d1(0x0f)

	void OnExpandToggleClicked(bool checked); // Function ConZ.ItemInventoryDepotWidget2.OnExpandToggleClicked // (Final|Native|Private) // @ game+0x240f920
};

// Class ConZ.ItemInventoryWidget2
// Size: 0x2f8 (Inherited: 0x268)
struct UItemInventoryWidget2 : UInventoryContainerWidget2 {
	struct UInventoryContainer2D* _container; // 0x268(0x08)
	struct UCanvasPanel* _inventoryCanvas; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	struct TScriptInterface<IInventoryNode> _item; // 0x280(0x10)
	struct UTextBlock* _nameText; // 0x290(0x08)
	struct UItemWidget2* _itemWidget; // 0x298(0x08)
	struct UGridPanel* _inventoryGrid; // 0x2a0(0x08)
	struct UWidget* _loadingWidget; // 0x2a8(0x08)
	struct UInventoryGridWidget* _inventoryGridWidget; // 0x2b0(0x08)
	struct UHorizontalBox* _contentBox; // 0x2b8(0x08)
	struct UCheckBox* _expandToggle; // 0x2c0(0x08)
	struct TArray<struct UInventorySlotUserWidget*> _slotsWidgets; // 0x2c8(0x10)
	struct UWidgetAnimation* BlinkAnim; // 0x2d8(0x08)
	struct URetainerBox* RetainerBoxDeadCells; // 0x2e0(0x08)
	bool _canMinimize; // 0x2e8(0x01)
	char pad_2E9[0xf]; // 0x2e9(0x0f)

	void OnExpandToggleClicked(bool checked); // Function ConZ.ItemInventoryWidget2.OnExpandToggleClicked // (Final|Native|Private) // @ game+0x240f9b0
};

// Class ConZ.ItemLightDisplay
// Size: 0x2e8 (Inherited: 0x268)
struct UItemLightDisplay : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _itemImage; // 0x280(0x08)
	struct UImage* _emptySlotBackground; // 0x288(0x08)
	struct USizeBox* _sizeBox; // 0x290(0x08)
	struct UTextBlock* _durability; // 0x298(0x08)
	struct UTextBlock* _uses; // 0x2a0(0x08)
	struct UBorder* _selectionBorder; // 0x2a8(0x08)
	struct UOverlay* _itemDataOverlay; // 0x2b0(0x08)
	struct UProgressBar* _durabilityProgressBar; // 0x2b8(0x08)
	struct UProgressBar* _usesProgressBar; // 0x2c0(0x08)
	float _width; // 0x2c8(0x04)
	float _height; // 0x2cc(0x04)
	char pad_2D0[0x18]; // 0x2d0(0x18)
};

// Class ConZ.ItemObstructionTestCapsuleComponent
// Size: 0x480 (Inherited: 0x480)
struct UItemObstructionTestCapsuleComponent : UCapsuleComponent {
};

// Class ConZ.ItemObstructionStatics
// Size: 0x28 (Inherited: 0x28)
struct UItemObstructionStatics : UBlueprintFunctionLibrary {

	bool OverlapClosestBlocking(struct ACharacter* Character, struct FTransform& obstructionTestCapsulesWorldTransform, struct TArray<struct FItemObstructionTestCapsule>& obstructionTestCapsules, struct FHitResult& HitResult, float& PenetrationDepth); // Function ConZ.ItemObstructionStatics.OverlapClosestBlocking // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x240fe70
	bool OverlapBlocking(struct ACharacter* Character, struct FTransform& obstructionTestCapsuleWorldTransform, struct FItemObstructionTestCapsule& obstructionTestCapsule, struct FHitResult& HitResult, float& PenetrationDepth); // Function ConZ.ItemObstructionStatics.OverlapBlocking // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x240fbe0
	float ChooseItemObstructionSide(struct ACharacter* Character, float existingSide); // Function ConZ.ItemObstructionStatics.ChooseItemObstructionSide // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x240f390
};

// Class ConZ.ItemPostSpawnAction
// Size: 0x40 (Inherited: 0x28)
struct UItemPostSpawnAction : UObject {
	bool _appliesOnlyToSomeItems; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<struct FPrimaryAssetId> _appliesToItemAssetIds; // 0x30(0x10)
};

// Class ConZ.ItemPostSpawnAction_SetAmmoAmount
// Size: 0x58 (Inherited: 0x40)
struct UItemPostSpawnAction_SetAmmoAmount : UItemPostSpawnAction {
	bool _useAbsoluteAmount; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FInt32Interval _absoluteAmount; // 0x44(0x08)
	bool _useAmountRatio; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FFloatInterval _amountRatio; // 0x50(0x08)
};

// Class ConZ.ItemPostSpawnAction_SetCashAmount
// Size: 0x58 (Inherited: 0x40)
struct UItemPostSpawnAction_SetCashAmount : UItemPostSpawnAction {
	bool _useAbsoluteAmount; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FInt32Interval _absoluteAmount; // 0x44(0x08)
	bool _useAmountRatio; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FFloatInterval _amountRatio; // 0x50(0x08)
};

// Class ConZ.ItemPostSpawnAction_SetClothesDirtiness
// Size: 0x48 (Inherited: 0x40)
struct UItemPostSpawnAction_SetClothesDirtiness : UItemPostSpawnAction {
	struct FFloatInterval _dirtiness; // 0x40(0x08)
};

// Class ConZ.ItemPostSpawnAction_SetResourceAmount
// Size: 0x58 (Inherited: 0x40)
struct UItemPostSpawnAction_SetResourceAmount : UItemPostSpawnAction {
	bool _useAbsoluteAmount; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FFloatInterval _absoluteAmount; // 0x44(0x08)
	bool _useAmountRatio; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FFloatInterval _amountRatio; // 0x50(0x08)
};

// Class ConZ.ItemPostSpawnAction_SetUsage
// Size: 0x58 (Inherited: 0x40)
struct UItemPostSpawnAction_SetUsage : UItemPostSpawnAction {
	bool _useAbsoluteUsage; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FInt32Interval _absoluteUsage; // 0x44(0x08)
	bool _useUsageRatio; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FFloatInterval _usageRatio; // 0x50(0x08)
};

// Class ConZ.ItemPostSpawnAction_AbandonedBunkerKeycard
// Size: 0x48 (Inherited: 0x40)
struct UItemPostSpawnAction_AbandonedBunkerKeycard : UItemPostSpawnAction {
	bool _overrideFloorNumber; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t _floorNumberOverride; // 0x44(0x04)
};

// Class ConZ.ItemPostSpawnAction_KillboxKeycard
// Size: 0x48 (Inherited: 0x40)
struct UItemPostSpawnAction_KillboxKeycard : UItemPostSpawnAction {
	struct FGameplayTag SpawnReason; // 0x40(0x08)
};

// Class ConZ.ItemPostSpawnAction_Bedroll
// Size: 0x40 (Inherited: 0x40)
struct UItemPostSpawnAction_Bedroll : UItemPostSpawnAction {
};

// Class ConZ.ItemRackSlotComponent
// Size: 0x230 (Inherited: 0x200)
struct UItemRackSlotComponent : USceneComponent {
	struct AItem* _placedItem; // 0x200(0x08)
	char pad_208[0x8]; // 0x208(0x08)
	struct TArray<struct UPlaceableOnRackItemTag*> _acceptableTags; // 0x210(0x10)
	struct UAkAudioEvent* _placeItemAudioEvent; // 0x220(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void OnRep_PlacedItem(); // Function ConZ.ItemRackSlotComponent.OnRep_PlacedItem // (Final|Native|Private) // @ game+0x24150b0
};

// Class ConZ.ItemRegistry
// Size: 0x100 (Inherited: 0xb0)
struct UItemRegistry : UActorComponent {
	char pad_B0[0x50]; // 0xb0(0x50)
};

// Class ConZ.ItemRequirementMountPathBlocker
// Size: 0x40 (Inherited: 0x30)
struct UItemRequirementMountPathBlocker : UBaseMountPathBlocker {
	struct UBaseItemTag* _requiredItemTagClass; // 0x30(0x08)
	enum class EVehicleMountType _mountTypeToBlock; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.ItemRootComponent
// Size: 0x210 (Inherited: 0x200)
struct UItemRootComponent : USceneComponent {
	char pad_200[0x10]; // 0x200(0x10)
};

// Class ConZ.ItemsCraftingDetailsPanel
// Size: 0x388 (Inherited: 0x268)
struct UItemsCraftingDetailsPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UBigItemCraftingButton* _bigItemCraftingButton; // 0x270(0x08)
	struct UTextBlock* _descriptionTextBlock; // 0x278(0x08)
	struct UCheckBox* _ingredientsExpandCheckBox; // 0x280(0x08)
	struct UWrapBox* _recipeIngredientButtonsWrapBox; // 0x288(0x08)
	struct UOverlay* _possibleIngredientsOverlay; // 0x290(0x08)
	struct UWrapBox* _possibleRecipeIngredientButtonsWrapBox; // 0x298(0x08)
	struct UVerticalBox* _linksVerticalBox; // 0x2a0(0x08)
	struct UButton* _dlcStoreLinkButton; // 0x2a8(0x08)
	struct UTextBlock* _dlcText; // 0x2b0(0x08)
	struct UButton* _twitchDropLinkButton; // 0x2b8(0x08)
	struct UTextBlock* _twitchDropText; // 0x2c0(0x08)
	struct URecipeIngredientButton* _recipeIngredientButtonClass; // 0x2c8(0x08)
	struct URecipeIngredientButton* _possibleRecipeIngredientButtonClass; // 0x2d0(0x08)
	char pad_2D8[0xb0]; // 0x2d8(0xb0)

	void OnDropdownStateChanged(bool isCollapsed); // Function ConZ.ItemsCraftingDetailsPanel.OnDropdownStateChanged // (Final|Native|Private) // @ game+0x2414f90
};

// Class ConZ.ItemsCraftingPanel
// Size: 0x3e8 (Inherited: 0x268)
struct UItemsCraftingPanel : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UCraftingCategoriesTabButtonsContainer* _craftingCategoriesTabButtonsContainer; // 0x270(0x08)
	struct USearchBox* _searchBox; // 0x278(0x08)
	struct UWidgetSwitcher* _categoriesDetailsSwitcher; // 0x280(0x08)
	struct UTextBlock* _selectedCategoryTitle; // 0x288(0x08)
	struct UScrollBox* _categoriesScrollBox; // 0x290(0x08)
	struct UItemsCraftingDetailsPanel* _craftingDetailsPanel; // 0x298(0x08)
	struct UPrimaryButton* _detailsAndBackButton; // 0x2a0(0x08)
	struct FText _detailsTooltipText; // 0x2a8(0x18)
	struct FText _backTooltipText; // 0x2c0(0x18)
	struct UPrimaryButton* _autoCraftButton; // 0x2d8(0x08)
	struct FText _autoCraftTooltipText; // 0x2e0(0x18)
	struct UPrimaryButton* _craftButton; // 0x2f8(0x08)
	struct FText _craftTooltipText; // 0x300(0x18)
	struct UWidget* _examinedItemContainer; // 0x318(0x08)
	struct UTextBlock* _examinedItemName; // 0x320(0x08)
	struct UImage* _examinedItemIcon; // 0x328(0x08)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x330(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x338(0x08)
	struct UTextBlock* _examinedItemDescription; // 0x340(0x08)
	struct UCraftingRecipeButtonsContainer* _craftingRecipeButtonsContainerClass; // 0x348(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x350(0x08)
	char pad_358[0x50]; // 0x358(0x50)
	struct FMargin _categoriesPadding; // 0x3a8(0x10)
	char pad_3B8[0x18]; // 0x3b8(0x18)
	struct AItem* _examinedItem; // 0x3d0(0x08)
	char pad_3D8[0x10]; // 0x3d8(0x10)

	void OnItemManuallySelected(struct UItemWidget2* Widget); // Function ConZ.ItemsCraftingPanel.OnItemManuallySelected // (Final|Native|Private) // @ game+0x2415020
	void OnDetailsAndBackButtonClicked(); // Function ConZ.ItemsCraftingPanel.OnDetailsAndBackButtonClicked // (Final|Native|Private) // @ game+0x2414f70
	void OnCraftButtonClicked(); // Function ConZ.ItemsCraftingPanel.OnCraftButtonClicked // (Final|Native|Private) // @ game+0x2414f50
	void OnAutoCraftButtonClicked(); // Function ConZ.ItemsCraftingPanel.OnAutoCraftButtonClicked // (Final|Native|Private) // @ game+0x2414f30
	void OnAnyButtonHovered(); // Function ConZ.ItemsCraftingPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x2414f10
	void HandleOnExpandAllClicked(); // Function ConZ.ItemsCraftingPanel.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x2414ef0
	void HandleOnCollapseAllClicked(); // Function ConZ.ItemsCraftingPanel.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x2414ed0
};

// Class ConZ.ItemsCraftingUIContext
// Size: 0x28 (Inherited: 0x28)
struct UItemsCraftingUIContext : UUIContext {
};

// Class ConZ.ItemsCraftingUIController
// Size: 0x3f0 (Inherited: 0x390)
struct UItemsCraftingUIController : UCraftingUIControllerBase {
	char pad_390[0x60]; // 0x390(0x60)
};

// Class ConZ.ItemSelection
// Size: 0x98 (Inherited: 0x30)
struct UItemSelection : UDataAsset {
	struct AItem* MainItem; // 0x30(0x08)
	struct TArray<struct AItem*> SupportItems; // 0x38(0x10)
	struct TArray<struct AItem*> Attachments; // 0x48(0x10)
	struct UTexture2D* UnselectedIcon; // 0x58(0x08)
	struct UTexture2D* SelectedIcon; // 0x60(0x08)
	struct UTexture2D* DisabledIcon; // 0x68(0x08)
	struct FText SelectionName; // 0x70(0x18)
	float SizeX; // 0x88(0x04)
	float SizeY; // 0x8c(0x04)
	int32_t TeamIndex; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class ConZ.ItemSelectionSlotWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UItemSelectionSlotWidget : UUserWidget {
	struct UScrollBox* _selectionScrollBox; // 0x268(0x08)
	struct UTextBlock* TextBlock_1; // 0x270(0x08)
	struct UVerticalBox* VerticalBox_1; // 0x278(0x08)
	struct FText Name; // 0x280(0x18)
	struct UItemSelectionWidget* _selectionWidgetClass; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class ConZ.ItemSelectionWidget
// Size: 0x2f0 (Inherited: 0x268)
struct UItemSelectionWidget : UUserWidget {
	struct UImage* _selection; // 0x268(0x08)
	struct UTextBlock* _itemName; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	struct UItemSelection* _itemData; // 0x280(0x08)
	struct UTexture2D* _cancelTexture; // 0x288(0x08)
	struct UAkAudioEvent* _selectionAudioEvent; // 0x290(0x08)
	struct FSlateColor _selectedColor; // 0x298(0x28)
	struct FSlateColor _notSelectedColor; // 0x2c0(0x28)
	char pad_2E8[0x8]; // 0x2e8(0x08)
};

// Class ConZ.ItemSpawnerComponent
// Size: 0x220 (Inherited: 0x200)
struct UItemSpawnerComponent : USceneComponent {
	int32_t ItemSpawnLimit; // 0x1f8(0x04)
	struct TArray<struct FItemSpawnerMarker> SpawnerMarkers; // 0x200(0x10)
	struct FString SpawnerGroupName; // 0x210(0x10)
};

// Class ConZ.ItemSpawnerEvaluationResultEntityComponentSetup
// Size: 0x48 (Inherited: 0x48)
struct UItemSpawnerEvaluationResultEntityComponentSetup : UEntityComponentSetup {
};

// Class ConZ.ItemSpawnerGroup
// Size: 0x228 (Inherited: 0x220)
struct AItemSpawnerGroup : AActor {
	struct UItemSpawnerComponent* SpawnerComponent; // 0x220(0x08)
};

// Class ConZ.ItemSpawnerVolume
// Size: 0x278 (Inherited: 0x258)
struct AItemSpawnerVolume : AVolume {
	struct FItemLocation zone; // 0x258(0x0f)
	char pad_267[0x1]; // 0x267(0x01)
	float ItemHealthMultiplier; // 0x268(0x04)
	float ProbabilityMultiplier; // 0x26c(0x04)
	float ExamineProbabilityMultiplier; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
};

// Class ConZ.ItemSpawningDataRegistry
// Size: 0x240 (Inherited: 0x28)
struct UItemSpawningDataRegistry : UObject {
	char pad_28[0x218]; // 0x28(0x218)
};

// Class ConZ.ItemSpawningManager
// Size: 0x1818 (Inherited: 0x220)
struct AItemSpawningManager : AActor {
	char pad_220[0x18]; // 0x220(0x18)
	struct UItemSpawningDataRegistry* _dataRegistry; // 0x238(0x08)
	char pad_240[0x15d8]; // 0x240(0x15d8)
};

// Class ConZ.ItemSpawnerPreset
// Size: 0x98 (Inherited: 0x28)
struct UItemSpawnerPreset : UObject {
	struct FItemSpawnerData SpawnerData; // 0x28(0x70)
};

// Class ConZ.ItemSpawnerPreset2
// Size: 0xa0 (Inherited: 0x28)
struct UItemSpawnerPreset2 : UObject {
	struct TArray<struct FItemSpawnerPreset_Node> Nodes; // 0x28(0x10)
	struct TArray<struct FItemSpawnerPreset_Item> Items; // 0x38(0x10)
	struct TArray<struct FItemSpawnerPreset_Subpreset> Subpresets; // 0x48(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> FixedItems; // 0x58(0x10)
	bool AlwaysSpawn; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float Probability; // 0x6c(0x04)
	struct FInt32Interval Quantity; // 0x70(0x08)
	bool AllowDuplicates; // 0x78(0x01)
	bool ShouldFilterItemsByZone; // 0x79(0x01)
	bool ShouldApplyLocationSpecificDamageModifier; // 0x7a(0x01)
	bool ShouldApplyLocationSpecificProbabilityModifier; // 0x7b(0x01)
	float InitialDamage; // 0x7c(0x04)
	float RandomDamage; // 0x80(0x04)
	float InitialUsage; // 0x84(0x04)
	float RandomUsage; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct TArray<struct TSoftClassPtr<UObject>> PostSpawnActions; // 0x90(0x10)
};

// Class ConZ.ItemSplitWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UItemSplitWidget : UUserWidget {
	struct UEditableTextBox* _currentItemStackAmount; // 0x268(0x08)
	struct UTextBlock* _newItemStackAmount; // 0x270(0x08)
	struct USlider* _valueSlider; // 0x278(0x08)
	struct UButton* _splitButton; // 0x280(0x08)
	char pad_288[0x20]; // 0x288(0x20)

	void OnStackAmountBoxTextChanged(struct FText& newText); // Function ConZ.ItemSplitWidget.OnStackAmountBoxTextChanged // (Final|Native|Private|HasOutParms) // @ game+0x241b130
	void OnSplitButtonClicked(); // Function ConZ.ItemSplitWidget.OnSplitButtonClicked // (Final|Native|Private) // @ game+0x241b110
	void OnSliderValueUpdated(float Value); // Function ConZ.ItemSplitWidget.OnSliderValueUpdated // (Final|Native|Private) // @ game+0x241b090
	void OnExitRequested(); // Function ConZ.ItemSplitWidget.OnExitRequested // (Final|Native|Private) // @ game+0x241aef0
};

// Class ConZ.ItemStatics
// Size: 0x28 (Inherited: 0x28)
struct UItemStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ItemStatusWidget
// Size: 0x340 (Inherited: 0x340)
struct UItemStatusWidget : UWaypointWidgetBase {

	void SetTitleText(struct FString Text); // Function ConZ.ItemStatusWidget.SetTitleText // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void SetNameText(struct FString Text); // Function ConZ.ItemStatusWidget.SetNameText // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.ItemTooltipTab
// Size: 0x150 (Inherited: 0x140)
struct UItemTooltipTab : UWidgetSwitcher {
	struct TArray<struct UPanelWidget*> _panels; // 0x140(0x10)
};

// Class ConZ.ItemTooltip
// Size: 0x2b8 (Inherited: 0x268)
struct UItemTooltip : UUserWidget {
	struct UItemTooltipPanel* _mainPanel; // 0x268(0x08)
	struct UItemTooltipTab* _overviewPanels; // 0x270(0x08)
	struct UItemTooltipTab* _additionalPanels; // 0x278(0x08)
	struct UImage* _pageIndicatorBar; // 0x280(0x08)
	struct UTextBlock* _expandHintText; // 0x288(0x08)
	struct UUserWidget* UI_Border; // 0x290(0x08)
	struct UGridPanel* _pageIndicatorGrid; // 0x298(0x08)
	char pad_2A0[0x18]; // 0x2a0(0x18)
};

// Class ConZ.ExtendedRichTextBlock
// Size: 0x680 (Inherited: 0x680)
struct UExtendedRichTextBlock : URichTextBlock {
};

// Class ConZ.ItemTooltipPanelElement
// Size: 0x270 (Inherited: 0x268)
struct UItemTooltipPanelElement : UUserWidget {
	struct FName _elementName; // 0x268(0x08)
};

// Class ConZ.ItemTooltipPanelElement_Overview
// Size: 0x548 (Inherited: 0x270)
struct UItemTooltipPanelElement_Overview : UItemTooltipPanelElement {
	struct UImage* IconImage; // 0x270(0x08)
	struct UExtendedRichTextBlock* ExtendedRichTextBlock_1; // 0x278(0x08)
	struct UTexture2D* Icon_; // 0x280(0x08)
	int32_t MinimumIntegralDigits_; // 0x288(0x04)
	int32_t MaximumIntegralDigits_; // 0x28c(0x04)
	int32_t MinimumFractionalDigits_; // 0x290(0x04)
	int32_t MaximumFractionalDigits_; // 0x294(0x04)
	struct FText TextFormat_; // 0x298(0x18)
	struct FTextBlockStyle TextStyle_; // 0x2b0(0x270)
	struct FSlateColor Color_; // 0x520(0x28)
};

// Class ConZ.ItemTooltipPanelElement_OverviewText
// Size: 0x538 (Inherited: 0x270)
struct UItemTooltipPanelElement_OverviewText : UItemTooltipPanelElement {
	struct UExtendedRichTextBlock* ExtendedRichTextBlock_1; // 0x270(0x08)
	int32_t MinimumIntegralDigits_; // 0x278(0x04)
	int32_t MaximumIntegralDigits_; // 0x27c(0x04)
	int32_t MinimumFractionalDigits_; // 0x280(0x04)
	int32_t MaximumFractionalDigits_; // 0x284(0x04)
	struct FText TextFormat_; // 0x288(0x18)
	struct FTextBlockStyle TextStyle_; // 0x2a0(0x270)
	struct FSlateColor Color_; // 0x510(0x28)
};

// Class ConZ.ItemTooltipPanelElement_OverviewTextParameter
// Size: 0x318 (Inherited: 0x270)
struct UItemTooltipPanelElement_OverviewTextParameter : UItemTooltipPanelElement {
	struct UTextBlock* TextBlock_1; // 0x270(0x08)
	struct UTextBlock* TextBlock_47; // 0x278(0x08)
	struct FSlateFontInfo Font_; // 0x280(0x58)
	struct FText TextFormat_; // 0x2d8(0x18)
	struct FText ParameterText_; // 0x2f0(0x18)
	int32_t MinimumIntegralDigits_; // 0x308(0x04)
	int32_t MaximumIntegralDigits_; // 0x30c(0x04)
	int32_t MinimumFractionalDigits_; // 0x310(0x04)
	int32_t MaximumFractionalDigits_; // 0x314(0x04)
};

// Class ConZ.ItemTooltipPanel
// Size: 0x2b8 (Inherited: 0x268)
struct UItemTooltipPanel : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
};

// Class ConZ.ItemMainTooltipPanel
// Size: 0x2c0 (Inherited: 0x2b8)
struct UItemMainTooltipPanel : UItemTooltipPanel {
	struct UOverlay* DebugOverlay; // 0x2b8(0x08)
};

// Class ConZ.ItemUserWidget
// Size: 0x2a8 (Inherited: 0x288)
struct UItemUserWidget : UBaseItemWidget {
	struct FMulticastInlineDelegate OnClicked; // 0x288(0x10)
	struct UUserWidget* _uiBorder; // 0x298(0x08)
	bool _isSelected; // 0x2a0(0x01)
	bool _isHovered; // 0x2a1(0x01)
	char pad_2A2[0x6]; // 0x2a2(0x06)

	void UpdateHighlightStatus(); // Function ConZ.ItemUserWidget.UpdateHighlightStatus // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
	void SetItem(struct AItem* Item); // Function ConZ.ItemUserWidget.SetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x241b430
	void SetImage(struct UTexture2D* Image); // Function ConZ.ItemUserWidget.SetImage // (Final|Native|Public|BlueprintCallable) // @ game+0x241b3a0
	void OnItemSelectionChanged(bool selected); // Function ConZ.ItemUserWidget.OnItemSelectionChanged // (Final|Native|Protected) // @ game+0x241afa0
	void OnClicked__DelegateSignature(struct UItemUserWidget* clickedWidget); // DelegateFunction ConZ.ItemUserWidget.OnClicked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	void MarkAsWeaponWidget(); // Function ConZ.ItemUserWidget.MarkAsWeaponWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
	void ItemPickedUpStateChanged(struct AItem* Item, bool pickedUp); // Function ConZ.ItemUserWidget.ItemPickedUpStateChanged // (Final|Native|Public) // @ game+0x241a8e0
	void InteractableDestroyed(struct AActor* interactable); // Function ConZ.ItemUserWidget.InteractableDestroyed // (Final|Native|Public) // @ game+0x241a850
	struct AItem* GetItem(); // Function ConZ.ItemUserWidget.GetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x241a7e0
	struct UItemUserWidget* CreateFromItem(struct AItem* Item); // Function ConZ.ItemUserWidget.CreateFromItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x241a750
	void BlinkItemContainer(); // Function ConZ.ItemUserWidget.BlinkItemContainer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.ItemVirtualizationManager
// Size: 0x578 (Inherited: 0x220)
struct AItemVirtualizationManager : AActor {
	char pad_220[0x358]; // 0x220(0x358)
};

// Class ConZ.ItemVirtualizationVisitorComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UItemVirtualizationVisitorComponent : UActorComponent {
	float _visitorBounds; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class ConZ.ItemWidget2
// Size: 0x520 (Inherited: 0x268)
struct UItemWidget2 : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)
	struct UTextBlock* LowerLeftTextFirst; // 0x2a0(0x08)
	struct UTextBlock* LowerLeftTextSecond; // 0x2a8(0x08)
	char pad_2B0[0x50]; // 0x2b0(0x50)
	struct UProgressBar* ProgressBarDurability; // 0x300(0x08)
	struct UProgressBar* ProgressBarUses; // 0x308(0x08)
	struct UImage* BackgroundHighlight; // 0x310(0x08)
	char pad_318[0x8]; // 0x318(0x08)
	struct TScriptInterface<IInventoryNode> _item; // 0x320(0x10)
	struct TScriptInterface<IInventoryContainer> _container; // 0x330(0x10)
	struct UImage* _icon; // 0x340(0x08)
	struct USizeBox* _iconSizeBox; // 0x348(0x08)
	struct UImage* _background; // 0x350(0x08)
	struct UInvalidationBox* _mainInvalidationBox; // 0x358(0x08)
	struct UOverlay* _priceOverlay; // 0x360(0x08)
	struct UTextBlock* _priceText; // 0x368(0x08)
	struct UUniformGridPanel* _backgroundGrid; // 0x370(0x08)
	struct UUniformGridPanel* _foregroundGrid; // 0x378(0x08)
	struct UOverlay* _selectionOverlay; // 0x380(0x08)
	char pad_388[0x8]; // 0x388(0x08)
	struct UVerticalBox* _healthPercentageProgressBarVBox; // 0x390(0x08)
	struct UImage* _irreparableIcon; // 0x398(0x08)
	struct UImage* _disabledOverlay; // 0x3a0(0x08)
	struct UImage* _radiationIcon; // 0x3a8(0x08)
	struct FLinearColor _defaultBackgroundColour; // 0x3b0(0x10)
	struct FLinearColor _hoveredBackgroundColour; // 0x3c0(0x10)
	struct FLinearColor _selectedBackgroundColour; // 0x3d0(0x10)
	struct FLinearColor _selectedHoveredBackgroundColour; // 0x3e0(0x10)
	char pad_3F0[0x20]; // 0x3f0(0x20)
	struct UHorizontalBox* _lowerLeftBox; // 0x410(0x08)
	struct UImage* _additionalIcon; // 0x418(0x08)
	struct USizeBox* _additionalIconSizeBox; // 0x420(0x08)
	char pad_428[0x38]; // 0x428(0x38)
	struct TArray<struct UTexture2D*> _temperatureLevelImages; // 0x460(0x10)
	struct TArray<struct UTexture2D*> _wetnessLevelImages; // 0x470(0x10)
	struct USizeBox* MainSizeBox; // 0x480(0x08)
	struct UImage* Temperature; // 0x488(0x08)
	struct UImage* Wetness; // 0x490(0x08)
	struct UTextBlock* UsageSeparator; // 0x498(0x08)
	struct UImage* UsesBackground; // 0x4a0(0x08)
	struct UImage* HealthBackground; // 0x4a8(0x08)
	struct UTextBlock* LowerRightText; // 0x4b0(0x08)
	struct UImage* UpperRightBackground; // 0x4b8(0x08)
	struct UTextBlock* UpperRightText; // 0x4c0(0x08)
	struct UImage* UpperLeftBackground; // 0x4c8(0x08)
	struct UTextBlock* UpperLeftText; // 0x4d0(0x08)
	struct UImage* MiddleBackground; // 0x4d8(0x08)
	struct UTextBlock* MiddleText; // 0x4e0(0x08)
	struct UImage* UpperBackground; // 0x4e8(0x08)
	struct UImage* LowerBackground; // 0x4f0(0x08)
	struct UWidgetAnimation* LowerLeftBoxFadeIn; // 0x4f8(0x08)
	struct UWidgetAnimation* LowerLeftBoxFadeOut; // 0x500(0x08)
	struct UWidgetAnimation* AdditionalIconFadeIn; // 0x508(0x08)
	struct UWidgetAnimation* AdditionalIconFadeOut; // 0x510(0x08)
	struct UWidgetAnimation* LowerLeftBoxShow; // 0x518(0x08)

	void OnDropOperation(struct UDragDropOperation* Operation); // Function ConZ.ItemWidget2.OnDropOperation // (Final|Native|Public) // @ game+0x241ad00
	void OnDragOperationCancelled(struct UDragDropOperation* Operation); // Function ConZ.ItemWidget2.OnDragOperationCancelled // (Final|Native|Public) // @ game+0x241ac70
};

// Class ConZ.ItemWidgetDragDropOperation
// Size: 0x90 (Inherited: 0x88)
struct UItemWidgetDragDropOperation : UDragDropOperation {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class ConZ.ItemWithText
// Size: 0x9f0 (Inherited: 0x9b0)
struct AItemWithText : AItem {
	int32_t MaxTextCharactersPerRow; // 0x9b0(0x04)
	int32_t MaxTextRows; // 0x9b4(0x04)
	struct UWidgetComponent* _textWidgetComponent; // 0x9b8(0x08)
	struct FString _text; // 0x9c0(0x10)
	struct FDbIntegerId _owningUserProfileId; // 0x9d0(0x08)
	char pad_9D8[0x18]; // 0x9d8(0x18)

	void OnTextAccepted(struct APrisoner* User, struct FText& Text); // Function ConZ.ItemWithText.OnTextAccepted // (Final|Native|Public|HasOutParms) // @ game+0x241b200
	void OnRep_Text(); // Function ConZ.ItemWithText.OnRep_Text // (Final|Native|Private) // @ game+0x241b070
};

// Class ConZ.JournalPanelWidget
// Size: 0x2b8 (Inherited: 0x268)
struct UJournalPanelWidget : UTabMenuPanel {
	struct UTabContainer* _tabContainer; // 0x268(0x08)
	struct UWidgetSwitcher* _leftPanelSwitcher; // 0x270(0x08)
	struct UWidgetSwitcher* _rightPanelSwitcher; // 0x278(0x08)
	struct UQuestEntriesPanelWidget* _questEntriesLeftPanel; // 0x280(0x08)
	struct UQuestEntryDetailsPanelWidget* _questEntryDetailsRightPanel; // 0x288(0x08)
	struct UOutpostTraderDetailsPanelWidget* _outpostTraderEntryDetailsRightPanel; // 0x290(0x08)
	struct USizeBox* _rightPanelSizeBox; // 0x298(0x08)
	struct UOutpostEntriesPanelWidget* _outpostEntriesLeftPanel; // 0x2a0(0x08)
	char pad_2A8[0x10]; // 0x2a8(0x10)
};

// Class ConZ.JournalUIController
// Size: 0x3a8 (Inherited: 0x28)
struct UJournalUIController : UObject {
	char pad_28[0x380]; // 0x28(0x380)
};

// Class ConZ.KeyBinding
// Size: 0x300 (Inherited: 0x268)
struct UKeyBinding : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UTextBlock* ActionNameText; // 0x298(0x08)
	struct UTextBlock* ActionKeyText; // 0x2a0(0x08)
	struct FText UserFriendlyName; // 0x2a8(0x18)
	struct FName Name; // 0x2c0(0x08)
	bool IsAxis; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float AxisScale; // 0x2cc(0x04)
	struct FName GroupName; // 0x2d0(0x08)
	bool CheckOnlySameKeyWithinGroup; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	struct FName SameKeyBlockerGroupName; // 0x2dc(0x08)
	char pad_2E4[0x1c]; // 0x2e4(0x1c)
};

// Class ConZ.KeyboardIllumination
// Size: 0x28 (Inherited: 0x28)
struct UKeyboardIllumination : UObject {
};

// Class ConZ.KeyCardItemEntitySetup
// Size: 0xe8 (Inherited: 0x90)
struct UKeyCardItemEntitySetup : UItemEntitySetup {
	struct FGameplayTag SpawnReason; // 0x90(0x08)
	struct TMap<struct FGameplayTag, float> ExpirationTimeOverrideHours; // 0x98(0x50)
};

// Class ConZ.KillBoxC4SpawnPoint
// Size: 0x2d8 (Inherited: 0x220)
struct AKillBoxC4SpawnPoint : AActor {
	struct FItemSpawnerPresetWithOverrides SpawnerPreset; // 0x220(0xb8)
};

// Class ConZ.KillboxComponent
// Size: 0x360 (Inherited: 0xb0)
struct UKillboxComponent : UActorComponent {
	bool _isActivated; // 0xb0(0x01)
	bool _isFinale; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float _killBoxDuration; // 0xb4(0x04)
	float _lockdownDuration; // 0xb8(0x04)
	float _reductionTimeCap; // 0xbc(0x04)
	float _reductionTimePenalty; // 0xc0(0x04)
	float _saveStateInterval; // 0xc4(0x04)
	float _gasEntranceTime; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UPrisonerBodyCondition_KillBoxGasPoisoning* _gasPoisoningCondition; // 0xd0(0x08)
	float _panicModeTimeCut; // 0xd8(0x04)
	float _laserEntranceTime; // 0xdc(0x04)
	float _finaleEntranceCloseTime; // 0xe0(0x04)
	float _difficultyCalibrationTime; // 0xe4(0x04)
	int32_t _calibrationPrisonerThreshold; // 0xe8(0x04)
	float _zapperDamageModifierPerPrisoner; // 0xec(0x04)
	float _maxZapperDamageModifier; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct TArray<struct FRoomDifficultyConfiguration> _availableDifficultyConfigurations; // 0xf8(0x10)
	int32_t _maxSpawnedZombies; // 0x108(0x04)
	int32_t _maxSpawnedZombiesPerMistake; // 0x10c(0x04)
	int32_t _prisonerNumPerGoldDoorZapper; // 0x110(0x04)
	int32_t _maxGoldDoorZappers; // 0x114(0x04)
	float _specialPauseCountdownDuration; // 0x118(0x04)
	int32_t _pauseMaxPrisonerCount; // 0x11c(0x04)
	int32_t _spawnMinPrisonerCount; // 0x120(0x04)
	float _specialEventInterval; // 0x124(0x04)
	float _laserQuoteTimeRemainingTrigger; // 0x128(0x04)
	float _gasQuoteTimeRemainingTrigger; // 0x12c(0x04)
	float _randomQuoteInterval; // 0x130(0x04)
	float _timedHostBlockTime; // 0x134(0x04)
	struct TArray<struct UAkAudioEvent*> _killBoxOpeningQuotes; // 0x138(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxLaserAnnouncementQuotes; // 0x148(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxDescriptionQuotes; // 0x158(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxRandomnQuotes; // 0x168(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxFailureQuotes; // 0x178(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxGasAnnouncementQuotes; // 0x188(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxZombieSpawnQuotes; // 0x198(0x10)
	struct TArray<struct UAkAudioEvent*> _killBoxTimePauseQuotes; // 0x1a8(0x10)
	struct TArray<struct UAkAudioEvent*> _difficultyCalibrationQuote; // 0x1b8(0x10)
	struct UAkAudioEvent* KillBoxMusicStart; // 0x1c8(0x08)
	struct UAkAudioEvent* _killBoxMusicStop; // 0x1d0(0x08)
	struct UAkAudioEvent* _killBoxGasSound; // 0x1d8(0x08)
	struct UAkAudioEvent* KillBox30SecondsMark; // 0x1e0(0x08)
	struct UAkAudioEvent* KillBox10SecondsMark; // 0x1e8(0x08)
	struct UAkAudioEvent* KillBox5SecondsMark; // 0x1f0(0x08)
	struct UAkAudioEvent* KillBox4SecondsMark; // 0x1f8(0x08)
	struct UAkAudioEvent* KillBox3SecondsMark; // 0x200(0x08)
	struct UAkAudioEvent* KillBox2SecondsMark; // 0x208(0x08)
	struct UAkAudioEvent* KillBox1SecondsMark; // 0x210(0x08)
	struct UAkAudioEvent* KillBoxBuzzerSound; // 0x218(0x08)
	struct ADoor* _killBoxEntrance; // 0x220(0x08)
	struct AKillBoxDetectionField* _detectionField; // 0x228(0x08)
	struct UMovableCollisionFieldComponent* _laserComponent; // 0x230(0x08)
	struct TArray<struct AKillBoxSpawnPoint*> _spawnPoints; // 0x238(0x10)
	struct TArray<struct AKillBoxSpawnPoint*> _hardSpawnPoints; // 0x248(0x10)
	struct TArray<struct AZombie2*> _spawnedZombies; // 0x258(0x10)
	struct UAkComponent* _currentAudioComponent; // 0x268(0x08)
	struct UAkComponent* _musicComponent; // 0x270(0x08)
	float _remainingTime; // 0x278(0x04)
	float _unlockFailureAssistanceBonus; // 0x27c(0x04)
	char pad_280[0x60]; // 0x280(0x60)
	struct TArray<struct UAkAudioEvent*> _queuedQuotes; // 0x2e0(0x10)
	struct TArray<struct ADoor*> _electricalDoors; // 0x2f0(0x10)
	struct TArray<struct FRoomDefinition> _roomDefinitions; // 0x300(0x10)
	struct TArray<struct UKillBoxTimerWidget*> _timerWidgets; // 0x310(0x10)
	struct TArray<struct UParticleSystemComponent*> _gasEmitters; // 0x320(0x10)
	struct UParticleSystemComponent* _gasMist; // 0x330(0x08)
	struct ASwitch* _panicButton; // 0x338(0x08)
	char pad_340[0x20]; // 0x340(0x20)

	void SetPanicbutton(struct ASwitch* panicButton); // Function ConZ.KillboxComponent.SetPanicbutton // (Final|Native|Private|BlueprintCallable) // @ game+0x241b5e0
	void SetMusicComponent(struct UAkComponent* musicComponent); // Function ConZ.KillboxComponent.SetMusicComponent // (Final|Native|Private|BlueprintCallable) // @ game+0x241b550
	void SetLaserComponent(struct UMovableCollisionFieldComponent* laserComponent); // Function ConZ.KillboxComponent.SetLaserComponent // (Final|Native|Private|BlueprintCallable) // @ game+0x23cdcc0
	void SetKillBoxEntrance(struct ADoor* entrance); // Function ConZ.KillboxComponent.SetKillBoxEntrance // (Final|Native|Private|BlueprintCallable) // @ game+0x241b4c0
	void SetDetectionField(struct AKillBoxDetectionField* detectionField); // Function ConZ.KillboxComponent.SetDetectionField // (Final|Native|Private|BlueprintCallable) // @ game+0x241b310
	void OnRep_KillBoxActivation(); // Function ConZ.KillboxComponent.OnRep_KillBoxActivation // (Final|Native|Private) // @ game+0x241b050
	void OnKillBoxSetup(); // Function ConZ.KillboxComponent.OnKillBoxSetup // (Final|Native|Private|BlueprintCallable) // @ game+0x241b030
	void OnInnerDoorUnlockedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnInnerDoorUnlockedDelegate // (Final|Native|Private) // @ game+0x241af10
	void OnEntranceUnlockedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnEntranceUnlockedDelegate // (Final|Native|Private) // @ game+0x241ae60
	void OnEntranceOpenedDelegate(); // Function ConZ.KillboxComponent.OnEntranceOpenedDelegate // (Final|Native|Private) // @ game+0x241ae40
	void OnEntranceCloseFinishedDelegate(); // Function ConZ.KillboxComponent.OnEntranceCloseFinishedDelegate // (Final|Native|Private) // @ game+0x241ae20
	void OnElectricDoorsDefusedDelegate(struct ADoor* Door); // Function ConZ.KillboxComponent.OnElectricDoorsDefusedDelegate // (Final|Native|Private) // @ game+0x241ad90
	void NetMulticast_StopMusic(); // Function ConZ.KillboxComponent.NetMulticast_StopMusic // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241ac50
	void NetMulticast_StopAllQuotes(); // Function ConZ.KillboxComponent.NetMulticast_StopAllQuotes // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241ac30
	void NetMulticast_ReportKillBoxDeactivation(); // Function ConZ.KillboxComponent.NetMulticast_ReportKillBoxDeactivation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x236cc10
	void NetMulticast_ReportKillActivation(); // Function ConZ.KillboxComponent.NetMulticast_ReportKillActivation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241ac10
	void NetMulticast_QueueHostQuote(struct UAkAudioEvent* Sound, bool playOnlyIfInstant, bool stopPreviousQuote); // Function ConZ.KillboxComponent.NetMulticast_QueueHostQuote // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241aaf0
	void NetMulticast_PlaySound(struct UAkAudioEvent* Sound); // Function ConZ.KillboxComponent.NetMulticast_PlaySound // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241aa60
	void NetMulticast_ActivateGasSound(); // Function ConZ.KillboxComponent.NetMulticast_ActivateGasSound // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241aa40
	void NetMulticast_ActivateGasParticles(bool Activate); // Function ConZ.KillboxComponent.NetMulticast_ActivateGasParticles // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x241a9b0
	void InitiatePanicMode(); // Function ConZ.KillboxComponent.InitiatePanicMode // (Final|Native|Private) // @ game+0x241a830
	void InitiateKillBoxFailure(); // Function ConZ.KillboxComponent.InitiateKillBoxFailure // (Final|Native|Private) // @ game+0x241a810
	void AddTimerWidget(struct UKillBoxTimerWidget* timerWidget); // Function ConZ.KillboxComponent.AddTimerWidget // (Final|Native|Private|BlueprintCallable) // @ game+0x241a6c0
	void AddSpawnPoint(struct ADoor* holeDoor, struct AKillBoxSpawnPoint* Spawner); // Function ConZ.KillboxComponent.AddSpawnPoint // (Final|Native|Private|BlueprintCallable) // @ game+0x241a5f0
	void AddRoomDefinition(struct ADoor* RoomDoor, struct UStaticMeshComponent* Locker, struct AKillBoxC4SpawnPoint* C4); // Function ConZ.KillboxComponent.AddRoomDefinition // (Final|Native|Private|BlueprintCallable) // @ game+0x241a4e0
	void AddHardSpawnPoint(struct ADoor* holeDoor, struct AKillBoxSpawnPoint* Spawner); // Function ConZ.KillboxComponent.AddHardSpawnPoint // (Final|Native|Private|BlueprintCallable) // @ game+0x241a410
	void AddGasMist(struct UParticleSystemComponent* gasMist); // Function ConZ.KillboxComponent.AddGasMist // (Final|Native|Private|BlueprintCallable) // @ game+0x241a380
	void AddGasEmitter(struct UParticleSystemComponent* gasEmitter); // Function ConZ.KillboxComponent.AddGasEmitter // (Final|Native|Private|BlueprintCallable) // @ game+0x241a2f0
	void AddElectricalDoor(struct ADoor* electricalDoor); // Function ConZ.KillboxComponent.AddElectricalDoor // (Final|Native|Private|BlueprintCallable) // @ game+0x241a260
};

// Class ConZ.PlaceableActorBlocker
// Size: 0x220 (Inherited: 0x220)
struct APlaceableActorBlocker : AActor {
};

// Class ConZ.KillBoxDetectionField
// Size: 0x230 (Inherited: 0x220)
struct AKillBoxDetectionField : APlaceableActorBlocker {
	char pad_220[0x10]; // 0x220(0x10)
};

// Class ConZ.KillBoxSpawnPoint
// Size: 0x260 (Inherited: 0x220)
struct AKillBoxSpawnPoint : AActor {
	float _openDelay; // 0x220(0x04)
	float _closeDelay; // 0x224(0x04)
	struct TArray<struct AZombie2*> _zombieList; // 0x228(0x10)
	struct ADoor* _door; // 0x238(0x08)
	char pad_240[0x18]; // 0x240(0x18)
	float _stableZombieProbability; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
};

// Class ConZ.KillBoxTimerWidget
// Size: 0x288 (Inherited: 0x268)
struct UKillBoxTimerWidget : UUserWidget {
	struct UTextBlock* _remainingTimeMinutes1; // 0x268(0x08)
	struct UTextBlock* _remainingTimeMinutes2; // 0x270(0x08)
	struct UTextBlock* _remainingTimeSeconds1; // 0x278(0x08)
	struct UTextBlock* _remainingTimeSeconds2; // 0x280(0x08)

	void SetTime(int32_t Minutes, int32_t Seconds); // Function ConZ.KillBoxTimerWidget.SetTime // (Final|Native|Public|BlueprintCallable) // @ game+0x241f5b0
};

// Class ConZ.KillFeedNotification
// Size: 0x30 (Inherited: 0x30)
struct UKillFeedNotification : UConZNotification {
};

// Class ConZ.KillFeedNotificationDescription
// Size: 0x78 (Inherited: 0x40)
struct UKillFeedNotificationDescription : UNotificationDescription {
	struct FString Prefix; // 0x40(0x10)
	struct FString characterName; // 0x50(0x10)
	struct FString suffix; // 0x60(0x10)
	bool Ping; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class ConZ.KillNotificationWidget
// Size: 0x288 (Inherited: 0x268)
struct UKillNotificationWidget : UUserWidget {
	struct UTextBlock* _prefix; // 0x268(0x08)
	struct UTextBlock* _name; // 0x270(0x08)
	struct UTextBlock* _suffix; // 0x278(0x08)
	struct UHorizontalBox* HorizontalBox_58; // 0x280(0x08)
};

// Class ConZ.LadderMarkersComponent
// Size: 0x220 (Inherited: 0x200)
struct ULadderMarkersComponent : USceneComponent {
	struct TArray<struct FLadderMarker> _ladderMarkers; // 0x1f8(0x10)
	char pad_210[0x10]; // 0x210(0x10)
};

// Class ConZ.LadderMarkersRegistry
// Size: 0x280 (Inherited: 0x220)
struct ALadderMarkersRegistry : AActor {
	char pad_220[0x60]; // 0x220(0x60)
};

// Class ConZ.LadderStatics
// Size: 0x28 (Inherited: 0x28)
struct ULadderStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.LandingDamageCustomization
// Size: 0x30 (Inherited: 0x28)
struct ULandingDamageCustomization : UDamageCustomization {
	float PrisonerAnkleSprainEnergyThreshold; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class ConZ.LandingEffects
// Size: 0x7f8 (Inherited: 0x30)
struct ULandingEffects : UDataAsset {
	float MinImpactSpeedForLightEffects; // 0x30(0x04)
	float MinImpactSpeedForMediumEffects; // 0x34(0x04)
	float MinImpactSpeedForHeavyEffects; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UAkAudioEvent* ImpactAudioEvent; // 0x40(0x08)
	struct FLandingEffectDataPerPhysicalSurface Default; // 0x48(0x30)
	struct FLandingEffectDataPerPhysicalSurface grass; // 0x78(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForrestGroundCoastal; // 0xa8(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForrestGroundContinental; // 0xd8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Rock; // 0x108(0x30)
	struct FLandingEffectDataPerPhysicalSurface Stone; // 0x138(0x30)
	struct FLandingEffectDataPerPhysicalSurface Gravel; // 0x168(0x30)
	struct FLandingEffectDataPerPhysicalSurface GravelBeach; // 0x198(0x30)
	struct FLandingEffectDataPerPhysicalSurface Pebbles; // 0x1c8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Snow; // 0x1f8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Ice; // 0x228(0x30)
	struct FLandingEffectDataPerPhysicalSurface Sand; // 0x258(0x30)
	struct FLandingEffectDataPerPhysicalSurface Asphalt; // 0x288(0x30)
	struct FLandingEffectDataPerPhysicalSurface Dirt; // 0x2b8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Water; // 0x2e8(0x30)
	struct FLandingEffectDataPerPhysicalSurface WaterOcean; // 0x318(0x30)
	struct FLandingEffectDataPerPhysicalSurface Cloth; // 0x348(0x30)
	struct FLandingEffectDataPerPhysicalSurface Metal; // 0x378(0x30)
	struct FLandingEffectDataPerPhysicalSurface Aluminium; // 0x3a8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Concrete; // 0x3d8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Brick; // 0x408(0x30)
	struct FLandingEffectDataPerPhysicalSurface Wood; // 0x438(0x30)
	struct FLandingEffectDataPerPhysicalSurface Plastic; // 0x468(0x30)
	struct FLandingEffectDataPerPhysicalSurface Rubber; // 0x498(0x30)
	struct FLandingEffectDataPerPhysicalSurface Glass; // 0x4c8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Folliage; // 0x4f8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Bark; // 0x528(0x30)
	struct FLandingEffectDataPerPhysicalSurface Flesh; // 0x558(0x30)
	struct FLandingEffectDataPerPhysicalSurface RoofTile; // 0x588(0x30)
	struct FLandingEffectDataPerPhysicalSurface CeramicsTiles; // 0x5b8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Scrap; // 0x5e8(0x30)
	struct FLandingEffectDataPerPhysicalSurface Trunk; // 0x618(0x30)
	struct FLandingEffectDataPerPhysicalSurface Leaves; // 0x648(0x30)
	struct FLandingEffectDataPerPhysicalSurface Plaster; // 0x678(0x30)
	struct FLandingEffectDataPerPhysicalSurface Kevlar; // 0x6a8(0x30)
	struct FLandingEffectDataPerPhysicalSurface ForceField; // 0x6d8(0x30)
	struct FLandingEffectDataPerPhysicalSurface NoEffect; // 0x708(0x30)
	struct FLandingEffectDataPerPhysicalSurface WhiteGravel; // 0x738(0x30)
	struct FLandingEffectDataPerPhysicalSurface Mud; // 0x768(0x30)
	struct FLandingEffectDataPerPhysicalSurface RiverSand; // 0x798(0x30)
	struct FLandingEffectDataPerPhysicalSurface GrassContinental; // 0x7c8(0x30)
};

// Class ConZ.LargeAquaticAnimal
// Size: 0x890 (Inherited: 0x830)
struct ALargeAquaticAnimal : AConZCharacter {
	char pad_830[0x10]; // 0x830(0x10)
	float _maxHealth; // 0x840(0x04)
	float _health; // 0x844(0x04)
	char pad_848[0x10]; // 0x848(0x10)
	float _maxTimeWithoutRelevantPrisoners; // 0x858(0x04)
	char pad_85C[0x4]; // 0x85c(0x04)
	enum class EFishBehavior _behavior; // 0x860(0x01)
	char pad_861[0x7]; // 0x861(0x07)
	struct UAnimMontage* _deathAnimation; // 0x868(0x08)
	float _deathSinkingSpeed; // 0x870(0x04)
	float _capsuleRadiusAndHalfHeightOnDeath; // 0x874(0x04)
	char pad_878[0x18]; // 0x878(0x18)

	void OnRep_Health(float oldValue); // Function ConZ.LargeAquaticAnimal.OnRep_Health // (Final|Native|Private) // @ game+0x241f480
	void OnRep_Behavior(enum class EFishBehavior oldValue); // Function ConZ.LargeAquaticAnimal.OnRep_Behavior // (Final|Native|Private) // @ game+0x241f400
};

// Class ConZ.LargeAquaticAnimalSpeciesData
// Size: 0x40 (Inherited: 0x30)
struct ULargeAquaticAnimalSpeciesData : UDataAsset {
	struct ALargeAquaticAnimal* AnimalClass; // 0x30(0x08)
	float RequiredDepthForSpawning; // 0x38(0x04)
	enum class EConZWaterSplineType SpawningWaterType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class ConZ.LaserTriggerComponent
// Size: 0x550 (Inherited: 0x4e0)
struct ULaserTriggerComponent : UTriggerComponent {
	struct UBoxComponent* BoxCollisionComponent; // 0x4e0(0x08)
	struct UStaticMeshComponent* VisualizationMeshComponent; // 0x4e8(0x08)
	struct FVector _laserDirection; // 0x4f0(0x0c)
	float _maxLaserLength; // 0x4fc(0x04)
	float _laserThickness; // 0x500(0x04)
	float _laserHeight; // 0x504(0x04)
	struct UStaticMesh* _visualizationMesh; // 0x508(0x08)
	struct FTransform _laserMeshTransform; // 0x510(0x30)
	char pad_540[0x10]; // 0x540(0x10)

	void BoxComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentEndOverlap // (Final|Native|Private) // @ game+0x241f0b0
	void BoxComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.LaserTriggerComponent.BoxComponent_OnComponentBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x241ee80
};

// Class ConZ.FireSourceItemTag
// Size: 0x30 (Inherited: 0x30)
struct UFireSourceItemTag : UBaseItemTag {
};

// Class ConZ.ItemOpenerTag
// Size: 0x30 (Inherited: 0x30)
struct UItemOpenerTag : UBaseItemTag {
};

// Class ConZ.CannedFoodTag
// Size: 0x30 (Inherited: 0x30)
struct UCannedFoodTag : UBaseItemTag {
};

// Class ConZ.LevelMarkers
// Size: 0x2a0 (Inherited: 0x220)
struct ALevelMarkers : AActor {
	struct TArray<struct FLadderMarker> LadderMarkers; // 0x220(0x10)
	struct TArray<struct FWindowMarker> WindowMarkers; // 0x230(0x10)
	char pad_240[0x60]; // 0x240(0x60)
};

// Class ConZ.LevelQuadTree
// Size: 0x38 (Inherited: 0x30)
struct ULevelQuadTree : UWorldSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.LevelRadiationSource
// Size: 0x290 (Inherited: 0x220)
struct ALevelRadiationSource : AActor {
	struct USceneComponent* _root; // 0x220(0x08)
	struct UStaticMeshComponent* _epicenter; // 0x228(0x08)
	struct UStaticMeshComponent* _extents; // 0x230(0x08)
	struct UStaticMeshComponent* _falloff; // 0x238(0x08)
	struct FVector _epicenterLocation; // 0x240(0x0c)
	float _epicenterRadius; // 0x24c(0x04)
	float _maxRadiationAmountIncreaseRate; // 0x250(0x04)
	float _radiationAmountIncreaseRateFalloffExponent; // 0x254(0x04)
	float _radiationNoiseAmountScale; // 0x258(0x04)
	float _radiationNoiseLocationScale; // 0x25c(0x04)
	bool _shouldDrawEpicenter; // 0x260(0x01)
	bool _shouldDrawExtents; // 0x261(0x01)
	bool _shouldDrawRadiationFalloffVisualization; // 0x262(0x01)
	char pad_263[0x1]; // 0x263(0x01)
	float _radiationFalloffVisualizationZBias; // 0x264(0x04)
	struct UMaterialInterface* _radiationFalloffVisualizationMaterial; // 0x268(0x08)
	bool _shouldDrawExtentBounds; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	struct UTextureRenderTarget2D* _radiationLookupRenderTarget; // 0x278(0x08)
	struct UMaterialInterface* _radiationLookupRenderMaterial; // 0x280(0x08)
	struct UMaterialParameterCollection* _radiationMaterialParamCollection; // 0x288(0x08)

	void RenderRadiationIntensityToLookupTexture(); // Function ConZ.LevelRadiationSource.RenderRadiationIntensityToLookupTexture // (Final|Native|Public) // @ game+0x241f590
};

// Class ConZ.LevelUpNotification
// Size: 0x30 (Inherited: 0x30)
struct ULevelUpNotification : UConZNotification {
};

// Class ConZ.LevelUpNotificationDescription
// Size: 0x50 (Inherited: 0x40)
struct ULevelUpNotificationDescription : UNotificationDescription {
	struct USkill* Skill; // 0x40(0x08)
	enum class ESkillLevel skillLevel; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class ConZ.LevelUpNotificationWidget
// Size: 0x2d0 (Inherited: 0x268)
struct ULevelUpNotificationWidget : UUserWidget {
	struct UOverlay* _overlay; // 0x268(0x08)
	struct UImage* _backgroundImage; // 0x270(0x08)
	struct UImage* _arrowImage; // 0x278(0x08)
	struct UTextBlock* _skillLevelText; // 0x280(0x08)
	struct UTextBlock* _skillNameText; // 0x288(0x08)
	struct UAkAudioEvent* _levelUpNotificationAudioEvent; // 0x290(0x08)
	char pad_298[0x4]; // 0x298(0x04)
	float _displayTime; // 0x29c(0x04)
	float _slideInTime; // 0x2a0(0x04)
	float _slideOutTime; // 0x2a4(0x04)
	char pad_2A8[0x28]; // 0x2a8(0x28)

	struct UWidgetAnimation* GetLevelUpAnimation(); // Function ConZ.LevelUpNotificationWidget.GetLevelUpAnimation // (Event|Protected|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.LiftComponent
// Size: 0x230 (Inherited: 0x200)
struct ULiftComponent : USceneComponent {
	struct FVector PropellerLocation; // 0x1f8(0x0c)
	float AirDensity; // 0x204(0x04)
	float MaxForceMagnitude; // 0x208(0x04)
	float WindInfluenceMultiplier; // 0x20c(0x04)
	struct TArray<struct FAerodynamicSurface> _aerodynamicSurfaces; // 0x210(0x10)
	char pad_228[0x8]; // 0x228(0x08)
};

// Class ConZ.LoadingIconWidget
// Size: 0x268 (Inherited: 0x268)
struct ULoadingIconWidget : UUserWidget {
};

// Class ConZ.LoadingScreen
// Size: 0x270 (Inherited: 0x268)
struct ULoadingScreen : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
};

// Class ConZ.LockableItemComponent
// Size: 0xf8 (Inherited: 0xc8)
struct ULockableItemComponent : UItemComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct TArray<struct ULockData*> _staticLocks; // 0xd0(0x10)
	struct TArray<struct ULockItemTag*> _lockItems; // 0xe0(0x10)
	enum class EAccessLevel _activeAccessLevel; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
};

// Class ConZ.LockBombDefusalMinigame
// Size: 0x550 (Inherited: 0x530)
struct ALockBombDefusalMinigame : ABombDefusalMinigameBase {
	char pad_530[0x10]; // 0x530(0x10)
	struct ATrapItem* _bombClass; // 0x540(0x08)
	char pad_548[0x8]; // 0x548(0x08)
};

// Class ConZ.LockBombDefusalMinigameConfiguration
// Size: 0x70 (Inherited: 0x70)
struct ULockBombDefusalMinigameConfiguration : ULockpickingMinigameConfiguration {
};

// Class ConZ.Lockpickable
// Size: 0x28 (Inherited: 0x28)
struct ULockpickable : UInterface {

	void OnLockNeutralized(struct APrisoner* Prisoner); // Function ConZ.Lockpickable.OnLockNeutralized // (Native|Public|BlueprintCallable) // @ game+0x241f2e0
	bool HasLocks(); // Function ConZ.Lockpickable.HasLocks // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x241f2b0
	bool CanInitiateLockpickingFor(struct APrisoner* Prisoner); // Function ConZ.Lockpickable.CanInitiateLockpickingFor // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x241f210
};

// Class ConZ.LockpickableLocksVisualComponent
// Size: 0x240 (Inherited: 0x200)
struct ULockpickableLocksVisualComponent : USceneComponent {
	char pad_200[0x8]; // 0x200(0x08)
	struct TArray<struct FString> _lockStaticMeshComponentNames; // 0x208(0x10)
	struct UStaticMesh* _lockMeshPerLockDifficulty[0x5]; // 0x218(0x28)
};

// Class ConZ.LockpickingMinigame
// Size: 0x4e0 (Inherited: 0x340)
struct ALockpickingMinigame : AMinigame {
	struct UStaticMeshComponent* _outerRing; // 0x340(0x08)
	struct UStaticMeshComponent* _movableRing; // 0x348(0x08)
	struct USceneComponent* _lockpickingSetAnchor; // 0x350(0x08)
	struct USceneComponent* _lockpickManipulator; // 0x358(0x08)
	struct USceneComponent* _lockpickAnchor; // 0x360(0x08)
	struct UStaticMeshComponent* _lockpick; // 0x368(0x08)
	struct USceneComponent* _tensionToolManipulator; // 0x370(0x08)
	struct USceneComponent* _tensionToolAnchor; // 0x378(0x08)
	struct UStaticMeshComponent* _tensionTool; // 0x380(0x08)
	struct FVector _zoomStartLocation; // 0x388(0x0c)
	struct FVector _zoomEndLocation; // 0x394(0x0c)
	struct FTransform _protectionParticlesTransform; // 0x3a0(0x30)
	struct UCurveFloat* _zoomCurve; // 0x3d0(0x08)
	struct UCurveFloat* _fadeCurve; // 0x3d8(0x08)
	float _pickBreakingMultiplierForMediumDifficulty; // 0x3e0(0x04)
	float _pickBreakingMultiplierForHardDifficulty; // 0x3e4(0x04)
	char pad_3E8[0x28]; // 0x3e8(0x28)
	struct UAkAudioEvent* _lockpickingLockpickMovementStartAudioEvent; // 0x410(0x08)
	struct UAkAudioEvent* _lockpickingLockpickMovementStopAudioEvent; // 0x418(0x08)
	struct UAkAudioEvent* _lockpickingLockTensionStartAudioEvent; // 0x420(0x08)
	struct UAkAudioEvent* _lockpickingLockTensionStopAudioEvent; // 0x428(0x08)
	struct UAkAudioEvent* _lockpickingLockTurningStartAudioEvent; // 0x430(0x08)
	struct UAkAudioEvent* _lockpickingLockTurningStopAudioEvent; // 0x438(0x08)
	struct UAkAudioEvent* _lockpickingSuccessAudioEvent; // 0x440(0x08)
	struct UAkAudioEvent* _lockpickingFailedAudioEvent; // 0x448(0x08)
	struct UAkAudioEvent* _lockpickingResetAudioEvent; // 0x450(0x08)
	char pad_458[0x4]; // 0x458(0x04)
	float _rotatingStartAngle; // 0x45c(0x04)
	float _duration; // 0x460(0x04)
	float _angleTolerance; // 0x464(0x04)
	char pad_468[0x78]; // 0x468(0x78)

	void OnTensionToolDestroyed(struct AActor* tensionTool); // Function ConZ.LockpickingMinigame.OnTensionToolDestroyed // (Final|Native|Private) // @ game+0x241f500
	void OnLockpickDestroyed(struct AActor* lockpick); // Function ConZ.LockpickingMinigame.OnLockpickDestroyed // (Final|Native|Private) // @ game+0x241f370
};

// Class ConZ.StandardLockMinigameConfiguration
// Size: 0x88 (Inherited: 0x70)
struct UStandardLockMinigameConfiguration : ULockpickingMinigameConfiguration {
	char pad_70[0x18]; // 0x70(0x18)
};

// Class ConZ.LockData
// Size: 0xb8 (Inherited: 0x28)
struct ULockData : UObject {
	struct AMinigame* LockMinigameClass; // 0x28(0x08)
	struct ULockpickingMinigameConfiguration* LockMinigameConfigurationClass; // 0x30(0x08)
	struct UFailurePenalty* FailurePenaltyClass; // 0x38(0x08)
	bool AreFamePointsRequired; // 0x40(0x01)
	bool IgnoreLockProtection; // 0x41(0x01)
	bool CanBeForceUnlocked; // 0x42(0x01)
	char pad_43[0x1]; // 0x43(0x01)
	float ForceUnlockTime; // 0x44(0x04)
	float TotalCrowbarDamage; // 0x48(0x04)
	enum class ELockDifficulty LockDifficulty; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FText LockedMessage; // 0x50(0x18)
	struct FText LockpickMessage; // 0x68(0x18)
	int32_t NumberOfNeutralizationAttempts; // 0x80(0x04)
	int32_t NumRemainingNeutralizationAttempts; // 0x84(0x04)
	float lockHP; // 0x88(0x04)
	struct FThieverySkillExperienceAwards NoSkillExperienceAwards; // 0x8c(0x08)
	struct FThieverySkillExperienceAwards BasicSkillExperienceAwards; // 0x94(0x08)
	struct FThieverySkillExperienceAwards MediumSkillExperienceAwards; // 0x9c(0x08)
	struct FThieverySkillExperienceAwards AdvancedSkillExperienceAwards; // 0xa4(0x08)
	struct FThieverySkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xac(0x08)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class ConZ.StandardLockData
// Size: 0xe0 (Inherited: 0xb8)
struct UStandardLockData : ULockData {
	struct UStaticMesh* LockMeshOuter; // 0xb8(0x08)
	struct UStaticMesh* LockMeshInner; // 0xc0(0x08)
	float RotatingTresholdAngle; // 0xc8(0x04)
	float Duration; // 0xcc(0x04)
	float AngleTolerance; // 0xd0(0x04)
	float PickBreakingMultiplier; // 0xd4(0x04)
	int32_t PickBreakingAtNumberOfFailedPushAttempts; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class ConZ.LockBombData
// Size: 0xc0 (Inherited: 0xb8)
struct ULockBombData : ULockData {
	float Duration; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.CombinationLockData
// Size: 0xd0 (Inherited: 0xb8)
struct UCombinationLockData : ULockData {
	int32_t Combination; // 0xb8(0x04)
	int32_t LockIndex; // 0xbc(0x04)
	struct AMinigame* SetCombinationMinigameClass; // 0xc0(0x08)
	struct UMinigameConfiguration* SetCombinationMinigameConfigurationClass; // 0xc8(0x08)
};

// Class ConZ.DialLockData
// Size: 0x108 (Inherited: 0xd0)
struct UDialLockData : UCombinationLockData {
	int32_t NumberOfWheels; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct UStaticMesh* LockBodyMesh; // 0xd8(0x08)
	struct UStaticMesh* LockClampMesh; // 0xe0(0x08)
	struct TArray<struct UStaticMesh*> LockDialMeshes; // 0xe8(0x10)
	struct FVector WheelUpVector; // 0xf8(0x0c)
	char pad_104[0x4]; // 0x104(0x04)
};

// Class ConZ.UpgradeItemTag
// Size: 0x38 (Inherited: 0x30)
struct UUpgradeItemTag : UBaseItemTag {
	int32_t Price; // 0x30(0x04)
	bool AttachAsItem; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class ConZ.LockItemTag
// Size: 0x40 (Inherited: 0x38)
struct ULockItemTag : UUpgradeItemTag {
	struct ULockData* LockData; // 0x38(0x08)
};

// Class ConZ.LockProtectionTag
// Size: 0x70 (Inherited: 0x38)
struct ULockProtectionTag : UUpgradeItemTag {
	struct UParticleSystem* FailureParticles; // 0x38(0x08)
	struct UAkAudioEvent* FailureAudio; // 0x40(0x08)
	struct UParticleSystem* FailureParticlesInWorld; // 0x48(0x08)
	struct UAkAudioEvent* FailureAudioInWorld; // 0x50(0x08)
	struct FVector FailureParticlesScaleInWorld; // 0x58(0x0c)
	float _baseDamage; // 0x64(0x04)
	char pad_68[0x8]; // 0x68(0x08)

	void SetModifiedDamage(float Damage); // Function ConZ.LockProtectionTag.SetModifiedDamage // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x2423ed0
	void ResetDamage(); // Function ConZ.LockProtectionTag.ResetDamage // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x2423e30
	float GetTotalDamage(); // Function ConZ.LockProtectionTag.GetTotalDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423cb0
	float GetBaseDamage(); // Function ConZ.LockProtectionTag.GetBaseDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423b90
};

// Class ConZ.LockpickingStatics
// Size: 0x28 (Inherited: 0x28)
struct ULockpickingStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.LockpickingTensionToolItemTag
// Size: 0x70 (Inherited: 0x30)
struct ULockpickingTensionToolItemTag : UBaseItemTag {
	struct UStaticMesh* Mesh; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct FTransform TensionToolTransform; // 0x40(0x30)
};

// Class ConZ.LockpickingWidget
// Size: 0x288 (Inherited: 0x280)
struct ULockpickingWidget : UMinigameWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void ShowInfo(); // Function ConZ.LockpickingWidget.ShowInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x2423f50
	void SetLockPickingDifficulty(enum class ELockPickingDifficulty Value); // Function ConZ.LockpickingWidget.SetLockPickingDifficulty // (Native|Event|Public|BlueprintEvent) // @ game+0x2423e50
	void OnSuccess(); // Function ConZ.LockpickingWidget.OnSuccess // (Native|Event|Public|BlueprintEvent) // @ game+0x23648c0
	void OnFailure(); // Function ConZ.LockpickingWidget.OnFailure // (Native|Event|Public|BlueprintEvent) // @ game+0x23644f0
	void HideInfo(); // Function ConZ.LockpickingWidget.HideInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x24016e0
	int32_t GetTensionToolCount(); // Function ConZ.LockpickingWidget.GetTensionToolCount // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423c80
	float GetRemainingTime(); // Function ConZ.LockpickingWidget.GetRemainingTime // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423c50
	int32_t GetLockpicksCount(); // Function ConZ.LockpickingWidget.GetLockpicksCount // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423c20
	int32_t GetFamePoints(); // Function ConZ.LockpickingWidget.GetFamePoints // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423bf0
	float GetDuration(); // Function ConZ.LockpickingWidget.GetDuration // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x2423bc0
};

// Class ConZ.LockpickItemTag
// Size: 0x40 (Inherited: 0x30)
struct ULockpickItemTag : UBaseItemTag {
	struct UStaticMesh* Mesh; // 0x30(0x08)
	float LockpickingDurability; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class ConZ.LockProtectionItem
// Size: 0x9d0 (Inherited: 0x9c0)
struct ALockProtectionItem : AEquipmentItem {
	char pad_9C0[0x8]; // 0x9c0(0x08)
	struct UBasicGameResourceSlotItemComponent* _resourceSlot; // 0x9c8(0x08)
};

// Class ConZ.MessageBox
// Size: 0x2c0 (Inherited: 0x268)
struct UMessageBox : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _message; // 0x278(0x08)
	struct UHorizontalBox* _buttonRow; // 0x280(0x08)
	struct FMargin _buttonsMargin; // 0x288(0x10)
	char pad_298[0x28]; // 0x298(0x28)
};

// Class ConZ.LogoutMessageBox
// Size: 0x2d8 (Inherited: 0x2c0)
struct ULogoutMessageBox : UMessageBox {
	char pad_2C0[0x10]; // 0x2c0(0x10)
	struct UTextBlock* _countdown; // 0x2d0(0x08)
};

// Class ConZ.MainMenu
// Size: 0x320 (Inherited: 0x268)
struct UMainMenu : UBaseMenu {
	struct UConZStandardButton* _continueButton; // 0x268(0x08)
	struct UConZStandardButton* _multiplayerButton; // 0x270(0x08)
	struct UConZStandardButton* _singleplayerButton; // 0x278(0x08)
	struct UConZStandardButton* _optionsButton; // 0x280(0x08)
	struct UConZStandardButton* _creditsButton; // 0x288(0x08)
	struct UConZStandardButton* _quitButton; // 0x290(0x08)
	struct UTextBlock* _selectedCharacter; // 0x298(0x08)
	struct UTextBlock* _gameVersionText; // 0x2a0(0x08)
	struct UTwitchDropsMainMenuButtonWidget* _twitchDropsButton; // 0x2a8(0x08)
	struct FText _createOrSelectCharacterText; // 0x2b0(0x18)
	struct FText _quitMessageBoxText; // 0x2c8(0x18)
	char pad_2E0[0x8]; // 0x2e0(0x08)
	struct FText _survivalTipLevelWelcomingMessage; // 0x2e8(0x18)
	struct FText _survivalTipLevelWelcomingMessageNote; // 0x300(0x18)
	struct UTelemetryMenu* _telemetryMenuWidgetClass; // 0x318(0x08)

	void OnSingleplayerClicked(); // Function ConZ.MainMenu.OnSingleplayerClicked // (Final|Native|Private) // @ game+0x2423e10
	void OnQuitClicked(); // Function ConZ.MainMenu.OnQuitClicked // (Final|Native|Private) // @ game+0x2423df0
	void OnOptionsClicked(); // Function ConZ.MainMenu.OnOptionsClicked // (Final|Native|Private) // @ game+0x2423dd0
	void OnMultiplayerClicked(); // Function ConZ.MainMenu.OnMultiplayerClicked // (Final|Native|Private) // @ game+0x2423db0
	void OnCreditsClicked(); // Function ConZ.MainMenu.OnCreditsClicked // (Final|Native|Private) // @ game+0x2423d00
	void OnContinueClicked(); // Function ConZ.MainMenu.OnContinueClicked // (Final|Native|Private) // @ game+0x2423ce0
};

// Class ConZ.MainMenuGameMode
// Size: 0x358 (Inherited: 0x308)
struct AMainMenuGameMode : AGameMode {
	char pad_308[0x50]; // 0x308(0x50)
};

// Class ConZ.MainMenuHUD
// Size: 0x360 (Inherited: 0x348)
struct AMainMenuHUD : AConZHUD {
	enum class EConZMenu BaseGameModeMenu; // 0x348(0x01)
	char pad_349[0x7]; // 0x349(0x07)
	struct UPrisonerCreationUIController* _prisonerCreationUIController; // 0x350(0x08)
	struct UPrisonerCreationUIController* _prisonerCreationUIControllerClass; // 0x358(0x08)
};

// Class ConZ.MenuPlayerController
// Size: 0x570 (Inherited: 0x570)
struct AMenuPlayerController : APlayerController {
};

// Class ConZ.MainMenuPlayerController
// Size: 0x590 (Inherited: 0x570)
struct AMainMenuPlayerController : AMenuPlayerController {
	struct UMaterialInstance* _droneVisionMaterialInstance; // 0x570(0x08)
	char pad_578[0x18]; // 0x578(0x18)
};

// Class ConZ.MalfunctionsContainerWidget
// Size: 0x310 (Inherited: 0x268)
struct UMalfunctionsContainerWidget : UUserWidget {
	struct FSlateColor HotkeyTextColorUnhovered; // 0x268(0x28)
	struct FSlateColor HotkeyTextColorHovered; // 0x290(0x28)
	struct UCircularMenuWidget* _malfunctionsCircularMenu; // 0x2b8(0x08)
	struct UWidgetSwitcher* _hotkeyDisplaySwitcher; // 0x2c0(0x08)
	struct UTextBlock* _twoOp_2; // 0x2c8(0x08)
	struct UTextBlock* _twoOp_3; // 0x2d0(0x08)
	struct UTextBlock* _threeOp_2; // 0x2d8(0x08)
	struct UTextBlock* _threeOp_3; // 0x2e0(0x08)
	struct UTextBlock* _threeOp_4; // 0x2e8(0x08)
	struct UTextBlock* _fourOp_2; // 0x2f0(0x08)
	struct UTextBlock* _fourOp_3; // 0x2f8(0x08)
	struct UTextBlock* _fourOp_4; // 0x300(0x08)
	struct UTextBlock* _fourOp_5; // 0x308(0x08)
};

// Class ConZ.MalfunctionWidget
// Size: 0x278 (Inherited: 0x268)
struct UMalfunctionWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UTextBlock* _descriptionWidget; // 0x270(0x08)

	void ExecuteAction(); // Function ConZ.MalfunctionWidget.ExecuteAction // (Final|Native|Public|BlueprintCallable) // @ game+0x2423b70
};

// Class ConZ.ManualEnhancedImageTextWidget
// Size: 0x278 (Inherited: 0x268)
struct UManualEnhancedImageTextWidget : UUserWidget {
	struct USizeBox* _sizeBox; // 0x268(0x08)
	struct URichTextBlock* _richTextBlock; // 0x270(0x08)
};

// Class ConZ.ManualEnhancedImageWidget
// Size: 0x278 (Inherited: 0x268)
struct UManualEnhancedImageWidget : UUserWidget {
	struct UOverlay* _imageContainer; // 0x268(0x08)
	struct UImage* _image; // 0x270(0x08)
};

// Class ConZ.ManualEntry
// Size: 0x60 (Inherited: 0x30)
struct UManualEntry : UPrimaryDataAsset {
	struct FText Title; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
};

// Class ConZ.CodexEntry
// Size: 0x78 (Inherited: 0x60)
struct UCodexEntry : UManualEntry {
	enum class ECodexCategory Category; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct TArray<struct UModularCodexEntryElementData*> Elements; // 0x68(0x10)
};

// Class ConZ.ManualPanelWidget
// Size: 0x2c0 (Inherited: 0x268)
struct UManualPanelWidget : UTabMenuPanel {
	struct UTabContainer* _tabContainer; // 0x268(0x08)
	struct UWidgetSwitcher* _leftPanelSwitcher; // 0x270(0x08)
	struct UWidgetSwitcher* _rightPanelSwitcher; // 0x278(0x08)
	struct UCodexEntriesPanelWidget* _codexEntriesLeftPanel; // 0x280(0x08)
	struct UCodexEntryDetailsPanelWidget* _codexEntryDetailsRightPanel; // 0x288(0x08)
	struct UTaskEntriesPanelWidget* _taskEntriesLeftPanel; // 0x290(0x08)
	struct UTaskEntryDetailsPanelWidget* _taskEntryDetailsRightPanel; // 0x298(0x08)
	struct USizeBox* _rightPanelSizeBox; // 0x2a0(0x08)
	char pad_2A8[0x18]; // 0x2a8(0x18)
};

// Class ConZ.ManualStatics
// Size: 0x28 (Inherited: 0x28)
struct UManualStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ManualUIController
// Size: 0x88 (Inherited: 0x28)
struct UManualUIController : UObject {
	char pad_28[0x48]; // 0x28(0x48)
	struct TArray<struct UCodexEntry*> _codexEntries; // 0x70(0x10)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class ConZ.VehicleMarkersData
// Size: 0x38 (Inherited: 0x28)
struct UVehicleMarkersData : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.VehicleMarkersRequest
// Size: 0x28 (Inherited: 0x28)
struct UVehicleMarkersRequest : UPlayerRpcChannelServerRequest {
};

// Class ConZ.VehicleMarkersResponse
// Size: 0x30 (Inherited: 0x28)
struct UVehicleMarkersResponse : UPlayerRpcChannelServerResponse {
	struct UVehicleMarkersData* _payload; // 0x28(0x08)
};

// Class ConZ.MasterMenu
// Size: 0x358 (Inherited: 0x268)
struct UMasterMenu : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UWidgetSwitcher* _menuSwitcher; // 0x298(0x08)
	struct TMap<enum class EConZMenu, struct UBaseMenu*> _menuClasses; // 0x2a0(0x50)
	enum class EConZMenu _menuToPreview; // 0x2f0(0x01)
	char pad_2F1[0x67]; // 0x2f1(0x67)
};

// Class ConZ.MasterWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UMasterWidget : UUserWidget {
	struct UWidgetSwitcher* _hudMenuSwitcher; // 0x268(0x08)
	struct UUserWidget* _hud; // 0x270(0x08)
	struct UMasterMenu* _masterMenu; // 0x278(0x08)
	struct UWidgetSwitcher* _messageBoxSwitcher; // 0x280(0x08)
	struct UOverlay* _messageBoxOverlay; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)
};

// Class ConZ.MasterWidgetMainMenu
// Size: 0x2a8 (Inherited: 0x2a0)
struct UMasterWidgetMainMenu : UMasterWidget {
	struct UImage* _droneModeIndicator; // 0x2a0(0x08)
};

// Class ConZ.MathStatics
// Size: 0x28 (Inherited: 0x28)
struct UMathStatics : UBlueprintFunctionLibrary {

	struct FRotator NormalizeRotator(struct FRotator& Rotator); // Function ConZ.MathStatics.NormalizeRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x242a1e0
	bool LineBoxIntersection(struct FVector& HitLocation, struct FBox& Box, struct FVector& Start, struct FVector& End, struct FVector& startToEnd); // Function ConZ.MathStatics.LineBoxIntersection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2429f60
	bool IsPointWithinCircle(struct FVector2D Point, struct FVector2D circleCenter, float circleRadius); // Function ConZ.MathStatics.IsPointWithinCircle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429e60
	struct FVector2D GetRandomPointWithinTwoCircles(struct FVector2D centerA, float radiusA, struct FVector2D centerB, float radiusB); // Function ConZ.MathStatics.GetRandomPointWithinTwoCircles // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429cd0
	struct FVector GetRandomPointWithinOrientedBox(struct FBox Box, struct FTransform boxTransform); // Function ConZ.MathStatics.GetRandomPointWithinOrientedBox // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429b50
	struct FVector2D GetRandomPointWithinEllipse(struct FVector2D Center, float Radius1, float radius2); // Function ConZ.MathStatics.GetRandomPointWithinEllipse // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429a30
	struct FVector2D GetRandomPointWithinDonutCone(struct FVector2D Center, struct FVector forwardVector, float halfAngle, float radiusLarger, float radiusSmaller); // Function ConZ.MathStatics.GetRandomPointWithinDonutCone // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429850
	struct FVector2D GetRandomPointWithinDonut(struct FVector2D Center, float radiusLarger, float radiusSmaller); // Function ConZ.MathStatics.GetRandomPointWithinDonut // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429730
	struct FVector2D GetRandomPointWithinCircle(struct FVector2D Center, float Radius); // Function ConZ.MathStatics.GetRandomPointWithinCircle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429660
	float GetCircleYForX(float X, struct FVector2D Center, float Radius, bool Up); // Function ConZ.MathStatics.GetCircleYForX // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2429510
	bool AreCirclesIntersecting(struct FVector2D centerA, float radiusA, struct FVector2D centerB, float radiusB, bool onlyEdge); // Function ConZ.MathStatics.AreCirclesIntersecting // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x24291d0
	bool AreBoxAndSphereIntersecting(struct FBox Box, struct FTransform boxTransform, struct FVector sphereCenter, float SphereRadius); // Function ConZ.MathStatics.AreBoxAndSphereIntersecting // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2428ff0
};

// Class ConZ.Mechanic
// Size: 0xa60 (Inherited: 0x9d0)
struct AMechanic : ATrader {
	struct UMechanicCommonData* _commonData; // 0x9c8(0x08)
	float _clientUpdatePeriod; // 0x9d0(0x04)
	int32_t _clientUpdateMaxSize; // 0x9d4(0x04)
	char pad_9E0[0x80]; // 0x9e0(0x80)
};

// Class ConZ.MechanicCommonData
// Size: 0xd0 (Inherited: 0x30)
struct UMechanicCommonData : UDataAsset {
	struct TMap<struct TSoftClassPtr<UObject>, struct FVehicleAttachmentAssociatedTradeables> VehicleAttachmentAssociatedTradeablesMap; // 0x30(0x50)
	struct TMap<struct FSoftObjectPath, struct FSoftObjectPath> VehicleAttachmentToTradeableInStockClassPathRedirectors; // 0x80(0x50)
};

// Class ConZ.MechanicInstallationService
// Size: 0x38 (Inherited: 0x38)
struct UMechanicInstallationService : UTraderService {
};

// Class ConZ.MechanicRepairService
// Size: 0x38 (Inherited: 0x38)
struct UMechanicRepairService : UTraderService {
};

// Class ConZ.MechanoidsManager
// Size: 0x290 (Inherited: 0x220)
struct AMechanoidsManager : AActor {
	char pad_220[0x20]; // 0x220(0x20)
	struct ADrone* _droneSpawnClass; // 0x240(0x08)
	float _droneSpawnDistance; // 0x248(0x04)
	float _droneSpawnHeight; // 0x24c(0x04)
	float _droneCheckForNearbyPlayerDistance; // 0x250(0x04)
	struct FDroneVisitTimeData _droneInitialVisitTime; // 0x254(0x08)
	float _droneVisitClusterRadius; // 0x25c(0x04)
	float _weightPerSightingMode[0x3]; // 0x260(0x0c)
	struct FDroneVisitTimeData _droneVisitTimeDataPerSightingMode[0x3]; // 0x26c(0x18)
	char pad_284[0xc]; // 0x284(0x0c)

	void Drone_OnDestroyed(struct AActor* sender); // Function ConZ.MechanoidsManager.Drone_OnDestroyed // (Final|Native|Private) // @ game+0x23cdb90
};

// Class ConZ.MedicalItemTag
// Size: 0x30 (Inherited: 0x30)
struct UMedicalItemTag : UBaseItemTag {
};

// Class ConZ.MedicalService
// Size: 0x38 (Inherited: 0x38)
struct UMedicalService : UTraderService {
};

// Class ConZ.MedicalSkill
// Size: 0xd8 (Inherited: 0xb0)
struct UMedicalSkill : UIntelligenceSkill {
	struct FMedicalSkillParametersPerSkillLevel _noSkillParameters; // 0xb0(0x08)
	struct FMedicalSkillParametersPerSkillLevel _basicParameters; // 0xb8(0x08)
	struct FMedicalSkillParametersPerSkillLevel _mediumParameters; // 0xc0(0x08)
	struct FMedicalSkillParametersPerSkillLevel _advancedParameters; // 0xc8(0x08)
	struct FMedicalSkillParametersPerSkillLevel _aboveAdvancedParameters; // 0xd0(0x08)
};

// Class ConZ.MedicationItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct AMedicationItem : AItem {
	enum class EMedicationUsage Usage; // 0x9a8(0x01)
	enum class EMedicationType Type; // 0x9a9(0x01)
	float DailyDoses; // 0x9ac(0x04)
	float TimeToAbsorbSeconds; // 0x9b0(0x04)
	float EffectTimeMultiplier; // 0x9b4(0x04)
	float ReuseEffectTimeIncrease; // 0x9b8(0x04)
	float MaxEffectTime; // 0x9bc(0x04)
	enum class EMedicationRepeatedAbuseReaction RepeatedAbuseReaction; // 0x9c0(0x01)
	char pad_9C7[0x9]; // 0x9c7(0x09)
};

// Class ConZ.MeleeAttackCollisionCapsule
// Size: 0x490 (Inherited: 0x480)
struct UMeleeAttackCollisionCapsule : UCapsuleComponent {
	struct FGameplayTag _attachment; // 0x478(0x08)
	struct FDataTableRowHandle _weaponDescRef; // 0x480(0x10)
};

// Class ConZ.MeleeCombatComponent
// Size: 0x1b8 (Inherited: 0xb0)
struct UMeleeCombatComponent : UActorComponent {
	char pad_B0[0x108]; // 0xb0(0x108)

	void Server_StartMeleeAttack(struct FMeleeAction action); // Function ConZ.MeleeCombatComponent.Server_StartMeleeAttack // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x242a450
	void Server_EnablePendingBlockOrDodge(bool Value); // Function ConZ.MeleeCombatComponent.Server_EnablePendingBlockOrDodge // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x242a3c0
	void Server_Dodge(struct FMeleeAction action); // Function ConZ.MeleeCombatComponent.Server_Dodge // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x242a330
	void NetMulticast_ExecuteMeleeAction(struct FMeleeAction action); // Function ConZ.MeleeCombatComponent.NetMulticast_ExecuteMeleeAction // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x242a150
	bool IsHoldingBlock(); // Function ConZ.MeleeCombatComponent.IsHoldingBlock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2429e30
};

// Class ConZ.MeleeDetectHitCollisionCapsule
// Size: 0x480 (Inherited: 0x480)
struct UMeleeDetectHitCollisionCapsule : UCapsuleComponent {
	enum class EDetectHitCollisionType detectHitCollisionType; // 0x478(0x01)
};

// Class ConZ.MeleeInterface
// Size: 0x28 (Inherited: 0x28)
struct UMeleeInterface : UInterface {

	void OnBeingAttackedByMelee(struct FAttackedByMeleeData& Data); // Function ConZ.MeleeInterface.OnBeingAttackedByMelee // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x242a280
	bool CheckMeleeAttackCapsuleCollision(struct FCheckMeleeAttackCapsuleCollisionData& Data); // Function ConZ.MeleeInterface.CheckMeleeAttackCapsuleCollision // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x24293c0
	bool CanHoldBlock(); // Function ConZ.MeleeInterface.CanHoldBlock // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2429390
	bool CanBeAttackedByMelee(); // Function ConZ.MeleeInterface.CanBeAttackedByMelee // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2429360
};

// Class ConZ.MeleeSkillAnimationsPreset
// Size: 0x4c8 (Inherited: 0x30)
struct UMeleeSkillAnimationsPreset : UDataAsset {
	struct FMeleeSkillAnimations NoSkillAnimations; // 0x30(0x98)
	struct FMeleeSkillAnimations BasicSkillAnimations; // 0xc8(0x98)
	struct FMeleeSkillAnimations MediumSkillAnimations; // 0x160(0x98)
	struct FMeleeSkillAnimations AdvancedSkillAnimations; // 0x1f8(0x98)
	struct FMeleeSkillParametersPerSkillLevel NoSkillParameters; // 0x290(0x88)
	struct FMeleeSkillParametersPerSkillLevel BasicSkillParameters; // 0x318(0x88)
	struct FMeleeSkillParametersPerSkillLevel MediumSkillParameters; // 0x3a0(0x88)
	struct FMeleeSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x428(0x88)
	float NoSkillDamageMultiplier; // 0x4b0(0x04)
	float BasicSkillDamageMultiplier; // 0x4b4(0x04)
	float MediumSkillDamageMultiplier; // 0x4b8(0x04)
	float AdvancedSkillDamageMultiplier; // 0x4bc(0x04)
	float AboveAdvancedSkillDamageMultiplier; // 0x4c0(0x04)
	char pad_4C4[0x4]; // 0x4c4(0x04)
};

// Class ConZ.MeleeWeaponItemTag
// Size: 0x38 (Inherited: 0x30)
struct UMeleeWeaponItemTag : UBaseItemTag {
	float CombatAnimationPlayRateModifier; // 0x30(0x04)
	float StrengthBelowWhichCombatPerformanceBeginsToDrop; // 0x34(0x04)
};

// Class ConZ.MeleeWeaponsSkill
// Size: 0x108 (Inherited: 0x108)
struct UMeleeWeaponsSkill : UMeleeSkill {
};

// Class ConZ.MenuButton
// Size: 0x420 (Inherited: 0x268)
struct UMenuButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	bool PreviewSelectedState; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct UImage* _backgroundFocusImage; // 0x2c0(0x08)
	struct UTextBlock* _text; // 0x2c8(0x08)
	struct USizeBox* _sizeBox; // 0x2d0(0x08)
	struct FText _initialTitle; // 0x2d8(0x18)
	struct FTabTextStyle _selectedTextStyle; // 0x2f0(0x98)
	struct FTabTextStyle _deselectedTextStyle; // 0x388(0x98)
};

// Class ConZ.MenuCameraController
// Size: 0x368 (Inherited: 0x220)
struct AMenuCameraController : AActor {
	struct ACineCameraActor* _camera; // 0x220(0x08)
	struct USplineComponent* _positionSpline; // 0x228(0x08)
	struct USplineComponent* _viewTargetSpline; // 0x230(0x08)
	struct FVector2D _mouseBasedRotationIntensity; // 0x238(0x08)
	struct FRuntimeFloatCurve _positionWeightCurve; // 0x240(0x88)
	struct FRuntimeFloatCurve _viewTargetWeightCurve; // 0x2c8(0x88)
	float _interpolationSpeed; // 0x350(0x04)
	float _mouseTrackingSpeed; // 0x354(0x04)
	char pad_358[0x10]; // 0x358(0x10)
};

// Class ConZ.MenuHelpers
// Size: 0x68 (Inherited: 0x30)
struct UMenuHelpers : UDataAsset {
	struct UUserWidget* MainMenuClass; // 0x30(0x08)
	struct UUserWidget* ServerBrowserClass; // 0x38(0x08)
	struct UUserWidget* OptionsClass; // 0x40(0x08)
	struct UUserWidget* AdvancedOptionsClass; // 0x48(0x08)
	struct UUserWidget* CharacterCreationClass; // 0x50(0x08)
	struct UUserWidget* CharacterSelectionClass; // 0x58(0x08)
	struct UUserWidget* CharacterCreationSecondIterationClass; // 0x60(0x08)
};

// Class ConZ.MeshHitZones
// Size: 0xd0 (Inherited: 0xb0)
struct UMeshHitZones : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct UMaterialInterface* _deactivationMaterial; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	bool IsHitZoneActive(int32_t zoneIndex); // Function ConZ.MeshHitZones.IsHitZoneActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x242eb10
};

// Class ConZ.SceneComponentEffectsActor
// Size: 0x248 (Inherited: 0x220)
struct ASceneComponentEffectsActor : AActor {
	struct TArray<struct USceneComponent*> _registeredComponents; // 0x220(0x10)
	char pad_230[0x18]; // 0x230(0x18)
};

// Class ConZ.MeshSurfaceParticlesEffectActor
// Size: 0x298 (Inherited: 0x248)
struct AMeshSurfaceParticlesEffectActor : ASceneComponentEffectsActor {
	char pad_248[0x50]; // 0x248(0x50)
};

// Class ConZ.Message
// Size: 0x280 (Inherited: 0x268)
struct UMessage : UUserWidget {
	struct UTextBlock* _text; // 0x268(0x08)
	char pad_270[0x10]; // 0x270(0x10)
};

// Class ConZ.MessageBoxWithCheckBox
// Size: 0x2e0 (Inherited: 0x2c0)
struct UMessageBoxWithCheckBox : UMessageBox {
	char pad_2C0[0x10]; // 0x2c0(0x10)
	struct UCheckBox* _checkBox; // 0x2d0(0x08)
	struct UTextBlock* _checkBoxMessage; // 0x2d8(0x08)

	void OnCheckBoxStateChanged(bool checked); // Function ConZ.MessageBoxWithCheckBox.OnCheckBoxStateChanged // (Final|Native|Private) // @ game+0x242ebb0
};

// Class ConZ.MessageBoxWithEditableText
// Size: 0x2e8 (Inherited: 0x2c0)
struct UMessageBoxWithEditableText : UMessageBox {
	char pad_2C0[0x10]; // 0x2c0(0x10)
	struct UTextBlock* _noteMessage; // 0x2d0(0x08)
	struct UEditableText* _editableText; // 0x2d8(0x08)
	struct UTextBlock* _warningMessage; // 0x2e0(0x08)

	void OnEditableTextCommitted(struct FText& committedText, enum class ETextCommit Type); // Function ConZ.MessageBoxWithEditableText.OnEditableTextCommitted // (Final|Native|Private|HasOutParms) // @ game+0x242ec40
};

// Class ConZ.MessageBoxWithListEntry
// Size: 0x270 (Inherited: 0x268)
struct UMessageBoxWithListEntry : UUserWidget {
	struct UTextBlock* _entry; // 0x268(0x08)
};

// Class ConZ.MessageBoxWithList
// Size: 0x2d0 (Inherited: 0x2c0)
struct UMessageBoxWithList : UMessageBox {
	struct UScrollBox* _listScrollBox; // 0x2c0(0x08)
	struct UMessageBoxWithListEntry* _listEntryClass; // 0x2c8(0x08)
};

// Class ConZ.MessageBoxWithNote
// Size: 0x2c8 (Inherited: 0x2c0)
struct UMessageBoxWithNote : UMessageBox {
	struct UTextBlock* _noteText; // 0x2c0(0x08)
};

// Class ConZ.MessageContainer
// Size: 0x278 (Inherited: 0x268)
struct UMessageContainer : UUserWidget {
	struct UVerticalBox* _messages; // 0x268(0x08)
	struct UMessage* _messageClass; // 0x270(0x08)
};

// Class ConZ.Metabolism_ICU_GraphWidget
// Size: 0x220 (Inherited: 0x1f8)
struct UMetabolism_ICU_GraphWidget : UGraph2DWidget {
	struct UCurveFloat* BaseCurve; // 0x1f8(0x08)
	float CurvePeriodBaseDuration; // 0x200(0x04)
	int32_t MinSamplesForSingleCurvePeriod; // 0x204(0x04)
	char pad_208[0x18]; // 0x208(0x18)
};

// Class ConZ.Metabolism_ICU_GraphWidget_EKG
// Size: 0x250 (Inherited: 0x220)
struct UMetabolism_ICU_GraphWidget_EKG : UMetabolism_ICU_GraphWidget {
	struct UCurveFloat* TimeStretchCurveCurve; // 0x220(0x08)
	struct UCurveFloat* HeartbeatIrregularitiesCurve; // 0x228(0x08)
	char pad_230[0x20]; // 0x230(0x20)
};

// Class ConZ.Metabolism_ICU_GraphWidget_RR
// Size: 0x228 (Inherited: 0x220)
struct UMetabolism_ICU_GraphWidget_RR : UMetabolism_ICU_GraphWidget {
	char pad_220[0x8]; // 0x220(0x08)
};

// Class ConZ.Metabolism_ICU_GraphWidget_SPO2
// Size: 0x238 (Inherited: 0x220)
struct UMetabolism_ICU_GraphWidget_SPO2 : UMetabolism_ICU_GraphWidget {
	struct UCurveFloat* TimeStretchCurveCurve; // 0x220(0x08)
	char pad_228[0x10]; // 0x228(0x10)
};

// Class ConZ.Metabolism_ICU_GraphWidget_ST
// Size: 0x240 (Inherited: 0x220)
struct UMetabolism_ICU_GraphWidget_ST : UMetabolism_ICU_GraphWidget {
	struct UCurveFloat* TimeStretchCurveCurve; // 0x220(0x08)
	char pad_228[0x18]; // 0x228(0x18)
};

// Class ConZ.Metabolism_ICU_GraphWidget_TEMP
// Size: 0x228 (Inherited: 0x220)
struct UMetabolism_ICU_GraphWidget_TEMP : UMetabolism_ICU_GraphWidget {
	char pad_220[0x8]; // 0x220(0x08)
};

// Class ConZ.Metabolism_BCU_ICU_StatsPanel
// Size: 0x290 (Inherited: 0x268)
struct UMetabolism_BCU_ICU_StatsPanel : UUserWidget {
	struct UMetabolism_ICU_EKG_Stats* Stats_EKG; // 0x268(0x08)
	struct UMetabolism_ICU_ST_Stats* Stats_ST; // 0x270(0x08)
	struct UMetabolism_ICU_SPO2_Stats* Stats_SPO2; // 0x278(0x08)
	struct UMetabolism_ICU_RR_Stats* Stats_RR; // 0x280(0x08)
	struct UMetabolism_ICU_TEMP_Stats* Stats_TEMP; // 0x288(0x08)
};

// Class ConZ.Metabolism_BCU_ICU_Monitor
// Size: 0x2a8 (Inherited: 0x268)
struct UMetabolism_BCU_ICU_Monitor : UUserWidget {
	struct UCurveFloat* TimeStretchCurveCurve; // 0x268(0x08)
	struct UCheckBox* _chbSwitchICUState; // 0x270(0x08)
	struct UWidgetSwitcher* _icu_Switcher; // 0x278(0x08)
	struct UMetabolism_BCU_ICU_StatsPanel* _icu_Collapsed; // 0x280(0x08)
	struct UMetabolism_BCU_ICU_StatsPanel* _icu_Expanded; // 0x288(0x08)
	char pad_290[0x18]; // 0x290(0x18)

	void OnICUStateChanged(bool isCollapsed); // Function ConZ.Metabolism_BCU_ICU_Monitor.OnICUStateChanged // (Final|Native|Private) // @ game+0x2432d00
};

// Class ConZ.Metabolism_ICU_Expandable_Stats
// Size: 0x288 (Inherited: 0x268)
struct UMetabolism_ICU_Expandable_Stats : UUserWidget {
	bool DisplayGraph; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct UMetabolism_ICU_GraphWidget* _graph2D; // 0x270(0x08)
	struct UImage* _graph2D_Background; // 0x278(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x280(0x08)
};

// Class ConZ.Metabolism_ICU_EKG_Stats
// Size: 0x310 (Inherited: 0x288)
struct UMetabolism_ICU_EKG_Stats : UMetabolism_ICU_Expandable_Stats {
	struct UTextBlock* _heartPulseBPM; // 0x288(0x08)
	struct UTextBlock* _ekg; // 0x290(0x08)
	struct UTextBlock* _stPlus; // 0x298(0x08)
	struct UTextBlock* _bpm; // 0x2a0(0x08)
	struct UTextBlock* _miliVolts; // 0x2a8(0x08)
	struct FText _ekgDescription; // 0x2b0(0x18)
	struct FText _stPlusDescription; // 0x2c8(0x18)
	struct FText _bpmDescription; // 0x2e0(0x18)
	struct FText _miliVoltsDescription; // 0x2f8(0x18)
};

// Class ConZ.Metabolism_ICU_ST_Stats
// Size: 0x318 (Inherited: 0x288)
struct UMetabolism_ICU_ST_Stats : UMetabolism_ICU_Expandable_Stats {
	struct UTextBlock* _bloodPressure_mmHg; // 0x288(0x08)
	struct UTextBlock* _bloodPressure_kPa; // 0x290(0x08)
	struct UTextBlock* _st; // 0x298(0x08)
	struct UTextBlock* _nibp; // 0x2a0(0x08)
	struct UTextBlock* _mmHg; // 0x2a8(0x08)
	struct UTextBlock* _kPa; // 0x2b0(0x08)
	struct FText _stDescription; // 0x2b8(0x18)
	struct FText _nibpDescription; // 0x2d0(0x18)
	struct FText _mmHgDescription; // 0x2e8(0x18)
	struct FText _kPaDescription; // 0x300(0x18)
};

// Class ConZ.Metabolism_ICU_SPO2_Stats
// Size: 0x2c0 (Inherited: 0x288)
struct UMetabolism_ICU_SPO2_Stats : UMetabolism_ICU_Expandable_Stats {
	struct UTextBlock* _spo2MinMax; // 0x288(0x08)
	struct UTextBlock* _spo2TextValue; // 0x290(0x08)
	struct UProgressBar* _spo2ProgBar; // 0x298(0x08)
	struct URichTextBlock* _spo2; // 0x2a0(0x08)
	struct FText _spo2Description; // 0x2a8(0x18)
};

// Class ConZ.Metabolism_ICU_RR_Stats
// Size: 0x2e0 (Inherited: 0x288)
struct UMetabolism_ICU_RR_Stats : UMetabolism_ICU_Expandable_Stats {
	struct UTextBlock* _rrMinMax; // 0x288(0x08)
	struct UTextBlock* _rrTextValue; // 0x290(0x08)
	struct URichTextBlock* _rr; // 0x298(0x08)
	struct URichTextBlock* _co2; // 0x2a0(0x08)
	struct FText _rrDescription; // 0x2a8(0x18)
	struct FText _co2Description; // 0x2c0(0x18)
	char pad_2D8[0x8]; // 0x2d8(0x08)
};

// Class ConZ.Metabolism_ICU_TEMP_Stats
// Size: 0x318 (Inherited: 0x288)
struct UMetabolism_ICU_TEMP_Stats : UMetabolism_ICU_Expandable_Stats {
	struct UTextBlock* _tempMinMax; // 0x288(0x08)
	struct UTextBlock* _tempDeviation; // 0x290(0x08)
	struct UTextBlock* _temp; // 0x298(0x08)
	struct UTextBlock* _td; // 0x2a0(0x08)
	struct UTextBlock* _tempHalf; // 0x2a8(0x08)
	struct UTextBlock* _degreesCelsius; // 0x2b0(0x08)
	struct FText _tempDescription; // 0x2b8(0x18)
	struct FText _tempDeviationDescription; // 0x2d0(0x18)
	struct FText _tempHalfDescription; // 0x2e8(0x18)
	struct FText _degreesCelsiusDescription; // 0x300(0x18)
};

// Class ConZ.MetabolismAdvancedProgressBar
// Size: 0x4c0 (Inherited: 0x268)
struct UMetabolismAdvancedProgressBar : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct URetainerBox* _progressBarEffect; // 0x280(0x08)
	struct UScrollingSizeBox* _titleScrollingBox; // 0x288(0x08)
	struct UTextBlock* _titleText; // 0x290(0x08)
	struct UTextBlock* _valueText; // 0x298(0x08)
	struct USizeBox* _apbSize; // 0x2a0(0x08)
	struct UImage* _progressBarBackground; // 0x2a8(0x08)
	struct FText _defaultValue; // 0x2b0(0x18)
	struct FMetabolismAPBFontStyle _fontStyle; // 0x2c8(0x48)
	struct FMargin _progressBarPadding; // 0x310(0x10)
	struct FVector2D _size; // 0x320(0x08)
	struct FSlateBrush _backgroundImageBrush; // 0x328(0x88)
	struct FDataTableRowHandle _normalBackgroundColor; // 0x3b0(0x10)
	struct FDataTableRowHandle _normalForegroundColor; // 0x3c0(0x10)
	struct FDataTableRowHandle _normalTextColorEmpty; // 0x3d0(0x10)
	struct FDataTableRowHandle _normalTextColorFilled; // 0x3e0(0x10)
	struct FDataTableRowHandle _alertedBackgroundColor; // 0x3f0(0x10)
	struct FDataTableRowHandle _alertedForegroundColor; // 0x400(0x10)
	struct FDataTableRowHandle _alertedTextColorEmpty; // 0x410(0x10)
	struct FDataTableRowHandle _alertedTextColorFilled; // 0x420(0x10)
	struct FDataTableRowHandle _badBackgroundColor; // 0x430(0x10)
	struct FDataTableRowHandle _badForegroundColor; // 0x440(0x10)
	struct FDataTableRowHandle _badTextColorEmpty; // 0x450(0x10)
	struct FDataTableRowHandle _badTextColorFilled; // 0x460(0x10)
	struct FDataTableRowHandle _goodBackgroundColor; // 0x470(0x10)
	struct FDataTableRowHandle _goodForegroundColor; // 0x480(0x10)
	struct FDataTableRowHandle _goodTextColorEmpty; // 0x490(0x10)
	struct FDataTableRowHandle _goodTextColorFilled; // 0x4a0(0x10)
	char pad_4B0[0x10]; // 0x4b0(0x10)
};

// Class ConZ.MetabolismBasicInfoPanel
// Size: 0x2b0 (Inherited: 0x268)
struct UMetabolismBasicInfoPanel : UUserWidget {
	struct UMetabolismCurrentStatLight* _stat_Age; // 0x268(0x08)
	struct UMetabolismCurrentStatLight* _stat_Teeth; // 0x270(0x08)
	struct UMetabolismCurrentStatLight* _stat_Lifetime; // 0x278(0x08)
	struct UMetabolismCurrentStatLight* _stat_BloodType; // 0x280(0x08)
	struct UMetabolismCurrentStatLight* _stat_Weight; // 0x288(0x08)
	struct UMetabolismCurrentStatLight* _stat_BloodVolume; // 0x290(0x08)
	struct UMetabolismCurrentStatLight* _stat_Health; // 0x298(0x08)
	struct UMetabolismCurrentStatLight* _stat_Temperature; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)
};

// Class ConZ.MetabolismBodyEffectProgressBar
// Size: 0x368 (Inherited: 0x290)
struct UMetabolismBodyEffectProgressBar : UConZUserWidget {
	char pad_290[0x30]; // 0x290(0x30)
	struct UMetabolismAdvancedProgressBar* _apb; // 0x2c0(0x08)
	struct UWidget* _lifeThreateningSymbol; // 0x2c8(0x08)
	struct UImage* _infectedSymbol; // 0x2d0(0x08)
	struct UImage* _circularProgressBar; // 0x2d8(0x08)
	struct UCheckBox* _interactionButton; // 0x2e0(0x08)
	struct FDataTableRowHandle _circularProgressBarColorFront; // 0x2e8(0x10)
	struct FDataTableRowHandle _circularProgressBarColorBack; // 0x2f8(0x10)
	float _hoveredOpacity; // 0x308(0x04)
	float _unhoveredOpacity; // 0x30c(0x04)
	float _otherIsSelectedUnhoveredOpacity; // 0x310(0x04)
	float _otherIsSelectedHoveredOpacity; // 0x314(0x04)
	float _infectedOpacity; // 0x318(0x04)
	char pad_31C[0x4c]; // 0x31c(0x4c)

	void InteractionButtonClicked(bool IsChecked); // Function ConZ.MetabolismBodyEffectProgressBar.InteractionButtonClicked // (Final|Native|Private) // @ game+0x2432b30
	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismBodyEffectProgressBar.GetToolTipWidget // (Final|Native|Private) // @ game+0x2432b00
};

// Class ConZ.MetabolismBodyOverviewPanel
// Size: 0x598 (Inherited: 0x268)
struct UMetabolismBodyOverviewPanel : UUserWidget {
	struct UScrollBox* _symptomsScrollBox; // 0x268(0x08)
	struct UMetabolismHumanBodyPanel* _humanBodyPanel; // 0x270(0x08)
	struct URichTextBlock* _symptomsBreadcrumb; // 0x278(0x08)
	struct UMetabolismTissueGroupCheckbox* _checkboxMuscles; // 0x280(0x08)
	struct UMetabolismTissueGroupCheckbox* _checkboxBones; // 0x288(0x08)
	struct UMetabolismTissueGroupCheckbox* _checkboxOrgans; // 0x290(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Hitpoints; // 0x298(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Blood; // 0x2a0(0x08)
	struct UOverlay* _treatmentMainOverlay; // 0x2a8(0x08)
	struct UButton* _clearSelectionButton; // 0x2b0(0x08)
	struct UOverlay* _selectedItemsOverlay; // 0x2b8(0x08)
	struct UOverlay* _itemSelectionReminderOverlay; // 0x2c0(0x08)
	struct UMetabolismLightItemDisplayPanel* _selectedItemsPanel; // 0x2c8(0x08)
	struct UMetabolismBodyEffectProgressBar* _activeConditionProgressBar; // 0x2d0(0x08)
	struct UPrimaryButton* _treatButton; // 0x2d8(0x08)
	struct FText _treatTooltipText; // 0x2e0(0x18)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2f8(0x08)
	struct UMetabolismSymptomTitle* _symptomWidgetClass; // 0x300(0x08)
	struct FMetabolismRadialProgressBarColorScheme _lowHPColorScheme; // 0x308(0x80)
	struct FMetabolismRadialProgressBarColorScheme _midHPColorScheme; // 0x388(0x80)
	struct FMetabolismRadialProgressBarColorScheme _highHPColorScheme; // 0x408(0x80)
	struct FMetabolismRadialProgressBarColorScheme _lowBloodOxygenationColorScheme; // 0x488(0x80)
	struct FMetabolismRadialProgressBarColorScheme _highBloodOxygenationColorScheme; // 0x508(0x80)
	char pad_588[0x10]; // 0x588(0x10)

	void OnTreat(); // Function ConZ.MetabolismBodyOverviewPanel.OnTreat // (Final|Native|Private) // @ game+0x2432db0
	void OnClearSelection(); // Function ConZ.MetabolismBodyOverviewPanel.OnClearSelection // (Final|Native|Private) // @ game+0x2432c00
};

// Class ConZ.MetabolismBodyReservesPanel
// Size: 0x280 (Inherited: 0x268)
struct UMetabolismBodyReservesPanel : UUserWidget {
	struct UMetabolismRadialProgressBar* _rpb_Muscle; // 0x268(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Fat; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
};

// Class ConZ.MetabolismBodyStatsPanel
// Size: 0x2e0 (Inherited: 0x268)
struct UMetabolismBodyStatsPanel : UUserWidget {
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Protein; // 0x268(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Carbs; // 0x270(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Fat; // 0x278(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Minerals; // 0x280(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Vitamins; // 0x288(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Water; // 0x290(0x08)
	struct UMetabolismTitleAndAPB* _tapb_NutrientAbsorption_Alcohol; // 0x298(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Bones; // 0x2a0(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Blood; // 0x2a8(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Intestines; // 0x2b0(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Skin; // 0x2b8(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Organs; // 0x2c0(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Fat; // 0x2c8(0x08)
	struct UMetabolismTitleAndAPB* _tapb_BodyMassDistribution_Muscle; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)
};

// Class ConZ.MetabolismCurrentStatDark
// Size: 0x2e8 (Inherited: 0x268)
struct UMetabolismCurrentStatDark : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UImage* _titleBackground; // 0x280(0x08)
	struct UTextBlock* _title; // 0x288(0x08)
	struct UImage* _valueBackground; // 0x290(0x08)
	struct UTextBlock* _value; // 0x298(0x08)
	struct FDataTableRowHandle _titleBackgroundColor; // 0x2a0(0x10)
	struct FDataTableRowHandle _titleForegroundColor; // 0x2b0(0x10)
	struct FDataTableRowHandle _valueBackgroundColor; // 0x2c0(0x10)
	struct FDataTableRowHandle _valueForegroundColor; // 0x2d0(0x10)
	char pad_2E0[0x8]; // 0x2e0(0x08)
};

// Class ConZ.MetabolismCurrentStatLight
// Size: 0x2c0 (Inherited: 0x268)
struct UMetabolismCurrentStatLight : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UImage* _valueBackground; // 0x280(0x08)
	struct UTextBlock* _title; // 0x288(0x08)
	struct URichTextBlock* _value; // 0x290(0x08)
	struct FDataTableRowHandle _normalBackgroundColor; // 0x298(0x10)
	struct FDataTableRowHandle _alertedBackgroundColor; // 0x2a8(0x10)
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class ConZ.MetabolismDigestionPanel
// Size: 0x2a0 (Inherited: 0x268)
struct UMetabolismDigestionPanel : UUserWidget {
	struct UUserWidget* FoodWidgetClass; // 0x268(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Stomach; // 0x270(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Intestine; // 0x278(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Colon; // 0x280(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Bladder; // 0x288(0x08)
	struct UWrapBox* _foods; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.MetabolismHealthPanel
// Size: 0x2d8 (Inherited: 0x268)
struct UMetabolismHealthPanel : UTabMenuPanel {
	struct UMetabolism_BCU_ICU_Monitor* _icuMonitor; // 0x268(0x08)
	struct UMetabolismBodyOverviewPanel* _bodyOverviewPanel; // 0x270(0x08)
	struct UMetabolismTreatmentPanel* _treatmentPanel; // 0x278(0x08)
	struct UButton* _resetHealthPanelToSelf; // 0x280(0x08)
	struct UPanelWidget* _healthPanelNormal; // 0x288(0x08)
	struct UPanelWidget* _healthPanelOutOfRange; // 0x290(0x08)
	struct UWidgetSwitcher* _healthPanelSwitcher; // 0x298(0x08)
	struct UTextBlock* _patientName; // 0x2a0(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2a8(0x08)
	char pad_2B0[0x28]; // 0x2b0(0x28)

	void OnResetHealthPanelToSelf(); // Function ConZ.MetabolismHealthPanel.OnResetHealthPanelToSelf // (Final|Native|Private) // @ game+0x2432d90
};

// Class ConZ.MetabolismHumanBodyPanel
// Size: 0x700 (Inherited: 0x268)
struct UMetabolismHumanBodyPanel : UUserWidget {
	struct FLinearColor ColdBodyColor; // 0x268(0x10)
	struct FLinearColor HotBodyColor; // 0x278(0x10)
	float BodyTemperaturePreview; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UImage* _img_BodyGlow_Male; // 0x290(0x08)
	struct UImage* _img_BodyScan_Male; // 0x298(0x08)
	struct UImage* _img_BodyGlow_Female; // 0x2a0(0x08)
	struct UImage* _img_BodyScan_Female; // 0x2a8(0x08)
	struct UImage* _img_Head_Male; // 0x2b0(0x08)
	struct UImage* _img_Ear_Left_Male; // 0x2b8(0x08)
	struct UImage* _img_Ear_Right_Male; // 0x2c0(0x08)
	struct UImage* _img_Neck_Male; // 0x2c8(0x08)
	struct UImage* _img_Trapezius_Male; // 0x2d0(0x08)
	struct UImage* _img_Shoulder_Left_Male; // 0x2d8(0x08)
	struct UImage* _img_Shoulder_Right_Male; // 0x2e0(0x08)
	struct UImage* _img_Chest_Male; // 0x2e8(0x08)
	struct UImage* _img_Arm_Left_Male; // 0x2f0(0x08)
	struct UImage* _img_Arm_Right_Male; // 0x2f8(0x08)
	struct UImage* _img_Forearm_Left_Male; // 0x300(0x08)
	struct UImage* _img_Forearm_Right_Male; // 0x308(0x08)
	struct UImage* _img_Hand_Left_Male; // 0x310(0x08)
	struct UImage* _img_Hand_Right_Male; // 0x318(0x08)
	struct UImage* _img_Umbilicus_Male; // 0x320(0x08)
	struct UImage* _img_Abdomen_Male; // 0x328(0x08)
	struct UImage* _img_Thigh_Left_Male; // 0x330(0x08)
	struct UImage* _img_Thigh_Right_Male; // 0x338(0x08)
	struct UImage* _img_Kneecap_Left_Male; // 0x340(0x08)
	struct UImage* _img_Kneecap_Right_Male; // 0x348(0x08)
	struct UImage* _img_Leg_Left_Male; // 0x350(0x08)
	struct UImage* _img_Leg_Right_Male; // 0x358(0x08)
	struct UImage* _img_Foot_Left_Male; // 0x360(0x08)
	struct UImage* _img_Foot_Right_Male; // 0x368(0x08)
	struct UImage* _img_Footbones_Left_Male; // 0x370(0x08)
	struct UImage* _img_Footbones_Right_Male; // 0x378(0x08)
	struct UImage* _img_Legbones_Left_Male; // 0x380(0x08)
	struct UImage* _img_Legbones_Right_Male; // 0x388(0x08)
	struct UImage* _img_Thighbone_Left_Male; // 0x390(0x08)
	struct UImage* _img_Thighbone_Right_Male; // 0x398(0x08)
	struct UImage* _img_Pelvis_Male; // 0x3a0(0x08)
	struct UImage* _img_Spine_Male; // 0x3a8(0x08)
	struct UImage* _img_Handbones_Left_Male; // 0x3b0(0x08)
	struct UImage* _img_Handbones_Right_Male; // 0x3b8(0x08)
	struct UImage* _img_Forearmbones_Left_Male; // 0x3c0(0x08)
	struct UImage* _img_Forearmbones_Right_Male; // 0x3c8(0x08)
	struct UImage* _img_Armbone_Left_Male; // 0x3d0(0x08)
	struct UImage* _img_Armbone_Right_Male; // 0x3d8(0x08)
	struct UImage* _img_Scapula_Left_Male; // 0x3e0(0x08)
	struct UImage* _img_Scapula_Right_Male; // 0x3e8(0x08)
	struct UImage* _img_Ribcage_Male; // 0x3f0(0x08)
	struct UImage* _img_Skull_Male; // 0x3f8(0x08)
	struct UImage* _img_Head_Female; // 0x400(0x08)
	struct UImage* _img_Ear_Left_Female; // 0x408(0x08)
	struct UImage* _img_Ear_Right_Female; // 0x410(0x08)
	struct UImage* _img_Neck_Female; // 0x418(0x08)
	struct UImage* _img_Trapezius_Female; // 0x420(0x08)
	struct UImage* _img_Shoulder_Left_Female; // 0x428(0x08)
	struct UImage* _img_Shoulder_Right_Female; // 0x430(0x08)
	struct UImage* _img_Chest_Female; // 0x438(0x08)
	struct UImage* _img_Arm_Left_Female; // 0x440(0x08)
	struct UImage* _img_Arm_Right_Female; // 0x448(0x08)
	struct UImage* _img_Forearm_Left_Female; // 0x450(0x08)
	struct UImage* _img_Forearm_Right_Female; // 0x458(0x08)
	struct UImage* _img_Hand_Left_Female; // 0x460(0x08)
	struct UImage* _img_Hand_Right_Female; // 0x468(0x08)
	struct UImage* _img_Umbilicus_Female; // 0x470(0x08)
	struct UImage* _img_Abdomen_Female; // 0x478(0x08)
	struct UImage* _img_Thigh_Left_Female; // 0x480(0x08)
	struct UImage* _img_Thigh_Right_Female; // 0x488(0x08)
	struct UImage* _img_Kneecap_Left_Female; // 0x490(0x08)
	struct UImage* _img_Kneecap_Right_Female; // 0x498(0x08)
	struct UImage* _img_Leg_Left_Female; // 0x4a0(0x08)
	struct UImage* _img_Leg_Right_Female; // 0x4a8(0x08)
	struct UImage* _img_Foot_Left_Female; // 0x4b0(0x08)
	struct UImage* _img_Foot_Right_Female; // 0x4b8(0x08)
	struct UImage* _img_Footbones_Left_Female; // 0x4c0(0x08)
	struct UImage* _img_Footbones_Right_Female; // 0x4c8(0x08)
	struct UImage* _img_Legbones_Left_Female; // 0x4d0(0x08)
	struct UImage* _img_Legbones_Right_Female; // 0x4d8(0x08)
	struct UImage* _img_Thighbone_Left_Female; // 0x4e0(0x08)
	struct UImage* _img_Thighbone_Right_Female; // 0x4e8(0x08)
	struct UImage* _img_Pelvis_Female; // 0x4f0(0x08)
	struct UImage* _img_Spine_Female; // 0x4f8(0x08)
	struct UImage* _img_Handbones_Left_Female; // 0x500(0x08)
	struct UImage* _img_Handbones_Right_Female; // 0x508(0x08)
	struct UImage* _img_Forearmbones_Left_Female; // 0x510(0x08)
	struct UImage* _img_Forearmbones_Right_Female; // 0x518(0x08)
	struct UImage* _img_Armbone_Left_Female; // 0x520(0x08)
	struct UImage* _img_Armbone_Right_Female; // 0x528(0x08)
	struct UImage* _img_Scapula_Left_Female; // 0x530(0x08)
	struct UImage* _img_Scapula_Right_Female; // 0x538(0x08)
	struct UImage* _img_Ribcage_Female; // 0x540(0x08)
	struct UImage* _img_Skull_Female; // 0x548(0x08)
	struct UImage* _img_SpinalCord; // 0x550(0x08)
	struct UImage* _img_Lungs; // 0x558(0x08)
	struct UImage* _img_RespiratorySystem; // 0x560(0x08)
	struct UImage* _img_CirculatorySystem; // 0x568(0x08)
	struct UImage* _img_Colon; // 0x570(0x08)
	struct UImage* _img_Intestine; // 0x578(0x08)
	struct UImage* _img_Bladder; // 0x580(0x08)
	struct UImage* _img_Liver; // 0x588(0x08)
	struct UImage* _img_Kidneys; // 0x590(0x08)
	struct UImage* _img_AdrenalGlands; // 0x598(0x08)
	struct UImage* _img_Gallbladder; // 0x5a0(0x08)
	struct UImage* _img_Pancreas; // 0x5a8(0x08)
	struct UImage* _img_Stomach; // 0x5b0(0x08)
	struct UImage* _img_Heart; // 0x5b8(0x08)
	struct UImage* _img_Spleen; // 0x5c0(0x08)
	struct UImage* _img_Brain; // 0x5c8(0x08)
	struct UImage* _img_Reproductive_Male; // 0x5d0(0x08)
	struct UImage* _img_Reproductive_Female; // 0x5d8(0x08)
	struct UButton* _btn_EntireBody; // 0x5e0(0x08)
	struct UButton* _btn_HeadRegion; // 0x5e8(0x08)
	struct UButton* _btn_RightLegRegion; // 0x5f0(0x08)
	struct UButton* _btn_LeftLegRegion; // 0x5f8(0x08)
	struct UButton* _btn_TorsoRegion; // 0x600(0x08)
	struct UButton* _btn_RightArmRegion; // 0x608(0x08)
	struct UButton* _btn_LeftArmRegion; // 0x610(0x08)
	struct UOverlay* _mainOverlay; // 0x618(0x08)
	struct UOverlay* _maleOverlay; // 0x620(0x08)
	struct UOverlay* _femaleOverlay; // 0x628(0x08)
	struct UOverlay* _bothOverlay; // 0x630(0x08)
	struct UWidgetAnimation* _focusBodyRegion_Head; // 0x638(0x08)
	struct UWidgetAnimation* _focusBodyRegion_Torso; // 0x640(0x08)
	struct UWidgetAnimation* _focusBodyRegion_LeftArm; // 0x648(0x08)
	struct UWidgetAnimation* _focusBodyRegion_RightArm; // 0x650(0x08)
	struct UWidgetAnimation* _focusBodyRegion_LeftLeg; // 0x658(0x08)
	struct UWidgetAnimation* _focusBodyRegion_RightLeg; // 0x660(0x08)
	struct UImage* _vignette; // 0x668(0x08)
	char pad_670[0x90]; // 0x670(0x90)

	void OnClickRegion_Torso(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Torso // (Final|Native|Private) // @ game+0x2432ce0
	void OnClickRegion_RightLeg(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightLeg // (Final|Native|Private) // @ game+0x2432cc0
	void OnClickRegion_RightArm(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_RightArm // (Final|Native|Private) // @ game+0x2432ca0
	void OnClickRegion_LeftLeg(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftLeg // (Final|Native|Private) // @ game+0x2432c80
	void OnClickRegion_LeftArm(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_LeftArm // (Final|Native|Private) // @ game+0x2432c60
	void OnClickRegion_Head(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_Head // (Final|Native|Private) // @ game+0x2432c40
	void OnClickRegion_EntireBody(); // Function ConZ.MetabolismHumanBodyPanel.OnClickRegion_EntireBody // (Final|Native|Private) // @ game+0x2432c20
	void OnAnimationFinished_EntireBody(); // Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_EntireBody // (Final|Native|Private) // @ game+0x2432be0
	void OnAnimationFinished_BodyRegion(); // Function ConZ.MetabolismHumanBodyPanel.OnAnimationFinished_BodyRegion // (Final|Native|Private) // @ game+0x2432bc0
};

// Class ConZ.MetabolismLightItemDisplayPanel
// Size: 0x2a8 (Inherited: 0x268)
struct UMetabolismLightItemDisplayPanel : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UPanelWidget* _itemDisplayContainer; // 0x280(0x08)
	struct UItemLightDisplay* _itemDisplayClass; // 0x288(0x08)
	float _interChildDistrance; // 0x290(0x04)
	char pad_294[0x14]; // 0x294(0x14)
};

// Class ConZ.MetabolismMacronutrientReserve
// Size: 0x2a0 (Inherited: 0x268)
struct UMetabolismMacronutrientReserve : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UTextBlock* _title; // 0x280(0x08)
	struct UTextBlock* _value; // 0x288(0x08)
	struct UMetabolismSegmentedProgressBar* _spb_ReservesBar; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.MetabolismMacronutrientReservesPanel
// Size: 0x2a8 (Inherited: 0x268)
struct UMetabolismMacronutrientReservesPanel : UUserWidget {
	struct UMetabolismMacronutrientReserve* _reserve_Protein; // 0x268(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_Carbs; // 0x270(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_Fat; // 0x278(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_Fiber; // 0x280(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_Sugar; // 0x288(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_SaturatedFat; // 0x290(0x08)
	struct UMetabolismMacronutrientReserve* _reserve_Alcohol; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class ConZ.MetabolismMineralsPanel
// Size: 0x2c0 (Inherited: 0x268)
struct UMetabolismMineralsPanel : UUserWidget {
	struct UMetabolismVitaminAndMineralReserve* _mineral_Ca; // 0x268(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Fe; // 0x270(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Mg; // 0x278(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_P; // 0x280(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_K; // 0x288(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Zn; // 0x290(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Cu; // 0x298(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Mn; // 0x2a0(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Se; // 0x2a8(0x08)
	struct UMetabolismVitaminAndMineralReserve* _mineral_Na; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class ConZ.MetabolismNutritionPanel
// Size: 0x280 (Inherited: 0x268)
struct UMetabolismNutritionPanel : UUserWidget {
	struct UMetabolismRadialProgressBar* _rpb_Calories; // 0x268(0x08)
	struct UMetabolismRadialProgressBar* _rpb_Water; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
};

// Class ConZ.MetabolismPerformanceDataPanel
// Size: 0x308 (Inherited: 0x268)
struct UMetabolismPerformanceDataPanel : UUserWidget {
	struct UMetabolismAdvancedProgressBar* _apb_Stamina; // 0x268(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_WeightLoad; // 0x270(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_WalkSpeed; // 0x278(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_JogSpeed; // 0x280(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_RunSpeed; // 0x288(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_HealingSpeed; // 0x290(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_BloodRecoveryRate; // 0x298(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_ImmuneSystem; // 0x2a0(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_PerformanceScore; // 0x2a8(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_StealthFactor; // 0x2b0(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_MeleeDamage; // 0x2b8(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryResting; // 0x2c0(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryIdle; // 0x2c8(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryEasy; // 0x2d0(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryDemanding; // 0x2d8(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryVeryDemanding; // 0x2e0(0x08)
	struct UMetabolismCurrentStatDark* _csd_ConsumptionRecoveryExtremelyDemanding; // 0x2e8(0x08)
	struct UMetabolismCurrentStatDark* _csd_OverloadPenaltyEnergy; // 0x2f0(0x08)
	struct UMetabolismCurrentStatDark* _csd_OverloadPenaltyWater; // 0x2f8(0x08)
	char pad_300[0x8]; // 0x300(0x08)
};

// Class ConZ.MetabolismRadialAttributeProgressBar
// Size: 0x3c8 (Inherited: 0x268)
struct UMetabolismRadialAttributeProgressBar : UUserWidget {
	struct FMetabolismRadialAttributeProgressBarColor BackgroundColor; // 0x268(0x30)
	struct FMetabolismRadialAttributeProgressBarColor BarColor; // 0x298(0x30)
	struct FMetabolismRadialAttributeProgressBarColor BarGlowColor; // 0x2c8(0x30)
	struct FMetabolismRadialAttributeProgressBarColor InnerGlowColor; // 0x2f8(0x30)
	struct FMetabolismRadialAttributeProgressBarColor OuterGlowColor; // 0x328(0x30)
	struct FMetabolismRadialAttributeProgressBarColor FontColor; // 0x358(0x30)
	enum class EDisposition PreviewState; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct UImage* _coloredBackground; // 0x390(0x08)
	struct UImage* _radialProgressBar; // 0x398(0x08)
	struct URetainerBox* _fontEffectPass1; // 0x3a0(0x08)
	struct URetainerBox* _fontEffectPass2; // 0x3a8(0x08)
	struct UTextBlock* _attributeValueTextBlock; // 0x3b0(0x08)
	char pad_3B8[0x10]; // 0x3b8(0x10)
};

// Class ConZ.MetabolismRadialProgressBar
// Size: 0x478 (Inherited: 0x268)
struct UMetabolismRadialProgressBar : UUserWidget {
	bool PreviewedAlertedState; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	float PrimaryPercentageMinDisplayedValue; // 0x26c(0x04)
	float PrimaryPercentageMaxDisplayedValue; // 0x270(0x04)
	char pad_274[0x14]; // 0x274(0x14)
	struct UScaleBox* _scaleBox; // 0x288(0x08)
	struct UImage* _coloredBackground; // 0x290(0x08)
	struct UImage* _radialProgressBar; // 0x298(0x08)
	struct URetainerBox* _fontEffectPass1; // 0x2a0(0x08)
	struct URetainerBox* _fontEffectPass2; // 0x2a8(0x08)
	struct URichTextBlock* _percentage; // 0x2b0(0x08)
	struct UTextBlock* _value; // 0x2b8(0x08)
	struct UTextBlock* _title; // 0x2c0(0x08)
	struct FMetabolismRadialProgressBarColorScheme _defaultColorScheme; // 0x2c8(0x80)
	struct FMetabolismRadialProgressBarColorScheme _alertedColorScheme; // 0x348(0x80)
	struct FMetabolismRadialProgressBarFontSettings _percentageFontSettings; // 0x3c8(0x14)
	float _widgetScale; // 0x3dc(0x04)
	bool _isTitleVisible; // 0x3e0(0x01)
	char pad_3E1[0x97]; // 0x3e1(0x97)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismRadialProgressBar.GetToolTipWidget // (Final|Native|Private) // @ game+0x2437150
};

// Class ConZ.MetabolismRightPanel
// Size: 0x2a0 (Inherited: 0x268)
struct UMetabolismRightPanel : UTabMenuPanel {
	struct UMetabolismNutritionPanel* _nutritionPanel; // 0x268(0x08)
	struct UMetabolismMacronutrientReservesPanel* _macronutrientReservesPanel; // 0x270(0x08)
	struct UMetabolismBodyReservesPanel* _bodyReservesPanel; // 0x278(0x08)
	struct UMetabolismVitaminsPanel* _vitaminsPanel; // 0x280(0x08)
	struct UMetabolismMineralsPanel* _mineralsPanel; // 0x288(0x08)
	struct UMetabolismDigestionPanel* _digestionPanel; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.MetabolismSave
// Size: 0x2c8 (Inherited: 0x28)
struct UMetabolismSave : UObject {
	float LeanBodyMass; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct TArray<struct FDigestionItemSave> DigestionItems; // 0x30(0x10)
	struct TArray<struct FForeignSubstanceSave> ForeignSubstances; // 0x40(0x10)
	struct FSubstancesData AbsorbedSubstances; // 0x50(0xd0)
	struct FSubstancesData FecesVolumeInIntestine; // 0x120(0xd0)
	struct FSubstancesData FecesVolumeInColon; // 0x1f0(0xd0)
	float UrineVolumeInBladder; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class ConZ.MetabolismSegmentedProgressBar
// Size: 0x320 (Inherited: 0x268)
struct UMetabolismSegmentedProgressBar : UUserWidget {
	struct TArray<struct FMetabolismSPBColorScheme> ColorSchemes; // 0x268(0x10)
	struct FSlateBrush BrushOverride; // 0x278(0x88)
	struct UImage* _progressBarImage; // 0x300(0x08)
	char pad_308[0x18]; // 0x308(0x18)
};

// Class ConZ.MetabolismSkillProgressBar
// Size: 0x2e0 (Inherited: 0x290)
struct UMetabolismSkillProgressBar : UConZUserWidget {
	struct TArray<struct FSlateBrush> SkillRankIcons; // 0x290(0x10)
	struct FText SkillTitle; // 0x2a0(0x18)
	char pad_2B8[0x10]; // 0x2b8(0x10)
	struct UImage* _skillRankIcon; // 0x2c8(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_SkillProgress; // 0x2d0(0x08)
	struct USkill* _skillClass; // 0x2d8(0x08)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismSkillProgressBar.GetToolTipWidget // (Final|Native|Private) // @ game+0x2437180
};

// Class ConZ.MetabolismSkillProgressionPanel
// Size: 0x2b0 (Inherited: 0x268)
struct UMetabolismSkillProgressionPanel : UUserWidget {
	struct UUserWidget* SkillProgressBarWidgetClass; // 0x268(0x08)
	struct UTabGroup* _tabRow; // 0x270(0x08)
	struct UTabButton* _tabButtonClass; // 0x278(0x08)
	struct UWidgetSwitcher* _attributeSwitcher; // 0x280(0x08)
	struct UMetabolismSkillProgressionTab* _STR_tab; // 0x288(0x08)
	struct UMetabolismSkillProgressionTab* _CON_tab; // 0x290(0x08)
	struct UMetabolismSkillProgressionTab* _DEX_tab; // 0x298(0x08)
	struct UMetabolismSkillProgressionTab* _INT_tab; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)
};

// Class ConZ.MetabolismSkillProgressionTab
// Size: 0x2a0 (Inherited: 0x268)
struct UMetabolismSkillProgressionTab : UUserWidget {
	struct UUserWidget* SkillProgressBarWidgetClass; // 0x268(0x08)
	struct UWrapBox* _skillsWrapBox; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	enum class ESkillAttribute _skillType; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct FText _skillAttributeName; // 0x288(0x18)
};

// Class ConZ.MetabolismStatics
// Size: 0x28 (Inherited: 0x28)
struct UMetabolismStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.MetabolismStatsPanel
// Size: 0x2d8 (Inherited: 0x268)
struct UMetabolismStatsPanel : UTabMenuPanel {
	struct UMetabolismRadialAttributeProgressBar* _str_progressWidget; // 0x268(0x08)
	struct UMetabolismRadialAttributeProgressBar* _con_progressWidget; // 0x270(0x08)
	struct UMetabolismRadialAttributeProgressBar* _dex_progressWidget; // 0x278(0x08)
	struct UMetabolismRadialAttributeProgressBar* _int_progressWidget; // 0x280(0x08)
	struct UMetabolismSkillProgressionPanel* _skillProgressionPanel; // 0x288(0x08)
	struct UMetabolismBasicInfoPanel* _basicInfoPanel; // 0x290(0x08)
	struct UMetabolismPerformanceDataPanel* _performanceDataPanel; // 0x298(0x08)
	struct UMetabolismBodyStatsPanel* _bodyStatsPanel; // 0x2a0(0x08)
	char pad_2A8[0x30]; // 0x2a8(0x30)
};

// Class ConZ.MetabolismSymptomTitle
// Size: 0x280 (Inherited: 0x268)
struct UMetabolismSymptomTitle : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _title; // 0x278(0x08)

	struct UWidget* GetToolTipWidget(); // Function ConZ.MetabolismSymptomTitle.GetToolTipWidget // (Final|Native|Private) // @ game+0x24371b0
};

// Class ConZ.MetabolismTissueGroupCheckbox
// Size: 0x298 (Inherited: 0x268)
struct UMetabolismTissueGroupCheckbox : UUserWidget {
	struct FText Title; // 0x268(0x18)
	bool IsCheckdByDefault; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UTextBlock* _title; // 0x288(0x08)
	struct UCheckBox* _checkBox; // 0x290(0x08)
};

// Class ConZ.MetabolismTitleAndAPB
// Size: 0x2b8 (Inherited: 0x268)
struct UMetabolismTitleAndAPB : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UTextBlock* _titleText; // 0x280(0x08)
	struct UImage* _background; // 0x288(0x08)
	struct UMetabolismAdvancedProgressBar* _apb_ValueAndProgress; // 0x290(0x08)
	struct FDataTableRowHandle _backgroundColor; // 0x298(0x10)
	struct FDataTableRowHandle _titleTextColor; // 0x2a8(0x10)
};

// Class ConZ.MetabolismTreatmentPanel
// Size: 0x2c0 (Inherited: 0x268)
struct UMetabolismTreatmentPanel : UUserWidget {
	struct UVerticalBox* _untreatedColumn; // 0x268(0x08)
	struct UVerticalBox* _stabilizationColumn; // 0x270(0x08)
	struct UVerticalBox* _recoveryColumn; // 0x278(0x08)
	struct UImage* _untreatedBackground; // 0x280(0x08)
	struct UImage* _stabilizationBackground; // 0x288(0x08)
	struct UImage* _recoveryBackground; // 0x290(0x08)
	struct UMetabolismBodyEffectProgressBar* _progressBarClass; // 0x298(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2a0(0x08)
	char pad_2A8[0x18]; // 0x2a8(0x18)
};

// Class ConZ.MetabolismVitaminAndMineralReserve
// Size: 0x2a0 (Inherited: 0x268)
struct UMetabolismVitaminAndMineralReserve : UUserWidget {
	struct FText Title; // 0x268(0x18)
	struct UTextBlock* _title; // 0x280(0x08)
	struct UTextBlock* _value; // 0x288(0x08)
	struct UMetabolismSegmentedProgressBar* _spb_ReservesBar; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.MetabolismVitaminsPanel
// Size: 0x2d8 (Inherited: 0x268)
struct UMetabolismVitaminsPanel : UUserWidget {
	struct UMetabolismVitaminAndMineralReserve* _vitamin_A; // 0x268(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B1; // 0x270(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B2; // 0x278(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B3; // 0x280(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B4; // 0x288(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B5; // 0x290(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B6; // 0x298(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B9; // 0x2a0(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_B12; // 0x2a8(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_C; // 0x2b0(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_D; // 0x2b8(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_E; // 0x2c0(0x08)
	struct UMetabolismVitaminAndMineralReserve* _vitamin_K; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class ConZ.MetalDetector
// Size: 0xa00 (Inherited: 0x9b0)
struct AMetalDetector : AItem {
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9b0(0x08)
	float _minDetectionRadius; // 0x9b8(0x04)
	float _maxDetectionRadius; // 0x9bc(0x04)
	float _updatePeriod; // 0x9c0(0x04)
	float _detectionFactor; // 0x9c4(0x04)
	struct UAkAudioEvent* _startEvent; // 0x9c8(0x08)
	struct UAkAudioEvent* _stopEvent; // 0x9d0(0x08)
	struct FName _RTPCName; // 0x9d8(0x08)
	int32_t _soundInterpolationTimeMs; // 0x9e0(0x04)
	char pad_9E4[0xc]; // 0x9e4(0x0c)
	struct FName _detectionSourceSocketName; // 0x9f0(0x08)
	char pad_9F8[0x8]; // 0x9f8(0x08)

	void SetDetectionFactor_OnRep(); // Function ConZ.MetalDetector.SetDetectionFactor_OnRep // (Final|Native|Private) // @ game+0x24373d0
	void Server_ToggleTurnedOn(); // Function ConZ.MetalDetector.Server_ToggleTurnedOn // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x237a360
	void Server_SetDetectionFactor(float newDetectionFactor); // Function ConZ.MetalDetector.Server_SetDetectionFactor // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2437340
	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.MetalDetector.OnResourceComponentDeactivated // (Final|Native|Private) // @ game+0x24372b0
	void OnResourceComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.MetalDetector.OnResourceComponentActivated // (Final|Native|Private) // @ game+0x24371e0
};

// Class ConZ.MicInputIndicator
// Size: 0x298 (Inherited: 0x268)
struct UMicInputIndicator : UUserWidget {
	struct UOverlay* RingsOverlay; // 0x268(0x08)
	char pad_270[0x28]; // 0x270(0x28)
};

// Class ConZ.Zombie2
// Size: 0xb40 (Inherited: 0x830)
struct AZombie2 : AConZCharacter {
	bool _enableBaseInteraction; // 0x830(0x01)
	char pad_831[0x7]; // 0x831(0x07)
	struct UNavigationInvokerComponent* _navigationInvokerComponent; // 0x838(0x08)
	struct UHitReactComponent* _hitReactComponent; // 0x840(0x08)
	struct UBaseInteractionComponent* _baseInteractionComponent; // 0x848(0x08)
	struct UEntityOverlapDetectionComponent* _trapOverlapDetection; // 0x850(0x08)
	struct TArray<struct FZombieMeshVariation2> _meshVariations; // 0x858(0x10)
	struct TArray<struct FZombieRelaxedStanceVariation2> _relaxedStanceVariations; // 0x868(0x10)
	struct TArray<struct FZombieCombatStanceVariation2> _combatStanceVariations; // 0x878(0x10)
	struct FZombieTurnMontageDescription _turnMontageDescriptions[0x4]; // 0x888(0xa0)
	struct TArray<struct UAnimMontage*> _intimidateMontages; // 0x928(0x10)
	struct TArray<struct UAnimMontage*> _agitatedScreamMontages; // 0x938(0x10)
	struct TArray<struct FZombieAttackDescription> _attacks; // 0x948(0x10)
	struct FGameplayTag _hitReactType; // 0x958(0x08)
	float _explosionDamageMultiplier; // 0x960(0x04)
	float _defaultRagdollHitImpulseIntensity; // 0x964(0x04)
	float _ragdollHitImpulseIntensityCollisionPointEventMultiplier; // 0x968(0x04)
	float _ragdollHitImpulseUpVectorBias; // 0x96c(0x04)
	float _ragdollExplosionHitImpulseIntensity; // 0x970(0x04)
	float _minDynamicMovementBaseSpeedForRagdoll; // 0x974(0x04)
	float _eyeViewPointOffset; // 0x978(0x04)
	struct FName _centralBone; // 0x97c(0x08)
	float _collisionDamageMultiplierPerBodyPart[0xc]; // 0x984(0x30)
	float _receivedDamageComboCooldown; // 0x9b4(0x04)
	float _receivedMeleeHitComboCooldown; // 0x9b8(0x04)
	float _inflictedMeleeHitComboCooldown; // 0x9bc(0x04)
	float _minRagdollRecoveryTimeAfterKnockout; // 0x9c0(0x04)
	float _maxRagdollRecoveryTimeAfterKnockout; // 0x9c4(0x04)
	float _minLandingImpactSpeedForDamage; // 0x9c8(0x04)
	float _landingDamagePerImpactSpeed; // 0x9cc(0x04)
	float _landingImpactSpeedForRagdoll; // 0x9d0(0x04)
	float _minRagdollRecoveryTimeAfterLanding; // 0x9d4(0x04)
	float _maxRagdollRecoveryTimeAfterLanding; // 0x9d8(0x04)
	char pad_9DC[0x4]; // 0x9dc(0x04)
	struct ULandingEffects* _landingEffects; // 0x9e0(0x08)
	bool _canEverBeSearched; // 0x9e8(0x01)
	bool _shouldGoToRagdollOnDeath; // 0x9e9(0x01)
	char pad_9EA[0x6]; // 0x9ea(0x06)
	struct UParticleSystem* _deathParticles; // 0x9f0(0x08)
	char pad_9F8[0x8]; // 0x9f8(0x08)
	struct FTransform _deathParticlesRelativeTransform; // 0xa00(0x30)
	float _corpseSearchDuration; // 0xa30(0x04)
	float _corpseMaxLifeTimeInMinutes; // 0xa34(0x04)
	float _destroyCorpseTimerInterval; // 0xa38(0x04)
	float _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse; // 0xa3c(0x04)
	uint32_t _packedZombieVariationIndices; // 0xa40(0x04)
	float _hitPoints; // 0xa44(0x04)
	char pad_A48[0x4]; // 0xa48(0x04)
	float _health; // 0xa4c(0x04)
	float _inflictedMeleeDamageMultiplier; // 0xa50(0x04)
	bool _isSearched; // 0xa54(0x01)
	char pad_A55[0x1]; // 0xa55(0x01)
	enum class EZombieStance _stance; // 0xa56(0x01)
	char pad_A57[0x1]; // 0xa57(0x01)
	struct TWeakObjectPtr<struct APawn> _foe; // 0xa58(0x08)
	char pad_A60[0x78]; // 0xa60(0x78)
	float _inflictedDamageMultiplierConfig; // 0xad8(0x04)
	enum class EBodyPart _fatalBodyPartHit; // 0xadc(0x01)
	char pad_ADD[0x3]; // 0xadd(0x03)
	float _drownDamageCycleLength; // 0xae0(0x04)
	float _drownDamagePerCycle; // 0xae4(0x04)
	char pad_AE8[0x8]; // 0xae8(0x08)
	struct TArray<struct FZombieSleepingAnimationData> _sleepingAnimationsData; // 0xaf0(0x10)
	struct TArray<struct FWindowClimbingAnimationInfo> _windowClimbingAnimations; // 0xb00(0x10)
	int32_t _sleepingAnimationIndex; // 0xb10(0x04)
	char pad_B14[0x4]; // 0xb14(0x04)
	struct TArray<struct UAnimMontage*> _doorDestructionAnimations; // 0xb18(0x10)
	float _animationDistanceToDoor; // 0xb28(0x04)
	struct FName _doorDestructionNotifyName; // 0xb2c(0x08)
	char _netUpdateFrequency[0x5]; // 0xb34(0x05)
	char pad_B39[0x7]; // 0xb39(0x07)

	float StartAttack(struct APawn* foe); // Function ConZ.Zombie2.StartAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x2549f10
	void SetStance(enum class EZombieStance Value); // Function ConZ.Zombie2.SetStance // (Final|Native|Public|BlueprintCallable) // @ game+0x2549e90
	void SetFoe(struct APawn* Value); // Function ConZ.Zombie2.SetFoe // (Final|Native|Public|BlueprintCallable) // @ game+0x2549e00
	void Server_StartAttack(int32_t attackDescriptionIndex); // Function ConZ.Zombie2.Server_StartAttack // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2549ca0
	void Server_SetStance(enum class EZombieStance Value); // Function ConZ.Zombie2.Server_SetStance // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2549c20
	void Server_PlayTurnMontage(enum class EZombieTurnMontage turnMontage, float turnAngle); // Function ConZ.Zombie2.Server_PlayTurnMontage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2549b50
	void Server_PlayMontage(struct UAnimMontage* Montage); // Function ConZ.Zombie2.Server_PlayMontage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2549ac0
	void RecoverFromRagdoll(); // Function ConZ.Zombie2.RecoverFromRagdoll // (Final|Native|Public|BlueprintCallable) // @ game+0x25499f0
	void OnRep_Stance(enum class EZombieStance oldValue); // Function ConZ.Zombie2.OnRep_Stance // (Native|Protected) // @ game+0x2549970
	void OnRep_IsSearched(bool oldValue); // Function ConZ.Zombie2.OnRep_IsSearched // (Native|Protected) // @ game+0x2454cc0
	void OnRep_Health(float oldValue); // Function ConZ.Zombie2.OnRep_Health // (Native|Protected) // @ game+0x25498e0
	void NetMulticast_StopOpenDoorAnimation(); // Function ConZ.Zombie2.NetMulticast_StopOpenDoorAnimation // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x234bb80
	void NetMulticast_StartAttack(int32_t attackDescriptionIndex); // Function ConZ.Zombie2.NetMulticast_StartAttack // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2549810
	void NetMulticast_PlayTurnMontage(enum class EZombieTurnMontage turnMontage, float turnAngle); // Function ConZ.Zombie2.NetMulticast_PlayTurnMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x2549740
	void NetMulticast_PlaySound(struct UAkAudioEvent* Sound); // Function ConZ.Zombie2.NetMulticast_PlaySound // (Net|Native|Event|NetMulticast|Public) // @ game+0x25496b0
	void NetMulticast_PlayMontage(struct UAnimMontage* Montage); // Function ConZ.Zombie2.NetMulticast_PlayMontage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2453ec0
	void NetMulticast_PlayDoorDestructionMontage(int32_t Index); // Function ConZ.Zombie2.NetMulticast_PlayDoorDestructionMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24dcd60
	void NetMulticast_HandleLanded(struct FVector impactVelocity, struct FHitResult HitResult); // Function ConZ.Zombie2.NetMulticast_HandleLanded // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x2549590
	bool IsRagdollAtRest(); // Function ConZ.Zombie2.IsRagdollAtRest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549560
	bool IsInRagdoll(); // Function ConZ.Zombie2.IsInRagdoll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549530
	bool IsAttacking(); // Function ConZ.Zombie2.IsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549500
	void GoToRagdoll(struct FZombieRagdollAutoRecovery& autoRecovery, enum class ERagdollSpawnType SpawnType, float impulseIntensity, struct FVector Location, struct FVector Direction, struct FName Bone); // Function ConZ.Zombie2.GoToRagdoll // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x25492f0
	struct UZombieSoundComponent2* GetZombieSoundComponent(); // Function ConZ.Zombie2.GetZombieSoundComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25492c0
	struct UZombieMovementComponent2* GetZombieMovement(); // Function ConZ.Zombie2.GetZombieMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549290
	enum class EZombieStance GetStance(); // Function ConZ.Zombie2.GetStance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549260
	float GetMaxHealth(); // Function ConZ.Zombie2.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549230
	struct UHitReactComponent* GetHitReactComponent(); // Function ConZ.Zombie2.GetHitReactComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2398f30
	float GetHealthRatio(); // Function ConZ.Zombie2.GetHealthRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549200
	float GetHealth(); // Function ConZ.Zombie2.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25491d0
	struct APawn* GetFoe(); // Function ConZ.Zombie2.GetFoe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25491a0
	struct FRotator GetAimOffset(); // Function ConZ.Zombie2.GetAimOffset // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549160
	bool CanStartAttack(); // Function ConZ.Zombie2.CanStartAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2549130
	void BaseInteractionComponent_OnBaseInteractionEvent(struct UBaseInteractionComponent* Component, struct FBaseInteractionEvent& BaseInteractionEvent); // Function ConZ.Zombie2.BaseInteractionComponent_OnBaseInteractionEvent // (Final|Native|Private|HasOutParms) // @ game+0x2549040
};

// Class ConZ.MiniatureZombie
// Size: 0xb40 (Inherited: 0xb40)
struct AMiniatureZombie : AZombie2 {
};

// Class ConZ.BaseMinigameAnimator
// Size: 0x28 (Inherited: 0x28)
struct UBaseMinigameAnimator : UObject {
};

// Class ConZ.ZoomMinigameAnimator
// Size: 0x58 (Inherited: 0x28)
struct UZoomMinigameAnimator : UBaseMinigameAnimator {
	char pad_28[0xc]; // 0x28(0x0c)
	struct FVector _zoomStartOffset; // 0x34(0x0c)
	struct FVector _zoomEndOffset; // 0x40(0x0c)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UCurveFloat* _zoomCurve; // 0x50(0x08)
};

// Class ConZ.FadeMinigameAnimator
// Size: 0x38 (Inherited: 0x28)
struct UFadeMinigameAnimator : UBaseMinigameAnimator {
	struct UCurveFloat* _fadeCurve; // 0x28(0x08)
	bool _shouldFlipCurve; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.MinigameValidationParams
// Size: 0x28 (Inherited: 0x28)
struct UMinigameValidationParams : UObject {
};

// Class ConZ.LockpickingMinigameValidationParams
// Size: 0x30 (Inherited: 0x28)
struct ULockpickingMinigameValidationParams : UMinigameValidationParams {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.DefusalMinigameValidationParams
// Size: 0x30 (Inherited: 0x28)
struct UDefusalMinigameValidationParams : UMinigameValidationParams {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.MiscStatics
// Size: 0x28 (Inherited: 0x28)
struct UMiscStatics : UBlueprintFunctionLibrary {

	struct FDateTime UtcToLocalDateTime(struct FDateTime utc); // Function ConZ.MiscStatics.UtcToLocalDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x243ce80
	void Test_ProcessAdminCommand(struct UObject* WorldContextObject, struct FString commandText); // Function ConZ.MiscStatics.Test_ProcessAdminCommand // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x243cdb0
	void SortSkillsByLevelAndExperience(struct TArray<struct USkill*>& Skills); // Function ConZ.MiscStatics.SortSkillsByLevelAndExperience // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x243cd10
	void SendChatLineToPlayer(struct AConZPlayerController* PlayerController, struct FString Text, enum class EChatType ChatType, bool ShouldCopyToClientClipboard); // Function ConZ.MiscStatics.SendChatLineToPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x243cbb0
	struct FSoftObjectPath ResolveObjectPathForPIE(struct TSoftObjectPtr<UObject>& Asset, struct UObject* WorldContext); // Function ConZ.MiscStatics.ResolveObjectPathForPIE // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x243ca50
	bool PasteLocationAndRotationFromClipboard(struct FVector& Location, struct FRotator& Rotation); // Function ConZ.MiscStatics.PasteLocationAndRotationFromClipboard // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243c960
	bool ParseVectorFromString(struct FString String, struct FVector& outVector); // Function ConZ.MiscStatics.ParseVectorFromString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243c870
	bool ParseTransformFromString(struct FString String, struct FTransform& Transform); // Function ConZ.MiscStatics.ParseTransformFromString // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243c740
	struct FDateTime LocalToUtcDateTime(struct FDateTime Local); // Function ConZ.MiscStatics.LocalToUtcDateTime // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x243c500
	bool IsUserDeveloper(struct UObject* WorldContextObject, struct FString UserId); // Function ConZ.MiscStatics.IsUserDeveloper // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x243c420
	struct ULineBatchComponent* GetLineBatcher(struct UObject* WorldContextObject, bool bPersistentLines, float LifeTime, bool bDepthIsForeground); // Function ConZ.MiscStatics.GetLineBatcher // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x243c2c0
	struct FString GetGameVersion(); // Function ConZ.MiscStatics.GetGameVersion // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x243c240
	struct TArray<struct FConZDeveloperId> GetDeveloperUsers(struct UObject* WorldContextObject); // Function ConZ.MiscStatics.GetDeveloperUsers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x243c100
	struct UObject* GetClassDefaultObject(struct UObject* ObjectClass); // Function ConZ.MiscStatics.GetClassDefaultObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x243c070
	void DrawLine(struct UObject* WorldContextObject, struct FVector& LineStart, struct FVector& LineEnd, struct FColor& Color, bool persistentLines, float LifeTime, char DepthPriority, float Thickness); // Function ConZ.MiscStatics.DrawLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243bde0
	void DrawDebugNumber(struct UObject* WorldContextObject, float Number, struct FVector Location, struct FColor Color, float Size, float Duration, float Thickness, bool autoSize); // Function ConZ.MiscStatics.DrawDebugNumber // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x243bb70
	void DrawDebugDigit(struct UObject* WorldContextObject, int32_t digit, struct FVector Location, struct FRotator Rotation, struct FColor Color, float Size, float Duration, float Thickness); // Function ConZ.MiscStatics.DrawDebugDigit // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x243b900
	void DrawCircle(struct UObject* WorldContextObject, struct FVector& Center, struct FVector& X, struct FVector& Y, float Radius, float numberOfSides, struct FColor& Color, bool persistentLines, float LifeTime, char DepthPriority, float Thickness); // Function ConZ.MiscStatics.DrawCircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243b5a0
	void CopyLocationAndRotationToClipboard(struct FVector& Location, struct FRotator& Rotation); // Function ConZ.MiscStatics.CopyLocationAndRotationToClipboard // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x243b4d0
	void BroadcastChatLine(struct UObject* WorldContextObject, struct FString Text, enum class EChatType ChatType); // Function ConZ.MiscStatics.BroadcastChatLine // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x243b3b0
};

// Class ConZ.MobilePhone
// Size: 0x9e0 (Inherited: 0x9b0)
struct AMobilePhone : AItem {
	char pad_9B0[0x10]; // 0x9b0(0x10)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9c0(0x08)
	struct UAkAudioEvent* _startEvent; // 0x9c8(0x08)
	struct UAkAudioEvent* _stopEvent; // 0x9d0(0x08)
	char pad_9D8[0x8]; // 0x9d8(0x08)

	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.MobilePhone.OnResourceComponentDeactivated // (Final|Native|Private) // @ game+0x243c6b0
	void OnResourceComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.MobilePhone.OnResourceComponentActivated // (Final|Native|Private) // @ game+0x243c5e0
};

// Class ConZ.MobilePhoneAvailableQuestsPanel
// Size: 0x290 (Inherited: 0x268)
struct UMobilePhoneAvailableQuestsPanel : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UVerticalBox* _availableQuestsContainer; // 0x278(0x08)
	struct UMobilePhoneQuestEntryWidget* _questEntryWidgetClass; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class ConZ.MobilePhoneItemComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UMobilePhoneItemComponent : UItemComponent {
	struct AMobilePhoneMinigame* _minigameClass; // 0xc8(0x08)
};

// Class ConZ.MobilePhoneMainPanel
// Size: 0x2d0 (Inherited: 0x268)
struct UMobilePhoneMainPanel : UUserWidget {
	struct FDelegate OnMouseMoveEvent; // 0x268(0x10)
	struct UWidget* _virtualMouseCursorWidget; // 0x278(0x08)
	char pad_280[0x18]; // 0x280(0x18)
	struct UWidgetSwitcher* _panelSwitcher; // 0x298(0x08)
	struct UMobilePhoneAvailableQuestsPanel* _availableQuestsPanel; // 0x2a0(0x08)
	struct UMobilePhoneQuestDetailsWidget* _questDetailsPanel; // 0x2a8(0x08)
	struct UWidgetSwitcher* _signalStrengthWidgetSwitcher; // 0x2b0(0x08)
	struct UTextBlock* _batteryPercentageText; // 0x2b8(0x08)
	struct UProgressBar* _batteryProgressBar; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class ConZ.MobilePhoneMinigame
// Size: 0x390 (Inherited: 0x340)
struct AMobilePhoneMinigame : AMinigame {
	struct UMobilePhoneUIController* _uiController; // 0x340(0x08)
	struct UStaticMeshComponent* _mobilePhoneMeshComponent; // 0x348(0x08)
	struct UWidgetComponent* _mobilePhoneWidgetComponent; // 0x350(0x08)
	struct FVector _zoomStartLocation; // 0x358(0x0c)
	struct FVector _zoomEndLocation; // 0x364(0x0c)
	struct UCurveFloat* _zoomCurve; // 0x370(0x08)
	float _virtualMouseMinSensitivityModifier; // 0x378(0x04)
	float _virtualMouseMaxSensitivityModifier; // 0x37c(0x04)
	char pad_380[0x8]; // 0x380(0x08)
	struct UStaticMesh* _mobilePhoneMesh; // 0x388(0x08)
};

// Class ConZ.MobilePhoneMinigameConfiguration
// Size: 0x50 (Inherited: 0x50)
struct UMobilePhoneMinigameConfiguration : UMinigameConfiguration {
};

// Class ConZ.MobilePhoneQuestDetailsWidget
// Size: 0x3c0 (Inherited: 0x268)
struct UMobilePhoneQuestDetailsWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UTextBlock* _questTraderTitle; // 0x278(0x08)
	struct UTextBlock* _questTier; // 0x280(0x08)
	struct UTextBlock* _questTitle; // 0x288(0x08)
	struct UTextBlock* _questDescription; // 0x290(0x08)
	struct UTextBlock* _questTrader; // 0x298(0x08)
	struct UVerticalBox* _questRequirementsContainer; // 0x2a0(0x08)
	struct UTextBlock* _questTimeLimit; // 0x2a8(0x08)
	struct UTextBlock* _questRewardTitle; // 0x2b0(0x08)
	struct UVerticalBox* _questRewardsContainer; // 0x2b8(0x08)
	struct UOverlay* _playerResponseOverlay; // 0x2c0(0x08)
	struct UOverlay* _mainMessageOverlay; // 0x2c8(0x08)
	struct UTextBlock* _playerResponseText; // 0x2d0(0x08)
	struct UOverlay* _traderResponseOverlay; // 0x2d8(0x08)
	struct UTextBlock* _traderResponseText; // 0x2e0(0x08)
	struct URetainerBox* _traderIconRetainer1; // 0x2e8(0x08)
	struct UImage* _traderIcon1; // 0x2f0(0x08)
	struct URetainerBox* _traderIconRetainer2; // 0x2f8(0x08)
	struct UImage* _traderIcon2; // 0x300(0x08)
	struct UOverlay* _questAcceptedOverlay; // 0x308(0x08)
	struct UTextBlock* _playerInitials; // 0x310(0x08)
	struct URetainerBox* _playerRetainerBox; // 0x318(0x08)
	struct UConZCustomInteractionButton* _buttonBack; // 0x320(0x08)
	struct UConZCustomInteractionButton* _buttonAccept; // 0x328(0x08)
	struct UConZCustomInteractionButton* _buttonOk; // 0x330(0x08)
	char pad_338[0x88]; // 0x338(0x88)

	void OnOKButtonClicked(); // Function ConZ.MobilePhoneQuestDetailsWidget.OnOKButtonClicked // (Final|Native|Private) // @ game+0x243c5c0
	void OnBackButtonClicked(); // Function ConZ.MobilePhoneQuestDetailsWidget.OnBackButtonClicked // (Final|Native|Private) // @ game+0x243c5a0
	void OnAnyButtonHovered(); // Function ConZ.MobilePhoneQuestDetailsWidget.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void OnAcceptButtonClicked(); // Function ConZ.MobilePhoneQuestDetailsWidget.OnAcceptButtonClicked // (Final|Native|Private) // @ game+0x243c580
};

// Class ConZ.MobilePhoneQuestEntryWidget
// Size: 0x3c0 (Inherited: 0x268)
struct UMobilePhoneQuestEntryWidget : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UTextBlock* _entrySector; // 0x288(0x08)
	struct UTextBlock* _entryTier; // 0x290(0x08)
	struct UTextBlock* _entryTrader; // 0x298(0x08)
	struct UImage* _entryTraderIcon; // 0x2a0(0x08)
	struct URetainerBox* _entryTraderIconRetainer; // 0x2a8(0x08)
	struct UTextBlock* _entryStatus; // 0x2b0(0x08)
	struct UTextBlock* _entryTitle; // 0x2b8(0x08)
	struct UTextBlock* _entryTimeLimit; // 0x2c0(0x08)
	struct UWidgetSwitcher* _timeLimitWidgetSwitcher; // 0x2c8(0x08)
	struct UQuestTimerTextBlock* _entryQuestTimer; // 0x2d0(0x08)
	struct UImage* _entryUpdateIcon; // 0x2d8(0x08)
	struct UImage* _customQuestIcon; // 0x2e0(0x08)
	struct FSlateColor _questCompletedColor; // 0x2e8(0x28)
	struct FSlateColor _questFailedColor; // 0x310(0x28)
	struct FSlateColor _questInProgressColor; // 0x338(0x28)
	struct FSlateColor _questRelevantFontColor; // 0x360(0x28)
	char pad_388[0x38]; // 0x388(0x38)
};

// Class ConZ.MobilePhoneUIController
// Size: 0x60 (Inherited: 0x28)
struct UMobilePhoneUIController : UObject {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class ConZ.ModularCodexEntryElement
// Size: 0x278 (Inherited: 0x268)
struct UModularCodexEntryElement : UUserWidget {
	struct UModularCodexEntryElementData* _data; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class ConZ.ModularCodexEntryElement_Text
// Size: 0x280 (Inherited: 0x278)
struct UModularCodexEntryElement_Text : UModularCodexEntryElement {
	struct URichTextBlock* _richTextBlock; // 0x278(0x08)
};

// Class ConZ.ModularCodexEntryElement_Title
// Size: 0x280 (Inherited: 0x280)
struct UModularCodexEntryElement_Title : UModularCodexEntryElement_Text {
};

// Class ConZ.ModularCodexEntryElement_BulletPoint
// Size: 0x280 (Inherited: 0x278)
struct UModularCodexEntryElement_BulletPoint : UModularCodexEntryElement {
	struct URichTextBlock* _richTextBlock; // 0x278(0x08)
};

// Class ConZ.ModularCodexEntryElement_HorizontalContainer
// Size: 0x280 (Inherited: 0x278)
struct UModularCodexEntryElement_HorizontalContainer : UModularCodexEntryElement {
	struct UHorizontalBox* _horizontalBox; // 0x278(0x08)
};

// Class ConZ.ModularCodexEntryElement_VerticalContainer
// Size: 0x280 (Inherited: 0x278)
struct UModularCodexEntryElement_VerticalContainer : UModularCodexEntryElement {
	struct UVerticalBox* _verticalBox; // 0x278(0x08)
};

// Class ConZ.ModularCodexEntryElement_Note
// Size: 0x280 (Inherited: 0x278)
struct UModularCodexEntryElement_Note : UModularCodexEntryElement {
	struct USizeBox* _sizeBox; // 0x278(0x08)
};

// Class ConZ.ModularCodexEntryElement_Image
// Size: 0x288 (Inherited: 0x278)
struct UModularCodexEntryElement_Image : UModularCodexEntryElement {
	struct UOverlay* _imageOverlay; // 0x278(0x08)
	struct UImage* _image; // 0x280(0x08)
};

// Class ConZ.ModularCodexEntryElement_Video
// Size: 0x288 (Inherited: 0x278)
struct UModularCodexEntryElement_Video : UModularCodexEntryElement {
	struct UOverlay* _imageOverlay; // 0x278(0x08)
	struct UImage* _image; // 0x280(0x08)
};

// Class ConZ.ModularCodexEntryElementData
// Size: 0x38 (Inherited: 0x28)
struct UModularCodexEntryElementData : UObject {
	struct FMargin _desiredPadding; // 0x28(0x10)
};

// Class ConZ.ModularCodexEntryElementData_Text
// Size: 0x50 (Inherited: 0x38)
struct UModularCodexEntryElementData_Text : UModularCodexEntryElementData {
	struct FText _text; // 0x38(0x18)
};

// Class ConZ.ModularCodexEntryElementData_Title
// Size: 0x50 (Inherited: 0x50)
struct UModularCodexEntryElementData_Title : UModularCodexEntryElementData_Text {
};

// Class ConZ.ModularCodexEntryElementData_BulletPoint
// Size: 0x50 (Inherited: 0x50)
struct UModularCodexEntryElementData_BulletPoint : UModularCodexEntryElementData_Text {
};

// Class ConZ.ModularCodexEntryElementData_HorizontalContainer
// Size: 0x58 (Inherited: 0x38)
struct UModularCodexEntryElementData_HorizontalContainer : UModularCodexEntryElementData {
	struct TArray<struct UModularCodexEntryElementData*> _elements; // 0x38(0x10)
	struct FMargin _desiredElementsPadding; // 0x48(0x10)
};

// Class ConZ.ModularCodexEntryElementData_VerticalContainer
// Size: 0x58 (Inherited: 0x38)
struct UModularCodexEntryElementData_VerticalContainer : UModularCodexEntryElementData {
	struct TArray<struct UModularCodexEntryElementData*> _elements; // 0x38(0x10)
	struct FMargin _desiredElementsPadding; // 0x48(0x10)
};

// Class ConZ.ModularCodexEntryElementData_Note
// Size: 0x40 (Inherited: 0x38)
struct UModularCodexEntryElementData_Note : UModularCodexEntryElementData {
	struct UModularCodexEntryElementData* _element; // 0x38(0x08)
};

// Class ConZ.ModularCodexEntryElementData_Image
// Size: 0x70 (Inherited: 0x38)
struct UModularCodexEntryElementData_Image : UModularCodexEntryElementData {
	struct TSoftObjectPtr<UTexture2D> _imageTexture; // 0x38(0x28)
	struct TArray<struct FManualEnhancedImageTextInformation> _textElements; // 0x60(0x10)
};

// Class ConZ.ModularCodexEntryElementData_Video
// Size: 0x70 (Inherited: 0x38)
struct UModularCodexEntryElementData_Video : UModularCodexEntryElementData {
	struct TSoftObjectPtr<UTexture2D> _videoTexture; // 0x38(0x28)
	struct TArray<struct FManualEnhancedImageTextInformation> _textElements; // 0x60(0x10)
};

// Class ConZ.ModularTooltip
// Size: 0x288 (Inherited: 0x268)
struct UModularTooltip : UUserWidget {
	struct UModularTooltipSection* _sectionClass; // 0x268(0x08)
	struct URichTextBlock* _descriptionTextBlock; // 0x270(0x08)
	struct UVerticalBox* _sectionsVerticalBox; // 0x278(0x08)
	struct UTextBlock* _advancedDisplayHintTextBlock; // 0x280(0x08)

	void PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged(bool Value); // Function ConZ.ModularTooltip.PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged // (Final|Native|Private) // @ game+0x24418c0
};

// Class ConZ.ModularTooltipElement
// Size: 0x2f8 (Inherited: 0x268)
struct UModularTooltipElement : UUserWidget {
	struct UModularTooltipElementData* _data; // 0x268(0x08)
	struct FDataTableRowHandle _neutralDispositionColor; // 0x270(0x10)
	struct FDataTableRowHandle _goodDispositionColor; // 0x280(0x10)
	struct FDataTableRowHandle _badDispositionColor; // 0x290(0x10)
	enum class EHorizontalAlignment _desiredHorizontalAlignment; // 0x2a0(0x01)
	char pad_2A1[0x57]; // 0x2a1(0x57)
};

// Class ConZ.ModularTooltipElement_Title
// Size: 0x300 (Inherited: 0x2f8)
struct UModularTooltipElement_Title : UModularTooltipElement {
	struct UTextBlock* _titleTextBlock; // 0x2f8(0x08)
};

// Class ConZ.ModularTooltipElement_Value
// Size: 0x308 (Inherited: 0x2f8)
struct UModularTooltipElement_Value : UModularTooltipElement {
	struct UTextBlock* _nameTextBlock; // 0x2f8(0x08)
	struct UTextBlock* _valueTextBlock; // 0x300(0x08)
};

// Class ConZ.ModularTooltipElement_Timer
// Size: 0x300 (Inherited: 0x2f8)
struct UModularTooltipElement_Timer : UModularTooltipElement {
	struct UMetabolismAdvancedProgressBar* _remainingTimeProgressBar; // 0x2f8(0x08)
};

// Class ConZ.ModularTooltipElement_Modifier
// Size: 0x308 (Inherited: 0x2f8)
struct UModularTooltipElement_Modifier : UModularTooltipElement {
	struct UTextBlock* _modifierTextBlock; // 0x2f8(0x08)
	struct UMetabolismAdvancedProgressBar* _remainingTimeProgressBar; // 0x300(0x08)
};

// Class ConZ.ModularTooltipElement_ValueWithModifier
// Size: 0x320 (Inherited: 0x2f8)
struct UModularTooltipElement_ValueWithModifier : UModularTooltipElement {
	struct UTextBlock* _nameTextBlock; // 0x2f8(0x08)
	struct UTextBlock* _currentValueTextBlock; // 0x300(0x08)
	struct UTextBlock* _baseValueTextBlock; // 0x308(0x08)
	struct UTextBlock* _modifierSignTextBlock; // 0x310(0x08)
	struct UTextBlock* _modifierTextBlock; // 0x318(0x08)
};

// Class ConZ.ModularTooltipElement_AffectedBy
// Size: 0x308 (Inherited: 0x2f8)
struct UModularTooltipElement_AffectedBy : UModularTooltipElement {
	struct UTextBlock* _sourceTextBlock; // 0x2f8(0x08)
	struct UOverlay* _affectElementOverlay; // 0x300(0x08)
};

// Class ConZ.ModularTooltipElement_Affects
// Size: 0x308 (Inherited: 0x2f8)
struct UModularTooltipElement_Affects : UModularTooltipElement {
	struct UTextBlock* _targetTextBlock; // 0x2f8(0x08)
	struct UOverlay* _affectElementOverlay; // 0x300(0x08)
};

// Class ConZ.ModularTooltipElementData
// Size: 0x28 (Inherited: 0x28)
struct UModularTooltipElementData : UObject {
};

// Class ConZ.ModularTooltipElementData_Title
// Size: 0x48 (Inherited: 0x28)
struct UModularTooltipElementData_Title : UModularTooltipElementData {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.ModularTooltipElementData_Value
// Size: 0x60 (Inherited: 0x28)
struct UModularTooltipElementData_Value : UModularTooltipElementData {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class ConZ.ModularTooltipElementData_Timer
// Size: 0x58 (Inherited: 0x28)
struct UModularTooltipElementData_Timer : UModularTooltipElementData {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class ConZ.ModularTooltipElementData_Modifier
// Size: 0x78 (Inherited: 0x28)
struct UModularTooltipElementData_Modifier : UModularTooltipElementData {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class ConZ.ModularTooltipElementData_ValueWithModifier
// Size: 0x98 (Inherited: 0x28)
struct UModularTooltipElementData_ValueWithModifier : UModularTooltipElementData {
	char pad_28[0x70]; // 0x28(0x70)
};

// Class ConZ.ModularTooltipElementData_ValueWithModifier_Small
// Size: 0x98 (Inherited: 0x98)
struct UModularTooltipElementData_ValueWithModifier_Small : UModularTooltipElementData_ValueWithModifier {
};

// Class ConZ.ModularTooltipElementData_ValueWithModifier_Large
// Size: 0x98 (Inherited: 0x98)
struct UModularTooltipElementData_ValueWithModifier_Large : UModularTooltipElementData_ValueWithModifier {
};

// Class ConZ.ModularTooltipElementData_AffectedBy
// Size: 0x48 (Inherited: 0x28)
struct UModularTooltipElementData_AffectedBy : UModularTooltipElementData {
	char pad_28[0x18]; // 0x28(0x18)
	struct UModularTooltipElementData* Affect; // 0x40(0x08)
};

// Class ConZ.ModularTooltipElementData_Affects
// Size: 0x48 (Inherited: 0x28)
struct UModularTooltipElementData_Affects : UModularTooltipElementData {
	char pad_28[0x18]; // 0x28(0x18)
	struct UModularTooltipElementData* Affect; // 0x40(0x08)
};

// Class ConZ.ModularTooltipSection
// Size: 0x298 (Inherited: 0x268)
struct UModularTooltipSection : UUserWidget {
	struct FMargin _sectionElementsPadding; // 0x268(0x10)
	struct UImage* _sectionSeparatorImage; // 0x278(0x08)
	struct UTextBlock* _sectionNameTextBlock; // 0x280(0x08)
	struct UVerticalBox* _sectionElementsVerticalBox; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class ConZ.MotorcycleSkill
// Size: 0x5d8 (Inherited: 0x5d8)
struct UMotorcycleSkill : UDrivingSkill {
};

// Class ConZ.Mountable
// Size: 0x28 (Inherited: 0x28)
struct UMountable : UInterface {
};

// Class ConZ.Mountee
// Size: 0x28 (Inherited: 0x28)
struct UMountee : UInterface {
};

// Class ConZ.MountPath
// Size: 0x60 (Inherited: 0x28)
struct UMountPath : UObject {
	struct FGameplayTag PathTag; // 0x28(0x08)
	struct UAnimMontage* MountingMontage; // 0x30(0x08)
	struct UAnimMontage* MountingMontageFP; // 0x38(0x08)
	struct FGameplayTag StateTagRequiredForAlternativeAnimations; // 0x40(0x08)
	struct UAnimMontage* MountingMontageAlternative; // 0x48(0x08)
	struct UAnimMontage* MountingMontageAlternativeFP; // 0x50(0x08)
	float FallbackMountTime; // 0x58(0x04)
	enum class EMotionIntensity MountingMotionIntensity; // 0x5c(0x01)
	bool ShouldRemoveItemFromHands; // 0x5d(0x01)
	char pad_5E[0x2]; // 0x5e(0x02)
};

// Class ConZ.ExternalMountPath
// Size: 0x120 (Inherited: 0x60)
struct UExternalMountPath : UMountPath {
	struct FTransform DestinationTransform; // 0x60(0x30)
	bool OverrideDestinationAcceptanceRadius; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float DestinationAcceptanceRadius; // 0x94(0x04)
	bool OverrideDestinationMinAcceptanceRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float MinDestinationAcceptanceRadius; // 0x9c(0x04)
	bool AllowMountingInsideVolumeOnly; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	struct FBox AllowMountingVolume; // 0xa4(0x1c)
	bool DisallowMountingInsideVolumeOnly; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	struct FBox DisallowMountingVolume; // 0xc4(0x1c)
	float AccesibilityCheck_MountSocketVerticalCorrection; // 0xe0(0x04)
	float AccesibilityCheck_CapsuleRadius; // 0xe4(0x04)
	float AccesibilityCheck_OverlapCapsuleRadius; // 0xe8(0x04)
	float AccesibilityCheck_SweepCapsuleHalfHeight; // 0xec(0x04)
	float AccesibilityCheck_OverlapCapsuleHalfHeight; // 0xf0(0x04)
	bool AlignAccessibilityChecksToVehicle; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct UAnimMontage* UnmountingMontage; // 0xf8(0x08)
	struct UAnimMontage* UnmountingMontageFP; // 0x100(0x08)
	float FallbackUnmountTime; // 0x108(0x04)
	struct FFloatInterval EnabledAtVehicleSpeed; // 0x10c(0x08)
	struct FFloatInterval EnabledAtVehicleAngle; // 0x114(0x08)
	bool AlternateExitOnly; // 0x11c(0x01)
	enum class EMotionIntensity UnmountingMotionIntensity; // 0x11d(0x01)
	char pad_11E[0x2]; // 0x11e(0x02)
};

// Class ConZ.InternalMountPath
// Size: 0x68 (Inherited: 0x60)
struct UInternalMountPath : UMountPath {
	struct FGameplayTag DestinationSlotId; // 0x60(0x08)
};

// Class ConZ.MountPathBlocker
// Size: 0x28 (Inherited: 0x28)
struct UMountPathBlocker : UInterface {
};

// Class ConZ.MountSlot
// Size: 0x28 (Inherited: 0x28)
struct UMountSlot : UInterface {
};

// Class ConZ.MovableAudioSpline
// Size: 0x590 (Inherited: 0x550)
struct UMovableAudioSpline : USplineComponent {
	struct TArray<struct FMovingSplineSoundData> _audioEvents; // 0x550(0x10)
	char pad_560[0x30]; // 0x560(0x30)
};

// Class ConZ.MovableCollisionFieldComponent
// Size: 0x118 (Inherited: 0xb0)
struct UMovableCollisionFieldComponent : UActorComponent {
	float _collisionCheckInterval; // 0xb0(0x04)
	struct FMovableCollisionFieldState _currentState; // 0xb4(0x03)
	char pad_B7[0x19]; // 0xb7(0x19)
	struct FMovableCollisionFieldMoveInfo _moveInfo[0x2]; // 0xd0(0x10)
	struct FVector _startRelativeLocation; // 0xe0(0x0c)
	struct FVector _endRelativeLocation; // 0xec(0x0c)
	char pad_F8[0x20]; // 0xf8(0x20)

	void OnRep_CurrentState(); // Function ConZ.MovableCollisionFieldComponent.OnRep_CurrentState // (Final|Native|Private) // @ game+0x2441860
	void NetMulticast_DeactivateField(); // Function ConZ.MovableCollisionFieldComponent.NetMulticast_DeactivateField // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x236cc10
	void NetMulticast_ActivateField(); // Function ConZ.MovableCollisionFieldComponent.NetMulticast_ActivateField // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x241ac10
	void Initialize(struct TArray<struct UStaticMeshComponent*>& movableMeshes, struct TArray<struct UStaticMeshComponent*>& collisionMeshes); // Function ConZ.MovableCollisionFieldComponent.Initialize // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24414c0
};

// Class ConZ.MugshotRoom
// Size: 0x2a0 (Inherited: 0x220)
struct AMugshotRoom : AActor {
	struct APrisoner* _prisoner; // 0x220(0x08)
	struct TSoftClassPtr<UObject> _prisonerClass; // 0x228(0x28)
	struct FTransform _prisonerTransform; // 0x250(0x30)
	struct USceneComponent* _sceneRoot; // 0x280(0x08)
	struct USceneCaptureComponent2D* _mugshotCapture; // 0x288(0x08)
	struct UChildActorComponent* _inmateShirt; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class ConZ.MusicPlayerDisplayWidget
// Size: 0x310 (Inherited: 0x268)
struct UMusicPlayerDisplayWidget : UUserWidget {
	struct UImage* _shuffleImage; // 0x268(0x08)
	struct UImage* _repeatImage; // 0x270(0x08)
	struct UImage* _previousImage; // 0x278(0x08)
	struct UImage* _pauseImage; // 0x280(0x08)
	struct UImage* _playImage; // 0x288(0x08)
	struct UImage* _nextImage; // 0x290(0x08)
	struct UTextBlock* _songTitleText; // 0x298(0x08)
	float _inactiveOpacity; // 0x2a0(0x04)
	float _iconActivityDuration; // 0x2a4(0x04)
	float _trackNameDuration; // 0x2a8(0x04)
	float _radioStationNameDuration; // 0x2ac(0x04)
	float _trackNameOffsetStep; // 0x2b0(0x04)
	float _trackNameOffsetPadding; // 0x2b4(0x04)
	float _trackNameWaitingDuration; // 0x2b8(0x04)
	char pad_2BC[0x54]; // 0x2bc(0x54)

	void OnTrackNameChange(); // Function ConZ.MusicPlayerDisplayWidget.OnTrackNameChange // (Final|Native|Private) // @ game+0x24418a0
	void OnPreviousTrackIconTimeFinished(); // Function ConZ.MusicPlayerDisplayWidget.OnPreviousTrackIconTimeFinished // (Final|Native|Private) // @ game+0x2441840
	void OnNextTrackIconTimeFinished(); // Function ConZ.MusicPlayerDisplayWidget.OnNextTrackIconTimeFinished // (Final|Native|Private) // @ game+0x2441820
};

// Class ConZ.NameableItemComponentState
// Size: 0x50 (Inherited: 0x40)
struct UNameableItemComponentState : UItemComponentStateBase {
	struct FString Name; // 0x40(0x10)
};

// Class ConZ.NameableItemComponent
// Size: 0x110 (Inherited: 0xc8)
struct UNameableItemComponent : UItemComponent {
	char pad_C8[0x20]; // 0xc8(0x20)
	struct FString _name; // 0xe8(0x10)
	struct TWeakObjectPtr<struct UItemStatusWidget> _nameWidget; // 0xf8(0x08)
	struct TWeakObjectPtr<struct UChangeTextWidget> _editNameWidget; // 0x100(0x08)
	char pad_108[0x8]; // 0x108(0x08)

	void OnRep_Name(); // Function ConZ.NameableItemComponent.OnRep_Name // (Final|Native|Private) // @ game+0x2441880
	void OnLocalPrisonerHoveredActorChanged(struct AActor* hoveredActor); // Function ConZ.NameableItemComponent.OnLocalPrisonerHoveredActorChanged // (Final|Native|Private) // @ game+0x2441790
	void OnEditTextWidgetTextAccepted(struct APrisoner* User, struct FText& Text); // Function ConZ.NameableItemComponent.OnEditTextWidgetTextAccepted // (Final|Native|Private|HasOutParms) // @ game+0x2441680
};

// Class ConZ.NetworkDataIdAsset
// Size: 0xd0 (Inherited: 0x30)
struct UNetworkDataIdAsset : UDataAsset {
	struct TMap<uint32_t, struct FPrimaryAssetId> IdToAssetMap; // 0x30(0x50)
	struct TMap<struct FPrimaryAssetId, uint32_t> AssetToIdMap; // 0x80(0x50)
};

// Class ConZ.NetworkPredictionComponent
// Size: 0x1f0 (Inherited: 0xb0)
struct UNetworkPredictionComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)
	float _interpolationBackTime; // 0xf0(0x04)
	float _timeSmoothing; // 0xf4(0x04)
	float _positionLerpSpeed; // 0xf8(0x04)
	float _rotationLerpSpeed; // 0xfc(0x04)
	enum class SyncMode _syncPosition; // 0x100(0x01)
	enum class SyncMode _syncRotation; // 0x101(0x01)
	enum class SyncMode _syncVelocity; // 0x102(0x01)
	enum class SyncMode _syncAngularVelocity; // 0x103(0x01)
	bool _isPositionCompressed; // 0x104(0x01)
	bool _isRotationCompressed; // 0x105(0x01)
	bool _isVelocityCompressed; // 0x106(0x01)
	bool _isAngularVelocityCompressed; // 0x107(0x01)
	float _sendRate; // 0x108(0x04)
	float _restSendRate; // 0x10c(0x04)
	char pad_110[0x64]; // 0x110(0x64)
	float _atRestPositionThreshold; // 0x174(0x04)
	float _atRestRotationThreshold; // 0x178(0x04)
	float _atRestDeltaTimeThreshold; // 0x17c(0x04)
	float _distanceThresholdToSnap; // 0x180(0x04)
	char pad_184[0x4c]; // 0x184(0x4c)
	float _minTimeToCoverPosition; // 0x1d0(0x04)
	float _maxTimeToCoverPosition; // 0x1d4(0x04)
	float _minTimeToCoverRotation; // 0x1d8(0x04)
	float _maxTimeToCoverRotation; // 0x1dc(0x04)
	char pad_1E0[0x10]; // 0x1e0(0x10)

	void Server_SendTransform(struct TArray<char> PackedState); // Function ConZ.NetworkPredictionComponent.Server_SendTransform // (Net|Native|Event|Public|NetServer) // @ game+0x2441950
	void Multicast_SendTransform(struct TArray<char> PackedState); // Function ConZ.NetworkPredictionComponent.Multicast_SendTransform // (Net|Native|Event|NetMulticast|Public) // @ game+0x24415e0
	void ForceStateSendNextFrame(); // Function ConZ.NetworkPredictionComponent.ForceStateSendNextFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x24414a0
};

// Class ConZ.NetworkStatics
// Size: 0x28 (Inherited: 0x28)
struct UNetworkStatics : UBlueprintFunctionLibrary {

	void SetComponentNetAddressable(struct UActorComponent* Component); // Function ConZ.NetworkStatics.SetComponentNetAddressable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446e70
	bool ParseServerIpAndPort(struct FString Text, struct FString& Ip, int32_t& Port); // Function ConZ.NetworkStatics.ParseServerIpAndPort // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2446d10
	struct FString MakeAuthTokenForUser(struct UUser* User, struct FString password); // Function ConZ.NetworkStatics.MakeAuthTokenForUser // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446980
	struct FString MakeAuthTokenForCurrentUser(struct UObject* WorldContextObject, struct FString password); // Function ConZ.NetworkStatics.MakeAuthTokenForCurrentUser // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446860
	struct FString MakeAuthToken(struct FString UserId, struct FString password); // Function ConZ.NetworkStatics.MakeAuthToken // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446720
	int32_t GetDefaultDedicatedServerResponsePort(); // Function ConZ.NetworkStatics.GetDefaultDedicatedServerResponsePort // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24466f0
	struct FString GetAuthTokenForUser(struct UUser* User, struct FString ServerIp, int32_t ServerResponsePort); // Function ConZ.NetworkStatics.GetAuthTokenForUser // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446580
	struct FString GetAuthTokenForCurrentUser(struct UObject* WorldContextObject, struct FString ServerIp, int32_t ServerResponsePort); // Function ConZ.NetworkStatics.GetAuthTokenForCurrentUser // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2446410
};

// Class ConZ.NightVisionGogglesItem
// Size: 0xb10 (Inherited: 0xa50)
struct ANightVisionGogglesItem : AClothesItem {
	struct UAkAudioEvent* ActivatedSound; // 0xa50(0x08)
	struct UAkAudioEvent* DeactivatedSound; // 0xa58(0x08)
	struct FMulticastInlineDelegate ActivatedChanged; // 0xa60(0x10)
	char pad_A70[0x8]; // 0xa70(0x08)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0xa78(0x08)
	struct FGameplayTag _nightVisionGogglesOnTag; // 0xa80(0x08)
	struct FRuntimeFloatCurve _batteryPercentageToGlitchStrengthCurve; // 0xa88(0x88)

	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.NightVisionGogglesItem.OnComponentDeactivated // (Final|Native|Private) // @ game+0x2446bf0
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.NightVisionGogglesItem.OnComponentActivated // (Final|Native|Private) // @ game+0x2446b20
	void ActivatedChangedEvent__DelegateSignature(struct ANightVisionGogglesItem* sender); // DelegateFunction ConZ.NightVisionGogglesItem.ActivatedChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
};

// Class ConZ.NoticeBoard
// Size: 0x270 (Inherited: 0x220)
struct ANoticeBoard : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _meshComponent; // 0x228(0x08)
	struct TArray<struct UMaterialInterface*> _paperMaterials; // 0x230(0x10)
	struct ANoticeBoardMinigame* _minigameClass; // 0x240(0x08)
	struct UNoticeBoardMinigameConfiguration* _minigameConfigurationClass; // 0x248(0x08)
	char pad_250[0x20]; // 0x250(0x20)
};

// Class ConZ.NoticeBoardMinigame
// Size: 0x380 (Inherited: 0x340)
struct ANoticeBoardMinigame : AMinigame {
	struct UNoticeBoardUIController* _uiController; // 0x340(0x08)
	struct UStaticMeshComponent* _noticeBoardMeshComponent; // 0x348(0x08)
	struct FVector _zoomStartLocation; // 0x350(0x0c)
	struct FVector _zoomEndLocation; // 0x35c(0x0c)
	struct UCurveFloat* _zoomCurve; // 0x368(0x08)
	struct UStaticMesh* _noticeBoardMesh; // 0x370(0x08)
	char pad_378[0x8]; // 0x378(0x08)
};

// Class ConZ.NoticeBoardMinigameConfiguration
// Size: 0x58 (Inherited: 0x50)
struct UNoticeBoardMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class ConZ.NoticeBoardMinigameWidget
// Size: 0x2c8 (Inherited: 0x280)
struct UNoticeBoardMinigameWidget : UMinigameWidget {
	struct UNoticeBoardPanelWidget* _noticeBoardPanelWidget; // 0x280(0x08)
	struct URichTextBlock* _zoomControlText; // 0x288(0x08)
	struct URichTextBlock* _acceptQuestControlText; // 0x290(0x08)
	struct UProgressBar* _acceptQuestProgressBar; // 0x298(0x08)
	struct URichTextBlock* _exitNoticeBoardControlText; // 0x2a0(0x08)
	struct UTextBlock* _detailsText; // 0x2a8(0x08)
	char pad_2B0[0x18]; // 0x2b0(0x18)
};

// Class ConZ.NoticeBoardPanelWidget
// Size: 0x2c0 (Inherited: 0x268)
struct UNoticeBoardPanelWidget : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UOverlay* _questEntriesOverlay; // 0x288(0x08)
	struct UOverlay* _enhancementOverlay; // 0x290(0x08)
	struct UNoticeBoardQuestEntryWidget* _enhancedQuestEntry; // 0x298(0x08)
	char pad_2A0[0x20]; // 0x2a0(0x20)
};

// Class ConZ.NoticeBoardQuestEntryWidget
// Size: 0x358 (Inherited: 0x268)
struct UNoticeBoardQuestEntryWidget : UUserWidget {
	struct UImage* _tierIcon; // 0x268(0x08)
	struct UImage* _customQuestIcon; // 0x270(0x08)
	struct UTextBlock* _title; // 0x278(0x08)
	struct UTextBlock* _description; // 0x280(0x08)
	struct UHorizontalBox* _timeLimitHorizontalBox; // 0x288(0x08)
	struct UTextBlock* _timeLimit; // 0x290(0x08)
	struct UTextBlock* _turnIn; // 0x298(0x08)
	struct UTextBlock* _requirementsTitle; // 0x2a0(0x08)
	struct UTextBlock* _rewardsTitle; // 0x2a8(0x08)
	struct UVerticalBox* _requirementsContainer; // 0x2b0(0x08)
	struct UVerticalBox* _rewardsContainer; // 0x2b8(0x08)
	struct UWidgetSwitcher* _tapeSwitcher; // 0x2c0(0x08)
	struct UWidgetSwitcher* _bloodSplatterSwitcherA; // 0x2c8(0x08)
	struct UWidgetSwitcher* _bloodSplatterSwitcherB; // 0x2d0(0x08)
	struct UWidgetSwitcher* _coffeeStainSwitcherA; // 0x2d8(0x08)
	struct UWidgetSwitcher* _coffeeStainSwitcherB; // 0x2e0(0x08)
	struct UWidgetSwitcher* _postItNoteSwitcher; // 0x2e8(0x08)
	struct UTextBlock* _postItNoteWarning; // 0x2f0(0x08)
	struct UOverlay* _postItNoteOverlay; // 0x2f8(0x08)
	struct UOverlay* _rewardsOverlay; // 0x300(0x08)
	float _minPostItNoteAngle; // 0x308(0x04)
	float _maxPostItNoteAngle; // 0x30c(0x04)
	char pad_310[0x48]; // 0x310(0x48)
};

// Class ConZ.NoticeBoardUIController
// Size: 0x78 (Inherited: 0x28)
struct UNoticeBoardUIController : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class ConZ.NotificationPanelWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UNotificationPanelWidget : UUserWidget {
	struct UVerticalBox* _notificationBox; // 0x268(0x08)
	struct UBorder* _nextEventBox; // 0x270(0x08)
	struct UTextBlock* _nextEventCountdown; // 0x278(0x08)
	struct UTextBlock* _nextEventLocation; // 0x280(0x08)
	struct UBorder* _eventCancelBox; // 0x288(0x08)
	struct UTextBlock* _eventCancelTime; // 0x290(0x08)
	struct UBorder* _eventTime; // 0x298(0x08)
	struct UTextBlock* _eventTimeText; // 0x2a0(0x08)
};

// Class ConZ.NotificationsManager
// Size: 0x2d8 (Inherited: 0x220)
struct ANotificationsManager : AActor {
	struct TMap<struct FDbIntegerId, struct UNotificationDescription*> _queuedNotifications; // 0x220(0x50)
	struct TArray<struct UNotificationChain*> _queuedNotificationChains; // 0x270(0x10)
	char pad_280[0x50]; // 0x280(0x50)
	int64_t _notificationTimeout; // 0x2d0(0x08)

	void OnPlayerReadyToPlay(struct AConZPlayerController* PlayerController); // Function ConZ.NotificationsManager.OnPlayerReadyToPlay // (Final|Native|Public) // @ game+0x2446c80
	void NetMulticast_RequestNotification(struct FNotificationDescriptionReplicationHelper Description); // Function ConZ.NotificationsManager.NetMulticast_RequestNotification // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2446aa0
};

// Class ConZ.NotificationChain
// Size: 0x58 (Inherited: 0x28)
struct UNotificationChain : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct TArray<struct FNotificationAndDelay> _notifications; // 0x48(0x10)
};

// Class ConZ.NotificationWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UNotificationWidget : UUserWidget {
	struct USizeBox* _notificationSize; // 0x268(0x08)
	struct UImage* _icon; // 0x270(0x08)
	struct UTextBlock* _text; // 0x278(0x08)
	struct UWidgetAnimation* _increaseToMaxSize; // 0x280(0x08)
	char pad_288[0x20]; // 0x288(0x20)
};

// Class ConZ.NPCControllerState
// Size: 0x30 (Inherited: 0x28)
struct UNPCControllerState : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.NPCControllerStateArmedNPCBase
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBase : UNPCControllerState {
};

// Class ConZ.NPCControllerStateArmedNPCBaseAlertedByDamage
// Size: 0x40 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseAlertedByDamage : UNPCControllerStateArmedNPCBase {
	struct FFloatInterval _stateDurationRange; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.NPCControllerStateArmedNPCBaseAlertedByGunshot
// Size: 0x50 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseAlertedByGunshot : UNPCControllerStateArmedNPCBase {
	char pad_30[0x8]; // 0x30(0x08)
	struct FFloatInterval _stateDurationRange; // 0x38(0x08)
	char pad_40[0x10]; // 0x40(0x10)
};

// Class ConZ.NPCControllerStateArmedNPCBaseCombat
// Size: 0x90 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseCombat : UNPCControllerStateArmedNPCBase {
	char pad_30[0x60]; // 0x30(0x60)
};

// Class ConZ.NPCControllerStateArmedNPCBaseInvestigateLocation
// Size: 0x38 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseInvestigateLocation : UNPCControllerStateArmedNPCBase {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.NPCControllerStateArmedNPCBaseNone
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseNone : UNPCControllerStateArmedNPCBase {
};

// Class ConZ.NPCControllerStateArmedNPCBaseOpenDoor
// Size: 0x58 (Inherited: 0x30)
struct UNPCControllerStateArmedNPCBaseOpenDoor : UNPCControllerStateArmedNPCBase {
	char pad_30[0x28]; // 0x30(0x28)
};

// Class ConZ.NPCControllerStateBrennerBase
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateBrennerBase : UNPCControllerState {
};

// Class ConZ.NPCControllerStateBrennerAlerted
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateBrennerAlerted : UNPCControllerStateBrennerBase {
};

// Class ConZ.NPCControllerStateBrennerCombat
// Size: 0x60 (Inherited: 0x30)
struct UNPCControllerStateBrennerCombat : UNPCControllerStateBrennerBase {
	char pad_30[0x30]; // 0x30(0x30)
};

// Class ConZ.NPCControllerStateBrennerHibernate
// Size: 0x40 (Inherited: 0x30)
struct UNPCControllerStateBrennerHibernate : UNPCControllerStateBrennerBase {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.NPCControllerStateBrennerHitReact
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateBrennerHitReact : UNPCControllerStateBrennerBase {
};

// Class ConZ.NPCControllerStateBrennerInvestigateArea
// Size: 0x38 (Inherited: 0x30)
struct UNPCControllerStateBrennerInvestigateArea : UNPCControllerStateBrennerBase {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.NPCControllerStateBrennerOpenDoor
// Size: 0x58 (Inherited: 0x30)
struct UNPCControllerStateBrennerOpenDoor : UNPCControllerStateBrennerBase {
	char pad_30[0x28]; // 0x30(0x28)
};

// Class ConZ.NPCControllerStateBrennerRage
// Size: 0x38 (Inherited: 0x30)
struct UNPCControllerStateBrennerRage : UNPCControllerStateBrennerBase {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.NPCControllerStateBrennerReturnToHibernation
// Size: 0x30 (Inherited: 0x30)
struct UNPCControllerStateBrennerReturnToHibernation : UNPCControllerStateBrennerBase {
};

// Class ConZ.NPCDrifterAIController
// Size: 0x5e0 (Inherited: 0x598)
struct ANPCDrifterAIController : AArmedNPCBaseAIController {
	struct UNPCControllerStateArmedNPCBase* _statesByEnum[0x9]; // 0x598(0x48)
};

// Class ConZ.NPCControllerStateDrifterAlertedByDamage
// Size: 0x40 (Inherited: 0x40)
struct UNPCControllerStateDrifterAlertedByDamage : UNPCControllerStateArmedNPCBaseAlertedByDamage {
};

// Class ConZ.NPCControllerStateDrifterAlertedByGunshot
// Size: 0x50 (Inherited: 0x50)
struct UNPCControllerStateDrifterAlertedByGunshot : UNPCControllerStateArmedNPCBaseAlertedByGunshot {
};

// Class ConZ.NPCControllerStateDrifterCombat
// Size: 0x90 (Inherited: 0x90)
struct UNPCControllerStateDrifterCombat : UNPCControllerStateArmedNPCBaseCombat {
};

// Class ConZ.NPCControllerStateDrifterIdle
// Size: 0x38 (Inherited: 0x30)
struct UNPCControllerStateDrifterIdle : UNPCControllerStateArmedNPCBase {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.NPCControllerStateDrifterInvestigateLocation
// Size: 0x38 (Inherited: 0x38)
struct UNPCControllerStateDrifterInvestigateLocation : UNPCControllerStateArmedNPCBaseInvestigateLocation {
};

// Class ConZ.NPCControllerStateDrifterMoveTowardsTargetLocation
// Size: 0x58 (Inherited: 0x30)
struct UNPCControllerStateDrifterMoveTowardsTargetLocation : UNPCControllerStateArmedNPCBase {
	char pad_30[0x1c]; // 0x30(0x1c)
	struct FFloatInterval _randomLocationRange; // 0x4c(0x08)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class ConZ.NPCControllerStateDrifterOpenDoor
// Size: 0x58 (Inherited: 0x58)
struct UNPCControllerStateDrifterOpenDoor : UNPCControllerStateArmedNPCBaseOpenDoor {
};

// Class ConZ.NPCGuardAIController
// Size: 0x5e0 (Inherited: 0x598)
struct ANPCGuardAIController : AArmedNPCBaseAIController {
	struct UNPCControllerStateArmedNPCBase* _statesByEnum[0x9]; // 0x598(0x48)
};

// Class ConZ.NPCControllerStateGuardAlertedByDamage
// Size: 0x40 (Inherited: 0x40)
struct UNPCControllerStateGuardAlertedByDamage : UNPCControllerStateArmedNPCBaseAlertedByDamage {
};

// Class ConZ.NPCControllerStateGuardAlertedByGunshot
// Size: 0x50 (Inherited: 0x50)
struct UNPCControllerStateGuardAlertedByGunshot : UNPCControllerStateArmedNPCBaseAlertedByGunshot {
};

// Class ConZ.NPCControllerStateGuardCombat
// Size: 0x90 (Inherited: 0x90)
struct UNPCControllerStateGuardCombat : UNPCControllerStateArmedNPCBaseCombat {
};

// Class ConZ.NPCControllerStateGuardIdle
// Size: 0x50 (Inherited: 0x30)
struct UNPCControllerStateGuardIdle : UNPCControllerStateArmedNPCBase {
	char pad_30[0x8]; // 0x30(0x08)
	struct FFloatInterval _voiceLineCueueRange; // 0x38(0x08)
	char pad_40[0x10]; // 0x40(0x10)
};

// Class ConZ.NPCControllerStateGuardInvestigateLocation
// Size: 0x38 (Inherited: 0x38)
struct UNPCControllerStateGuardInvestigateLocation : UNPCControllerStateArmedNPCBaseInvestigateLocation {
};

// Class ConZ.NPCControllerStateGuardOpenDoor
// Size: 0x58 (Inherited: 0x58)
struct UNPCControllerStateGuardOpenDoor : UNPCControllerStateArmedNPCBaseOpenDoor {
};

// Class ConZ.NPCControllerStateGuardReturnToPost
// Size: 0x48 (Inherited: 0x30)
struct UNPCControllerStateGuardReturnToPost : UNPCControllerStateArmedNPCBase {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class ConZ.NPCDrifter
// Size: 0xa10 (Inherited: 0xa00)
struct ANPCDrifter : AArmedNPCBase {
	char pad_A00[0x10]; // 0xa00(0x10)
};

// Class ConZ.NPCGuard
// Size: 0xa20 (Inherited: 0xa00)
struct ANPCGuard : AArmedNPCBase {
	char pad_A00[0x20]; // 0xa00(0x20)
};

// Class ConZ.NPCInventoryComponent
// Size: 0x118 (Inherited: 0xb0)
struct UNPCInventoryComponent : UActorComponent {
	char pad_B0[0x58]; // 0xb0(0x58)
	struct TArray<struct AItem*> _containedItems; // 0x108(0x10)
};

// Class ConZ.NumberPicker
// Size: 0x2a8 (Inherited: 0x268)
struct UNumberPicker : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UButton* _upArrowButton; // 0x280(0x08)
	struct UButton* _downArrowButton; // 0x288(0x08)
	struct UEditableText* _numberText; // 0x290(0x08)
	char pad_298[0x10]; // 0x298(0x10)

	void OnUpArrowButtonClicked(); // Function ConZ.NumberPicker.OnUpArrowButtonClicked // (Final|Native|Private) // @ game+0x244b5d0
	void OnTextChanged(struct FText& Text); // Function ConZ.NumberPicker.OnTextChanged // (Final|Native|Private|HasOutParms) // @ game+0x244b500
	void OnDownArrowButtonClicked(); // Function ConZ.NumberPicker.OnDownArrowButtonClicked // (Final|Native|Private) // @ game+0x244b370
};

// Class ConZ.ObjectCondition
// Size: 0x28 (Inherited: 0x28)
struct UObjectCondition : UInterface {
};

// Class ConZ.ObjectStatics
// Size: 0x28 (Inherited: 0x28)
struct UObjectStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ObstuctsEyesItemTag
// Size: 0x30 (Inherited: 0x30)
struct UObstuctsEyesItemTag : UBaseItemTag {
};

// Class ConZ.ObstuctsMouthItemTag
// Size: 0x30 (Inherited: 0x30)
struct UObstuctsMouthItemTag : UBaseItemTag {
};

// Class ConZ.OfflineRaidProtectionManager
// Size: 0x450 (Inherited: 0x3d0)
struct AOfflineRaidProtectionManager : ARaidProtectionManager {
	char pad_3D0[0x80]; // 0x3d0(0x80)
};

// Class ConZ.OpenItemAction
// Size: 0xb8 (Inherited: 0xa8)
struct UOpenItemAction : UInteractionAction {
	char pad_A8[0x10]; // 0xa8(0x10)
};

// Class ConZ.OutpostEntriesPanelWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UOutpostEntriesPanelWidget : UUserWidget {
	struct USearchBox* _searchBox; // 0x268(0x08)
	struct UVerticalBox* _entryContainer; // 0x270(0x08)
	char pad_278[0x20]; // 0x278(0x20)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x298(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x2a0(0x08)

	void OnAnyButtonHovered(); // Function ConZ.OutpostEntriesPanelWidget.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void HandleOnExpandAllClicked(); // Function ConZ.OutpostEntriesPanelWidget.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x244b1f0
	void HandleOnCollapseAllClicked(); // Function ConZ.OutpostEntriesPanelWidget.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x244b1d0
};

// Class ConZ.OutpostInformationDropdownWidget
// Size: 0x2e8 (Inherited: 0x268)
struct UOutpostInformationDropdownWidget : UUserWidget {
	struct TArray<struct FOutpostInformationTraderUIData> _outpostInformationTraderUIData; // 0x268(0x10)
	struct UOutpostTraderEntryWidget* _outpostTraderEntryWidgetClass; // 0x278(0x08)
	struct UImage* _background; // 0x280(0x08)
	struct UTextBlock* _outpostNameTextBlock; // 0x288(0x08)
	struct UCheckBox* _chbSwitchDropdownState; // 0x290(0x08)
	struct UVerticalBox* _entriesContainer; // 0x298(0x08)
	struct UOverlay* _titleOverlay; // 0x2a0(0x08)
	int32_t _unopenedFontSize; // 0x2a8(0x04)
	int32_t _openedFontSize; // 0x2ac(0x04)
	struct FLinearColor _unopenedBackgroundColorAndOpacity; // 0x2b0(0x10)
	struct FLinearColor _openedBackgroundColorAndOpacity; // 0x2c0(0x10)
	int32_t _sectorRow; // 0x2d0(0x04)
	int32_t _sectorColumn; // 0x2d4(0x04)
	char pad_2D8[0x10]; // 0x2d8(0x10)

	void OnDropdownStateChanged(bool isCollapsed); // Function ConZ.OutpostInformationDropdownWidget.OnDropdownStateChanged // (Final|Native|Private) // @ game+0x244b390
};

// Class ConZ.OutpostTraderDetailsPanelWidget
// Size: 0x2f0 (Inherited: 0x268)
struct UOutpostTraderDetailsPanelWidget : UUserWidget {
	struct UOverlay* _mainOverlay; // 0x268(0x08)
	struct UTextBlock* _entryName; // 0x270(0x08)
	struct UImage* _traderImage; // 0x278(0x08)
	struct UTextBlock* _lifetimeTotalQuests; // 0x280(0x08)
	struct UTextBlock* _lifetimeTier1Quests; // 0x288(0x08)
	struct UTextBlock* _lifetimeTier2Quests; // 0x290(0x08)
	struct UTextBlock* _lifetimeTier3Quests; // 0x298(0x08)
	struct UTextBlock* _currentCycleQuests; // 0x2a0(0x08)
	struct UVerticalBox* _availableSpecialDealsBox; // 0x2a8(0x08)
	struct UTextBlock* _availableSpecialDeals; // 0x2b0(0x08)
	char pad_2B8[0x38]; // 0x2b8(0x38)
};

// Class ConZ.OutpostTraderEntryWidget
// Size: 0x300 (Inherited: 0x268)
struct UOutpostTraderEntryWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UImage* _lockedIcon; // 0x280(0x08)
	struct UTextBlock* _traderName; // 0x288(0x08)
	struct UTextBlock* _traderStatus; // 0x290(0x08)
	struct FName _pixelSizeMaterialParameterName; // 0x298(0x08)
	struct FName _dpiMaterialParameterName; // 0x2a0(0x08)
	struct UMaterialInstance* _inactiveMaterialInstance; // 0x2a8(0x08)
	struct UMaterialInstance* _inactiveHoveredMaterialInstance; // 0x2b0(0x08)
	struct UMaterialInstance* _activeMaterialInstance; // 0x2b8(0x08)
	char pad_2C0[0x40]; // 0x2c0(0x40)
};

// Class ConZ.PaddleItemTag
// Size: 0x50 (Inherited: 0x30)
struct UPaddleItemTag : UBaseItemTag {
	struct UBlendSpace* PaddlingLHandAnimation; // 0x30(0x08)
	struct UBlendSpace* PaddlingRHandAnimation; // 0x38(0x08)
	struct UAnimSequence* PaddlingLToRAnimation; // 0x40(0x08)
	struct UAnimSequence* PaddlingRToLAnimation; // 0x48(0x08)
};

// Class ConZ.Paintable
// Size: 0x28 (Inherited: 0x28)
struct UPaintable : UInterface {
};

// Class ConZ.PaintJobColorsDataAsset
// Size: 0x40 (Inherited: 0x30)
struct UPaintJobColorsDataAsset : UDataAsset {
	struct TArray<struct FPaintJobColor> _paintJobColors; // 0x30(0x10)
};

// Class ConZ.PaintJobStatics
// Size: 0x28 (Inherited: 0x28)
struct UPaintJobStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ParachuteItemTag
// Size: 0x70 (Inherited: 0x30)
struct UParachuteItemTag : UBaseItemTag {
	struct FPrisonerAerialPoseData Pose; // 0x30(0x18)
	struct FParachuteAnimParams Animation; // 0x48(0x10)
	struct FPrisonerAirMovementParameters MovementParameters; // 0x58(0x18)
};

// Class ConZ.PauseMenu
// Size: 0x380 (Inherited: 0x268)
struct UPauseMenu : UBaseMenu {
	char pad_268[0xa8]; // 0x268(0xa8)
	struct UConZStandardButton* _resume; // 0x310(0x08)
	struct UConZStandardButton* _clientSettings; // 0x318(0x08)
	struct UConZStandardButton* _serverSettings; // 0x320(0x08)
	struct UConZStandardButton* _addToFavourites; // 0x328(0x08)
	struct UConZStandardButton* _commitSuicide; // 0x330(0x08)
	struct UConZStandardButton* _statistics; // 0x338(0x08)
	struct UConZStandardButton* _reportIllegalContent; // 0x340(0x08)
	struct UConZStandardButton* _mainMenu; // 0x348(0x08)
	struct UConZStandardButton* _quitGame; // 0x350(0x08)
	struct UTextBlock* _suicideTimeCooldown; // 0x358(0x08)
	struct UTextOnlyTooltip* _serverSettingsLockedTooltipClass; // 0x360(0x08)
	struct UTextOnlyTooltip* _serverSettingsLockedTooltip; // 0x368(0x08)
	char pad_370[0x10]; // 0x370(0x10)

	void OnStatisticsClicked(); // Function ConZ.PauseMenu.OnStatisticsClicked // (Final|Native|Private) // @ game+0x244b4e0
	void OnSettingsClicked(); // Function ConZ.PauseMenu.OnSettingsClicked // (Final|Native|Private) // @ game+0x244b4c0
	void OnServerSettingsClicked(); // Function ConZ.PauseMenu.OnServerSettingsClicked // (Final|Native|Private) // @ game+0x244b4a0
	void OnResumeClicked(); // Function ConZ.PauseMenu.OnResumeClicked // (Final|Native|Private) // @ game+0x244b480
	void OnReportIllegalContentClicked(); // Function ConZ.PauseMenu.OnReportIllegalContentClicked // (Final|Native|Private) // @ game+0x244b460
	void OnQuitGameClicked(); // Function ConZ.PauseMenu.OnQuitGameClicked // (Final|Native|Private) // @ game+0x244b440
	void OnExitToMainMenuClicked(); // Function ConZ.PauseMenu.OnExitToMainMenuClicked // (Final|Native|Private) // @ game+0x244b420
	void OnCommitSuicideClicked(); // Function ConZ.PauseMenu.OnCommitSuicideClicked // (Final|Native|Private) // @ game+0x244b350
	void OnAddToFavouritesClicked(); // Function ConZ.PauseMenu.OnAddToFavouritesClicked // (Final|Native|Private) // @ game+0x244b330
};

// Class ConZ.PauseMenuUIController
// Size: 0x50 (Inherited: 0x28)
struct UPauseMenuUIController : UObject {
	struct UAkAudioEvent* _resumeAllSounds; // 0x28(0x08)
	struct UAkAudioEvent* _stopAllSounds; // 0x30(0x08)
	struct UAkAudioEvent* _pauseAllSounds; // 0x38(0x08)
	char pad_40[0x10]; // 0x40(0x10)
};

// Class ConZ.PersistentCollisionManager
// Size: 0x260 (Inherited: 0x220)
struct APersistentCollisionManager : AActor {
	struct TArray<struct UPersistentLandscapeHeightfieldComponent*> _landscapeCollisionComponents; // 0x220(0x10)
	struct TArray<struct UPersistentStaticMeshComponent*> _staticMeshCollisionComponents; // 0x230(0x10)
	struct TArray<struct UPersistentPhysicalMaterial*> _physicalMaterials; // 0x240(0x10)
	struct TArray<struct UBodySetup*> _bodySetups; // 0x250(0x10)
};

// Class ConZ.PersistentPhysicalMaterial
// Size: 0x90 (Inherited: 0x88)
struct UPersistentPhysicalMaterial : UMaterialInterface {
	struct UPhysicalMaterial* PhysicalMaterial; // 0x88(0x08)
};

// Class ConZ.PersistentLandscapeHeightfieldComponent
// Size: 0x4d0 (Inherited: 0x460)
struct UPersistentLandscapeHeightfieldComponent : UPrimitiveComponent {
	struct FBox _cachedLocalBox; // 0x458(0x1c)
	int32_t _collisionSizeQuads; // 0x474(0x04)
	int32_t _simpleCollisionSizeQuads; // 0x478(0x04)
	float _collisionScale; // 0x47c(0x04)
	struct TArray<char> _cookedCollisionData; // 0x480(0x10)
	struct TArray<struct UPhysicalMaterial*> _cookedPhysicalMaterials; // 0x490(0x10)
	char pad_4A8[0x28]; // 0x4a8(0x28)
};

// Class ConZ.PersistentLandscapeMeshComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UPersistentLandscapeMeshComponent : UPersistentLandscapeHeightfieldComponent {
};

// Class ConZ.PersistentStaticMeshComponent
// Size: 0x480 (Inherited: 0x460)
struct UPersistentStaticMeshComponent : UPrimitiveComponent {
	struct TArray<int32_t> _materials; // 0x458(0x10)
	int32_t _bodySetupIndex; // 0x468(0x04)
	char pad_474[0xc]; // 0x474(0x0c)
};

// Class ConZ.PersistentSplineMeshComponent
// Size: 0x480 (Inherited: 0x480)
struct UPersistentSplineMeshComponent : UPersistentStaticMeshComponent {
};

// Class ConZ.PersistentInstancedStaticMeshComponent
// Size: 0x4a0 (Inherited: 0x480)
struct UPersistentInstancedStaticMeshComponent : UPersistentStaticMeshComponent {
	struct TArray<struct FMatrix> _perInstanceTransform; // 0x478(0x10)
	char pad_490[0x10]; // 0x490(0x10)
};

// Class ConZ.PesticideItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct APesticideItem : AItem {
	struct USkeletalMeshComponent* SkeletalMesh; // 0x9a8(0x08)
	enum class EPesticideType _type; // 0x9b0(0x01)
	struct UAnimMontage* _applyPesticidePrisonerMontage; // 0x9b8(0x08)
	struct UAnimMontage* _applyPesticideItemMontage; // 0x9c0(0x08)
	char pad_9C9[0x7]; // 0x9c9(0x07)
};

// Class ConZ.PhoenixTearsComponent
// Size: 0xd8 (Inherited: 0xc8)
struct UPhoenixTearsComponent : UItemComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct UAnimMontage* _itemInjectionMontage; // 0xd0(0x08)
};

// Class ConZ.PhotoModeMainPanel
// Size: 0x468 (Inherited: 0x268)
struct UPhotoModeMainPanel : UUserWidget {
	struct UHorizontalBox* _photoModeUI; // 0x268(0x08)
	struct UCanvasPanel* _photoModeGrid; // 0x270(0x08)
	struct UPanelWidget* _mainPanelContainer; // 0x278(0x08)
	struct UTabGroup* _coreMenuTabButtons; // 0x280(0x08)
	struct UWidgetSwitcher* _coreMenu; // 0x288(0x08)
	struct UOverlay* _inputLegend; // 0x290(0x08)
	struct UImage* _gridLine0; // 0x298(0x08)
	struct UImage* _gridLine1; // 0x2a0(0x08)
	struct UImage* _gridLine2; // 0x2a8(0x08)
	struct UImage* _gridLine3; // 0x2b0(0x08)
	struct UImage* _frameDisplay; // 0x2b8(0x08)
	struct UImage* _logoDisplay; // 0x2c0(0x08)
	struct UTextBlock* _moveCameraBinding; // 0x2c8(0x08)
	struct UTextBlock* _rotateCameraBinding; // 0x2d0(0x08)
	struct UTextBlock* _dollyCameraBinding; // 0x2d8(0x08)
	struct UTextBlock* _takePhotoBinding; // 0x2e0(0x08)
	struct UTextBlock* _showHideUIBinding; // 0x2e8(0x08)
	struct UTextBlock* _cycleGridsBinding; // 0x2f0(0x08)
	struct FText _cameraTabTitle; // 0x2f8(0x18)
	struct FText _effectsTabTitle; // 0x310(0x18)
	struct FText _frameTabTitle; // 0x328(0x18)
	struct FText _bodyTabTitle; // 0x340(0x18)
	struct TArray<struct TSoftObjectPtr<UTexture>> _frames; // 0x358(0x10)
	char pad_368[0x8]; // 0x368(0x08)
	struct UTabButton* _buttonClass; // 0x370(0x08)
	struct UCarouselWithLabel* _cameraMode; // 0x378(0x08)
	struct USliderWithLabelAndNumber* _cameraTilt; // 0x380(0x08)
	struct USliderWithLabelAndNumber* _fieldOfView; // 0x388(0x08)
	struct USliderWithLabelAndNumber* _depthOfField; // 0x390(0x08)
	struct USliderWithLabelAndNumber* _focusDistance; // 0x398(0x08)
	struct USliderWithLabelAndNumber* _selfieLight; // 0x3a0(0x08)
	struct USliderWithLabelAndNumber* _exposure; // 0x3a8(0x08)
	struct USliderWithLabelAndNumber* _contrast; // 0x3b0(0x08)
	struct USliderWithLabelAndNumber* _vignette; // 0x3b8(0x08)
	struct USliderWithLabelAndNumber* _chromaticAberration; // 0x3c0(0x08)
	struct USliderWithLabelAndNumber* _grain; // 0x3c8(0x08)
	struct USliderWithLabelAndNumber* _time; // 0x3d0(0x08)
	struct UCarouselWithLabel* _frame; // 0x3d8(0x08)
	struct UCarouselWithLabel* _logo; // 0x3e0(0x08)
	struct UCarouselWithLabel* _aspectRatio; // 0x3e8(0x08)
	struct UCarouselWithLabel* _lookAtCamera; // 0x3f0(0x08)
	struct UCarouselWithLabel* _upperBodyPose; // 0x3f8(0x08)
	struct UCarouselWithLabel* _lowerBodyPose; // 0x400(0x08)
	struct UCarouselWithLabel* _facialExpression; // 0x408(0x08)
	struct UTextBlock* _selfieModeNote; // 0x410(0x08)
	struct UTextBlock* _bodyPoseNote; // 0x418(0x08)
	char pad_420[0x48]; // 0x420(0x48)

	void UpdateFrame(); // Function ConZ.PhotoModeMainPanel.UpdateFrame // (Final|Native|Private) // @ game+0x244b5f0
	struct UWidget* MoveFocusUp(enum class EUINavigation UINavigation); // Function ConZ.PhotoModeMainPanel.MoveFocusUp // (Final|Native|Private|BlueprintCallable) // @ game+0x244b2a0
	struct UWidget* MoveFocusDown(enum class EUINavigation UINavigation); // Function ConZ.PhotoModeMainPanel.MoveFocusDown // (Final|Native|Private|BlueprintCallable) // @ game+0x244b210
};

// Class ConZ.PhotoModePawn
// Size: 0x3e0 (Inherited: 0x280)
struct APhotoModePawn : APawn {
	char pad_280[0x8]; // 0x280(0x08)
	struct UPhotoModeMainPanel* HudWidgetClass; // 0x288(0x08)
	struct UPrisonerPhotoModeAnimInstance* AnimInstanceClass; // 0x290(0x08)
	char pad_298[0x10]; // 0x298(0x10)
	struct UCineCameraComponent* _camera; // 0x2a8(0x08)
	struct USpotLightComponent* _light; // 0x2b0(0x08)
	struct UVisionEffectsComponent* _visionEffects; // 0x2b8(0x08)
	struct UAkAudioEvent* _shutterSound; // 0x2c0(0x08)
	float _maxFocusDistance; // 0x2c8(0x04)
	float _collisionSphereRadius; // 0x2cc(0x04)
	float _minOrbitingDistance; // 0x2d0(0x04)
	float _maxDistanceFromTarget; // 0x2d4(0x04)
	float _desiredOrbitDistance; // 0x2d8(0x04)
	float _maxMultiplayerCameraHeightDifference; // 0x2dc(0x04)
	float _maxMultiplayerExposureValue; // 0x2e0(0x04)
	float _maxMultiplayerCameraFOV; // 0x2e4(0x04)
	float _keyInputCameraSpeed; // 0x2e8(0x04)
	float _timeDilationInterpSpeed; // 0x2ec(0x04)
	char pad_2F0[0xf0]; // 0x2f0(0xf0)

	void SetGameAudioPaused(bool paused); // Function ConZ.PhotoModePawn.SetGameAudioPaused // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnFadeOutFinished(); // Function ConZ.PhotoModePawn.OnFadeOutFinished // (Final|Native|Private) // @ game+0x244fc50
	void Client_Initialize(struct AActor* Target); // Function ConZ.PhotoModePawn.Client_Initialize // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x244fbc0
};

// Class ConZ.PhysicalSurfacesData
// Size: 0x6e8 (Inherited: 0x30)
struct UPhysicalSurfacesData : UDataAsset {
	struct FPhysicalSurfaceData Default; // 0x30(0x28)
	struct FPhysicalSurfaceData grass; // 0x58(0x28)
	struct FPhysicalSurfaceData ForrestGroundCoastal; // 0x80(0x28)
	struct FPhysicalSurfaceData ForrestGroundContinental; // 0xa8(0x28)
	struct FPhysicalSurfaceData Rock; // 0xd0(0x28)
	struct FPhysicalSurfaceData Stone; // 0xf8(0x28)
	struct FPhysicalSurfaceData Gravel; // 0x120(0x28)
	struct FPhysicalSurfaceData GravelBeach; // 0x148(0x28)
	struct FPhysicalSurfaceData Pebbles; // 0x170(0x28)
	struct FPhysicalSurfaceData Snow; // 0x198(0x28)
	struct FPhysicalSurfaceData Ice; // 0x1c0(0x28)
	struct FPhysicalSurfaceData Sand; // 0x1e8(0x28)
	struct FPhysicalSurfaceData Asphalt; // 0x210(0x28)
	struct FPhysicalSurfaceData Dirt; // 0x238(0x28)
	struct FPhysicalSurfaceData Water; // 0x260(0x28)
	struct FPhysicalSurfaceData WaterOcean; // 0x288(0x28)
	struct FPhysicalSurfaceData Cloth; // 0x2b0(0x28)
	struct FPhysicalSurfaceData Metal; // 0x2d8(0x28)
	struct FPhysicalSurfaceData Aluminium; // 0x300(0x28)
	struct FPhysicalSurfaceData Concrete; // 0x328(0x28)
	struct FPhysicalSurfaceData Brick; // 0x350(0x28)
	struct FPhysicalSurfaceData Wood; // 0x378(0x28)
	struct FPhysicalSurfaceData Plastic; // 0x3a0(0x28)
	struct FPhysicalSurfaceData Rubber; // 0x3c8(0x28)
	struct FPhysicalSurfaceData Glass; // 0x3f0(0x28)
	struct FPhysicalSurfaceData Foliage; // 0x418(0x28)
	struct FPhysicalSurfaceData Bark; // 0x440(0x28)
	struct FPhysicalSurfaceData Flesh; // 0x468(0x28)
	struct FPhysicalSurfaceData RoofTile; // 0x490(0x28)
	struct FPhysicalSurfaceData CeramicTiles; // 0x4b8(0x28)
	struct FPhysicalSurfaceData Scrap; // 0x4e0(0x28)
	struct FPhysicalSurfaceData Trunk; // 0x508(0x28)
	struct FPhysicalSurfaceData Leaves; // 0x530(0x28)
	struct FPhysicalSurfaceData Fruit; // 0x558(0x28)
	struct FPhysicalSurfaceData Cardboard; // 0x580(0x28)
	struct FPhysicalSurfaceData Plaster; // 0x5a8(0x28)
	struct FPhysicalSurfaceData Kevlar; // 0x5d0(0x28)
	struct FPhysicalSurfaceData ForceField; // 0x5f8(0x28)
	struct FPhysicalSurfaceData NoEffect; // 0x620(0x28)
	struct FPhysicalSurfaceData WhiteGravel; // 0x648(0x28)
	struct FPhysicalSurfaceData Mud; // 0x670(0x28)
	struct FPhysicalSurfaceData RiverSand; // 0x698(0x28)
	struct FPhysicalSurfaceData GrassContinental; // 0x6c0(0x28)
};

// Class ConZ.PhysicalSurfacesEffectsData
// Size: 0xda0 (Inherited: 0x30)
struct UPhysicalSurfacesEffectsData : UDataAsset {
	struct FPhysicalSurfaceEffectsData Default; // 0x30(0x50)
	struct FPhysicalSurfaceEffectsData grass; // 0x80(0x50)
	struct FPhysicalSurfaceEffectsData ForrestGroundCoastal; // 0xd0(0x50)
	struct FPhysicalSurfaceEffectsData ForrestGroundContinental; // 0x120(0x50)
	struct FPhysicalSurfaceEffectsData Rock; // 0x170(0x50)
	struct FPhysicalSurfaceEffectsData Stone; // 0x1c0(0x50)
	struct FPhysicalSurfaceEffectsData Gravel; // 0x210(0x50)
	struct FPhysicalSurfaceEffectsData GravelBeach; // 0x260(0x50)
	struct FPhysicalSurfaceEffectsData Pebbles; // 0x2b0(0x50)
	struct FPhysicalSurfaceEffectsData Snow; // 0x300(0x50)
	struct FPhysicalSurfaceEffectsData Ice; // 0x350(0x50)
	struct FPhysicalSurfaceEffectsData Sand; // 0x3a0(0x50)
	struct FPhysicalSurfaceEffectsData Asphalt; // 0x3f0(0x50)
	struct FPhysicalSurfaceEffectsData Dirt; // 0x440(0x50)
	struct FPhysicalSurfaceEffectsData Water; // 0x490(0x50)
	struct FPhysicalSurfaceEffectsData WaterOcean; // 0x4e0(0x50)
	struct FPhysicalSurfaceEffectsData Cloth; // 0x530(0x50)
	struct FPhysicalSurfaceEffectsData Metal; // 0x580(0x50)
	struct FPhysicalSurfaceEffectsData Aluminium; // 0x5d0(0x50)
	struct FPhysicalSurfaceEffectsData Concrete; // 0x620(0x50)
	struct FPhysicalSurfaceEffectsData Brick; // 0x670(0x50)
	struct FPhysicalSurfaceEffectsData Wood; // 0x6c0(0x50)
	struct FPhysicalSurfaceEffectsData Plastic; // 0x710(0x50)
	struct FPhysicalSurfaceEffectsData Rubber; // 0x760(0x50)
	struct FPhysicalSurfaceEffectsData Glass; // 0x7b0(0x50)
	struct FPhysicalSurfaceEffectsData Foliage; // 0x800(0x50)
	struct FPhysicalSurfaceEffectsData Bark; // 0x850(0x50)
	struct FPhysicalSurfaceEffectsData Flesh; // 0x8a0(0x50)
	struct FPhysicalSurfaceEffectsData RoofTile; // 0x8f0(0x50)
	struct FPhysicalSurfaceEffectsData CeramicTiles; // 0x940(0x50)
	struct FPhysicalSurfaceEffectsData Scrap; // 0x990(0x50)
	struct FPhysicalSurfaceEffectsData Trunk; // 0x9e0(0x50)
	struct FPhysicalSurfaceEffectsData Leaves; // 0xa30(0x50)
	struct FPhysicalSurfaceEffectsData Fruit; // 0xa80(0x50)
	struct FPhysicalSurfaceEffectsData Cardboard; // 0xad0(0x50)
	struct FPhysicalSurfaceEffectsData Plaster; // 0xb20(0x50)
	struct FPhysicalSurfaceEffectsData Kevlar; // 0xb70(0x50)
	struct FPhysicalSurfaceEffectsData ForceField; // 0xbc0(0x50)
	struct FPhysicalSurfaceEffectsData NoEffect; // 0xc10(0x50)
	struct FPhysicalSurfaceEffectsData WhiteGravel; // 0xc60(0x50)
	struct FPhysicalSurfaceEffectsData Mud; // 0xcb0(0x50)
	struct FPhysicalSurfaceEffectsData RiverSand; // 0xd00(0x50)
	struct FPhysicalSurfaceEffectsData GrassContinental; // 0xd50(0x50)
};

// Class ConZ.Physician
// Size: 0x28 (Inherited: 0x28)
struct UPhysician : UInterface {
};

// Class ConZ.PhysicsStatics
// Size: 0x28 (Inherited: 0x28)
struct UPhysicsStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PickupItemAction
// Size: 0xa8 (Inherited: 0xa8)
struct UPickupItemAction : UInteractionAction {
};

// Class ConZ.PickupItemAssetData
// Size: 0x38 (Inherited: 0x30)
struct UPickupItemAssetData : UInteractionAssetData {
	struct AItem* Item; // 0x30(0x08)
};

// Class ConZ.PlaceableActorBaseReplicatedState
// Size: 0x50 (Inherited: 0x28)
struct UPlaceableActorBaseReplicatedState : UObject {
	char pad_28[0x28]; // 0x28(0x28)
};

// Class ConZ.PlaceableActorBase
// Size: 0x4f0 (Inherited: 0x220)
struct APlaceableActorBase : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct FDbIntegerId _id; // 0x228(0x08)
	struct UBoxComponent* _boxCollisionComponent; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UPlaceableCraftingRecipe* _craftingRecipe; // 0x240(0x08)
	struct UObject* _productClass; // 0x248(0x08)
	struct FCraftingProcess _craftingProcess; // 0x250(0x20)
	struct USceneComponent* _rootComponent; // 0x270(0x08)
	struct UStaticMeshComponent* _staticMeshComponent_Main; // 0x278(0x08)
	struct UStaticMeshComponent* _staticMeshComponent_Outline; // 0x280(0x08)
	struct UStaticMeshComponent* _staticMeshComponent_Depth; // 0x288(0x08)
	struct UStaticMeshComponent* _queryStaticMeshComponent; // 0x290(0x08)
	struct UStaticMeshComponent* _directionIndicatorStaticMeshComponent; // 0x298(0x08)
	struct UMaterialInstanceDynamic* _primaryMaterialAllowed; // 0x2a0(0x08)
	struct UMaterialInstanceDynamic* _primaryMaterialDisallowed; // 0x2a8(0x08)
	struct UMaterialInstanceDynamic* _outlineMaterial; // 0x2b0(0x08)
	struct UMaterialInstanceDynamic* _depthMaterial; // 0x2b8(0x08)
	char pad_2C0[0x38]; // 0x2c0(0x38)
	enum class EPlaceableStatusFlags _statusFlags; // 0x2f8(0x01)
	char pad_2F9[0x1f]; // 0x2f9(0x1f)
	enum class EPlacementBaseState _placementState; // 0x318(0x01)
	char pad_319[0x93]; // 0x319(0x93)
	int32_t _numTracesX; // 0x3ac(0x04)
	int32_t _numTracesY; // 0x3b0(0x04)
	float _traceHeightFactor; // 0x3b4(0x04)
	float _maxPlacementAngle; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	float _widgetHidingDistance; // 0x3c0(0x04)
	float _fullWidgetHidingDistance; // 0x3c4(0x04)
	float _widgetSwitchPeriod; // 0x3c8(0x04)
	float _minDistanceToShowWidget; // 0x3cc(0x04)
	float _syncPeriod; // 0x3d0(0x04)
	float _reachabilityMaxDifference; // 0x3d4(0x04)
	float _directionIndicatorOffset; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct FText _destroyInteractionText; // 0x3e0(0x18)
	struct FVector _replicatedLocation; // 0x3f8(0x0c)
	struct FVector _replicatedPlacedLocation; // 0x404(0x0c)
	struct FRotator _replicatedRotation; // 0x410(0x0c)
	char pad_41C[0xd4]; // 0x41c(0xd4)

	void Server_UpdateState(struct FPlaceableActorStateReplicationHelper State); // Function ConZ.PlaceableActorBase.Server_UpdateState // (Final|Net|Native|Event|Private|NetServer) // @ game+0x244fee0
	void Server_Place(struct FVector Location, struct FRotator Rotation); // Function ConZ.PlaceableActorBase.Server_Place // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x244fe10
	void OnRep_ReplicatedRotation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedRotation // (Final|Native|Private) // @ game+0x244fdf0
	void OnRep_ReplicatedPlacedLocation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedPlacedLocation // (Final|Native|Private) // @ game+0x244fdd0
	void OnRep_ReplicatedLocation(); // Function ConZ.PlaceableActorBase.OnRep_ReplicatedLocation // (Final|Native|Private) // @ game+0x244fdb0
	void OnRep_PlacementState(); // Function ConZ.PlaceableActorBase.OnRep_PlacementState // (Final|Native|Private) // @ game+0x244fd30
	void OnRep_Id(); // Function ConZ.PlaceableActorBase.OnRep_Id // (Final|Native|Private) // @ game+0x244fd10
	void OnRep_CraftingRecipe(); // Function ConZ.PlaceableActorBase.OnRep_CraftingRecipe // (Final|Native|Private) // @ game+0x244fc90
	void OnRep_CraftingProcess(); // Function ConZ.PlaceableActorBase.OnRep_CraftingProcess // (Final|Native|Private) // @ game+0x244fc70
};

// Class ConZ.PlaceableActorBaseBuildingReplicatedState
// Size: 0x70 (Inherited: 0x50)
struct UPlaceableActorBaseBuildingReplicatedState : UPlaceableActorBaseReplicatedState {
	char pad_50[0x20]; // 0x50(0x20)
};

// Class ConZ.PlaceableActorBaseBuilding
// Size: 0x5f0 (Inherited: 0x4f0)
struct APlaceableActorBaseBuilding : APlaceableActorBase {
	int32_t _maxNumberOfTiles; // 0x4f0(0x04)
	float _maxHeightDifferenceForTiling; // 0x4f4(0x04)
	float _maxTileHeightAdjustionUp; // 0x4f8(0x04)
	float _maxTileHeightAdjustionDown; // 0x4fc(0x04)
	float _tileSnappingAngle; // 0x500(0x04)
	float _sizeVariatedTilesMaxHeightDifference; // 0x504(0x04)
	float _maxGroundPointDistance; // 0x508(0x04)
	float _groundPointsTraceHeight; // 0x50c(0x04)
	float _groundPointsTraceDepth; // 0x510(0x04)
	float _maxPlacementLengthForSizeVariatedTiles; // 0x514(0x04)
	char pad_518[0x38]; // 0x518(0x38)
	struct FTilesData _tilesData; // 0x550(0x18)
	struct UStaticMeshComponent* _flagAreaMeshComponent; // 0x568(0x08)
	struct UMaterialInstanceDynamic* _primaryMaterialFriendlyFlag; // 0x570(0x08)
	struct FVector _replicatedFirstPointLocation; // 0x578(0x0c)
	struct FRotator _replicatedFirstPointRotation; // 0x584(0x0c)
	enum class EPlacementBaseBuildingState _placementSubState; // 0x590(0x01)
	enum class EStateFlags _stateFlags; // 0x591(0x01)
	char pad_592[0x36]; // 0x592(0x36)
	struct TArray<struct FSizeVariatedTilesData> _sizeVariationData; // 0x5c8(0x10)
	char pad_5D8[0x18]; // 0x5d8(0x18)

	void OnRep_ReplicatedFirstPointRotation(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointRotation // (Final|Native|Private) // @ game+0x244fd90
	void OnRep_ReplicatedFirstPointLocation(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_ReplicatedFirstPointLocation // (Final|Native|Private) // @ game+0x244fd70
	void OnRep_PlacementSubState(); // Function ConZ.PlaceableActorBaseBuilding.OnRep_PlacementSubState // (Final|Native|Private) // @ game+0x244fd50
};

// Class ConZ.PlaceableActorBaseUpgrade
// Size: 0x558 (Inherited: 0x4f0)
struct APlaceableActorBaseUpgrade : APlaceableActorBase {
	struct FConZBaseElementIdentifier _elementToBeUpgraded; // 0x4f0(0x20)
	char pad_510[0x48]; // 0x510(0x48)

	void OnRep_ElementToBeUpgraded(); // Function ConZ.PlaceableActorBaseUpgrade.OnRep_ElementToBeUpgraded // (Final|Native|Private) // @ game+0x244fcb0
};

// Class ConZ.PlaceableActorFortifications
// Size: 0x538 (Inherited: 0x4f0)
struct APlaceableActorFortifications : APlaceableActorBase {
	char pad_4F0[0x48]; // 0x4f0(0x48)
};

// Class ConZ.PlaceableActorGardenReplicatedState
// Size: 0x68 (Inherited: 0x50)
struct UPlaceableActorGardenReplicatedState : UPlaceableActorBaseReplicatedState {
	char pad_50[0x18]; // 0x50(0x18)
};

// Class ConZ.PlaceableActorGarden
// Size: 0x5c0 (Inherited: 0x4f0)
struct APlaceableActorGarden : APlaceableActorBase {
	enum class EGardenPlacementState _gardenPlacementState; // 0x4f0(0x01)
	char pad_4F1[0x37]; // 0x4f1(0x37)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Main; // 0x528(0x10)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Outline; // 0x538(0x10)
	struct TArray<struct UStaticMeshComponent*> _staticMeshComponents_Depth; // 0x548(0x10)
	struct TArray<struct UStaticMeshComponent*> _directionIndicatorStaticMeshComponents; // 0x558(0x10)
	struct FBox2D _replicatedGardenSize; // 0x568(0x14)
	char pad_57C[0x34]; // 0x57c(0x34)
	struct FGameplayTag _maxInstancesServerSettingTag; // 0x5b0(0x08)
	char pad_5B8[0x8]; // 0x5b8(0x08)

	void OnRep_GardenSize(); // Function ConZ.PlaceableActorGarden.OnRep_GardenSize // (Final|Native|Private) // @ game+0x244fcf0
	void OnRep_GardenPlacementState(); // Function ConZ.PlaceableActorGarden.OnRep_GardenPlacementState // (Final|Native|Private) // @ game+0x244fcd0
};

// Class ConZ.PlaceableActorItems
// Size: 0x4f8 (Inherited: 0x4f0)
struct APlaceableActorItems : APlaceableActorBase {
	char pad_4F0[0x8]; // 0x4f0(0x08)
};

// Class ConZ.PlaceableActorModularBaseBuilding
// Size: 0x680 (Inherited: 0x5f0)
struct APlaceableActorModularBaseBuilding : APlaceableActorBaseBuilding {
	char pad_5F0[0x90]; // 0x5f0(0x90)
};

// Class ConZ.PlaceableActorModularBaseBuildingFoundation
// Size: 0x6b0 (Inherited: 0x680)
struct APlaceableActorModularBaseBuildingFoundation : APlaceableActorModularBaseBuilding {
	struct TArray<struct FLineTraceSocketPair> _lineTraceSockets; // 0x680(0x10)
	bool _shouldCheckBaseBuildingElementsInFirstBoxOverlap; // 0x690(0x01)
	char pad_691[0x1f]; // 0x691(0x1f)
};

// Class ConZ.PlaceableActorTurret
// Size: 0x5f8 (Inherited: 0x5f0)
struct APlaceableActorTurret : APlaceableActorBaseBuilding {
	char pad_5F0[0x8]; // 0x5f0(0x08)
};

// Class ConZ.PlaceableElementWidget
// Size: 0x280 (Inherited: 0x268)
struct UPlaceableElementWidget : UUserWidget {
	struct UImage* _icon; // 0x268(0x08)
	struct UButton* _destroyButton; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)

	void Init(struct APlaceableActorBase* PlaceableActor); // Function ConZ.PlaceableElementWidget.Init // (Native|Event|Public|BlueprintEvent) // @ game+0x24541a0
	void DestroyPlaceable(); // Function ConZ.PlaceableElementWidget.DestroyPlaceable // (Final|Native|Private) // @ game+0x2453f70
};

// Class ConZ.PlaceableOnRackItemTag
// Size: 0x38 (Inherited: 0x30)
struct UPlaceableOnRackItemTag : UBaseItemTag {
	struct FName SocketName; // 0x30(0x08)
};

// Class ConZ.PlaceableOnRackLargeItemTag
// Size: 0x38 (Inherited: 0x38)
struct UPlaceableOnRackLargeItemTag : UPlaceableOnRackItemTag {
};

// Class ConZ.PlaceableOnWallRackItemTag
// Size: 0x38 (Inherited: 0x38)
struct UPlaceableOnWallRackItemTag : UPlaceableOnRackItemTag {
};

// Class ConZ.PlacedPlaceableWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UPlacedPlaceableWidget : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UHorizontalBox* _topRow; // 0x2b8(0x08)
	struct UHorizontalBox* _bottomRow; // 0x2c0(0x08)
};

// Class ConZ.PlantGrowthDisplay
// Size: 0x278 (Inherited: 0x220)
struct APlantGrowthDisplay : AActor {
	struct UPlantSpecies* _plantSpecies; // 0x220(0x08)
	bool _animateGrowth; // 0x228(0x01)
	char pad_229[0x3]; // 0x229(0x03)
	float _growthSpeed; // 0x22c(0x04)
	float _growthPercentage; // 0x230(0x04)
	float _dehydration; // 0x234(0x04)
	float _pestsIntensity; // 0x238(0x04)
	float _diseasesIntensity; // 0x23c(0x04)
	struct FString _stageText; // 0x240(0x10)
	struct UNiagaraSystem* _pestsParticleSystem; // 0x250(0x08)
	struct UNiagaraComponent* _pestsParticleComponent; // 0x258(0x08)
	char pad_260[0x18]; // 0x260(0x18)

	struct FString GetPlantGrowthStageString(float growth, struct UPlantSpecies* species); // Function ConZ.PlantGrowthDisplay.GetPlantGrowthStageString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2454090
	float GetPlantGrowthStagePercentage(float growth, struct UPlantSpecies* species); // Function ConZ.PlantGrowthDisplay.GetPlantGrowthStagePercentage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2453fc0
	float GetGrowthPercentage(); // Function ConZ.PlantGrowthDisplay.GetGrowthPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2453f90
};

// Class ConZ.PlantingPanel
// Size: 0x390 (Inherited: 0x268)
struct UPlantingPanel : UUserWidget {
	struct UImageSlotWidget* _seedSlot; // 0x268(0x08)
	struct UImageSlotWidget* _fertilizerSlot; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	struct FSlateBrush _organicFertilizerIcon; // 0x280(0x88)
	struct FSlateBrush _industrialFertilizerIcon; // 0x308(0x88)
};

// Class ConZ.PlantingPanelUIController
// Size: 0x50 (Inherited: 0x28)
struct UPlantingPanelUIController : UObject {
	char pad_28[0x28]; // 0x28(0x28)
};

// Class ConZ.PlantSeedComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UPlantSeedComponent : UItemComponent {
	struct UPlantSpecies* _speciesData; // 0xc8(0x08)
};

// Class ConZ.PlantPestSpecies
// Size: 0x50 (Inherited: 0x30)
struct UPlantPestSpecies : UDataAsset {
	struct FText SpeciesName; // 0x30(0x18)
	float HarvestingReductionPercentage; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.PlantDiseaseSpecies
// Size: 0x50 (Inherited: 0x30)
struct UPlantDiseaseSpecies : UDataAsset {
	struct FText SpeciesName; // 0x30(0x18)
	float HarvestingReductionPercentage; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.PlantSpecies
// Size: 0x100 (Inherited: 0x30)
struct UPlantSpecies : UDataAsset {
	struct FText SpeciesName; // 0x30(0x18)
	struct FFloatInterval SeedsOptimaltemperature; // 0x48(0x08)
	struct FFloatInterval GrowthOptimalTemperature; // 0x50(0x08)
	float StageGrowthTimeGameHours; // 0x58(0x04)
	enum class EPlantGrowthStage LastStage; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	float LastStageLifetime; // 0x60(0x04)
	float LastStageDeathStartPercent; // 0x64(0x04)
	struct TArray<struct UPlantPestSpecies*> Pests; // 0x68(0x10)
	struct TArray<struct UPlantDiseaseSpecies*> Diseases; // 0x78(0x10)
	struct AItem* Seed; // 0x88(0x08)
	struct FPlantMeshData PlantMesh; // 0x90(0x70)
};

// Class ConZ.PlantStatusIndicatorWidget
// Size: 0x508 (Inherited: 0x268)
struct UPlantStatusIndicatorWidget : UUserWidget {
	struct UTextBlock* _speciesNameText; // 0x268(0x08)
	struct UTextBlock* _growthStageText; // 0x270(0x08)
	struct UTextBlock* _sunEnergyRateText; // 0x278(0x08)
	struct UTextBlock* _waterAmountText; // 0x280(0x08)
	struct UTextBlock* _fertilizerText; // 0x288(0x08)
	struct UVerticalBox* _conditionVerticalBox; // 0x290(0x08)
	struct UHorizontalBox* _pestHorizontalBox; // 0x298(0x08)
	struct UImage* _pestStatusIcon; // 0x2a0(0x08)
	struct UTextBlock* _pestStatusText; // 0x2a8(0x08)
	struct UHorizontalBox* _diseaseHorizontalBox; // 0x2b0(0x08)
	struct UImage* _diseaseStatusIcon; // 0x2b8(0x08)
	struct UTextBlock* _diseaseStatusText; // 0x2c0(0x08)
	struct UHorizontalBox* _weedsHorizontalBox; // 0x2c8(0x08)
	struct UImage* _weedsStatusIcon; // 0x2d0(0x08)
	struct UTextBlock* _weedsStatusText; // 0x2d8(0x08)
	struct FSlateBrush _pestIconBrush; // 0x2e0(0x88)
	struct FSlateBrush _diseaseIconBrush; // 0x368(0x88)
	struct FSlateBrush _weedsIconBrush; // 0x3f0(0x88)
	struct FSlateBrush _treatmentIconBrush; // 0x478(0x88)
	char pad_500[0x8]; // 0x500(0x08)
};

// Class ConZ.PlantStatusIndicatorUIController
// Size: 0x38 (Inherited: 0x28)
struct UPlantStatusIndicatorUIController : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.TradeableDiscountCondition
// Size: 0x28 (Inherited: 0x28)
struct UTradeableDiscountCondition : UObject {
};

// Class ConZ.PlasticSurgeryDiscountCondition
// Size: 0x28 (Inherited: 0x28)
struct UPlasticSurgeryDiscountCondition : UTradeableDiscountCondition {
};

// Class ConZ.PlasticSurgeryMenuWidget
// Size: 0x438 (Inherited: 0x268)
struct UPlasticSurgeryMenuWidget : UBaseMenu {
	char pad_268[0x8]; // 0x268(0x08)
	struct UOverlay* _overlayMenu; // 0x270(0x08)
	struct UWidgetSwitcher* _pageSwitcher; // 0x278(0x08)
	struct UTrashNamedCarouselWidget* _carouselGender; // 0x280(0x08)
	struct UTrashNamedSliderWidget* _sliderHead; // 0x288(0x08)
	struct UTrashNamedCarouselWidget* _carouselHairiness; // 0x290(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _appearanceUpgradeConditionDisplay; // 0x298(0x08)
	struct UPresetColorPicker* _presetColorPickerSkinTone; // 0x2a0(0x08)
	struct UTrashNamedSliderWidget* _sliderAge; // 0x2a8(0x08)
	struct UTrashNamedCarouselWidget* _carouselConcealedMode; // 0x2b0(0x08)
	struct UTrashNamedSliderWidget* _sliderPenisBreastSize; // 0x2b8(0x08)
	struct UTrashNamedCarouselWidget* _carouselTattoos; // 0x2c0(0x08)
	struct UTrashNamedSliderWidget* _sliderTattooStyle; // 0x2c8(0x08)
	struct UCCGameUpgradeConditionDisplayWidget* _tattooUpgradeConditionDisplay; // 0x2d0(0x08)
	struct UConZStandardButton* _buttonRandomizeCharacter; // 0x2d8(0x08)
	struct UConZStandardButton* _buttonNextToFace; // 0x2e0(0x08)
	struct UTrashNamedSliderWidget* _sliderFaceType; // 0x2e8(0x08)
	struct UPresetColorPicker* _presetColorPickerEyeColor; // 0x2f0(0x08)
	struct UTrashNamedSliderWidget* _sliderIrisType; // 0x2f8(0x08)
	struct UConZStandardButton* _buttonBackToCharacter; // 0x300(0x08)
	struct UConZStandardButton* _buttonRandomizeFace; // 0x308(0x08)
	struct UConZStandardButton* _buttonApplyPlasticSurgery; // 0x310(0x08)
	struct UConZStandardButton* _buttonApplyPlasticSurgeryDeluxeCharacters; // 0x318(0x08)
	struct UOverlay* _overlayPlasticSurgeryConfirmation; // 0x320(0x08)
	struct UConZStandardButton* _buttonCancelConfirmation; // 0x328(0x08)
	struct UConZStandardButton* _buttonContinueConfirmation; // 0x330(0x08)
	struct UScrollBox* _faceOptionsScrollbox; // 0x338(0x08)
	char pad_340[0xf8]; // 0x340(0xf8)

	void OnRandomizeFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnRandomizeFaceClicked // (Final|Native|Private) // @ game+0x2454310
	void OnRandomizeCharacterClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnRandomizeCharacterClicked // (Final|Native|Private) // @ game+0x24542f0
	void OnNextToFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnNextToFaceClicked // (Final|Native|Private) // @ game+0x24542b0
	void OnContinueClickedInConfirmationPanel(); // Function ConZ.PlasticSurgeryMenuWidget.OnContinueClickedInConfirmationPanel // (Final|Native|Private) // @ game+0x2454290
	void OnCancelClickedInConfirmationPanel(); // Function ConZ.PlasticSurgeryMenuWidget.OnCancelClickedInConfirmationPanel // (Final|Native|Private) // @ game+0x2454270
	void OnBackToCharacterClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnBackToCharacterClicked // (Final|Native|Private) // @ game+0x2454250
	void OnApplyFromFaceClicked(); // Function ConZ.PlasticSurgeryMenuWidget.OnApplyFromFaceClicked // (Final|Native|Private) // @ game+0x2454230
};

// Class ConZ.PlasticSurgeryMugshot
// Size: 0x2f0 (Inherited: 0x268)
struct UPlasticSurgeryMugshot : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct UImage* _imgSelection; // 0x2c8(0x08)
	struct UWidgetSwitcher* _mugshotGenderSwitcher; // 0x2d0(0x08)
	struct UWidgetSwitcher* _maleMugshotSwitcher; // 0x2d8(0x08)
	struct UWidgetSwitcher* _femaleMugshotSwitcher; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
};

// Class ConZ.PlasticSurgeryService
// Size: 0x38 (Inherited: 0x38)
struct UPlasticSurgeryService : UTraderService {
};

// Class ConZ.PlayableInstrument
// Size: 0x28 (Inherited: 0x28)
struct UPlayableInstrument : UInterface {
};

// Class ConZ.PlayEffectsWhenParticleCollides
// Size: 0x30 (Inherited: 0x28)
struct UPlayEffectsWhenParticleCollides : UParticleModuleEventSendToGame {
	struct UProjectileImpactEffects* ImpactEffects; // 0x28(0x08)
};

// Class ConZ.PlayerDrone
// Size: 0xbf0 (Inherited: 0x930)
struct APlayerDrone : ADrone {
	char pad_930[0x10]; // 0x930(0x10)
	float _movementInertiaPlayer; // 0x940(0x04)
	char pad_944[0x4]; // 0x944(0x04)
	struct UCameraComponent* _firstPersonCameraComponent; // 0x948(0x08)
	struct UCameraComponent* _thirdPersonCameraComponent; // 0x950(0x08)
	struct USpringArmComponent* _springArmComponent; // 0x958(0x08)
	struct UCharacterItemDragComponent* _itemDragComponent; // 0x960(0x08)
	struct UMaterialInterface* _nightVisionMaterial; // 0x968(0x08)
	float _interactionDistance; // 0x970(0x04)
	char pad_974[0x4]; // 0x974(0x04)
	struct UMaterialInstance* _itemPlacingMaterialAllowed; // 0x978(0x08)
	struct UMaterialInstance* _itemPlacingMaterialDisallowed; // 0x980(0x08)
	struct FLinearColor _colorTintWhenInvisible; // 0x988(0x10)
	struct FLinearColor _colorTintWhenHidden; // 0x998(0x10)
	char pad_9A8[0x160]; // 0x9a8(0x160)
	struct UActionProgressWidget* _progressWidget; // 0xb08(0x08)
	char pad_B10[0x4]; // 0xb10(0x04)
	struct TWeakObjectPtr<struct UObject> _currentlyDroppingItem; // 0xb14(0x08)
	char pad_B1C[0x24]; // 0xb1c(0x24)
	struct UDoorUpgradeWidget* _doorUpgradeWidget; // 0xb40(0x08)
	enum class EDroneVisibility _droneVisibility; // 0xb48(0x01)
	char pad_B49[0xa7]; // 0xb49(0xa7)

	void TryInteractDefault(); // Function ConZ.PlayerDrone.TryInteractDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x2454d50
	void Server_TeleportToNextOrPreviousPlayer(bool Next); // Function ConZ.PlayerDrone.Server_TeleportToNextOrPreviousPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2454cc0
	void Server_SpawnAndDropItemAt(struct UContainerItemDescriptor* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PlayerDrone.Server_SpawnAndDropItemAt // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults) // @ game+0x2454b80
	void Server_SetDroneVisibility(enum class EDroneVisibility Value); // Function ConZ.PlayerDrone.Server_SetDroneVisibility // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2454b00
	void Server_ReportUnauthorizedInteractionAttempt(); // Function ConZ.PlayerDrone.Server_ReportUnauthorizedInteractionAttempt // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23c9780
	void Server_OpenDoor(struct ADoor* Door); // Function ConZ.PlayerDrone.Server_OpenDoor // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2454a70
	void Server_InitializeItemVirtualizedInventory(struct UObject* Item); // Function ConZ.PlayerDrone.Server_InitializeItemVirtualizedInventory // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24549e0
	void Server_DropItemAt(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PlayerDrone.Server_DropItemAt // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults) // @ game+0x24548a0
	void Server_DestroyItem(struct AItem* Item); // Function ConZ.PlayerDrone.Server_DestroyItem // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2454810
	void Server_DestroyGarden(struct FVector Location, uint16_t GardenId); // Function ConZ.PlayerDrone.Server_DestroyGarden // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|Const) // @ game+0x2454740
	void Server_DestroyFortification(struct UFortificationComponent* FortificationComponent); // Function ConZ.PlayerDrone.Server_DestroyFortification // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24546b0
	void Server_DestroyBaseElement(int64_t BaseId, int64_t ElementID, struct FVector Location); // Function ConZ.PlayerDrone.Server_DestroyBaseElement // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|Const) // @ game+0x24545a0
	void Server_CloseDoor(struct ADoor* Door); // Function ConZ.PlayerDrone.Server_CloseDoor // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2454510
	void Server_AddInventoryNode(struct UObject* Item, struct UObject* container, struct FInventoryPositionDataRepHelper position, struct UObject* Target); // Function ConZ.PlayerDrone.Server_AddInventoryNode // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24543b0
	void OnRepDroneVisibility(enum class EDroneVisibility oldValue); // Function ConZ.PlayerDrone.OnRepDroneVisibility // (Final|Native|Private) // @ game+0x2454330
	void OnProgressWidgetFinished(); // Function ConZ.PlayerDrone.OnProgressWidgetFinished // (Final|Native|Private) // @ game+0x24542d0
	void Client_OnExitPhotoMode(); // Function ConZ.PlayerDrone.Client_OnExitPhotoMode // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2383f80
	void Client_OnEnterPhotoMode(); // Function ConZ.PlayerDrone.Client_OnEnterPhotoMode // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2453f50
	void Client_DropItem(struct AItem* Item); // Function ConZ.PlayerDrone.Client_DropItem // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x2453ec0
	void CancelInteractableDragging(); // Function ConZ.PlayerDrone.CancelInteractableDragging // (Final|Native|Public) // @ game+0x2453ea0
};

// Class ConZ.PlayerManagementActivePlayer
// Size: 0x268 (Inherited: 0x268)
struct UPlayerManagementActivePlayer : UUserWidget {
};

// Class ConZ.PlayerManagementActivePlayersList
// Size: 0x268 (Inherited: 0x268)
struct UPlayerManagementActivePlayersList : UUserWidget {
};

// Class ConZ.PlayerManagementMap
// Size: 0x268 (Inherited: 0x268)
struct UPlayerManagementMap : UUserWidget {
};

// Class ConZ.PlayerManagementMenu
// Size: 0x288 (Inherited: 0x268)
struct UPlayerManagementMenu : UBaseMenu {
	struct UButton* _buttonBack; // 0x268(0x08)
	struct UButton* _buttonApply; // 0x270(0x08)
	char pad_278[0x10]; // 0x278(0x10)

	void CloseMenu(); // Function ConZ.PlayerManagementMenu.CloseMenu // (Final|Native|Private) // @ game+0x245fab0
};

// Class ConZ.PlayerManagementUIController
// Size: 0x38 (Inherited: 0x28)
struct UPlayerManagementUIController : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.PlayerQuestComponent
// Size: 0x5d8 (Inherited: 0xb0)
struct UPlayerQuestComponent : UActorComponent {
	char pad_B0[0x528]; // 0xb0(0x528)

	void Server_UpdateTrackingData(struct FTrackingDataSetId TrackingDataSetId, struct FTrackingDataId TrackingDataId, struct FTrackingDataNetPackedBits Data); // Function ConZ.PlayerQuestComponent.Server_UpdateTrackingData // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24647d0
	void Server_Test_GetMeshInfo(struct FTransform Transform, struct FSoftObjectPath staticMeshPath); // Function ConZ.PlayerQuestComponent.Server_Test_GetMeshInfo // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24641f0
	void Server_StartTask(struct FTaskInstanceId ID); // Function ConZ.PlayerQuestComponent.Server_StartTask // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2464160
	void Server_StartQuest(struct FQuestGiverIdentifier ID, int32_t Index); // Function ConZ.PlayerQuestComponent.Server_StartQuest // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2464080
	void Server_SetTrackedQuest(struct FTrackedQuest quest); // Function ConZ.PlayerQuestComponent.Server_SetTrackedQuest // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2463fe0
	void Server_QuestGiverBecameRelevant(struct FQuestGiverIdentifier ID); // Function ConZ.PlayerQuestComponent.Server_QuestGiverBecameRelevant // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24639b0
	void Server_AbandonTask(struct FTaskInstanceId ID); // Function ConZ.PlayerQuestComponent.Server_AbandonTask // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2462370
	void Server_AbandonQuest(struct FTrackingDataSetId questId); // Function ConZ.PlayerQuestComponent.Server_AbandonQuest // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24622e0
	void Client_UpdateTrackingData(struct FTrackingDataSetId TrackingDataSetId, struct FTrackingDataId TrackingDataId, struct FTrackingDataNetPackedBits Data); // Function ConZ.PlayerQuestComponent.Client_UpdateTrackingData // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245f790
	void Client_UpdateAvailableTaskInfo(struct TArray<struct FTaskInstance> availableTasks, struct FTaskInstanceId trackNewTask); // Function ConZ.PlayerQuestComponent.Client_UpdateAvailableTaskInfo // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245f670
	void Client_UpdateAvailableQuestInfo(struct FQuestGiverIdentifier ID, struct TArray<struct FQuestInstance> availableQuests); // Function ConZ.PlayerQuestComponent.Client_UpdateAvailableQuestInfo // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245f570
	void Client_StartTask(struct FTrackingDataSetId ID, struct FActiveTask task); // Function ConZ.PlayerQuestComponent.Client_StartTask // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245f1f0
	void Client_StartQuest(struct FTrackingDataSetId ID, struct FActiveQuest quest); // Function ConZ.PlayerQuestComponent.Client_StartQuest // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245ef70
	void Client_SendInitialActiveQuestList(struct TArray<struct FActiveQuest> activeQuests); // Function ConZ.PlayerQuestComponent.Client_SendInitialActiveQuestList // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245e380
	void Client_OnTradeDealRemoved(struct FSectorId sector, int32_t iDeal); // Function ConZ.PlayerQuestComponent.Client_OnTradeDealRemoved // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245e1b0
	void Client_OnTradeDealAdded(struct FTraderSpecialDeal deal); // Function ConZ.PlayerQuestComponent.Client_OnTradeDealAdded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245e100
	void Client_OnQuestsReset(double timeOfNextReset); // Function ConZ.PlayerQuestComponent.Client_OnQuestsReset // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245e070
	void Client_CompleteTasks(struct TArray<struct FTrackingDataSetId> IDs); // Function ConZ.PlayerQuestComponent.Client_CompleteTasks // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245dd30
	void Client_CompleteTask(struct FTrackingDataSetId ID); // Function ConZ.PlayerQuestComponent.Client_CompleteTask // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245dca0
	void Client_CompleteQuests(struct TArray<struct FTrackingDataSetId> IDs); // Function ConZ.PlayerQuestComponent.Client_CompleteQuests // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245dc00
	void Client_CompleteQuest(struct FTrackingDataSetId ID); // Function ConZ.PlayerQuestComponent.Client_CompleteQuest // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245db70
	void Client_AdvanceTask(struct FTrackingDataSetId ID); // Function ConZ.PlayerQuestComponent.Client_AdvanceTask // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245dac0
	void Client_AdvanceQuest(struct FTrackingDataSetId ID); // Function ConZ.PlayerQuestComponent.Client_AdvanceQuest // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245da30
};

// Class ConZ.PlayerRpcChannel
// Size: 0x130 (Inherited: 0xb0)
struct UPlayerRpcChannel : UActorComponent {
	char pad_B0[0x80]; // 0xb0(0x80)

	void WeaponBow_Server_InsertArrow(struct AWeaponBow* bow, struct AAmmunitionArrow* arrow); // Function ConZ.PlayerRpcChannel.WeaponBow_Server_InsertArrow // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465a90
	void Vehicle_Server_TakeMeleeDamage(struct UVehicleAttachment* Attachment, float damageAmount); // Function ConZ.PlayerRpcChannel.Vehicle_Server_TakeMeleeDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24659b0
	void Vehicle_Server_TakeCollisionDamage(struct AVehicleBase* Vehicle, struct TArray<struct UVehicleAttachment*> Attachments, struct TArray<float> collisionDamages); // Function ConZ.PlayerRpcChannel.Vehicle_Server_TakeCollisionDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465870
	void Vehicle_Server_SetPhysicsParameters(struct AVehicleBase* VehicleBase, struct FVector comPosition, struct FVector inertiaTensor, float Mass); // Function ConZ.PlayerRpcChannel.Vehicle_Server_SetPhysicsParameters // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2465710
	void Vehicle_Server_ProvidePrisonerWithDamage(struct AActor* Object, struct AActor* Target, struct FCollisionPointDamageEvent DamageEvent, struct AController* Instigator); // Function ConZ.PlayerRpcChannel.Vehicle_Server_ProvidePrisonerWithDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465520
	void Vehicle_Server_DriverShouldBecomeOwner(struct APawn* Vehicle, struct ACharacter* Driver, bool IsWorldStreamed); // Function ConZ.PlayerRpcChannel.Vehicle_Server_DriverShouldBecomeOwner // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465410
	void Vehicle_Server_BroadcastElectricalSystemCommands(struct UVehicleElectricalSystem* electricalComponent, struct TArray<uint16_t> tagNetIndexArray); // Function ConZ.PlayerRpcChannel.Vehicle_Server_BroadcastElectricalSystemCommands // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465320
	void Vehicle_Server_ApplyImpactDamage(struct APawn* Vehicle, float Damage, struct FHitResult HitResult, struct AActor* OtherActor); // Function ConZ.PlayerRpcChannel.Vehicle_Server_ApplyImpactDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2465190
	void TurretItem_Server_BatchInsertAmmo(struct ATurretItem* turret, struct TArray<struct AItem*> ammo); // Function ConZ.PlayerRpcChannel.TurretItem_Server_BatchInsertAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24650a0
	void TrapItem_Server_SetNumTries(struct ATrapItem* TrapItem, int32_t numTries); // Function ConZ.PlayerRpcChannel.TrapItem_Server_SetNumTries // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464fd0
	void TrapItem_Server_DisarmTrap(struct APrisoner* disarmer, struct ATrapItem* TrapItem); // Function ConZ.PlayerRpcChannel.TrapItem_Server_DisarmTrap // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464f00
	void TrapItem_Server_ClientAuthoritativeTriggerTrap(struct ATrapItem* TrapItem, struct FTrapTriggerParams Params); // Function ConZ.PlayerRpcChannel.TrapItem_Server_ClientAuthoritativeTriggerTrap // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464e20
	void Switch_Server_Press(struct ASwitch* Actor); // Function ConZ.PlayerRpcChannel.Switch_Server_Press // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23e73f0
	void SurvivalStats_Server_HandlePlayerLogout(struct APlayerController* PlayerController); // Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogout // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464d90
	void SurvivalStats_Server_HandlePlayerLogin(struct APlayerController* PlayerController); // Function ConZ.PlayerRpcChannel.SurvivalStats_Server_HandlePlayerLogin // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464d00
	void Squads_Server_Request(int32_t ID, struct FDbIntegerId squadId, int32_t Count); // Function ConZ.PlayerRpcChannel.Squads_Server_Request // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464bf0
	void Squads_Client_Receive(int32_t ID, struct TArray<struct FString> Names, struct TArray<struct FString> information, struct TArray<uint64_t> emblems, struct TArray<float> scores, int32_t squadRank, int32_t squadIndex); // Function ConZ.PlayerRpcChannel.Squads_Client_Receive // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2464940
	void Server_UnsubscribePlayer(struct FPlayerUnsubscribeData PlayerUnsubscribeData); // Function ConZ.PlayerRpcChannel.Server_UnsubscribePlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2464600
	void Server_UnsubscribeFromUnachievedAchievements(struct APlayerController* PlayerController, struct TArray<struct FString> achievementsIds); // Function ConZ.PlayerRpcChannel.Server_UnsubscribeFromUnachievedAchievements // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24644f0
	void Server_UnpackItem(struct AItem* Item); // Function ConZ.PlayerRpcChannel.Server_UnpackItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464460
	void Server_UnlockedAchievement(struct APlayerController* PlayerController, struct FString AchievementID); // Function ConZ.PlayerRpcChannel.Server_UnlockedAchievement // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2464370
	void Server_SetSwitchState(struct AActor* Actor, struct FGameplayTag Tag, bool State); // Function ConZ.PlayerRpcChannel.Server_SetSwitchState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2463ed0
	void Server_ServerSettingsSendToServer(struct TArray<int32_t> settingIndices, struct TArray<struct FString> Settings); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsSendToServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2463db0
	void Server_ServerSettingsLock_RequestLockRelease(); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsLock_RequestLockRelease // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23644f0
	void Server_ServerSettingsLock_RequestLockAcquisition(int32_t MessageIndex); // Function ConZ.PlayerRpcChannel.Server_ServerSettingsLock_RequestLockAcquisition // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2463d20
	void Server_RequestServerData_Unreliable(int32_t RequestID, struct FPlayerRpcChannelServerDataRequestNetSerializer request); // Function ConZ.PlayerRpcChannel.Server_RequestServerData_Unreliable // (Final|Net|Native|Event|Private|NetServer) // @ game+0x2463c40
	void Server_RequestServerData(int32_t RequestID, struct FPlayerRpcChannelServerDataRequestNetSerializer request); // Function ConZ.PlayerRpcChannel.Server_RequestServerData // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2463b60
	void Server_RequestDoorUpdate(struct ADoor* Door); // Function ConZ.PlayerRpcChannel.Server_RequestDoorUpdate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23e7130
	void Server_ReportUnachievedAchievements(struct APlayerController* PlayerController, struct TArray<struct FString> achievementsIds); // Function ConZ.PlayerRpcChannel.Server_ReportUnachievedAchievements // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2463a50
	void Server_ProcessProjectileDamageEvents(struct TArray<struct FNetPackedProjectileDamageEvent> packedEvents); // Function ConZ.PlayerRpcChannel.Server_ProcessProjectileDamageEvents // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24638e0
	void Server_PlayerSellTradeables(struct AConZPlayerController* PlayerController, struct TArray<struct UObject*> tradeables, struct ATrader* Trader, bool playerWantsCash, enum class ETradeableSellFlags Flags, float clientsidePlayerBasedPriceMultiplier); // Function ConZ.PlayerRpcChannel.Server_PlayerSellTradeables // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24636f0
	void Server_PlayerPurchaseTradeable(struct AConZPlayerController* PlayerController, struct TArray<struct FTradeableClassAndQuantity> tradeableClassesAndQuantity, struct ATrader* Trader, bool isCashPreferred, float clientsidePlayerBasedPriceMultiplier); // Function ConZ.PlayerRpcChannel.Server_PlayerPurchaseTradeable // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2463520
	void Server_MakeNoise(struct AActor* targetActor, float Loudness, struct APawn* Instigator, struct FVector ImpactPoint, struct FName NoiseTag); // Function ConZ.PlayerRpcChannel.Server_MakeNoise // (Net|Native|Event|Public|NetServer|HasDefaults) // @ game+0x2463380
	void Server_InteractWithHuntingClue(struct AHuntingClue* HuntingClue); // Function ConZ.PlayerRpcChannel.Server_InteractWithHuntingClue // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2401500
	void Server_HackAbandonedBunkerDoor(struct UAbandonedBunkerDoorComponent* doorComponent, bool success); // Function ConZ.PlayerRpcChannel.Server_HackAbandonedBunkerDoor // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24632b0
	void Server_HackAbandonedBunkerDialPad(struct AAbandonedBunkerDialPad* dialPad); // Function ConZ.PlayerRpcChannel.Server_HackAbandonedBunkerDialPad // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24541a0
	void Server_DialPadAttemptCombination(struct AAbandonedBunkerDialPad* dialPad, struct FString guessedCombination); // Function ConZ.PlayerRpcChannel.Server_DialPadAttemptCombination // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24631c0
	void Server_DealRadialDamage(struct APawn* instigatorPawn, struct UObject* WeaponClass, struct FVector zeroLocation, float Damage, float InnerRadius, float OuterRadius, float Falloff, float Force, struct FTargetTypeDamageMultiplier TargetTypeMultiplier, struct AActor* DirectlyHitActor, struct FVector directlyHitActorZeroLocationAtTimeOfHit, struct FName hitBoneName); // Function ConZ.PlayerRpcChannel.Server_DealRadialDamage // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2462d90
	void Server_DealBurnDamageToVehicles(struct TArray<struct AVehicleBase*> vehicles, struct TArray<float> temperatures, float Interval, struct UObject* dealerOfDamage); // Function ConZ.PlayerRpcChannel.Server_DealBurnDamageToVehicles // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462a70
	void Server_DealBurnDamageToPrisoner(struct APrisoner* Prisoner, struct TArray<enum class EBodyPart> bodyPart, struct TArray<float> temperatures, float Interval, struct UObject* dealerOfDamage); // Function ConZ.PlayerRpcChannel.Server_DealBurnDamageToPrisoner // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24628b0
	void Server_DealBurnDamageToItems(struct TArray<struct AItem*> Items, struct TArray<float> temperatures, float Interval, struct UObject* dealerOfDamage); // Function ConZ.PlayerRpcChannel.Server_DealBurnDamageToItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462720
	void Server_DealBurnDamagerToConZCharacters(struct TArray<struct AConZCharacter*> characters, struct TArray<float> temperatures, float Interval, struct UObject* dealerOfDamage); // Function ConZ.PlayerRpcChannel.Server_DealBurnDamagerToConZCharacters // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462c00
	void Server_ApplyBaseDamageInteractionEventToZombie(struct AZombie2* Zombie, float Damage, struct FHitResult HitResult); // Function ConZ.PlayerRpcChannel.Server_ApplyBaseDamageInteractionEventToZombie // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462590
	void Server_ApplyBaseDamageInteractionEventToArmedNPC(struct AArmedNPCBase* npcBase, float Damage, struct FHitResult HitResult); // Function ConZ.PlayerRpcChannel.Server_ApplyBaseDamageInteractionEventToArmedNPC // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462400
	void ScopeableItemComponent_Server_SetCurrentZoomLevel(struct UScopeableItemComponent* comp, int32_t Value); // Function ConZ.PlayerRpcChannel.ScopeableItemComponent_Server_SetCurrentZoomLevel // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462210
	void ResourceLockingManager_Server_UnlockResource(struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockResource // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2462140
	void ResourceLockingManager_Server_UnlockIntersectingAreas(struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockIntersectingAreas // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24620c0
	void ResourceLockingManager_Server_UnlockArea(struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_UnlockArea // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2462040
	void ResourceLockingManager_Server_LockResource(struct FResourceNetworkGUID LockOwnerGUID, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockResource // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461f40
	void ResourceLockingManager_Server_LockArea(struct FResourceNetworkGUID LockOwnerGUID, struct FBox Area); // Function ConZ.PlayerRpcChannel.ResourceLockingManager_Server_LockArea // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x2461e50
	void RaidProtection_Server_SetFlagProtectionTime(struct FDbIntegerId FlagId, float Delay, float Duration); // Function ConZ.PlayerRpcChannel.RaidProtection_Server_SetFlagProtectionTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461d30
	void RaidProtection_Server_ResetCooldownTime(struct FDbIntegerId FlagId); // Function ConZ.PlayerRpcChannel.RaidProtection_Server_ResetCooldownTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461ca0
	void RaidProtection_Client_ShowPlayerLoginMessages(struct FGlobalRaidProtectionPlayerLoginMessagesData Data); // Function ConZ.PlayerRpcChannel.RaidProtection_Client_ShowPlayerLoginMessages // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2461bc0
	void Prisoner_Server_PushStaminaDrain(struct APrisoner* Prisoner, float AmountToDrain, float drainDuration, float RecoveryDelay, float RatioToRecover, float recoveryDuration); // Function ConZ.PlayerRpcChannel.Prisoner_Server_PushStaminaDrain // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24619e0
	void Prisoner_Server_Die(struct APrisoner* Prisoner); // Function ConZ.PlayerRpcChannel.Prisoner_Server_Die // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23cdb90
	void Placeable_Server_FillWithItems(struct APlaceableActorBase* placeable, struct APrisoner* User, struct TArray<struct AItem*> Items); // Function ConZ.PlayerRpcChannel.Placeable_Server_FillWithItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24618b0
	void Notifications_RequestNotification(struct FNotificationDescriptionReplicationHelper Description); // Function ConZ.PlayerRpcChannel.Notifications_RequestNotification // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461830
	void Misc_Server_LogKill(struct APrisoner* victim, struct APrisoner* killer, struct FString killerUserProfileId); // Function ConZ.PlayerRpcChannel.Misc_Server_LogKill // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461700
	void Misc_Client_PostAudioEventAtLocation(struct UAkAudioEvent* akEvent, struct FVector locationZero, struct FRotator Orientation); // Function ConZ.PlayerRpcChannel.Misc_Client_PostAudioEventAtLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x24615c0
	void Misc_Client_PostAudioEvent(struct UAkAudioEvent* AudioEvent, struct AActor* Actor, bool stopWhenAttachedToDestroyed); // Function ConZ.PlayerRpcChannel.Misc_Client_PostAudioEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24614b0
	void Mechanic_Server_UnsubscribeFromVehicleServiceData(struct AMechanic* Mechanic); // Function ConZ.PlayerRpcChannel.Mechanic_Server_UnsubscribeFromVehicleServiceData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461420
	void Mechanic_Server_SubscribeToVehicleServiceData(struct AMechanic* Mechanic); // Function ConZ.PlayerRpcChannel.Mechanic_Server_SubscribeToVehicleServiceData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461390
	void Mechanic_Client_UpdateServiceDataOnClient(struct AMechanic* Mechanic, struct FVehicleAttachmentPriceDataPerClassMap Delta); // Function ConZ.PlayerRpcChannel.Mechanic_Client_UpdateServiceDataOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2461220
	void Lockpickable_Server_TriggerFailurePenalty(struct UObject* Lockpickable, struct APrisoner* triggeringPrisoner); // Function ConZ.PlayerRpcChannel.Lockpickable_Server_TriggerFailurePenalty // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461150
	void Lockpickable_Server_SetNumTries(struct UObject* Lockpickable, int32_t numTries); // Function ConZ.PlayerRpcChannel.Lockpickable_Server_SetNumTries // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2461080
	void ItemContainer_Server_SetAutoResetLocksTimer(struct FString runtimeId); // Function ConZ.PlayerRpcChannel.ItemContainer_Server_SetAutoResetLocksTimer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460fe0
	void ItemContainer_Client_TriggerFailurePenalty(struct FString runtimeId, struct AActor* triggeringActor); // Function ConZ.PlayerRpcChannel.ItemContainer_Client_TriggerFailurePenalty // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2460ef0
	void InteractWithObjectOnServer(struct UObject* interactable, struct AController* userController, enum class EInteractionType interactionType, struct FInteractionData InteractionData); // Function ConZ.PlayerRpcChannel.InteractWithObjectOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460d10
	void InteractItemWithItemOnServer(struct AItem* Item, struct APlayerController* PlayerController, struct AItem* otherItem, enum class EInteractionType interactionType, struct FInteractionData InteractionData); // Function ConZ.PlayerRpcChannel.InteractItemWithItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460af0
	void HeatSourceItemComponent_Server_AdjustDial(struct UContinuousFuelHeatSource* FueledHeatSource, char dialValue); // Function ConZ.PlayerRpcChannel.HeatSourceItemComponent_Server_AdjustDial // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460a20
	void HasOwningUser_Server_RequestStateUpdate(struct UObject* Object); // Function ConZ.PlayerRpcChannel.HasOwningUser_Server_RequestStateUpdate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460990
	void HasOwningUser_Client_UpdateState(struct UObject* Object, struct FString ownerString); // Function ConZ.PlayerRpcChannel.HasOwningUser_Client_UpdateState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24608a0
	void Grapple_Server_EndGrappleAttack(struct AConZCharacter* grappler, struct APrisoner* grapplee, enum class EGrappleEndType grappleEndType); // Function ConZ.PlayerRpcChannel.Grapple_Server_EndGrappleAttack // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460790
	void Flamethrower_Server_SetFlamethrowerActive(struct AWeaponFlamethrower* flamethrower, bool Active); // Function ConZ.PlayerRpcChannel.Flamethrower_Server_SetFlamethrowerActive // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24606c0
	void Door_Client_TriggerFailurePenalty(struct FString runtimeId, struct AActor* triggeringActor); // Function ConZ.PlayerRpcChannel.Door_Client_TriggerFailurePenalty // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24605d0
	void CustomZones_Server_UpdateCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.PlayerRpcChannel.CustomZones_Server_UpdateCustomZoneData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2460400
	void CustomZones_Server_RequestCustomZoneData(); // Function ConZ.PlayerRpcChannel.CustomZones_Server_RequestCustomZoneData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24603e0
	void CustomZones_Client_ReceiveCustomZoneData(struct FCustomZoneConfiguration globalConfiguration, struct TArray<struct FCustomZoneConfiguration> configurations, struct TArray<struct FCustomZoneRegion> Regions); // Function ConZ.PlayerRpcChannel.CustomZones_Client_ReceiveCustomZoneData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2460210
	void CustomZones_Client_NotifyCustomDataUpdateSuccess(); // Function ConZ.PlayerRpcChannel.CustomZones_Client_NotifyCustomDataUpdateSuccess // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24601f0
	void Crafting_Server_RemoveFavoriteRecipe(uint32_t recipeNetIndex); // Function ConZ.PlayerRpcChannel.Crafting_Server_RemoveFavoriteRecipe // (Net|NetReliableNative|Event|Public|NetServer|Const) // @ game+0x2460160
	void Crafting_Server_AddFavoriteRecipe(uint32_t recipeNetIndex); // Function ConZ.PlayerRpcChannel.Crafting_Server_AddFavoriteRecipe // (Net|NetReliableNative|Event|Public|NetServer|Const) // @ game+0x24600d0
	void Crafting_Client_ItemCrafted(struct APrisoner* Prisoner, struct UItemCraftingRecipe* recipe, struct TArray<struct FString> ingredientClassNames, struct TArray<int32_t> ingredientAmounts); // Function ConZ.PlayerRpcChannel.Crafting_Client_ItemCrafted // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x245ff30
	void Cooking_Server_StopCooking(int32_t SlotId, struct APrisoner* User); // Function ConZ.PlayerRpcChannel.Cooking_Server_StopCooking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245fe60
	void Cooking_Server_RemoveFavoriteRecipe(char recipeId); // Function ConZ.PlayerRpcChannel.Cooking_Server_RemoveFavoriteRecipe // (Net|NetReliableNative|Event|Public|NetServer|Const) // @ game+0x245fde0
	void Cooking_Server_CreateResultItemAndAssignToPrisoner(int32_t SlotId, struct APrisoner* User); // Function ConZ.PlayerRpcChannel.Cooking_Server_CreateResultItemAndAssignToPrisoner // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245fd10
	void Cooking_Server_BeginCooking(int32_t SlotId, struct APrisoner* User, struct UCookingRecipe* recipe, struct TArray<struct AItem*> MainIngredients, struct TArray<struct AItem*> OptionalIngredients); // Function ConZ.PlayerRpcChannel.Cooking_Server_BeginCooking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245fb50
	void Cooking_Server_AddFavoriteRecipe(char recipeId); // Function ConZ.PlayerRpcChannel.Cooking_Server_AddFavoriteRecipe // (Net|NetReliableNative|Event|Public|NetServer|Const) // @ game+0x245fad0
	void Client_UpdateTraderData(struct FPriceUpdateData PriceUpdateData); // Function ConZ.PlayerRpcChannel.Client_UpdateTraderData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245f900
	void Client_UnlockAchievement(struct APlayerController* PlayerController, struct FString AchievementID); // Function ConZ.PlayerRpcChannel.Client_UnlockAchievement // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245f480
	void Client_SquadPenaltyManagerSquadMemberLeftSquad(struct FDbIntegerId UserProfileId, char numOfSquadmatesLeft); // Function ConZ.PlayerRpcChannel.Client_SquadPenaltyManagerSquadMemberLeftSquad // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245eea0
	void Client_SquadPenaltyManagerSendSquadInfo(struct TArray<struct FDbIntegerId> userProfileIds, struct TArray<struct FSquadLeaveInfo> squadLeaveInfos); // Function ConZ.PlayerRpcChannel.Client_SquadPenaltyManagerSendSquadInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245eda0
	void Client_SquadPenaltyManagerNewMemberJoinedSquad(struct FDbIntegerId newMemberProfileId, struct FSquadLeaveInfo newMemberInfo); // Function ConZ.PlayerRpcChannel.Client_SquadPenaltyManagerNewMemberJoinedSquad // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245ecc0
	void Client_SetStat(struct APlayerController* PlayerController, struct FString statId, int32_t StatValue); // Function ConZ.PlayerRpcChannel.Client_SetStat // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245eb90
	void Client_SetSpawnGrid(struct APlayerController* PlayerController, struct TArray<uint32_t> Cells, uint16_t NumCols, uint16_t numRows, float CellSize); // Function ConZ.PlayerRpcChannel.Client_SetSpawnGrid // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e9d0
	void Client_ServerSettingsSendToClient(struct TArray<int32_t> settingIndices, struct TArray<struct FString> Settings, bool isInitial); // Function ConZ.PlayerRpcChannel.Client_ServerSettingsSendToClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e860
	void Client_ServerSettingsLock_ReceiveLockOwner(struct FString lockOwnerId, struct FString lockOwnerName, int32_t MessageIndex, bool lockIsMine); // Function ConZ.PlayerRpcChannel.Client_ServerSettingsLock_ReceiveLockOwner // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e6d0
	void Client_SendSellErrorMessage(struct AConZPlayerController* PlayerController, enum class ETradeErrorMessage errorMessage); // Function ConZ.PlayerRpcChannel.Client_SendSellErrorMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e600
	void Client_SendPreBuyResponse(struct AConZPlayerController* PlayerController, enum class ETradeErrorMessage errorMessage); // Function ConZ.PlayerRpcChannel.Client_SendPreBuyResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e530
	void Client_SendPostBuyResponse(struct AConZPlayerController* PlayerController, enum class ETradeErrorMessage errorMessage); // Function ConZ.PlayerRpcChannel.Client_SendPostBuyResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e460
	void Client_ResetSubscriptions(); // Function ConZ.PlayerRpcChannel.Client_ResetSubscriptions // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245e360
	void Client_ReceiveServerData(int32_t RequestID, struct FPlayerRpcChannelServerDataResponseNetSerializer Response); // Function ConZ.PlayerRpcChannel.Client_ReceiveServerData // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x245e280
	void Client_IncreaseStat(struct APlayerController* PlayerController, struct FString statId, int32_t statIncBy); // Function ConZ.PlayerRpcChannel.Client_IncreaseStat // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245df40
	void Client_DialPadAttemptResult(struct AAbandonedBunkerDialPad* dialPad, bool guessedCorrectly); // Function ConZ.PlayerRpcChannel.Client_DialPadAttemptResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245de70
	void Client_DebugDrawNearbyEncounterLocations(struct TArray<struct FVector> Locations); // Function ConZ.PlayerRpcChannel.Client_DebugDrawNearbyEncounterLocations // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245ddd0
	void Client_AuthSucceededSync(); // Function ConZ.PlayerRpcChannel.Client_AuthSucceededSync // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245db50
	void Chat_Server_ProcessAdminCommand(struct FString commandText); // Function ConZ.PlayerRpcChannel.Chat_Server_ProcessAdminCommand // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245d990
	void Chat_Server_BroadcastChatMessage(struct FString Message, enum class EChatType Channel); // Function ConZ.PlayerRpcChannel.Chat_Server_BroadcastChatMessage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245d8a0
	void Chat_Client_UpdateSquadArgumentCompletionCache(struct TArray<struct FString> completions); // Function ConZ.PlayerRpcChannel.Chat_Client_UpdateSquadArgumentCompletionCache // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d7d0
	void Chat_Client_UpdatePlayerArgumentCompletionCache(struct TArray<struct FString> completions); // Function ConZ.PlayerRpcChannel.Chat_Client_UpdatePlayerArgumentCompletionCache // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d700
	void Chat_Client_UnmuteUser(struct FString UserId); // Function ConZ.PlayerRpcChannel.Chat_Client_UnmuteUser // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d660
	void Chat_Client_SendMessageToChat(struct FString Message, struct AConZPlayerState* SenderPlayerState, enum class EChatType Channel, bool shouldCopyToClipboard); // Function ConZ.PlayerRpcChannel.Chat_Client_SendMessageToChat // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d4f0
	void Chat_Client_ProcessAdminCommand(struct FString commandText); // Function ConZ.PlayerRpcChannel.Chat_Client_ProcessAdminCommand // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d450
	void Chat_Client_MuteUser(struct FString UserId, struct FString UserName); // Function ConZ.PlayerRpcChannel.Chat_Client_MuteUser // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245d350
	void BCULockRegistry_Server_RequestSetClientHasActiveBCULock(); // Function ConZ.PlayerRpcChannel.BCULockRegistry_Server_RequestSetClientHasActiveBCULock // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x125cbf0
	void BCULockRegistry_Client_SetClientHasActiveBCULock(bool clientHasActiveBCULock); // Function ConZ.PlayerRpcChannel.BCULockRegistry_Client_SetClientHasActiveBCULock // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245cf70
	void BaseBuilding_Server_RequestElementStateUpdate(struct FVector Location, float areaSize); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_RequestElementStateUpdate // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x245d280
	void BaseBuilding_Server_OnFlagAreaExited(struct AConZCharacter* Character); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaExited // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245d1f0
	void BaseBuilding_Server_OnFlagAreaEntered(struct AConZCharacter* Character); // Function ConZ.PlayerRpcChannel.BaseBuilding_Server_OnFlagAreaEntered // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245d160
	void BaseBuilding_Client_UpdateElementState(struct FVector Location, float areaSize, struct TArray<struct FConZOnDemandElementData> Data); // Function ConZ.PlayerRpcChannel.BaseBuilding_Client_UpdateElementState // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x245d000
	void Admin_Server_TeleportTo_VehicleLocation(struct AConZPlayerController* Controller, struct FTeleportRequest TeleportRequest, struct FString vehicleName); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_VehicleLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245ce00
	void Admin_Server_TeleportTo_Location(struct AConZPlayerController* Controller, struct FTeleportRequest TeleportRequest); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo_Location // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245cce0
	void Admin_Server_TeleportTo(struct APlayerController* Controller, struct AConZPlayerState* teleportToUserPlayerState); // Function ConZ.PlayerRpcChannel.Admin_Server_TeleportTo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245cc10
	void Admin_Client_ShowSpawnedVehicles(struct APlayerController* Controller, struct TArray<struct FVehicleInfo> spawnedVehiclesInfo, bool ShouldCopyToClientClipboard); // Function ConZ.PlayerRpcChannel.Admin_Client_ShowSpawnedVehicles // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245caa0
	void Admin_Client_SendRespawnTimes(int32_t respawnTime, int32_t respawnTimeReset); // Function ConZ.PlayerRpcChannel.Admin_Client_SendRespawnTimes // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x245c9d0
};

// Class ConZ.PossibleCookingIngredientWidget
// Size: 0x298 (Inherited: 0x268)
struct UPossibleCookingIngredientWidget : UUserWidget {
	struct UWidgetSwitcher* _mainSwitcher; // 0x268(0x08)
	struct UOverlay* _nonEmptyPage; // 0x270(0x08)
	struct UImage* _ingredientIcon; // 0x278(0x08)
	struct UOverlay* _emptyPage; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)
	struct UTextOnlyTooltip* _cookingTextTooltipClass; // 0x290(0x08)
};

// Class ConZ.PowerCableMeshSet
// Size: 0x40 (Inherited: 0x30)
struct UPowerCableMeshSet : UDataAsset {
	struct TArray<struct FPowerCableMeshInfo> Meshes; // 0x30(0x10)
};

// Class ConZ.PowerNode
// Size: 0x258 (Inherited: 0x220)
struct APowerNode : AActor {
	struct USceneComponent* _root; // 0x220(0x08)
	struct UStaticMeshComponent* _mesh; // 0x228(0x08)
	struct UPowerCableMeshSet* _cableMeshSet; // 0x230(0x08)
	float _maxCablesDrawDistance; // 0x238(0x04)
	bool _useAsOccluder; // 0x23c(0x01)
	bool _cablesCastShadow; // 0x23d(0x01)
	char pad_23E[0x2]; // 0x23e(0x02)
	struct TArray<struct FPowerNodeConnector> _connectors; // 0x240(0x10)
	struct APowerNode* _connectionTarget; // 0x250(0x08)
};

// Class ConZ.PracticeLockpickingItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct APracticeLockpickingItem : AItem {
	struct TArray<struct ULockData*> _possibleLocks; // 0x9b0(0x10)
	char pad_9C0[0x10]; // 0x9c0(0x10)
};

// Class ConZ.PracticeTrapItem
// Size: 0xae0 (Inherited: 0xae0)
struct APracticeTrapItem : ATrapItem {
};

// Class ConZ.PresetColorPickerButton
// Size: 0x2e0 (Inherited: 0x268)
struct UPresetColorPickerButton : UUserWidget {
	char pad_268[0x58]; // 0x268(0x58)
	struct UWidgetSwitcher* _displaySwitcher; // 0x2c0(0x08)
	struct UImage* _coloredPreviewUnhovered; // 0x2c8(0x08)
	struct UImage* _coloredPreviewHovered; // 0x2d0(0x08)
	struct UImage* _variableOpacityBorder; // 0x2d8(0x08)
};

// Class ConZ.PresetColorPicker
// Size: 0x338 (Inherited: 0x268)
struct UPresetColorPicker : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UPanelWidget* _container; // 0x280(0x08)
	struct UTextBlock* _name; // 0x288(0x08)
	struct USelectionOverlayWidget* _focusBackground; // 0x290(0x08)
	struct FText _mainLabel; // 0x298(0x18)
	struct FSlateFontInfo _defaultFont; // 0x2b0(0x58)
	struct UPresetColorPickerButton* _buttonClass; // 0x308(0x08)
	struct FMargin _buttonPadding; // 0x310(0x10)
	struct TArray<struct FLinearColor> _palette; // 0x320(0x10)
	char pad_330[0x8]; // 0x330(0x08)
};

// Class ConZ.PreviewAnimationComponent
// Size: 0x110 (Inherited: 0xb0)
struct UPreviewAnimationComponent : UActorComponent {
	struct TMap<struct FGameplayTag, struct UAnimationAsset*> _animationsPerTag; // 0xb0(0x50)
	char pad_100[0x10]; // 0x100(0x10)
};

// Class ConZ.PreviousNextSwitchWidget
// Size: 0x298 (Inherited: 0x268)
struct UPreviousNextSwitchWidget : UUserWidget {
	struct FMulticastInlineDelegate IndexChanged; // 0x268(0x10)
	struct UButton* PreviousButton; // 0x278(0x08)
	struct UButton* NextButton; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)
	int32_t _index; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)

	void SwitchToPrevious(); // Function ConZ.PreviousNextSwitchWidget.SwitchToPrevious // (Final|Native|Public) // @ game+0x24771b0
	void SwitchToNext(); // Function ConZ.PreviousNextSwitchWidget.SwitchToNext // (Final|Native|Public) // @ game+0x2477190
	void OnSwitchClickedDelegate__DelegateSignature(int32_t widgetArrayIndex, int32_t Index); // DelegateFunction ConZ.PreviousNextSwitchWidget.OnSwitchClickedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
};

// Class ConZ.PrimaryButton
// Size: 0x528 (Inherited: 0x290)
struct UPrimaryButton : UConZUserWidget {
	struct UButton* _button; // 0x290(0x08)
	struct UImage* _icon; // 0x298(0x08)
	bool _overrideButtonStyle; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct FButtonStyle _buttonStyle; // 0x2a8(0x278)
	enum class EButtonType _buttonType; // 0x520(0x01)
	char pad_521[0x7]; // 0x521(0x07)

	void OnReleased(); // Function ConZ.PrimaryButton.OnReleased // (Final|Native|Private) // @ game+0x2472c80
	void OnPressed(); // Function ConZ.PrimaryButton.OnPressed // (Final|Native|Private) // @ game+0x2472c60
};

// Class ConZ.PrisonerAction
// Size: 0x120 (Inherited: 0x108)
struct UPrisonerAction : UCharacterAction {
	char pad_108[0x18]; // 0x108(0x18)
};

// Class ConZ.PrisonerActionDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionDescription : UCharacterActionDescription {
};

// Class ConZ.PrisonerActionActivateSlot
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionActivateSlot : UPrisonerAction {
};

// Class ConZ.PrisonerActionActivateSlotDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionActivateSlotDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionAddFertilizer
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionAddFertilizer : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionAddFertilizerDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionAddFertilizerDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionAddWeaponAttachment
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionAddWeaponAttachment : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionAddWeaponAttachmentDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionAddWeaponAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionAlignTransform
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionAlignTransform : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionAlignTransformDescription
// Size: 0x90 (Inherited: 0x38)
struct UPrisonerActionAlignTransformDescription : UPrisonerActionDescription {
	char pad_38[0x58]; // 0x38(0x58)
};

// Class ConZ.PrisonerActionAnalyzeAnimalTrack
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionAnalyzeAnimalTrack : UPrisonerAction {
};

// Class ConZ.PrisonerActionAnalyzeAnimalTrackDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionAnalyzeAnimalTrackDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionApplyFlagElementsExpansion
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionApplyFlagElementsExpansion : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionApplyFlagElementsExpansionDescription
// Size: 0x60 (Inherited: 0x38)
struct UPrisonerActionApplyFlagElementsExpansionDescription : UPrisonerActionDescription {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class ConZ.PrisonerActionApplyPesticide
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionApplyPesticide : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionApplyPesticideDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionApplyPesticideDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionAttachItem
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionAttachItem : UPrisonerAction {
};

// Class ConZ.PrisonerActionAttachItemDescription
// Size: 0x88 (Inherited: 0x38)
struct UPrisonerActionAttachItemDescription : UPrisonerActionDescription {
	char pad_38[0x50]; // 0x38(0x50)
};

// Class ConZ.PrisonerActionAutoCraft
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionAutoCraft : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionAutoCraftDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionAutoCraftDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionBlowAir
// Size: 0x140 (Inherited: 0x120)
struct UPrisonerActionBlowAir : UPrisonerAction {
	char pad_120[0x20]; // 0x120(0x20)
};

// Class ConZ.PrisonerActionBlowAirDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionBlowAirDescription : UCharacterActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionBury
// Size: 0x150 (Inherited: 0x120)
struct UPrisonerActionBury : UPrisonerAction {
	char pad_120[0x30]; // 0x120(0x30)
};

// Class ConZ.PrisonerActionBuryDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionBuryDescription : UCharacterActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionChangeStance
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionChangeStance : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionChangeStanceDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionChangeStanceDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionChangeStanceWaitEndOnOwningClient : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionChangeStanceWaitEndOnOwningClientDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStance
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionChangeVehicleWeaponAimingStance : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionChangeVehicleWeaponAimingStanceDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionChangeWeaponFiringMode
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionChangeWeaponFiringMode : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionChangeWeaponFiringModeModeDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionChangeWeaponFiringModeModeDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionChargeVehicleBattery
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionChargeVehicleBattery : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionChargeVehicleBatteryDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionChargeVehicleBatteryDescription : UPrisonerActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionCheckChainsawFuelStatus
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionCheckChainsawFuelStatus : UPrisonerAction {
};

// Class ConZ.PrisonerActionCheckChainsawFuelStatusDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionCheckChainsawFuelStatusDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionCheckItemFuelStatus
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionCheckItemFuelStatus : UPrisonerAction {
};

// Class ConZ.PrisonerActionCheckItemFuelStatusDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionCheckItemFuelStatusDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
	struct UAnimMontage* CharacterMontage; // 0x40(0x08)
	struct UAnimMontage* ItemMontage; // 0x48(0x08)
	char pad_50[0x8]; // 0x50(0x08)
};

// Class ConZ.PrisonerActionCheckThermalSensor
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionCheckThermalSensor : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionCheckThermalSensorDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionCheckThermalSensorDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionCheckTime
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionCheckTime : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionCheckTimeDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionCheckTimeDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionCheckWeaponAmmo
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionCheckWeaponAmmo : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionCheckWeaponAmmoDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionCheckWeaponAmmoDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionCheckWeaponFiringMode
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionCheckWeaponFiringMode : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionCheckWeaponFiringModeDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionCheckWeaponFiringModeDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionChopActor
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionChopActor : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionChopActorDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionChopActorDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionChopBaseElement
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionChopBaseElement : UPrisonerAction {
};

// Class ConZ.PrisonerActionChopBaseElementDescription
// Size: 0xa0 (Inherited: 0x38)
struct UPrisonerActionChopBaseElementDescription : UPrisonerActionDescription {
	char pad_38[0x68]; // 0x38(0x68)

	struct UStaticMesh* GetBaseElementStaticMesh(); // Function ConZ.PrisonerActionChopBaseElementDescription.GetBaseElementStaticMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24808f0
};

// Class ConZ.PrisonerActionClaimKill
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionClaimKill : UPrisonerAction {
};

// Class ConZ.PrisonerActionClaimKillDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionClaimKillDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionClean
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionClean : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.UPrisonerActionCleanDescription
// Size: 0x50 (Inherited: 0x38)
struct UUPrisonerActionCleanDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionClearWeaponMalfunction
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionClearWeaponMalfunction : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionClearWeaponMalfunctionDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionClearWeaponMalfunctionDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionClimbOntoLadder
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionClimbOntoLadder : UPrisonerAction {
};

// Class ConZ.PrisonerActionClimbOntoLadderDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionClimbOntoLadderDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionCollectSeeds
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionCollectSeeds : UPrisonerAction {
};

// Class ConZ.PrisonerActionCollectSeedsDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionCollectSeedsDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionCommitSuicide
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionCommitSuicide : UPrisonerAction {
};

// Class ConZ.PrisonerActionCommitSuicideDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionCommitSuicideDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionCraftItem
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionCraftItem : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionCraftItemDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionCraftItemDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionCutObject
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionCutObject : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionCutObjectDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerActionCutObjectDescription : UPrisonerActionDescription {
	struct AActor* ActorToCut; // 0x38(0x08)
	struct UMeshComponent* MeshComponent; // 0x40(0x08)
	char pad_48[0x20]; // 0x48(0x20)
};

// Class ConZ.PrisonerActionDecontaminate
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionDecontaminate : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionDecontaminateDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionDecontaminateDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionDecontaminateWithReplenishableResource
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionDecontaminateWithReplenishableResource : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionDecontaminateWithReplenishableResourceDescription
// Size: 0x88 (Inherited: 0x38)
struct UPrisonerActionDecontaminateWithReplenishableResourceDescription : UCharacterActionDescription {
	char pad_38[0x48]; // 0x38(0x48)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x80(0x08)
};

// Class ConZ.PrisonerActionDefecate
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionDefecate : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionDefecateDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionDefecateDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionDestroyGarden
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionDestroyGarden : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionDestroyGardenDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionDestroyGardenDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionDestroyItem
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionDestroyItem : UPrisonerAction {
};

// Class ConZ.PrisonerActionDestroyItemDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionDestroyItemDescription : UCharacterActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionDisinfectItem
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionDisinfectItem : UPrisonerAction {
};

// Class ConZ.PrisonerActionDisinfectItemDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionDisinfectItemDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionDownloadDataToBCUMemoryModule
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionDownloadDataToBCUMemoryModule : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionDownloadDataToBCUMemoryModuleDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionDownloadDataToBCUMemoryModuleDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionDrainVehicleFuelIntoItem
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionDrainVehicleFuelIntoItem : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionDrainVehicleFuelIntoItemDescription : UPrisonerActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionDrinkFromReplenishableResource
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionDrinkFromReplenishableResource : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionDrinkFromReplenishableResourceDescription
// Size: 0x80 (Inherited: 0x38)
struct UPrisonerActionDrinkFromReplenishableResourceDescription : UCharacterActionDescription {
	char pad_38[0x40]; // 0x38(0x40)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x78(0x08)
};

// Class ConZ.PrisonerActionDrinkInteraction
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionDrinkInteraction : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionDrinkInteractionDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionDrinkInteractionDescription : UPrisonerActionDescription {
	struct UGameResourceType* ResourceType; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)
};

// Class ConZ.PrisonerActionEatItem
// Size: 0x140 (Inherited: 0x120)
struct UPrisonerActionEatItem : UPrisonerAction {
	struct UAkAudioEvent* _startEatingAudioEvent; // 0x120(0x08)
	struct UAkAudioEvent* _stopEatingAudioEvent; // 0x128(0x08)
	struct AFoodItem* _itemClass; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)
};

// Class ConZ.PrisonerActionEatItemDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionEatItemDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionEnterCombatMode
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionEnterCombatMode : UPrisonerAction {
};

// Class ConZ.PrisonerActionEnterCombatModeDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionEnterCombatModeDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionExecuteBodyConditionInteraction
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionExecuteBodyConditionInteraction : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionExecuteBodyConditionInteractionDescription
// Size: 0x88 (Inherited: 0x38)
struct UPrisonerActionExecuteBodyConditionInteractionDescription : UPrisonerActionDescription {
	char pad_38[0x40]; // 0x38(0x40)
	struct UAkAudioEvent* BeginInteractionPatientAudioEvent; // 0x78(0x08)
	struct UAkAudioEvent* EndInteractionPatientAudioEvent; // 0x80(0x08)
};

// Class ConZ.PrisonerActionExtinguishFire
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionExtinguishFire : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionExtinguishFireDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionExtinguishFireDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionExtinguishItem
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionExtinguishItem : UPrisonerAction {
};

// Class ConZ.PrisonerActionExtinguishItemDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionExtinguishItemDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionExtractBloodSample
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionExtractBloodSample : UPrisonerAction {
};

// Class ConZ.PrisonerActionExtractBloodSampleDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionExtractBloodSampleDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionFillGameResourceContainer
// Size: 0x148 (Inherited: 0x120)
struct UPrisonerActionFillGameResourceContainer : UPrisonerAction {
	char pad_120[0x28]; // 0x120(0x28)
};

// Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResource
// Size: 0x150 (Inherited: 0x148)
struct UPrisonerActionFillGameResourceContainerWithReplenishableResource : UPrisonerActionFillGameResourceContainer {
	char pad_148[0x8]; // 0x148(0x08)
};

// Class ConZ.PrisonerActionFillGameResourceContainerDescription
// Size: 0x90 (Inherited: 0x38)
struct UPrisonerActionFillGameResourceContainerDescription : UCharacterActionDescription {
	char pad_38[0x48]; // 0x38(0x48)
	struct UObject* _sourceContainerObj; // 0x80(0x08)
	struct UObject* _destinationContainerObj; // 0x88(0x08)
};

// Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription
// Size: 0xa8 (Inherited: 0x90)
struct UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription : UPrisonerActionFillGameResourceContainerDescription {
	char pad_90[0x10]; // 0x90(0x10)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0xa0(0x08)
};

// Class ConZ.PrisonerActionFillGameResourceContainerWithInfiniteResourceDescription
// Size: 0xf0 (Inherited: 0x90)
struct UPrisonerActionFillGameResourceContainerWithInfiniteResourceDescription : UPrisonerActionFillGameResourceContainerDescription {
	char pad_90[0x48]; // 0x90(0x48)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFilling; // 0xd8(0x10)
	struct UGameResourceContainerProxyForInfiniteResource* ProxyForInfiniteResource; // 0xe8(0x08)
};

// Class ConZ.PrisonerActionFillVehicleFuelWithItem
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionFillVehicleFuelWithItem : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionFillVehicleFuelWithItemDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionFillVehicleFuelWithItemDescription : UPrisonerActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource
// Size: 0x150 (Inherited: 0x120)
struct UPrisonerActionFillVehicleFuelWithReplenishableResource : UPrisonerAction {
	char pad_120[0x30]; // 0x120(0x30)
};

// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription
// Size: 0x88 (Inherited: 0x38)
struct UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription : UPrisonerActionDescription {
	char pad_38[0x50]; // 0x38(0x50)
};

// Class ConZ.PrisonerActionFillWater
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionFillWater : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionFillWaterDescription
// Size: 0x60 (Inherited: 0x38)
struct UPrisonerActionFillWaterDescription : UPrisonerActionDescription {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class ConZ.PrisonerActionFishing
// Size: 0x110 (Inherited: 0x108)
struct UPrisonerActionFishing : UCharacterAction {
	char pad_108[0x8]; // 0x108(0x08)
};

// Class ConZ.PrisonerActionFishingDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionFishingDescription : UCharacterActionDescription {
};

// Class ConZ.PrisonerActionFixTire
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionFixTire : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionFixTireDescription
// Size: 0x80 (Inherited: 0x38)
struct UPrisonerActionFixTireDescription : UPrisonerActionDescription {
	char pad_38[0x48]; // 0x38(0x48)
};

// Class ConZ.PrisonerActionForceUnlock
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionForceUnlock : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionForceUnlockDescription
// Size: 0xa0 (Inherited: 0x38)
struct UPrisonerActionForceUnlockDescription : UCharacterActionDescription {
	char pad_38[0x68]; // 0x38(0x68)
};

// Class ConZ.PrisonerActionFuelFire
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionFuelFire : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionFuelFireDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionFuelFireDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionGesture
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionGesture : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionGestureDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionGestureDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionIgniteItem
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionIgniteItem : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionIgniteItemDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionIgniteItemDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionInjectSubstance
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionInjectSubstance : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionInjectSubstanceDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerActionInjectSubstanceDescription : UPrisonerActionDescription {
	char pad_38[0x30]; // 0x38(0x30)
};

// Class ConZ.PrisonerActionInsertArrow
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionInsertArrow : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionInsertArrowDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionInsertArrowDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionLeaveCombatMode
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionLeaveCombatMode : UPrisonerAction {
};

// Class ConZ.PrisonerActionLeaveCombatModeDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionLeaveCombatModeDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionLightFire
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionLightFire : UPrisonerAction {
};

// Class ConZ.PrisonerActionLightFireDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionLightFireDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionLoadAmmoIntoMagazine
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionLoadAmmoIntoMagazine : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
	struct UItemActionSequenceLoadMagazine* _itemActionSequence; // 0x128(0x08)
};

// Class ConZ.PrisonerActionLoadAmmoIntoMagazineDescription
// Size: 0x60 (Inherited: 0x38)
struct UPrisonerActionLoadAmmoIntoMagazineDescription : UPrisonerActionDescription {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class ConZ.PrisonerActionLootCorpse
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionLootCorpse : UPrisonerAction {
};

// Class ConZ.PrisonerActionLootCorpseDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionLootCorpseDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionLootPrisoner
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionLootPrisoner : UPrisonerAction {
};

// Class ConZ.PrisonerActionLootPrisonerDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionLootPrisonerDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionManipulateTrap
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionManipulateTrap : UPrisonerAction {
};

// Class ConZ.PrisonerActionManipulateTrapDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionManipulateTrapDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionManualOpenBlastDoor
// Size: 0x140 (Inherited: 0x120)
struct UPrisonerActionManualOpenBlastDoor : UPrisonerAction {
	char pad_120[0x20]; // 0x120(0x20)
};

// Class ConZ.PrisonerActionManualOpenBlastDoorDescription
// Size: 0xa0 (Inherited: 0x38)
struct UPrisonerActionManualOpenBlastDoorDescription : UCharacterActionDescription {
	char pad_38[0x68]; // 0x38(0x68)
};

// Class ConZ.PrisonerActionMinigame
// Size: 0x158 (Inherited: 0x120)
struct UPrisonerActionMinigame : UPrisonerAction {
	char pad_120[0x38]; // 0x120(0x38)
};

// Class ConZ.PrisonerActionMinigameDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionMinigameDescription : UPrisonerActionDescription {
	struct UMinigameConfiguration* MinigameConfiguration; // 0x38(0x08)
};

// Class ConZ.PrisonerActionModifyBaseElementPaintJob
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionModifyBaseElementPaintJob : UPrisonerAction {
};

// Class ConZ.PrisonerActionModifyBaseElementPaintJobDescription
// Size: 0x78 (Inherited: 0x38)
struct UPrisonerActionModifyBaseElementPaintJobDescription : UPrisonerActionDescription {
	char pad_38[0x40]; // 0x38(0x40)
};

// Class ConZ.PrisonerActionModifyTurretPaintjob
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionModifyTurretPaintjob : UPrisonerAction {
};

// Class ConZ.PrisonerActionModifyTurretPaintjobDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionModifyTurretPaintjobDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionModifyVehicleAttachmentPaintjob
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionModifyVehicleAttachmentPaintjob : UPrisonerAction {
};

// Class ConZ.PrisonerActionModifyVehicleAttachmentPaintjobDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionModifyVehicleAttachmentPaintjobDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionModifyWeaponPaintjob
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionModifyWeaponPaintjob : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionModifyWeaponPaintjobDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionModifyWeaponPaintjobDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionMoveToLocation
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionMoveToLocation : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionMoveToLocationDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerActionMoveToLocationDescription : UPrisonerActionDescription {
	char pad_38[0x30]; // 0x38(0x30)
};

// Class ConZ.PrisonerActionOpenItem
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionOpenItem : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionOpenItemDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionOpenItemDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionOperateBondage
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionOperateBondage : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionOperateBondageDescription
// Size: 0x58 (Inherited: 0x38)
struct UPrisonerActionOperateBondageDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionPairRemoteKeyAndSensor
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionPairRemoteKeyAndSensor : UPrisonerAction {
};

// Class ConZ.PrisonerActionPairRemoteKeyAndSensorDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionPairRemoteKeyAndSensorDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionPickUpVehicle2W
// Size: 0x148 (Inherited: 0x120)
struct UPrisonerActionPickUpVehicle2W : UPrisonerAction {
	char pad_120[0x28]; // 0x120(0x28)
};

// Class ConZ.PrisonerActionPickUpVehicle2WDescription
// Size: 0xa0 (Inherited: 0x38)
struct UPrisonerActionPickUpVehicle2WDescription : UPrisonerActionDescription {
	char pad_38[0x68]; // 0x38(0x68)
};

// Class ConZ.PrisonerActionPlaceItemOnRack
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionPlaceItemOnRack : UPrisonerAction {
};

// Class ConZ.PrisonerActionPlaceItemOnRackDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionPlaceItemOnRackDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionPlantSeed
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionPlantSeed : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionPlantSeedDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionPlantSeedDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionPullGrenadePin
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionPullGrenadePin : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionPullGrenadePinDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionPullGrenadePinDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionReloadWeapon
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionReloadWeapon : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionReloadWeaponDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionReloadWeaponDescription : UPrisonerActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionRemoveItemFromHands
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionRemoveItemFromHands : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionRemoveItemFromHandsDescription
// Size: 0x78 (Inherited: 0x38)
struct UPrisonerActionRemoveItemFromHandsDescription : UPrisonerActionDescription {
	char pad_38[0x40]; // 0x38(0x40)
};

// Class ConZ.PrisonerActionRemovePlant
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionRemovePlant : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionRemovePlantDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionRemovePlantDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionRemoveWeaponAttachment
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionRemoveWeaponAttachment : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionRemoveWeaponAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionRemoveWeed
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionRemoveWeed : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionRemoveWeedDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionRemoveWeedDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionRepair
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionRepair : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionRepairDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionRepairDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionRepairBaseElement
// Size: 0x130 (Inherited: 0x130)
struct UPrisonerActionRepairBaseElement : UPrisonerActionRepair {
};

// Class ConZ.PrisonerActionRepairBaseElementDescription
// Size: 0xa8 (Inherited: 0x50)
struct UPrisonerActionRepairBaseElementDescription : UPrisonerActionRepairDescription {
	char pad_50[0x58]; // 0x50(0x58)
};

// Class ConZ.PrisonerActionRepairFortification
// Size: 0x130 (Inherited: 0x130)
struct UPrisonerActionRepairFortification : UPrisonerActionRepair {
};

// Class ConZ.PrisonerActionRepairFortificationDescription
// Size: 0x68 (Inherited: 0x50)
struct UPrisonerActionRepairFortificationDescription : UPrisonerActionRepairDescription {
	char pad_50[0x18]; // 0x50(0x18)
};

// Class ConZ.PrisonerActionRepairItem
// Size: 0x130 (Inherited: 0x130)
struct UPrisonerActionRepairItem : UPrisonerActionRepair {
};

// Class ConZ.PrisonerActionRepairItemDescription
// Size: 0x68 (Inherited: 0x50)
struct UPrisonerActionRepairItemDescription : UPrisonerActionRepairDescription {
	char pad_50[0x18]; // 0x50(0x18)
};

// Class ConZ.PrisonerActionRepairVehicle
// Size: 0x130 (Inherited: 0x130)
struct UPrisonerActionRepairVehicle : UPrisonerActionRepair {
};

// Class ConZ.PrisonerActionRepairVehicleDescription
// Size: 0x58 (Inherited: 0x50)
struct UPrisonerActionRepairVehicleDescription : UPrisonerActionRepairDescription {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class ConZ.PrisonerActionResuscitate
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionResuscitate : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionResuscitateDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionResuscitateDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionRollRevolverDrum
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionRollRevolverDrum : UPrisonerAction {
};

// Class ConZ.PrisonerActionRollRevolverDrumDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionRollRevolverDrumDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionRussianRoulette
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionRussianRoulette : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionRussianRouletteDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionRussianRouletteDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionSearchObject
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionSearchObject : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionSearchGardenSlot
// Size: 0x130 (Inherited: 0x130)
struct UPrisonerActionSearchGardenSlot : UPrisonerActionSearchObject {
};

// Class ConZ.PrisonerActionSearchObjectDescription
// Size: 0x70 (Inherited: 0x38)
struct UPrisonerActionSearchObjectDescription : UPrisonerActionDescription {
	char pad_38[0x38]; // 0x38(0x38)
};

// Class ConZ.PrisonerActionSearchGardenSlotDescription
// Size: 0x78 (Inherited: 0x70)
struct UPrisonerActionSearchGardenSlotDescription : UPrisonerActionSearchObjectDescription {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class ConZ.PrisonerActionSearchGround
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionSearchGround : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionSearchGroundDescription
// Size: 0x78 (Inherited: 0x38)
struct UPrisonerActionSearchGroundDescription : UPrisonerActionDescription {
	char pad_38[0x40]; // 0x38(0x40)
};

// Class ConZ.PrisonerActionSearchPrisoner
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionSearchPrisoner : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionSearchPrisonerDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionSearchPrisonerDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionSpill
// Size: 0x168 (Inherited: 0x120)
struct UPrisonerActionSpill : UPrisonerAction {
	char pad_120[0x48]; // 0x120(0x48)
};

// Class ConZ.PrisonerActionSpillDescription
// Size: 0x90 (Inherited: 0x38)
struct UPrisonerActionSpillDescription : UCharacterActionDescription {
	char pad_38[0x58]; // 0x38(0x58)
};

// Class ConZ.PrisonerActionSpillAtLocation
// Size: 0x168 (Inherited: 0x168)
struct UPrisonerActionSpillAtLocation : UPrisonerActionSpill {
};

// Class ConZ.PrisonerActionSpillAtLocationDescription
// Size: 0xb8 (Inherited: 0x90)
struct UPrisonerActionSpillAtLocationDescription : UPrisonerActionSpillDescription {
	char pad_90[0x28]; // 0x90(0x28)
};

// Class ConZ.PrisonerActionStartCarryingItem
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionStartCarryingItem : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionStartCarryingItemDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionStartCarryingItemDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionStartChainsawEngine
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionStartChainsawEngine : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionStartChainsawEngineDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionStartChainsawEngineDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionStartPlayingInstrument
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionStartPlayingInstrument : UPrisonerAction {
};

// Class ConZ.PrisonerActionStartPlayingInstrumentDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionStartPlayingInstrumentDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionStartResting
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionStartResting : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionStartRestingDescription
// Size: 0xf0 (Inherited: 0x38)
struct UPrisonerActionStartRestingDescription : UPrisonerActionDescription {
	char pad_38[0xb8]; // 0x38(0xb8)
};

// Class ConZ.PrisonerActionStopResting
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionStopResting : UPrisonerAction {
};

// Class ConZ.PrisonerActionStopRestingDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionStopRestingDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionTakeItemInHands
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionTakeItemInHands : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)

	void ReplicationTimedOut(); // Function ConZ.PrisonerActionTakeItemInHands.ReplicationTimedOut // (Final|Native|Private) // @ game+0x2491fa0
	void OnItemInHandsChanged(struct APrisoner* Prisoner, struct AItem* newItem); // Function ConZ.PrisonerActionTakeItemInHands.OnItemInHandsChanged // (Final|Native|Private) // @ game+0x2491eb0
};

// Class ConZ.PrisonerActionTakeItemInHandsDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionTakeItemInHandsDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionThrowItem
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionThrowItem : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionThrowItemDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionThrowItemDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionTreatPatient
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionTreatPatient : UPrisonerAction {
};

// Class ConZ.PrisonerActionTreatPatientDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionTreatPatientDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionTriggerRemoteKey
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionTriggerRemoteKey : UPrisonerAction {
};

// Class ConZ.PrisonerActionTriggerRemoteKeyDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionTriggerRemoteKeyDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionTuneBow
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionTuneBow : UPrisonerAction {
	struct UAkAudioEvent* _tuneBowAudioEvent; // 0x120(0x08)
};

// Class ConZ.PrisonerActionTuneBowDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerActionTuneBowDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionUncraftItem
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionUncraftItem : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionUncraftItemDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionUncraftItemDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionUnequipWeapon
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionUnequipWeapon : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionUnequipWeaponDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionUnequipWeaponDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerActionUnloadAmmoFromWeapon
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionUnloadAmmoFromWeapon : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionUnloadAmmoFromWeaponDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionUnloadAmmoFromWeaponDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionUpgradeBCU
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionUpgradeBCU : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionUpgradeBCUDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionUpgradeBCUDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionUrinate
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionUrinate : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerActionUrinateDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionUrinateDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionVoiceline
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionVoiceline : UPrisonerAction {
};

// Class ConZ.PrisonerActionVoicelineDescription
// Size: 0x60 (Inherited: 0x38)
struct UPrisonerActionVoicelineDescription : UPrisonerActionDescription {
	char pad_38[0x28]; // 0x38(0x28)
};

// Class ConZ.PrisonerActionVomit
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerActionVomit : UPrisonerAction {
};

// Class ConZ.PrisonerActionVomitDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerActionVomitDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerActionWashCloth
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerActionWashCloth : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.UPrisonerActionWashClothDescription
// Size: 0x58 (Inherited: 0x38)
struct UUPrisonerActionWashClothDescription : UPrisonerActionDescription {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class ConZ.PrisonerActionWashEyes
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionWashEyes : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionWashEyesDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionWashEyesDescription : UCharacterActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerActionWashEyesWithReplenishableResourceDescription
// Size: 0x68 (Inherited: 0x50)
struct UPrisonerActionWashEyesWithReplenishableResourceDescription : UPrisonerActionWashEyesDescription {
	char pad_50[0x10]; // 0x50(0x10)
	struct UGameResourceContainerProxyForReplenishableResource* ResourceProxy; // 0x60(0x08)
};

// Class ConZ.PrisonerActionWashEyesWithInfiniteResourceDescription
// Size: 0xb0 (Inherited: 0x50)
struct UPrisonerActionWashEyesWithInfiniteResourceDescription : UPrisonerActionWashEyesDescription {
	struct UGameResourceType* ResourceType; // 0x50(0x08)
	char pad_58[0x40]; // 0x58(0x40)
	struct TArray<struct UBaseItemTag*> RequiredItemTagsForFilling; // 0x98(0x10)
	struct UGameResourceContainerProxyForInfiniteResource* ResourceProxy; // 0xa8(0x08)
};

// Class ConZ.PrisonerActionWashWithReplenishableResource
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionWashWithReplenishableResource : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionWashWithReplenishableResourceDescription
// Size: 0x90 (Inherited: 0x38)
struct UPrisonerActionWashWithReplenishableResourceDescription : UCharacterActionDescription {
	char pad_38[0x50]; // 0x38(0x50)
	struct UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource; // 0x88(0x08)
};

// Class ConZ.PrisonerActionWhistle
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerActionWhistle : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerActionWhistleDescription
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerActionWhistleDescription : UPrisonerActionDescription {
};

// Class ConZ.PrisonerAnimInstance
// Size: 0x1050 (Inherited: 0x2c0)
struct UPrisonerAnimInstance : UAnimInstance {
	float SlowPaceLoopAnimSpeeds[0x16]; // 0x2b8(0x58)
	float MediumPaceLoopAnimSpeeds[0x16]; // 0x310(0x58)
	float FastPaceLoopAnimSpeeds[0x16]; // 0x368(0x58)
	float MeleeCombatWalkUsageRadius; // 0x3c0(0x04)
	float MeleeExhaustionFactorInterpSpeed; // 0x3c4(0x04)
	bool AutoBlinkEnabled; // 0x3c8(0x01)
	struct APrisoner* _prisoner; // 0x3d0(0x08)
	char pad_3D9[0x8f]; // 0x3d9(0x8f)
	bool _isPrisonerCompletelyInitialized; // 0x468(0x01)
	bool _isShadowMesh; // 0x469(0x01)
	bool _isOwnerLocallyControlled; // 0x46a(0x01)
	bool _isOwnerPlayerControlled; // 0x46b(0x01)
	bool _isFemale; // 0x46c(0x01)
	bool _isInFirstPersonView; // 0x46d(0x01)
	bool _shouldOverrideIsInFirstPersonView; // 0x46e(0x01)
	bool _isInFirstPersonViewOverride; // 0x46f(0x01)
	bool _isInFirstPersonViewAndIsFemale; // 0x470(0x01)
	bool _isInThirdPersonViewAndIsFemale; // 0x471(0x01)
	bool _isAbleToFireWeapon; // 0x472(0x01)
	char pad_473[0x1]; // 0x473(0x01)
	struct FVector _supportingHandIKLocation; // 0x474(0x0c)
	float _weaponAimYaw; // 0x480(0x04)
	float _weaponAimPitch; // 0x484(0x04)
	struct UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationTP; // 0x488(0x08)
	struct UAnimSequenceBase* _meleeSkill_PrimaryIdleAnimationFP; // 0x490(0x08)
	struct UAnimSequenceBase* _meleeSkill_TiredIdleAnimationTP; // 0x498(0x08)
	struct UAnimSequenceBase* _meleeSkill_TiredIdleAnimationFP; // 0x4a0(0x08)
	struct UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationTP; // 0x4a8(0x08)
	struct UAnimSequenceBase* _meleeSkill_WalkingIdleAnimationFP; // 0x4b0(0x08)
	struct UAnimSequenceBase* _meleeSkill_BlockIdleAnimationTP; // 0x4b8(0x08)
	struct UAnimSequenceBase* _meleeSkill_BlockIdleAnimationFP; // 0x4c0(0x08)
	struct UBlendSpace* _meleeSkill_AimOffsetBlendSpaceTP; // 0x4c8(0x08)
	struct UBlendSpace* _meleeSkill_AimOffsetBlendSpaceFP; // 0x4d0(0x08)
	float _meleeSkill_IdleToBlockBlendDuration; // 0x4d8(0x04)
	float _meleeSkill_BlockToIdleBlendDuration; // 0x4dc(0x04)
	float _meleeSkill_ExhaustionFactor; // 0x4e0(0x04)
	bool _shouldUseUnarmedCombatWalk; // 0x4e4(0x01)
	bool _isHoldingBlock; // 0x4e5(0x01)
	char pad_4E6[0x2]; // 0x4e6(0x02)
	float _stamina; // 0x4e8(0x04)
	float _bellyJiggleAmount; // 0x4ec(0x04)
	float _breastJiggleAmount; // 0x4f0(0x04)
	bool _shouldUseWeaponAnimationPose; // 0x4f4(0x01)
	char pad_4F5[0xab]; // 0x4f5(0xab)
	bool _shouldIgnoreSupportingHandIK; // 0x5a0(0x01)
	char pad_5A1[0x3]; // 0x5a1(0x03)
	float _firstPersonAimPitch; // 0x5a4(0x04)
	float _firstPersonAimYawDelta; // 0x5a8(0x04)
	bool _shouldAimDownTheSights; // 0x5ac(0x01)
	char pad_5AD[0x3]; // 0x5ad(0x03)
	struct FVector _aimingDownTheSightsLocationOffset; // 0x5b0(0x0c)
	struct FVector _scopeViewArmDislocationOffset; // 0x5bc(0x0c)
	struct FRotator _armsLagRotation; // 0x5c8(0x0c)
	float _armsLagPitch; // 0x5d4(0x04)
	float _armsLagYaw; // 0x5d8(0x04)
	enum class EPrisonerGroundStance _stance; // 0x5dc(0x01)
	char pad_5DD[0x3]; // 0x5dd(0x03)
	float _crouchStage; // 0x5e0(0x04)
	float _targetCrouchStage; // 0x5e4(0x04)
	bool _isFreeLookEnabled; // 0x5e8(0x01)
	bool _shouldIgnoreHeadTurning; // 0x5e9(0x01)
	char pad_5EA[0x2]; // 0x5ea(0x02)
	struct FRotator _aimOffset; // 0x5ec(0x0c)
	float _leanAmount; // 0x5f8(0x04)
	bool _shouldLookAtMeleeTarget; // 0x5fc(0x01)
	char pad_5FD[0x3]; // 0x5fd(0x03)
	struct FRotator _lookAtMeleeTargetAimOffset; // 0x600(0x0c)
	enum class EPrisonerAnimationSet _animationSet; // 0x60c(0x01)
	bool _isInRagdoll; // 0x60d(0x01)
	bool _isMovingOnGround; // 0x60e(0x01)
	bool _isFalling; // 0x60f(0x01)
	bool _isSwimming; // 0x610(0x01)
	char pad_611[0x3]; // 0x611(0x03)
	struct FVector _acceleration; // 0x614(0x0c)
	bool _wantsToMove; // 0x620(0x01)
	bool _wantsToMoveHorizontallyOnly; // 0x621(0x01)
	bool _wantsToMoveVerticallyOnly; // 0x622(0x01)
	bool _wantsToWalk; // 0x623(0x01)
	bool _wantsToJog; // 0x624(0x01)
	bool _wantsToRun; // 0x625(0x01)
	char pad_626[0x2]; // 0x626(0x02)
	struct FVector _velocity; // 0x628(0x0c)
	char pad_634[0xc]; // 0x634(0x0c)
	struct FTransform _handL; // 0x640(0x30)
	struct FTransform _handR; // 0x670(0x30)
	struct FTransform _lowerArmL; // 0x6a0(0x30)
	struct FTransform _lowerArmR; // 0x6d0(0x30)
	char pad_700[0x4]; // 0x700(0x04)
	float _speed; // 0x704(0x04)
	float _speedXY; // 0x708(0x04)
	float _maxSpeed; // 0x70c(0x04)
	float _stoppingDistance; // 0x710(0x04)
	char pad_714[0x7c]; // 0x714(0x7c)
	float _leftHandIKAmount; // 0x790(0x04)
	float _courseAngle; // 0x794(0x04)
	float _coursePitchAngle; // 0x798(0x04)
	enum class EPrisonerMovementPace _desiredMovementPace; // 0x79c(0x01)
	enum class EPrisonerMovementPace _clampedDesiredMovementPace; // 0x79d(0x01)
	enum class EPrisonerMovementPace _movementPaceBeforeGroundStart; // 0x79e(0x01)
	char pad_79F[0x1]; // 0x79f(0x01)
	float _groundStartAnimPlayRate; // 0x7a0(0x04)
	float _legsPoseBeforeGroundStop; // 0x7a4(0x04)
	enum class ECardinalDirection _movementDirectionBeforeGroundStop; // 0x7a8(0x01)
	enum class EPrisonerMovementPace _movementPaceBeforeGroundStop; // 0x7a9(0x01)
	enum class EPrisonerAnimationSet _animationSetBeforeGroundStop; // 0x7aa(0x01)
	bool _shouldUseLUGroundStopAnimation; // 0x7ab(0x01)
	enum class EHitReactState _hitReactState; // 0x7ac(0x01)
	char pad_7AD[0x3]; // 0x7ad(0x03)
	float _weightLoadFactor; // 0x7b0(0x04)
	bool _shouldUseJogStartForRunStart; // 0x7b4(0x01)
	bool _useLocomotionAdditiveAnimations; // 0x7b5(0x01)
	char pad_7B6[0x2]; // 0x7b6(0x02)
	float _disorientation; // 0x7b8(0x04)
	float _disorientationMultiplier; // 0x7bc(0x04)
	bool _isLimping; // 0x7c0(0x01)
	bool _shouldRotateBonesWithFirstPersonAimPitch; // 0x7c1(0x01)
	char pad_7C2[0x6]; // 0x7c2(0x06)
	float _jumpApex; // 0x7c8(0x04)
	float _distanceToJumpApex; // 0x7cc(0x04)
	float _legsPoseBeforeJump; // 0x7d0(0x04)
	char pad_7D4[0x2]; // 0x7d4(0x02)
	enum class EPrisonerAnimationSet _animationSetBeforeJump; // 0x7d6(0x01)
	bool _shouldJumpGoToFallingLoop; // 0x7d7(0x01)
	float _waterImmersionDepth; // 0x7d8(0x04)
	struct FVector _meshOffsetWhenInWater; // 0x7dc(0x0c)
	bool _wantsToDiveIn; // 0x7e8(0x01)
	char pad_7E9[0xd3]; // 0x7e9(0xd3)
	bool _isClimbing; // 0x8bc(0x01)
	bool _isClimbingAnchoring; // 0x8bd(0x01)
	char pad_8BE[0x2]; // 0x8be(0x02)
	struct UAnimSequenceBase* _climbAnchoringAnimation; // 0x8c0(0x08)
	float _climbAnchoringAnimationTime; // 0x8c8(0x04)
	bool _isClimbingLadder; // 0x8cc(0x01)
	char pad_8CD[0x3]; // 0x8cd(0x03)
	struct FVector _ladderClimbingRootBoneOffset; // 0x8d0(0x0c)
	float _ladderClimbingLoopState; // 0x8dc(0x04)
	float _ladderClimbingLoopStateForPeeking; // 0x8e0(0x04)
	float _ladderClimbingPeekState; // 0x8e4(0x04)
	bool _isClimbingWindow; // 0x8e8(0x01)
	bool _isClimbingWindowAnchoring; // 0x8e9(0x01)
	char pad_8EA[0x6]; // 0x8ea(0x06)
	struct UAnimSequenceBase* _windowClimbingAnchoringAnimation; // 0x8f0(0x08)
	float _windowClimbingAnchoringAnimationTime; // 0x8f8(0x04)
	enum class EWeaponType _weaponType; // 0x8fc(0x01)
	bool _isDedicatedServer; // 0x8fd(0x01)
	char pad_8FE[0x32a]; // 0x8fe(0x32a)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyStandIdle; // 0xc28(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandWalk; // 0xc30(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandWalkLimping; // 0xc38(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandJog; // 0xc40(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyStandJogLimping; // 0xc48(0x08)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyStandRun; // 0xc50(0x08)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyCrouchIdle; // 0xc58(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalk; // 0xc60(0x08)
	struct UBlendSpace1D* _itemFirstPersonUpperBodyCrouchWalkLimping; // 0xc68(0x08)
	struct UAnimSequenceBase* _itemFirstPersonUpperBodyProneIdle; // 0xc70(0x08)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandIdle; // 0xc78(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalk; // 0xc80(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandWalkLimping; // 0xc88(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJog; // 0xc90(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyStandJogLimping; // 0xc98(0x08)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyStandRun; // 0xca0(0x08)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyCrouchIdle; // 0xca8(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalk; // 0xcb0(0x08)
	struct UBlendSpace1D* _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping; // 0xcb8(0x08)
	struct UAnimSequenceBase* _weaponAimingHipFirstPersonUpperBodyProneIdle; // 0xcc0(0x08)
	bool _shouldUseItemFirstPersonAimOffsets; // 0xcc8(0x01)
	char pad_CC9[0x7]; // 0xcc9(0x07)
	struct UBlendSpace* _itemFirstPersonAimOffsetStanding; // 0xcd0(0x08)
	struct UBlendSpace* _itemFirstPersonAimOffsetCrouching; // 0xcd8(0x08)
	struct UBlendSpace* _itemFirstPersonAimOffsetProne; // 0xce0(0x08)
	struct UAnimSequenceBase* _rightHandCorrectionPoseStanding; // 0xce8(0x08)
	struct UAnimSequenceBase* _rightHandCorrectionPoseCrouching; // 0xcf0(0x08)
	struct UAnimSequenceBase* _rightHandCorrectionPoseProne; // 0xcf8(0x08)
	struct UAnimSequenceBase* _rightFistCorrectionPoseStanding; // 0xd00(0x08)
	struct UAnimSequenceBase* _rightFistCorrectionPoseStandingInCombatMode; // 0xd08(0x08)
	struct UAnimSequenceBase* _rightFistCorrectionPoseCrouching; // 0xd10(0x08)
	struct UAnimSequenceBase* _rightFistCorrectionPoseProne; // 0xd18(0x08)
	float _rightHandToIdleBlendAlphaStanding; // 0xd20(0x04)
	float _rightHandToIdleBlendAlphaCrouching; // 0xd24(0x04)
	struct UAnimSequenceBase* _leftHandCorrectionPoseStanding; // 0xd28(0x08)
	struct UAnimSequenceBase* _leftHandCorrectionPoseCrouching; // 0xd30(0x08)
	struct UAnimSequenceBase* _leftHandCorrectionPoseProne; // 0xd38(0x08)
	struct UAnimSequenceBase* _leftFistCorrectionPoseStanding; // 0xd40(0x08)
	struct UAnimSequenceBase* _leftFistCorrectionPoseStandingInCombatMode; // 0xd48(0x08)
	struct UAnimSequenceBase* _leftFistCorrectionPoseCrouching; // 0xd50(0x08)
	struct UAnimSequenceBase* _leftFistCorrectionPoseProne; // 0xd58(0x08)
	float _leftHandToIdleBlendAlphaStanding; // 0xd60(0x04)
	float _leftHandToIdleBlendAlphaCrouching; // 0xd64(0x04)
	char pad_D68[0x8]; // 0xd68(0x08)
	bool _hasItemInHands; // 0xd70(0x01)
	char pad_D71[0x3]; // 0xd71(0x03)
	struct FVector _itemInHandsLeftHandLocationInRightHandSpace; // 0xd74(0x0c)
	struct FRotator _itemInHandsLeftHandRotationInRightHandSpace; // 0xd80(0x0c)
	float _itemInHandsObstructionDepth; // 0xd8c(0x04)
	float _itemInHandsObstructionDepthSmoothed; // 0xd90(0x04)
	bool _isItemInHandsObstructed; // 0xd94(0x01)
	bool _isItemInHandsCompletelyObstructed; // 0xd95(0x01)
	char pad_D96[0x2]; // 0xd96(0x02)
	float _itemInHandsObstructionSide; // 0xd98(0x04)
	char pad_D9C[0x4]; // 0xd9c(0x04)
	struct UAnimSequenceBase* _itemInHandsLeftObstructedIdleFP; // 0xda0(0x08)
	struct UAnimSequenceBase* _itemInHandsRightObstructedIdleFP; // 0xda8(0x08)
	struct UAnimSequenceBase* _itemInHandsObstructedIdleTP; // 0xdb0(0x08)
	struct UAnimSequenceBase* _itemInHandsObstructedIdleProneTP; // 0xdb8(0x08)
	enum class EPrisonerCombatMode _combatMode; // 0xdc0(0x01)
	bool _shouldUseHandCorrections; // 0xdc1(0x01)
	bool _shouldUseFistCorrections; // 0xdc2(0x01)
	bool _overrideFingersOnlyInProne; // 0xdc3(0x01)
	bool _ignoreAimOffsets; // 0xdc4(0x01)
	enum class EPrisonerMontageBlendType _prisonerMontageBlendType; // 0xdc5(0x01)
	bool _isAimingBow; // 0xdc6(0x01)
	char pad_DC7[0x1]; // 0xdc7(0x01)
	float _bowArmsShakeValue; // 0xdc8(0x04)
	bool _isScoping; // 0xdcc(0x01)
	char pad_DCD[0x53]; // 0xdcd(0x53)
	struct TSet<struct UPrisonerResponseIdle*> _responseIdleClassReferences; // 0xe20(0x50)
	char pad_E70[0x30]; // 0xe70(0x30)
	bool _shouldUpperBodyBeUsedAsFullBodyInIdle; // 0xea0(0x01)
	bool _isPlayingInstrument; // 0xea1(0x01)
	char pad_EA2[0x6]; // 0xea2(0x06)
	struct UAnimSequenceBase* _playingInstrumentIdleAnimation; // 0xea8(0x08)
	struct UAnimSequenceBase* _playingInstrumentPlayAnimation; // 0xeb0(0x08)
	enum class EPlayingInstrumentState _playingInstrumentState; // 0xeb8(0x01)
	bool _isCarryingItem; // 0xeb9(0x01)
	char pad_EBA[0x6]; // 0xeba(0x06)
	struct UAnimSequenceBase* _carryingItemIdleFPAnimation; // 0xec0(0x08)
	struct UAnimSequenceBase* _carryingItemIdleTPAnimation; // 0xec8(0x08)
	enum class ECarryingItemState _carryingItemState; // 0xed0(0x01)
	bool _isMounted; // 0xed1(0x01)
	bool _isFullyMounted; // 0xed2(0x01)
	char pad_ED3[0x5]; // 0xed3(0x05)
	struct UAnimSequenceBase* _mountedAnimation; // 0xed8(0x08)
	bool _isVehicleDriver; // 0xee0(0x01)
	char pad_EE1[0x7]; // 0xee1(0x07)
	struct UBlendSpace* _vehicleDriverForwardIdleAnimation; // 0xee8(0x08)
	struct UAnimSequenceBase* _vehicleDriverForwardSteeringAnimation; // 0xef0(0x08)
	struct UAnimSequenceBase* _vehicleDriverForwardSteeringAnimationFP; // 0xef8(0x08)
	struct UBlendSpace* _vehicleDriverReverseIdleAnimation; // 0xf00(0x08)
	struct UAnimSequenceBase* _vehicleDriverReverseSteeringAnimation; // 0xf08(0x08)
	struct UAnimSequenceBase* _vehicleDriverReverseSteeringAnimationFP; // 0xf10(0x08)
	struct UBlendSpace* _vehiclePassengerIdleAnimation; // 0xf18(0x08)
	float _vehicleSpeed; // 0xf20(0x04)
	float _vehicleSpeedKph; // 0xf24(0x04)
	float _vehicleBumpiness; // 0xf28(0x04)
	float _vehicleDriverSteeringAnimationTime; // 0xf2c(0x04)
	float _vehicleDriverSteeringAnimationTimeInterpSpeed; // 0xf30(0x04)
	bool _isSledgeAcceleratingForward; // 0xf34(0x01)
	bool _isSledgeAcceleratingBackward; // 0xf35(0x01)
	char pad_F36[0x2]; // 0xf36(0x02)
	float _sledgeSlidingThresholdSpeed; // 0xf38(0x04)
	bool _isSledgeSliding; // 0xf3c(0x01)
	char pad_F3D[0x3]; // 0xf3d(0x03)
	struct UAnimSequenceBase* _bowArmsShakeAnimation; // 0xf40(0x08)
	float _weaponBreathFactor; // 0xf48(0x04)
	float _weaponAimDownTheSightsStillBlendFactor; // 0xf4c(0x04)
	bool _areHandsBound; // 0xf50(0x01)
	char pad_F51[0x7]; // 0xf51(0x07)
	struct UAnimSequenceBase* _handsBoundIdleFPAnimation; // 0xf58(0x08)
	struct UAnimSequenceBase* _handsBoundIdleTPAnimation; // 0xf60(0x08)
	bool _isResting; // 0xf68(0x01)
	char pad_F69[0x7]; // 0xf69(0x07)
	struct UAnimSequenceBase* _restingAnimation; // 0xf70(0x08)
	float _restingFeetOffset; // 0xf78(0x04)
	float _cameraToActorRotationDeltaYaw; // 0xf7c(0x04)
	float _cameraToActorRotationDeltaPitch; // 0xf80(0x04)
	enum class EVehicleWeaponAimingStance _vehicleWeaponAimingStance; // 0xf84(0x01)
	bool _useMountedFirstPersonWeaponAimingParameters; // 0xf85(0x01)
	char pad_F86[0x2]; // 0xf86(0x02)
	struct FVector _vehicleWAPLocationOffsetDefaultStanceFP; // 0xf88(0x0c)
	struct FVector _vehicleWAPLocationOffsetLeaningStanceFP; // 0xf94(0x0c)
	bool _useMountedThirdPersonWeaponAimingParameters; // 0xfa0(0x01)
	char pad_FA1[0x7]; // 0xfa1(0x07)
	struct UBlendSpace* _vehicleWAPAimOffsetTP; // 0xfa8(0x08)
	bool _useVehicleWAPAimOffsetTP; // 0xfb0(0x01)
	char pad_FB1[0x7]; // 0xfb1(0x07)
	struct UBlendSpace* _vehicleWAPAimOffsetDefaultStanceTP; // 0xfb8(0x08)
	bool _useVehicleWAPAimOffsetDefaultStanceTP; // 0xfc0(0x01)
	char pad_FC1[0x7]; // 0xfc1(0x07)
	struct UBlendSpace* _vehicleWAPAimOffsetLeaningStanceTP; // 0xfc8(0x08)
	bool _useVehicleWAPAimOffsetLeaningStanceTP; // 0xfd0(0x01)
	bool _useVehicleWAPUpperBodyIdleTP; // 0xfd1(0x01)
	char pad_FD2[0x6]; // 0xfd2(0x06)
	struct UAnimSequenceBase* _vehicleWAPUpperBodyIdleRelaxedTP; // 0xfd8(0x08)
	struct UAnimSequenceBase* _vehicleWAPUpperBodyIdleAimingTP; // 0xfe0(0x08)
	bool _useVehicleWAPLowerBodyIdleTP; // 0xfe8(0x01)
	char pad_FE9[0x7]; // 0xfe9(0x07)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0xff0(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0xff8(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedDefaultTP; // 0x1000(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingDefaultTP; // 0x1008(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedLeaningTP; // 0x1010(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingLeaningTP; // 0x1018(0x08)
	bool _isPlayingWAPStanceTransitionMontage; // 0x1020(0x01)
	bool _isActivelyFishing; // 0x1021(0x01)
	bool _isBaitingFish; // 0x1022(0x01)
	bool _shouldUseGrappleAnimInstance; // 0x1023(0x01)
	bool _useWeaponAimingDownTheSightsZeroRangeBlendSpace; // 0x1024(0x01)
	char pad_1025[0x3]; // 0x1025(0x03)
	struct UBlendSpace1D* _weaponAimingDownTheSightsZeroRangeBlendSpace; // 0x1028(0x08)
	float _weaponZeroRange; // 0x1030(0x04)
	bool _isInPhotoMode; // 0x1034(0x01)
	bool _hasHighHeels; // 0x1035(0x01)
	bool _isCarryingItemWithTwoHands; // 0x1036(0x01)
	char pad_1037[0x9]; // 0x1037(0x09)
	struct FVector _grappledWallOffsetVector; // 0x1040(0x0c)
	char pad_104C[0x4]; // 0x104c(0x04)

	void TakePenis(); // Function ConZ.PrisonerAnimInstance.TakePenis // (Native|Event|Public|BlueprintEvent) // @ game+0x2491fc0
	void ReleasePenis(); // Function ConZ.PrisonerAnimInstance.ReleasePenis // (Native|Event|Public|BlueprintEvent) // @ game+0x2491f80
	void OnIdleStateExit(struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex); // Function ConZ.PrisonerAnimInstance.OnIdleStateExit // (Final|Native|Private|HasOutParms) // @ game+0x2491b80
	void OnIdleStateEntry(struct FAnimNode_StateMachine& Machine, int32_t prevStateIndex, int32_t nextStateIndex); // Function ConZ.PrisonerAnimInstance.OnIdleStateEntry // (Final|Native|Private|HasOutParms) // @ game+0x2491850
	bool IsInCombatMode(); // Function ConZ.PrisonerAnimInstance.IsInCombatMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491820
	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle); // Function ConZ.PrisonerAnimInstance.IsCourseAngleSupportedByStartAndStopAnimations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234f5a0
	bool IsAnyStanceTransitionActive(); // Function ConZ.PrisonerAnimInstance.IsAnyStanceTransitionActive // (Final|Native|Public|BlueprintCallable) // @ game+0x24917f0
	bool IsAimingWeapon(); // Function ConZ.PrisonerAnimInstance.IsAimingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24917c0
	bool IsAimingDownSights(); // Function ConZ.PrisonerAnimInstance.IsAimingDownSights // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491790
	float GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491760
	struct UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(enum class EWeaponAnimationPose animationPose, enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetWeaponAnimationPoseOnWorkerThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491680
	struct UBlendSpace* GetWeaponAimOffsetOnGameThread(enum class EPrisonerAimOffsetType prisonerAimOffsetType); // Function ConZ.PrisonerAnimInstance.GetWeaponAimOffsetOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491590
	float GetWeaponAimingNoisePlayRateOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoisePlayRateOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491650
	float GetWeaponAimingNoiseBlendValueOnGameThread(); // Function ConZ.PrisonerAnimInstance.GetWeaponAimingNoiseBlendValueOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491620
	float GetVehicleSpeedKph(); // Function ConZ.PrisonerAnimInstance.GetVehicleSpeedKph // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491560
	float GetVehicleSpeed(); // Function ConZ.PrisonerAnimInstance.GetVehicleSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491530
	struct UBlendSpace* GetVehiclePassengerIdleAnimation(); // Function ConZ.PrisonerAnimInstance.GetVehiclePassengerIdleAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491500
	struct UBlendSpace* GetVehicleDriverForwardIdleAnimation(); // Function ConZ.PrisonerAnimInstance.GetVehicleDriverForwardIdleAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24914d0
	float GetVehicleBumpiness(); // Function ConZ.PrisonerAnimInstance.GetVehicleBumpiness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24914a0
	float GetStandLookBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetStandLookBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491470
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate); // Function ConZ.PrisonerAnimInstance.GetPlayRateFromSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491350
	float GetPenisSize(); // Function ConZ.PrisonerAnimInstance.GetPenisSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491320
	float GetLocomotionStateWeight(enum class EPrisonerAnimationState State); // Function ConZ.PrisonerAnimInstance.GetLocomotionStateWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491290
	void GetLeanBlendWeights(float& Left, float& Right, float Multiplier, struct UCurveFloat* strengthBySpeedCurve); // Function ConZ.PrisonerAnimInstance.GetLeanBlendWeights // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491110
	float GetKnownCurveValueOnWorkerThread(enum class EPrisonerAnimationCurve Curve); // Function ConZ.PrisonerAnimInstance.GetKnownCurveValueOnWorkerThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491080
	bool GetIsVehicleDriver(); // Function ConZ.PrisonerAnimInstance.GetIsVehicleDriver // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2491050
	float GetInPlaceTurningElapsedTimeRight(enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490fc0
	float GetInPlaceTurningElapsedTimeLeft(enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningElapsedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490f30
	float GetInPlaceTurningDirectionBlendAlpha(enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningDirectionBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490ea0
	float GetInPlaceTurningBlendAlpha(enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetInPlaceTurningBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490e10
	struct FVector GetIKLegsRootOffsetVectorFromCardinalDirection(enum class ECardinalDirection Value); // Function ConZ.PrisonerAnimInstance.GetIKLegsRootOffsetVectorFromCardinalDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490d70
	float GetFacialExpressionBlendWeightOnWorkerThread(enum class EPrisonerFacialExpression facialExpression); // Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnWorkerThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490ce0
	float GetFacialExpressionBlendWeightOnGameThread(enum class EPrisonerFacialExpression facialExpression); // Function ConZ.PrisonerAnimInstance.GetFacialExpressionBlendWeightOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490c50
	float GetCurrentLocomotionStateElapsedTime(); // Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionStateElapsedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490c20
	enum class EPrisonerAnimationState GetCurrentLocomotionState(); // Function ConZ.PrisonerAnimInstance.GetCurrentLocomotionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490bf0
	enum class ECardinalDirection GetCardinalDirectionFromCourseAngle(float Value); // Function ConZ.PrisonerAnimInstance.GetCardinalDirectionFromCourseAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x234ee40
	float GetBoxingTurnAngle(); // Function ConZ.PrisonerAnimInstance.GetBoxingTurnAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490bc0
	float GetBoxingInPlaceTurningElapsedTimeRight(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490b90
	float GetBoxingInPlaceTurningElapsedTimeLeft(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningElapsedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490b60
	float GetBoxingInPlaceTurningDirectionBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningDirectionBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490b30
	float GetBoxingInPlaceTurningBlendAlpha(); // Function ConZ.PrisonerAnimInstance.GetBoxingInPlaceTurningBlendAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490b00
	struct UAnimSequenceBase* GetBowArmsShakeAnimationOnGameThread(enum class EPrisonerGroundStance stance); // Function ConZ.PrisonerAnimInstance.GetBowArmsShakeAnimationOnGameThread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2490a70
	float FindTimeBeforeJumpApex(struct UAnimSequenceBase* AnimSequence, float distanceToApex); // Function ConZ.PrisonerAnimInstance.FindTimeBeforeJumpApex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24909a0
	float FindTimeAtStoppingDistance(struct UAnimSequenceBase* AnimSequence, float stoppingDistance); // Function ConZ.PrisonerAnimInstance.FindTimeAtStoppingDistance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24908d0
	float FindTimeAfterJumpApex(struct UAnimSequenceBase* AnimSequence, float distanceToApex); // Function ConZ.PrisonerAnimInstance.FindTimeAfterJumpApex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2490800
	void DeactivateFacialExpressionOnGameThread(enum class EPrisonerFacialExpression facialExpression); // Function ConZ.PrisonerAnimInstance.DeactivateFacialExpressionOnGameThread // (Final|Native|Public|BlueprintCallable) // @ game+0x2490780
	void DeactivateAllFacialExpressionsOnGameThread(); // Function ConZ.PrisonerAnimInstance.DeactivateAllFacialExpressionsOnGameThread // (Final|Native|Public|BlueprintCallable) // @ game+0x2490760
	void Blink(); // Function ConZ.PrisonerAnimInstance.Blink // (Final|Native|Public|BlueprintCallable) // @ game+0x2490740
	void AnimNotify_TakePenis(); // Function ConZ.PrisonerAnimInstance.AnimNotify_TakePenis // (Native|Event|Protected|BlueprintEvent) // @ game+0x2490720
	void AnimNotify_TakeItemInHands(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_TakeItemInHands // (Final|Native|Protected) // @ game+0x2490690
	void AnimNotify_RFootDown(); // Function ConZ.PrisonerAnimInstance.AnimNotify_RFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x24905c0
	void AnimNotify_RemoveItemFromHands(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_RemoveItemFromHands // (Final|Native|Protected) // @ game+0x2490600
	void AnimNotify_ReleasePenis(); // Function ConZ.PrisonerAnimInstance.AnimNotify_ReleasePenis // (Native|Event|Protected|BlueprintEvent) // @ game+0x24905e0
	void AnimNotify_LFootDown(); // Function ConZ.PrisonerAnimInstance.AnimNotify_LFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x24905c0
	void AnimNotify_EnableCapsuleCollision(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_EnableCapsuleCollision // (Final|Native|Protected) // @ game+0x2490530
	void AnimNotify_DisableCapsuleCollision(struct UAnimNotify* Notify); // Function ConZ.PrisonerAnimInstance.AnimNotify_DisableCapsuleCollision // (Final|Native|Protected) // @ game+0x24904a0
	void ActivateFacialExpressionOnGameThread(enum class EPrisonerFacialExpression facialExpression, float BlendInDuration, float Duration, float BlendOutDuration, float blendWeightMultiplier); // Function ConZ.PrisonerAnimInstance.ActivateFacialExpressionOnGameThread // (Final|Native|Public|BlueprintCallable) // @ game+0x24902f0
};

// Class ConZ.PrisonerAnimInstance_Aerial
// Size: 0x330 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Aerial : UAnimInstance {
	enum class EPrisonerAerialPose _upcomingPose; // 0x2b8(0x01)
	enum class EPrisonerAerialPose _previousPose; // 0x2b9(0x01)
	struct UAnimSequence* _blendAnimationOverride; // 0x2c0(0x08)
	float _blendAnimationOverrideTime; // 0x2c8(0x04)
	float _poseBlendWeight; // 0x2cc(0x04)
	struct FVector2D _fallingControl; // 0x2d0(0x08)
	float _fallSpeed; // 0x2d8(0x04)
	float _yawRotationRate; // 0x2dc(0x04)
	bool _isInFirstPersonView; // 0x2e0(0x01)
	bool _hasHandBondage; // 0x2e1(0x01)
	bool _jumpingAfterApex; // 0x2e2(0x01)
	bool _shouldUsePoseSnapshot; // 0x2e3(0x01)
	char pad_2E6[0x2]; // 0x2e6(0x02)
	struct UAnimSequenceBase* _handsBoundIdleFPAnimation; // 0x2e8(0x08)
	struct UAnimSequenceBase* _handsBoundIdleTPAnimation; // 0x2f0(0x08)
	float _distanceToJumpApexNormalized; // 0x2f8(0x04)
	float _legsPoseBeforeJump; // 0x2fc(0x04)
	bool _wasMovingBeforeJump; // 0x300(0x01)
	enum class EPrisonerMovementPace _movementPaceBeforeJump; // 0x301(0x01)
	char pad_302[0x2e]; // 0x302(0x2e)

	float FindJumpTime(struct UAnimSequenceBase* AnimSequence, float distanceToApex, bool afterApex); // Function ConZ.PrisonerAnimInstance_Aerial.FindJumpTime // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x2495af0
};

// Class ConZ.PrisonerAnimInstance_Airplane
// Size: 0x3a0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Airplane : UAnimInstance {
	bool _isDriver; // 0x2b8(0x01)
	float _pitchAmount; // 0x2bc(0x04)
	float _rollAmount; // 0x2c0(0x04)
	float _yawAmount; // 0x2c4(0x04)
	char pad_2CD[0x3]; // 0x2cd(0x03)
	struct FTransform _throttleTransform; // 0x2d0(0x30)
	struct FTransform _leftPedalTransform; // 0x300(0x30)
	struct FTransform _rightPedalTransform; // 0x330(0x30)
	struct FTransform _stickTransform; // 0x360(0x30)
	struct UBlendSpace* _driverIdleAnimation; // 0x390(0x08)
	struct UBlendSpace* _passengerIdleAnimation; // 0x398(0x08)
};

// Class ConZ.PrisonerAnimInstance_Bike
// Size: 0x460 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Bike : UAnimInstance {
	float _bikeSpeed; // 0x2b8(0x04)
	float _bikeSpeedKmh; // 0x2bc(0x04)
	float _steerAmount; // 0x2c0(0x04)
	float _brakeAmount; // 0x2c4(0x04)
	float _throttleAmount; // 0x2c8(0x04)
	bool _isInCombatMode; // 0x2cc(0x01)
	bool _isDriver; // 0x2cd(0x01)
	bool _isBicycle; // 0x2ce(0x01)
	float _vehicleRoll; // 0x2d0(0x04)
	float _lerpedBrakeThrottle; // 0x2d4(0x04)
	float _inAirTimer; // 0x2d8(0x04)
	float _driverIdlePlayRate; // 0x2dc(0x04)
	bool _isStartingEngine; // 0x2e0(0x01)
	struct UBlendSpace* _driverIdleAnimation; // 0x2e8(0x08)
	struct UBlendSpace* _driverReverseIdleAnimation; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)
	struct FTransform _driverLHandleTransform; // 0x300(0x30)
	struct FTransform _driverRHandleTransform; // 0x330(0x30)
	struct FTransform _driverReverseSeatHandTransform; // 0x360(0x30)
	struct FTransform _driverLFootRestTransform; // 0x390(0x30)
	struct FTransform _driverRFootRestTransform; // 0x3c0(0x30)
	struct UBlendSpace* _passengerIdleAnimation; // 0x3f0(0x08)
	bool _useVehicleWAPLowerBodyIdleTP; // 0x3f8(0x01)
	char pad_3F9[0x7]; // 0x3f9(0x07)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x400(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x408(0x08)
	struct UAnimSequence* _startEngineStartAnimation; // 0x410(0x08)
	struct UAnimSequence* _startEngineLoopAnimation; // 0x418(0x08)
	struct UAnimSequence* _startEngineLongLoopAnimation; // 0x420(0x08)
	struct UAnimSequence* _startEngineEndAnimation; // 0x428(0x08)
	struct UAnimSequence* _standUpStartAnimation; // 0x430(0x08)
	struct UAnimSequence* _standUpLoopAnimation; // 0x438(0x08)
	struct UAnimSequence* _standUpEndAnimation; // 0x440(0x08)
	bool _hasStandUpAnimations; // 0x448(0x01)
	char pad_449[0x7]; // 0x449(0x07)
	struct UAimOffsetBlendSpace* _turnAimOffset; // 0x450(0x08)
	char pad_458[0x8]; // 0x458(0x08)
};

// Class ConZ.PrisonerAnimInstance_Boat
// Size: 0x430 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Boat : UAnimInstance {
	float _vehicleSpeed; // 0x2b8(0x04)
	float _vehicleSpeedKph; // 0x2bc(0x04)
	bool _isVehicleDriver; // 0x2c0(0x01)
	bool _isRowing; // 0x2c1(0x01)
	bool _isPaddling; // 0x2c2(0x01)
	bool _isMotorPropelled; // 0x2c3(0x01)
	bool _isSailing; // 0x2c4(0x01)
	float _sailsDeployAmount; // 0x2c8(0x04)
	float _sailsSteerAmount; // 0x2cc(0x04)
	float _sailsTurnAmount; // 0x2d0(0x04)
	int32_t _paddleCounter; // 0x2d4(0x04)
	float _vehicleThrottleAmount; // 0x2d8(0x04)
	float _vehicleBrakeAmount; // 0x2dc(0x04)
	float _vehicleSteerAmount; // 0x2e0(0x04)
	int32_t _numPaddleSwingsInOneHand; // 0x2e4(0x04)
	struct UBlendSpace* _vehicleDriverForwardIdleAnimation; // 0x2e8(0x08)
	struct UBlendSpace* _vehiclePassengerIdleAnimation; // 0x2f0(0x08)
	struct UBlendSpace* _boatDriverPaddleLAnimation; // 0x2f8(0x08)
	struct UBlendSpace* _boatDriverPaddleRAnimation; // 0x300(0x08)
	struct UAnimSequence* _boatDriverPaddleLToRAnimation; // 0x308(0x08)
	struct UAnimSequence* _boatDriverPaddleRToLAnimation; // 0x310(0x08)
	float _paddleInHand; // 0x318(0x04)
	struct FTransform _motorHandleSocketTransform; // 0x320(0x30)
	struct FTransform _sailsHandleSocketTransform; // 0x350(0x30)
	struct FTransform _rudderSocketTransform; // 0x380(0x30)
	float _maxSpineLeanAngle; // 0x3b0(0x04)
	float _spineLeanAmountForHandlingMotor; // 0x3b4(0x04)
	enum class EPrisonerMovementPace _movementPace; // 0x3b8(0x01)
	char pad_3BA[0x2]; // 0x3ba(0x02)
	float _normalizedMovementPace; // 0x3bc(0x04)
	float _playRateFromMovementPace; // 0x3c0(0x04)
	enum class EEngineBlockState _engineState; // 0x3c4(0x01)
	bool _useVehicleWAPLowerBodyIdleTP; // 0x3c5(0x01)
	char pad_3C6[0x2]; // 0x3c6(0x02)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x3c8(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x3d0(0x08)
	bool _isInCombatMode; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)
	struct UAnimSequence* _startEngineStartAnimation; // 0x3e0(0x08)
	struct UAnimSequence* _startEngineLoopAnimation; // 0x3e8(0x08)
	struct UAnimSequence* _startEngineLongLoopAnimation; // 0x3f0(0x08)
	struct UAnimSequence* _startEngineEndAnimation; // 0x3f8(0x08)
	char pad_400[0x30]; // 0x400(0x30)
};

// Class ConZ.PrisonerAnimInstance_FemaleCorrections
// Size: 0x2d0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_FemaleCorrections : UAnimInstance {
	struct FName _correctionsDisabledCurveName; // 0x2b8(0x08)
	float _correctionsDisabledCurveValue; // 0x2c0(0x04)
	float _correctionsDisabledCurveValueInverse; // 0x2c4(0x04)
};

// Class ConZ.PrisonerAnimInstance_Fishing
// Size: 0x2e0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Fishing : UAnimInstance {
	float _aimOffsetYaw; // 0x2b8(0x04)
	float _aimOffsetPitch; // 0x2bc(0x04)
	bool _isActivelyFishing; // 0x2c0(0x01)
	bool _castingFinished; // 0x2c1(0x01)
	bool _floaterHitWaterSurface; // 0x2c2(0x01)
	bool _fishIsHooked; // 0x2c3(0x01)
	enum class EPrisonerGroundStance _stance; // 0x2c4(0x01)
	bool _isInFirstPersonView; // 0x2c5(0x01)
	struct FRotator _armsLagRotation; // 0x2c8(0x0c)
	float _armsLagPitch; // 0x2d4(0x04)
	float _armsLagYaw; // 0x2d8(0x04)
};

// Class ConZ.PrisonerAnimInstance_Grappled
// Size: 0x2c0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Grappled : UAnimInstance {
	struct UAnimSequence* _idleAnimation; // 0x2b8(0x08)
};

// Class ConZ.PrisonerAnimInstance_Parachute
// Size: 0x2e0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_Parachute : UAnimInstance {
	struct UAnimSequence* _defaultOpeningAnimation; // 0x2b8(0x08)
	struct UAnimSequence* _openingAnimation; // 0x2c0(0x08)
	float _openingAnimationTime; // 0x2c8(0x04)
	char pad_2D4[0xc]; // 0x2d4(0x0c)
};

// Class ConZ.PrisonerAnimInstance_PrisonerCreation
// Size: 0x2e0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_PrisonerCreation : UAnimInstance {
	enum class EConZGender _gender; // 0x2b8(0x01)
	bool _isCameraFocusedOnFace; // 0x2b9(0x01)
	struct UAnimMontage* _femaleCloseUpIdle; // 0x2c0(0x08)
	struct UAnimMontage* _maleCloseUpIdle; // 0x2c8(0x08)
	char pad_2D2[0xe]; // 0x2d2(0x0e)
};

// Class ConZ.PrisonerAnimInstance_Quad
// Size: 0x470 (Inherited: 0x460)
struct UPrisonerAnimInstance_Quad : UPrisonerAnimInstance_Bike {
	float _interpSteer; // 0x458(0x04)
	float _interpSteerLean; // 0x45c(0x04)
	float _leanInterpSpeed; // 0x460(0x04)
	char pad_46C[0x4]; // 0x46c(0x04)
};

// Class ConZ.PrisonerAnimInstance_VehicleBase
// Size: 0x10e0 (Inherited: 0x1050)
struct UPrisonerAnimInstance_VehicleBase : UPrisonerAnimInstance {
	bool _isDriver; // 0x1050(0x01)
	bool _isPushing; // 0x1051(0x01)
	char pad_1052[0x6]; // 0x1052(0x06)
	struct UBlendSpace* _mountedBlendspace; // 0x1058(0x08)
	float _maxPushingSpeedKmh; // 0x1060(0x04)
	float _wheelsSteerAmount; // 0x1064(0x04)
	char pad_1068[0x8]; // 0x1068(0x08)
	struct FTransform _leftHandIKTransform; // 0x1070(0x30)
	struct FTransform _rightHandIKTransform; // 0x10a0(0x30)
	bool _hasDashboard; // 0x10d0(0x01)
	char pad_10D1[0xf]; // 0x10d1(0x0f)
};

// Class ConZ.PrisonerAnimInstance_WeightLoad
// Size: 0x2c0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_WeightLoad : UAnimInstance {
};

// Class ConZ.PrisonerAnimInstance_WheelBarrow
// Size: 0x3a0 (Inherited: 0x2c0)
struct UPrisonerAnimInstance_WheelBarrow : UAnimInstance {
	float _wheelBarrowSpeed; // 0x2b8(0x04)
	float _wheelBarrowSpeedKph; // 0x2bc(0x04)
	float _wheelBarrowBumpiness; // 0x2c0(0x04)
	float _wheelBarrowRollAngleRelativeToDriver; // 0x2c4(0x04)
	bool _isInCombatMode; // 0x2c8(0x01)
	bool _isLimping; // 0x2c9(0x01)
	bool _isDriver; // 0x2ca(0x01)
	struct UAnimSequenceBase* _driverIdleAnimation; // 0x2d0(0x08)
	struct UBlendSpace* _driverWalkJogAnimation; // 0x2d8(0x08)
	struct UBlendSpace* _driverWalkJogLimpingAnimation; // 0x2e0(0x08)
	char pad_2EB[0x5]; // 0x2eb(0x05)
	struct FTransform _driverLHandGripTransform; // 0x2f0(0x30)
	struct FTransform _driverRHandGripTransform; // 0x320(0x30)
	float _driverSpineBendAngle; // 0x350(0x04)
	float _driverSpineBendScale; // 0x354(0x04)
	float _driverSpineBendAngleInterpSpeed; // 0x358(0x04)
	float _driverSpineLeanAngle; // 0x35c(0x04)
	float _driverSpineLeanScale; // 0x360(0x04)
	float _driverSpineLeanAngleInterpSpeed; // 0x364(0x04)
	bool _driverHasFloor; // 0x368(0x01)
	bool _isDriverMoving; // 0x369(0x01)
	char pad_36A[0x2]; // 0x36a(0x02)
	float _driverSpeed; // 0x36c(0x04)
	float _driverCourseAngle; // 0x370(0x04)
	char pad_374[0x4]; // 0x374(0x04)
	struct UBlendSpace* _passengerIdleAnimation; // 0x378(0x08)
	bool _useVehicleWAPLowerBodyIdleTP; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleAimingTP; // 0x388(0x08)
	struct UAnimSequenceBase* _vehicleWAPLowerBodyIdleRelaxedTP; // 0x390(0x08)
	char pad_398[0x8]; // 0x398(0x08)

	void AnimNotify_RFootDown(); // Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_RFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed60
	void AnimNotify_LFootDown(); // Function ConZ.PrisonerAnimInstance_WheelBarrow.AnimNotify_LFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed40
};

// Class ConZ.PrisonerAnimNotify_PlayGearSound
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerAnimNotify_PlayGearSound : UAnimNotify {
	enum class EMotionIntensity motionIntensity; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.PrisonerAnimStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerAnimStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerAppearanceComponent
// Size: 0x150 (Inherited: 0xb0)
struct UPrisonerAppearanceComponent : UActorComponent {
	char pad_B0[0x54]; // 0xb0(0x54)
	bool _overrideVisualParameters; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	struct TArray<struct FVisualParameter> _visualParameterOverrides; // 0x108(0x10)
	bool _overridePenisLocations; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	struct FVector _penisLocationDefaultOverride; // 0x11c(0x0c)
	struct FVector _penisLocationFatOverride; // 0x128(0x0c)
	struct FVector _penisLocationMuscularOverride; // 0x134(0x0c)
	struct FVector _penisLocationSkinnyOverride; // 0x140(0x0c)
	char pad_14C[0x4]; // 0x14c(0x04)

	void NetMulticast_UpdateState(struct TArray<char> Payload); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2441950
	void NetMulticast_UpdateChipLightColorIndex(int8_t chipLightColor); // Function ConZ.PrisonerAppearanceComponent.NetMulticast_UpdateChipLightColorIndex // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2495c00
};

// Class ConZ.PrisonerBodyCompositionMorphsComputer
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyCompositionMorphsComputer : UObject {
};

// Class ConZ.PrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyCompositionMorphsComputer_CharacterCreationOrMugshot : UPrisonerBodyCompositionMorphsComputer {
};

// Class ConZ.PrisonerAppearanceDataAsset
// Size: 0x200 (Inherited: 0x30)
struct UPrisonerAppearanceDataAsset : UDataAsset {
	enum class EDeluxeVersion GameUpgradeRequired; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<struct UCharacterMesh*> CharacterMeshes; // 0x38(0x10)
	struct TMap<struct FName, struct TSoftObjectPtr<UMaterialInstance>> SkinMaterials; // 0x48(0x50)
	struct FGameplayTag TypeTag; // 0x98(0x08)
	struct FGameplayTag RaceTag; // 0xa0(0x08)
	struct FName CharacterAkSwitchValue; // 0xa8(0x08)
	struct TSoftObjectPtr<UTexture2D> SkinNormal; // 0xb0(0x28)
	struct TArray<struct FPrisonerAppearance_HairStyle> FacialHairStyles; // 0xd8(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> BeardStyles; // 0xe8(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> MoustacheStyles; // 0xf8(0x10)
	struct TSoftObjectPtr<UTexture2D> Hairless_SkinColor; // 0x108(0x28)
	struct TSoftObjectPtr<UTexture2D> Hairless_SkinRoughness; // 0x130(0x28)
	struct TSoftObjectPtr<UTexture2D> Hairless_SkinMask; // 0x158(0x28)
	struct TSoftObjectPtr<UTexture2D> Hairy_SkinColor; // 0x180(0x28)
	struct TSoftObjectPtr<UTexture2D> Hairy_SkinRoughness; // 0x1a8(0x28)
	struct TSoftObjectPtr<UTexture2D> Hairy_SkinMask; // 0x1d0(0x28)
	bool HasLimitedCharacterCreationOptions; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
};

// Class ConZ.PrisonerAppearanceSetDataAsset
// Size: 0x2d8 (Inherited: 0x30)
struct UPrisonerAppearanceSetDataAsset : UDataAsset {
	float BreastSizeMin; // 0x30(0x04)
	float BreastSizeMax; // 0x34(0x04)
	float BreastSizeMaxInCharacterCreation; // 0x38(0x04)
	float BreastSizeDeluxeModifier; // 0x3c(0x04)
	float PenisSizeMin; // 0x40(0x04)
	float PenisSizeMax; // 0x44(0x04)
	float PenisSizeMaxInCharacterCreation; // 0x48(0x04)
	float PenisSizeDeluxeModifier; // 0x4c(0x04)
	struct UCharacterMesh* HairClass; // 0x50(0x08)
	struct UCharacterMesh* MoustacheClass; // 0x58(0x08)
	struct UCharacterMesh* BeardClass; // 0x60(0x08)
	struct FRuntimeFloatCurve DefinitionMaterialParamVsFatMassRatio; // 0x68(0x88)
	struct FRuntimeFloatCurve DefinitionMaterialParamVsMuscleMassRatio; // 0xf0(0x88)
	struct TArray<struct UPrisonerAppearanceDataAsset*> _femaleAppearanceData; // 0x178(0x10)
	struct TArray<struct UPrisonerAppearanceDataAsset*> _maleAppearanceData; // 0x188(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> _maleHairStyles; // 0x198(0x10)
	struct TArray<struct FPrisonerAppearance_HairStyle> _femaleHairStyles; // 0x1a8(0x10)
	struct TArray<struct FPrisonerAppearance_HairColorPreset> _dyedHairColors; // 0x1b8(0x10)
	struct TMap<struct FGameplayTag, struct FPrisonerAppearance_TattooArray> _tattooArrays; // 0x1c8(0x50)
	struct TMap<struct FGameplayTag, struct FPrisonerAppearance_SkinParams> _femaleSkinParams; // 0x218(0x50)
	struct TMap<struct FGameplayTag, struct FPrisonerAppearance_SkinParams> _maleSkinParams; // 0x268(0x50)
	struct TArray<struct FPrisonerAppearance_IrisColor> _irisColors; // 0x2b8(0x10)
	struct TArray<struct FPrisonerAppearance_IrisVariation> _irisVariations; // 0x2c8(0x10)
};

// Class ConZ.PrisonerAppearanceUIController
// Size: 0x1f0 (Inherited: 0x28)
struct UPrisonerAppearanceUIController : UObject {
	char pad_28[0x1c8]; // 0x28(0x1c8)
};

// Class ConZ.PrisonerBodyAbrasionsStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyAbrasionsStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerBodyMuscleGroupToBurnInjuryClassMappings
// Size: 0xf8 (Inherited: 0x30)
struct UPrisonerBodyMuscleGroupToBurnInjuryClassMappings : UDataAsset {
	struct UPrisonerBodyCondition_BurnInjury* _burnInjuryClasses[0x19]; // 0x30(0xc8)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionOrSymptomSideEffect : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Damage
// Size: 0x158 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Damage : UPrisonerBodyConditionOrSymptomSideEffect {
	struct FRuntimeFloatCurve _damageVsSeverity; // 0x30(0x88)
	struct FRuntimeFloatCurve _damageRatioVsSeverity; // 0xb8(0x88)
	bool _useBaseMaxHealthInsteadOfMaxHealthToComputeDamageRatio; // 0x140(0x01)
	bool _useSeverityToDetermineLifeThreateningStatus; // 0x141(0x01)
	char pad_142[0x2]; // 0x142(0x02)
	struct FFloatRange _severityRangeToBeLifeThreatening; // 0x144(0x10)
	char pad_154[0x4]; // 0x154(0x04)
};

// Class ConZ.PrisonerBodySimulationUIData
// Size: 0x58 (Inherited: 0x28)
struct UPrisonerBodySimulationUIData : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class ConZ.PrisonerBodyEffectUIData
// Size: 0x40 (Inherited: 0x28)
struct UPrisonerBodyEffectUIData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UPrisonerBodyEffect* _bodyEffectClass; // 0x30(0x08)
	struct FName _associatedSurvivalTipName; // 0x38(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomUIData
// Size: 0x98 (Inherited: 0x40)
struct UPrisonerBodyConditionOrSymptomUIData : UPrisonerBodyEffectUIData {
	bool _isVisibleByDefault; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FText _name; // 0x48(0x18)
	struct FText _description; // 0x60(0x18)
	char pad_78[0x10]; // 0x78(0x10)
	struct TArray<struct UPrisonerBodyConditionOrSymptomSideEffectUIData*> _sideEffectsUIData; // 0x88(0x10)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData : UObject {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_Damage
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_Damage : UPrisonerBodyConditionOrSymptomSideEffectUIData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace
// Size: 0x48 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_MaxMovementPace : UPrisonerBodyConditionOrSymptomSideEffect {
	struct FPrisonerMaxMovementPaceVsSeverity _maxMovementPaceVsSeverity; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxMovementPace : UPrisonerBodyConditionOrSymptomSideEffectUIData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_AbstractModifier
// Size: 0xc0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier : UPrisonerBodyConditionOrSymptomSideEffect {
	struct FRuntimeFloatCurve _modifierVsSeverity; // 0x30(0x88)
	char pad_B8[0x8]; // 0xb8(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_StrengthModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_StrengthModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_StrengthModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_ConstitutionModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_ConstitutionModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DexterityModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_DexterityModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_DexterityModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_IntelligenceModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_IntelligenceModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_HealingSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_HealingSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_ImmuneSystemEfficiencyModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_ImmuneSystemEfficiencyModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_PerformanceScoreModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_PerformanceScoreModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_GroundMovementSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_GroundMovementSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_WaterMovementSpeedModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyConditionOrSymptomSideEffect_MaxStaminaModifier : UPrisonerBodyConditionOrSymptomSideEffect_AbstractModifier {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffectUIData_MaxStaminaModifier : UPrisonerBodyConditionOrSymptomSideEffectUIData_AbstractModifier {
};

// Class ConZ.PrisonerBodyEffect
// Size: 0x40 (Inherited: 0x28)
struct UPrisonerBodyEffect : UObject {
	int32_t _id; // 0x28(0x04)
	char pad_2C[0x8]; // 0x2c(0x08)
	float _tickInterval; // 0x34(0x04)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptom
// Size: 0xa0 (Inherited: 0x40)
struct UPrisonerBodyConditionOrSymptom : UPrisonerBodyEffect {
	char pad_40[0x18]; // 0x40(0x18)
	struct UPrisonerBodyConditionOrSymptomUIData* _uiDataClass; // 0x58(0x08)
	bool _useSeverityToDetermineLifeThreateningStatus; // 0x60(0x01)
	char pad_61[0x3]; // 0x61(0x03)
	struct FFloatRange _severityRangeToBeLifeThreatening; // 0x64(0x10)
	float _severityRatioChangeToReplicate; // 0x74(0x04)
	float _clientSeverityRatioInterpSpeed; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct TArray<struct UPrisonerBodyConditionOrSymptomSideEffect*> _sideEffects; // 0x80(0x10)
	char pad_90[0x8]; // 0x90(0x08)
	float _repSeverity; // 0x98(0x04)
	float _repMaxSeverity; // 0x9c(0x04)
};

// Class ConZ.PrisonerBodyCondition
// Size: 0xc0 (Inherited: 0xa0)
struct UPrisonerBodyCondition : UPrisonerBodyConditionOrSymptom {
	struct TArray<struct UPrisonerBodyConditionInteraction*> _initialInteractions; // 0xa0(0x10)
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class ConZ.PrisonerBodyCondition_Injury
// Size: 0xc0 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Injury : UPrisonerBodyCondition {
};

// Class ConZ.PrisonerBodyCondition_Abrasions
// Size: 0x6e8 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Abrasions : UPrisonerBodyCondition_Injury {
	char pad_C0[0x8]; // 0xc0(0x08)
	struct FFloatInterval _baseAbrasionsRaiseRateVsConstitution; // 0xc8(0x08)
	float _abrasionsWeightFactor; // 0xd0(0x04)
	float _abrasionsFallRate; // 0xd4(0x04)
	struct FRuntimeFloatCurve _severityVsAbrasions; // 0xd8(0x88)
	float _abrasions; // 0x160(0x04)
	float _abrasionsAtRecoveryStart; // 0x164(0x04)
	float _bandagesProtection; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct FBandages _bandages; // 0x170(0x18)
	struct UNotificationDescription* _bandagesProtectionDecreaseNotification; // 0x188(0x08)
	float _bandagesProtectionDecreaseNotificationCooldown; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity; // 0x198(0x88)
	float _stabilizationDurationReductionFromPhysician; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity; // 0x228(0x88)
	struct FRuntimeFloatCurve _bleedingSeverityVsSeverity; // 0x2b0(0x88)
	struct UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass; // 0x338(0x08)
	struct UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause; // 0x340(0x08)
	float _bloodLoss; // 0x348(0x04)
	float _bloodLossToRecover; // 0x34c(0x04)
	struct UAkAudioEvent* _painGruntAudioEvent; // 0x350(0x08)
	struct FRuntimeFloatCurve _painGruntIntervalVsSeverity; // 0x358(0x88)
	char pad_3E0[0x8]; // 0x3e0(0x08)
	struct UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x3e8(0x08)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x3f0(0x08)
	struct FRuntimeFloatCurve _painSymptomOverallIntensityVsSeverity; // 0x3f8(0x88)
	struct FRuntimeFloatCurve _painSymptomLimpingIntensityVsSeverity; // 0x480(0x88)
	struct FPrisonerMaxMovementPaceVsSeverity _painSymptomMaxMovementPaceVsSeverity; // 0x508(0x10)
	struct FRuntimeFloatCurve _painSymptomMovementSpeedModifierVsSeverity; // 0x518(0x88)
	enum class EPrisonerBodyConditionState _state; // 0x5a0(0x01)
	char pad_5A1[0x7]; // 0x5a1(0x07)
	float _timerElapsedTime; // 0x5a8(0x04)
	float _timerDuration; // 0x5ac(0x04)
	float _disinfectantAmount; // 0x5b0(0x04)
	char pad_5B4[0x4]; // 0x5b4(0x04)
	struct UPrisonerBodyCondition_Infection* _infectionClass; // 0x5b8(0x08)
	struct UPrisonerBodyCondition_Infection* _infection; // 0x5c0(0x08)
	float _contaminationIncreaseBaseRate; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsSeverity; // 0x5d0(0x88)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsAsepsis; // 0x658(0x88)
	float _disinfectantContaminationDecreaseRate; // 0x6e0(0x04)
	float _disinfectantEvaporationRate; // 0x6e4(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData
// Size: 0x1a8 (Inherited: 0x98)
struct UPrisonerBodyConditionUIData : UPrisonerBodyConditionOrSymptomUIData {
	char pad_98[0x110]; // 0x98(0x110)
};

// Class ConZ.PrisonerBodyConditionUIData_Abrasions
// Size: 0x1e8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Abrasions : UPrisonerBodyConditionUIData {
	char pad_1A8[0x40]; // 0x1a8(0x40)
};

// Class ConZ.PrisonerBodyCondition_AcuteRadiationSyndrome
// Size: 0x310 (Inherited: 0xc0)
struct UPrisonerBodyCondition_AcuteRadiationSyndrome : UPrisonerBodyCondition {
	float _amount; // 0xc0(0x04)
	float _maxAmount; // 0xc4(0x04)
	float _amountAtRecoveryStart; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct FRuntimeFloatCurve _severityVsAmountRatio; // 0xd0(0x88)
	struct FRuntimeFloatCurve _increaseRateVsEffectiveRadiationAmountRatio; // 0x158(0x88)
	struct FRuntimeFloatCurve _decreaseRateVsSeverity; // 0x1e0(0x88)
	struct FFloatInterval _decreaseRateMultiplierVsConstitutionRatio; // 0x268(0x08)
	struct FFloatInterval _randomBleedingIntervalRange; // 0x270(0x08)
	struct FRuntimeFloatCurve _randomBleedingChanceVsSeverity; // 0x278(0x88)
	float _randomBleedingTimer; // 0x300(0x04)
	float _chosenRandomBleedingInterval; // 0x304(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)
};

// Class ConZ.PrisonerBodyConditionUIData_AcuteRadiationSyndrome
// Size: 0x1b0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_AcuteRadiationSyndrome : UPrisonerBodyConditionUIData {
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class ConZ.PrisonerBodyCondition_BandagesTreatment
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyCondition_BandagesTreatment : UInterface {
};

// Class ConZ.PrisonerBodyCondition_BasicInjury
// Size: 0x158 (Inherited: 0xc0)
struct UPrisonerBodyCondition_BasicInjury : UPrisonerBodyCondition_Injury {
	struct FRuntimeFloatCurve _severityVsDamageRatio; // 0xc0(0x88)
	float _healingRate; // 0x148(0x04)
	float _damage; // 0x14c(0x04)
	float _damageToRecover; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
};

// Class ConZ.PrisonerBodyCondition_BladderFull
// Size: 0xe8 (Inherited: 0xc0)
struct UPrisonerBodyCondition_BladderFull : UPrisonerBodyCondition {
	float _bladderFullnessToExist; // 0xc0(0x04)
	float _bladderFullnessToForceUrinate; // 0xc4(0x04)
	struct UPrisonerBodySymptom_NeedToUrinate* _needToUrinateSymptomClass; // 0xc8(0x08)
	struct UPrisonerBodySymptomCause* _needToUrinateSymptomCause; // 0xd0(0x08)
	char pad_D8[0x10]; // 0xd8(0x10)
};

// Class ConZ.PrisonerBodyCondition_BleedingInjury
// Size: 0x530 (Inherited: 0xc0)
struct UPrisonerBodyCondition_BleedingInjury : UPrisonerBodyCondition_Injury {
	char pad_C0[0x8]; // 0xc0(0x08)
	struct FRuntimeFloatCurve _selfStabilizationDurationVsSeverity; // 0xc8(0x88)
	struct FRuntimeFloatCurve _stabilizationDurationVsBloodLossRatio; // 0x150(0x88)
	struct FRuntimeFloatCurve _destabilizationActionDifficultyRatioVsSeverity; // 0x1d8(0x88)
	struct UNotificationDescription* _destabilizationNotification; // 0x260(0x08)
	float _destabilizationNotificationCooldown; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct FRuntimeFloatCurve _recoveryDurationVsBloodLossRatio; // 0x270(0x88)
	struct UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass; // 0x2f8(0x08)
	struct UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause; // 0x300(0x08)
	struct UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x308(0x08)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x310(0x08)
	struct FRuntimeFloatCurve _painIntensityVsSeverity; // 0x318(0x88)
	float _limpingIntensityPerLegsDamageRatio; // 0x3a0(0x04)
	float _legsBleedingSeverityThresholdToLimp; // 0x3a4(0x04)
	struct UPrisonerBodyMuscleGroupToInfectionClassMappings* _infectionClassMappings; // 0x3a8(0x08)
	struct UPrisonerBodyCondition_Infection* _infection; // 0x3b0(0x08)
	float _contaminationIncreaseBaseRate; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsSeverity; // 0x3c0(0x88)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsAsepsis; // 0x448(0x88)
	float _disinfectantContaminationDecreaseRate; // 0x4d0(0x04)
	float _disinfectantEvaporationRate; // 0x4d4(0x04)
	enum class EPrisonerBodyMuscleGroup _muscleGroup; // 0x4d8(0x01)
	char pad_4D9[0x3]; // 0x4d9(0x03)
	float _damage; // 0x4dc(0x04)
	float _damageAtRecoveryStart; // 0x4e0(0x04)
	float _bloodLoss; // 0x4e4(0x04)
	float _bloodLossAtRecoveryStart; // 0x4e8(0x04)
	float _bloodLossRate; // 0x4ec(0x04)
	float _bloodLossRateAtRecoveryStart; // 0x4f0(0x04)
	float _selfStabilizationBleedingSuppression; // 0x4f4(0x04)
	float _stabilizationDurationReductionFromPhysician; // 0x4f8(0x04)
	char pad_4FC[0x4]; // 0x4fc(0x04)
	struct FBandages _bandages; // 0x500(0x18)
	float _disinfectantAmount; // 0x518(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x51c(0x01)
	char pad_51D[0xb]; // 0x51d(0x0b)
	float _timerElapsedTime; // 0x528(0x04)
	float _timerDuration; // 0x52c(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_BleedingInjury
// Size: 0x1e8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_BleedingInjury : UPrisonerBodyConditionUIData {
	char pad_1A8[0x40]; // 0x1a8(0x40)
};

// Class ConZ.PrisonerBodyCondition_BurnInjury
// Size: 0x618 (Inherited: 0xc0)
struct UPrisonerBodyCondition_BurnInjury : UPrisonerBodyCondition_Injury {
	char pad_C0[0x8]; // 0xc0(0x08)
	float _initialDamageMultiplier; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct FRuntimeFloatCurve _severityVsDamageRatio; // 0xd0(0x88)
	struct FRuntimeFloatCurve _untreatedDurationVsSeverity; // 0x158(0x88)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity; // 0x1e0(0x88)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity; // 0x268(0x88)
	struct FRuntimeFloatCurve _stabilizationDurationReductionVsGelRatio; // 0x2f0(0x88)
	struct FRuntimeFloatCurve _recoveryDurationReductionVsGelRatio; // 0x378(0x88)
	struct UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x400(0x08)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x408(0x08)
	struct FRuntimeFloatCurve _painIntensityVsSeverity; // 0x410(0x88)
	float _limpingIntensityPerLegsDamageRatio; // 0x498(0x04)
	float _legsBurnSeverityThresholdToLimp; // 0x49c(0x04)
	struct UPrisonerBodyMuscleGroupToInfectionClassMappings* _infectionClassMappings; // 0x4a0(0x08)
	struct UPrisonerBodyCondition_Infection* _infection; // 0x4a8(0x08)
	float _contaminationIncreaseBaseRate; // 0x4b0(0x04)
	char pad_4B4[0x4]; // 0x4b4(0x04)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsSeverity; // 0x4b8(0x88)
	struct FRuntimeFloatCurve _contaminationIncreaseRateMultiplierVsAsepsis; // 0x540(0x88)
	float _disinfectantContaminationDecreaseRate; // 0x5c8(0x04)
	float _disinfectantEvaporationRate; // 0x5cc(0x04)
	enum class EPrisonerBodyMuscleGroup _muscleGroup; // 0x5d0(0x01)
	char pad_5D1[0x3]; // 0x5d1(0x03)
	float _damage; // 0x5d4(0x04)
	float _damageAtRecoveryStart; // 0x5d8(0x04)
	float _selfStabilizationBurnSuppression; // 0x5dc(0x04)
	float _stabilizationDurationReductionFromPhysician; // 0x5e0(0x04)
	float _recoveryDurationReductionFromPhysician; // 0x5e4(0x04)
	struct FBandages _bandages; // 0x5e8(0x18)
	float _disinfectantAmount; // 0x600(0x04)
	float _gelAmount; // 0x604(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x608(0x01)
	char pad_609[0x7]; // 0x609(0x07)
	float _timerElapsedTime; // 0x610(0x04)
	float _timerDuration; // 0x614(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_BurnInjury
// Size: 0x1e0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_BurnInjury : UPrisonerBodyConditionUIData {
	char pad_1A8[0x38]; // 0x1a8(0x38)
};

// Class ConZ.PrisonerBodyCondition_Choking
// Size: 0xd0 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Choking : UPrisonerBodyCondition {
	float _oxygenSaturationToExist; // 0xc0(0x04)
	char pad_C4[0xc]; // 0xc4(0x0c)
};

// Class ConZ.PrisonerBodyCondition_ColonFull
// Size: 0x100 (Inherited: 0xc0)
struct UPrisonerBodyCondition_ColonFull : UPrisonerBodyCondition {
	float _colonFullnessToExist; // 0xc0(0x04)
	float _colonFullnessToForceDefecate; // 0xc4(0x04)
	struct UPrisonerBodySymptom_NeedToDefecate* _needToDefecateSymptomClass; // 0xc8(0x08)
	struct UPrisonerBodySymptomCause* _needToDefecateSymptomCause; // 0xd0(0x08)
	float _colonFullnessAtWhichFartingStarts; // 0xd8(0x04)
	float _fartingInterval; // 0xdc(0x04)
	struct UPrisonerBodySymptom_Farting* _fartingSymptomClass; // 0xe0(0x08)
	struct UPrisonerBodySymptomCause_Farting* _fartingSymptomCause; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)
};

// Class ConZ.PrisonerBodyCondition_Drunkenness
// Size: 0x1f0 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Drunkenness : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsAbsorbedAlcoholRatio; // 0xc0(0x88)
	float _alcoholAbsorptionAtRecoveryStart; // 0x148(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x14c(0x01)
	char pad_14D[0xf]; // 0x14d(0x0f)
	float _vomitCheckInterval; // 0x15c(0x04)
	float _alcoholInStomachRatioVomitThreshold; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct FRuntimeFloatCurve _vomitProbabilityVsSeverity; // 0x168(0x88)
};

// Class ConZ.PrisonerBodyCondition_EnergyDeficiency
// Size: 0x168 (Inherited: 0xc0)
struct UPrisonerBodyCondition_EnergyDeficiency : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsEnergyDeficiencyRatio; // 0xc0(0x88)
	float _maxRatioOfAbsorbedEnergyCapacityToBeRecovered; // 0x148(0x04)
	float _artificialAbsorbedEnergyAccumulationScale; // 0x14c(0x04)
	float _energyDeficiency; // 0x150(0x04)
	float _energyDeficiencyToRecover; // 0x154(0x04)
	float _artificialAbsorbedEnergy; // 0x158(0x04)
	char pad_15C[0xc]; // 0x15c(0x0c)
};

// Class ConZ.PrisonerBodyConditionUIData_EnergyDeficiency
// Size: 0x1b0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_EnergyDeficiency : UPrisonerBodyConditionUIData {
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class ConZ.PrisonerBodyCondition_Exhaustion
// Size: 0x170 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Exhaustion : UPrisonerBodyCondition {
	enum class EPrisonerBodyConditionState _state; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	float _exhaustionAmount; // 0xc8(0x04)
	float _exhaustionAmountAtRecoveryStart; // 0xcc(0x04)
	struct FRuntimeFloatCurve _severityVsExhaustion; // 0xd0(0x88)
	float _severityToStartMaxStaminaReduction; // 0x158(0x04)
	float _maxStaminaReduction; // 0x15c(0x04)
	char pad_160[0x10]; // 0x160(0x10)
};

// Class ConZ.PrisonerBodyConditionUIData_Exhaustion
// Size: 0x1c0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Exhaustion : UPrisonerBodyConditionUIData {
	char pad_1A8[0x18]; // 0x1a8(0x18)
};

// Class ConZ.PrisonerBodyCondition_FoodDisgust
// Size: 0x138 (Inherited: 0xc0)
struct UPrisonerBodyCondition_FoodDisgust : UPrisonerBodyCondition {
	struct FFloatInterval _disgustAmountChangeMultiplierVsConstitution; // 0xc0(0x08)
	struct FFloatInterval _disgustAmountDecreaseRateVsConstitution; // 0xc8(0x08)
	float _disgustAmountTolerated; // 0xd0(0x04)
	float _disgustAmountToIssueFirstWarning; // 0xd4(0x04)
	struct UNotificationDescription* _firstDisgustWarning; // 0xd8(0x08)
	float _disgustAmountToIssueSecondWarning; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UNotificationDescription* _secondDisgustWarning; // 0xe8(0x08)
	float _disgustWarningCooldown; // 0xf0(0x04)
	char pad_F4[0x8]; // 0xf4(0x08)
	float _disgustAmountToBeAbleToVomit; // 0xfc(0x04)
	float _disgustAmountToVomit; // 0x100(0x04)
	float _disgustAmount; // 0x104(0x04)
	char pad_108[0x18]; // 0x108(0x18)
	float _disgustAmountAtStabilizationStart; // 0x120(0x04)
	float _disgustAmountAtRecoveryStart; // 0x124(0x04)
	struct UPrisonerBodySymptom_Nausea* _nauseaSymptomClass; // 0x128(0x08)
	char pad_130[0x8]; // 0x130(0x08)
};

// Class ConZ.PrisonerBodyConditionUIData_FoodDisgust
// Size: 0x1a8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_FoodDisgust : UPrisonerBodyConditionUIData {
};

// Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgust
// Size: 0x38 (Inherited: 0x28)
struct UPrisonerConsumableDigestionHandler_FoodDisgust : UConsumableDigestionHandler {
	float _disgustAmountPerMassConsumed; // 0x28(0x04)
	char pad_2C[0xc]; // 0x2c(0x0c)
};

// Class ConZ.PrisonerConsumableDigestionHandler_FoodDisgustAntidote
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerConsumableDigestionHandler_FoodDisgustAntidote : UPrisonerConsumableDigestionHandler_FoodDisgust {
};

// Class ConZ.PrisonerBodyCondition_FootAbrasions
// Size: 0x6e8 (Inherited: 0x6e8)
struct UPrisonerBodyCondition_FootAbrasions : UPrisonerBodyCondition_Abrasions {
};

// Class ConZ.PrisonerBodyCondition_ForeignSubstancePoisoning
// Size: 0x190 (Inherited: 0xc0)
struct UPrisonerBodyCondition_ForeignSubstancePoisoning : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsForeignSubstanceAmountRatio; // 0xc0(0x88)
	float _foreignSubstanceAmountRatioToExist; // 0x148(0x04)
	float _foreignSubstanceAmountAtRecoveryStart; // 0x14c(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
	struct FPrisonerBodyBoneGroupsVsSeverity _affectedBodyBoneGroupsVsSeverity; // 0x158(0x10)
	struct FPrisonerBodyMuscleGroupsVsSeverity _affectedBodyMuscleGroupsVsSeverity; // 0x168(0x10)
	struct FPrisonerBodyOrganGroupsVsSeverity _affectedBodyOrganGroupsVsSeverity; // 0x178(0x10)
	struct UForeignSubstance* _foreignSubstanceClass; // 0x188(0x08)
};

// Class ConZ.PrisonerBodyConditionUIData_ForeignSubstancePoisoning
// Size: 0x1d0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_ForeignSubstancePoisoning : UPrisonerBodyConditionUIData {
	char pad_1A8[0x28]; // 0x1a8(0x28)
};

// Class ConZ.PrisonerBodyCondition_HandAbrasions
// Size: 0x6f0 (Inherited: 0x6e8)
struct UPrisonerBodyCondition_HandAbrasions : UPrisonerBodyCondition_Abrasions {
	float _vehiclePropellingAbrasivenessMultiplier; // 0x6e8(0x04)
	char pad_6EC[0x4]; // 0x6ec(0x04)
};

// Class ConZ.PrisonerBodyCondition_HealthLow
// Size: 0x150 (Inherited: 0xc0)
struct UPrisonerBodyCondition_HealthLow : UPrisonerBodyCondition {
	float _healthRatioToExist; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct FRuntimeFloatCurve _colorSaturationEffectIntensityVsEffectsIntensity; // 0xc8(0x88)
};

// Class ConZ.PrisonerBodyCondition_HeavyInjuries
// Size: 0xe0 (Inherited: 0xc0)
struct UPrisonerBodyCondition_HeavyInjuries : UPrisonerBodyCondition {
	struct FFloatInterval _injuriesDamageRatioToExistVsConstitution; // 0xc0(0x08)
	float _painSymptomOverallIntensity; // 0xc8(0x04)
	float _painSymptomLimpingIntensity; // 0xcc(0x04)
	struct UPrisonerBodySymptom_Pain* _painSymptomClass; // 0xd0(0x08)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0xd8(0x08)
};

// Class ConZ.PrisonerBodyCondition_Hyperthermia
// Size: 0x108 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Hyperthermia : UPrisonerBodyCondition {
	float _maxSeverity; // 0xc0(0x04)
	float _bodyTemperatureToDie; // 0xc4(0x04)
	float _bodyTemperatureToExist; // 0xc8(0x04)
	float _bodyTemperatureToRecover; // 0xcc(0x04)
	char pad_D0[0x4]; // 0xd0(0x04)
	float _bodyTemperatureSampleInterval; // 0xd4(0x04)
	char pad_D8[0x4]; // 0xd8(0x04)
	float _bodyTemperatureAtUntreatedStart; // 0xdc(0x04)
	float _bodyTemperatureAtStabilizationStart; // 0xe0(0x04)
	float _bodyTemperatureAtRecoveryStart; // 0xe4(0x04)
	enum class EPrisonerBodyConditionState _state; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	float _severityRatio; // 0xf0(0x04)
	float _severityRatioAtUntreatedStart; // 0xf4(0x04)
	float _severityRatioAtRecoveryStart; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	float _severityRatioInterpSpeed; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_Hyperthermia
// Size: 0x1a8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Hyperthermia : UPrisonerBodyConditionUIData {
};

// Class ConZ.PrisonerBodyCondition_Hypothermia
// Size: 0x108 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Hypothermia : UPrisonerBodyCondition {
	float _maxSeverity; // 0xc0(0x04)
	float _bodyTemperatureToDie; // 0xc4(0x04)
	float _bodyTemperatureToExist; // 0xc8(0x04)
	float _bodyTemperatureToRecover; // 0xcc(0x04)
	char pad_D0[0x4]; // 0xd0(0x04)
	float _bodyTemperatureSampleInterval; // 0xd4(0x04)
	char pad_D8[0x8]; // 0xd8(0x08)
	float _bodyTemperatureAtUntreatedStart; // 0xe0(0x04)
	float _bodyTemperatureAtStabilizationStart; // 0xe4(0x04)
	float _bodyTemperatureAtRecoveryStart; // 0xe8(0x04)
	enum class EPrisonerBodyConditionState _state; // 0xec(0x01)
	char pad_ED[0x7]; // 0xed(0x07)
	float _severityRatio; // 0xf4(0x04)
	float _severityRatioAtUntreatedStart; // 0xf8(0x04)
	float _severityRatioAtRecoveryStart; // 0xfc(0x04)
	char pad_100[0x4]; // 0x100(0x04)
	float _severityRatioInterpSpeed; // 0x104(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_Hypothermia
// Size: 0x1a8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Hypothermia : UPrisonerBodyConditionUIData {
};

// Class ConZ.PrisonerBodyCondition_Infection
// Size: 0x128 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Infection : UPrisonerBodyCondition {
	float _maxSeverity; // 0xc0(0x04)
	float _maxContamination; // 0xc4(0x04)
	float _toleratedContamination; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UPrisonerBodyCondition_Sepsis* _sepsisClass; // 0xd0(0x08)
	struct UPrisonerBodyConditionCause_Sepsis* _sepsisCause; // 0xd8(0x08)
	struct UNotificationDescription* _infectedNotification; // 0xe0(0x08)
	float _infectedNotificationCooldown; // 0xe8(0x04)
	char pad_EC[0x10]; // 0xec(0x10)
	float _contamination; // 0xfc(0x04)
	float _contaminationAtRecoveryStart; // 0x100(0x04)
	float _contaminationIncreaseRate; // 0x104(0x04)
	char pad_108[0x8]; // 0x108(0x08)
	float _contaminationDecreaseRate; // 0x110(0x04)
	char pad_114[0x8]; // 0x114(0x08)
	enum class EPrisonerBodyConditionState _state; // 0x11c(0x01)
	char pad_11D[0xb]; // 0x11d(0x0b)
};

// Class ConZ.PrisonerBodyConditionUIData_Infection
// Size: 0x1b8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Infection : UPrisonerBodyConditionUIData {
	char pad_1A8[0x10]; // 0x1a8(0x10)
};

// Class ConZ.PrisonerBodyCondition_InhalationPoisoning
// Size: 0x228 (Inherited: 0xc0)
struct UPrisonerBodyCondition_InhalationPoisoning : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsInhalableSubstanceAmountRatio; // 0xc0(0x88)
	float _inhalableSubstanceAmountAtRecoveryStart; // 0x148(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x14c(0x01)
	char pad_14D[0x7]; // 0x14d(0x07)
	float _inhalableSubstanceAmount; // 0x154(0x04)
	struct FRuntimeFloatCurve _inhalableSubstanceMaxAmountVsConstitutionRatio; // 0x158(0x88)
	float _baseInhalableSubstanceDiscardRate; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)
	struct FPrisonerBodyBoneGroupsVsSeverity _affectedBodyBoneGroupsVsSeverity; // 0x1e8(0x10)
	struct FPrisonerBodyMuscleGroupsVsSeverity _affectedBodyMuscleGroupsVsSeverity; // 0x1f8(0x10)
	struct FPrisonerBodyOrganGroupsVsSeverity _affectedBodyOrganGroupsVsSeverity; // 0x208(0x10)
	char pad_218[0x10]; // 0x218(0x10)
};

// Class ConZ.PrisonerBodyConditionUIData_InhalationPoisoning
// Size: 0x1d0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_InhalationPoisoning : UPrisonerBodyConditionUIData {
	char pad_1A8[0x10]; // 0x1a8(0x10)
	struct FText _substanceName; // 0x1b8(0x18)
};

// Class ConZ.PrisonerBodyCondition_KillBoxGasPoisoning
// Size: 0xf8 (Inherited: 0xc0)
struct UPrisonerBodyCondition_KillBoxGasPoisoning : UPrisonerBodyCondition {
	float _maxSeverity; // 0xc0(0x04)
	float _poisoningDuration; // 0xc4(0x04)
	float _poisoningTriggerCooldown; // 0xc8(0x04)
	float _poisoningTriggerTimer; // 0xcc(0x04)
	float _recoveryDuration; // 0xd0(0x04)
	float _damagedEffectTriggerInterval; // 0xd4(0x04)
	float _damagedEffectDuration; // 0xd8(0x04)
	float _damagedEffectIntensity; // 0xdc(0x04)
	char pad_E0[0x4]; // 0xe0(0x04)
	enum class EPrisonerBodyConditionState _state; // 0xe4(0x01)
	char pad_E5[0x7]; // 0xe5(0x07)
	float _severityRatio; // 0xec(0x04)
	float _severityRatioAtRecoveryStart; // 0xf0(0x04)
	float _drunkenness; // 0xf4(0x04)

	void Client_TriggerDamagedEffect(float Duration, float Intensity); // Function ConZ.PrisonerBodyCondition_KillBoxGasPoisoning.Client_TriggerDamagedEffect // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x249f450
};

// Class ConZ.PrisonerBodyConditionUIData_KillBoxGasPoisoning
// Size: 0x1a8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_KillBoxGasPoisoning : UPrisonerBodyConditionUIData {
};

// Class ConZ.PrisonerBodyCondition_TimeDrivenSeverity
// Size: 0x158 (Inherited: 0xc0)
struct UPrisonerBodyCondition_TimeDrivenSeverity : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsNormalizedElapsedTime; // 0xc0(0x88)
	float _duration; // 0x148(0x04)
	bool _shouldBeRemovedWhenTimeElapses; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
	float _elapsedTime; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
};

// Class ConZ.PrisonerBodyCondition_Knockout
// Size: 0x170 (Inherited: 0x158)
struct UPrisonerBodyCondition_Knockout : UPrisonerBodyCondition_TimeDrivenSeverity {
	struct FText _reason; // 0x158(0x18)
};

// Class ConZ.PrisonerBodyCondition_NutrientDeficiency
// Size: 0x170 (Inherited: 0xc0)
struct UPrisonerBodyCondition_NutrientDeficiency : UPrisonerBodyCondition {
	enum class ENutrient _nutrient; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct FRuntimeFloatCurve _severityVsNutrientDeficiencyRatio; // 0xc8(0x88)
	float _maxRatioOfAbsorbedNutrientCapacityToBeRecovered; // 0x150(0x04)
	float _artificialAbsorbedNutrientAccumulationScale; // 0x154(0x04)
	float _nutrientDeficiency; // 0x158(0x04)
	float _nutrientDeficiencyToRecover; // 0x15c(0x04)
	float _artificialAbsorbedNutrient; // 0x160(0x04)
	char pad_164[0xc]; // 0x164(0x0c)
};

// Class ConZ.PrisonerBodyConditionUIData_NutrientDeficiency
// Size: 0x1b0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_NutrientDeficiency : UPrisonerBodyConditionUIData {
	char pad_1A8[0x4]; // 0x1a8(0x04)
	enum class EConZUnit NutrientUnit; // 0x1ac(0x01)
	char pad_1AD[0x3]; // 0x1ad(0x03)
};

// Class ConZ.PrisonerBodyCondition_Overburdened
// Size: 0x148 (Inherited: 0xc0)
struct UPrisonerBodyCondition_Overburdened : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsWeightLoadRatio; // 0xc0(0x88)
};

// Class ConZ.PrisonerBodyConditionUIData_Overburdened
// Size: 0x1a8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_Overburdened : UPrisonerBodyConditionUIData {
};

// Class ConZ.PrisonerBodyCondition_RadiationPresence
// Size: 0x160 (Inherited: 0xc0)
struct UPrisonerBodyCondition_RadiationPresence : UPrisonerBodyCondition {
	float _radiationAmount; // 0xc0(0x04)
	float _radiationMaxAmount; // 0xc4(0x04)
	float _radiationAmountAtRecoveryStart; // 0xc8(0x04)
	float _baseRadiationDispersionRate; // 0xcc(0x04)
	struct FPrisonerActionDifficultyCurve _radiationDispersionRatePerActionDifficulty; // 0xd0(0x18)
	float _radiationDispersionRateIncreaseWhileSwimming; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct TMap<struct UForeignSubstance*, struct FRuntimeFloatCurve> _effectiveRadiationAmountChangePerForeignSubstancePresence; // 0xf0(0x50)
	float _radiationAmountDecreaseViaUrination; // 0x140(0x04)
	float _radiationIncreaseRateToInstantlyDie; // 0x144(0x04)
	enum class EPrisonerBodyConditionState _state; // 0x148(0x01)
	char pad_149[0x17]; // 0x149(0x17)
};

// Class ConZ.PrisonerBodyConditionUIData_RadiationPresence
// Size: 0x1c0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_RadiationPresence : UPrisonerBodyConditionUIData {
	char pad_1A8[0x18]; // 0x1a8(0x18)
};

// Class ConZ.PrisonerBodyConditionWithCauses
// Size: 0xd0 (Inherited: 0xc0)
struct UPrisonerBodyConditionWithCauses : UPrisonerBodyCondition {
	char pad_C0[0x10]; // 0xc0(0x10)
};

// Class ConZ.PrisonerBodyCondition_Sepsis
// Size: 0xf0 (Inherited: 0xd0)
struct UPrisonerBodyCondition_Sepsis : UPrisonerBodyConditionWithCauses {
	float _maxSeverity; // 0xd0(0x04)
	float _maxContamination; // 0xd4(0x04)
	float _contamination; // 0xd8(0x04)
	float _contaminationChangeRate; // 0xdc(0x04)
	float _contaminationAtRecoveryStart; // 0xe0(0x04)
	enum class EPrisonerBodyConditionState _state; // 0xe4(0x01)
	char pad_E5[0xb]; // 0xe5(0x0b)
};

// Class ConZ.PrisonerBodyConditionWithCausesUIData
// Size: 0x1b8 (Inherited: 0x1a8)
struct UPrisonerBodyConditionWithCausesUIData : UPrisonerBodyConditionUIData {
	struct TArray<struct UPrisonerBodyConditionCauseUIData*> _causes; // 0x1a8(0x10)
};

// Class ConZ.PrisonerBodyConditionUIData_Sepsis
// Size: 0x1c0 (Inherited: 0x1b8)
struct UPrisonerBodyConditionUIData_Sepsis : UPrisonerBodyConditionWithCausesUIData {
	char pad_1B8[0x8]; // 0x1b8(0x08)
};

// Class ConZ.PrisonerBodyCondition_StaminaLow
// Size: 0x100 (Inherited: 0xc0)
struct UPrisonerBodyCondition_StaminaLow : UPrisonerBodyCondition {
	float _staminaRatioThreshold; // 0xc0(0x04)
	float _maxSeverity; // 0xc4(0x04)
	float _severityRaiseRate; // 0xc8(0x04)
	float _severityFallRate; // 0xcc(0x04)
	float _severity; // 0xd0(0x04)
	bool _shouldRecoverWithDizziness; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	float _severityAtRecoveryStart; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	enum class EPrisonerBodyConditionState _state; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct UPrisonerBodySymptom_Dizziness* _dizzinessSymptomClass; // 0xe8(0x08)
	struct UPrisonerBodySymptomCause_Dizziness* _dizzinessSymptomCause; // 0xf0(0x08)
	struct UNotificationDescription* _passOutNotification; // 0xf8(0x08)
};

// Class ConZ.PrisonerBodyCondition_StomachEmpty
// Size: 0xe0 (Inherited: 0xc0)
struct UPrisonerBodyCondition_StomachEmpty : UPrisonerBodyCondition {
	float _stomachEmptinessToExist; // 0xc0(0x04)
	float _energyRatioToExist; // 0xc4(0x04)
	struct UPrisonerBodySymptom_StomachGrowling* _stomachGrowlingSymptomClass; // 0xc8(0x08)
	struct UPrisonerBodySymptomCause_StomachGrowling* _stomachGrowlingSymptomCause; // 0xd0(0x08)
	float _stomachGrowlingSymptomSoundInterval; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class ConZ.PrisonerBodyCondition_StomachFull
// Size: 0x138 (Inherited: 0xc0)
struct UPrisonerBodyCondition_StomachFull : UPrisonerBodyCondition {
	float _stomachFullnessToExist; // 0xc0(0x04)
	float _stomachFullnessToDie; // 0xc4(0x04)
	float _stomachFullnessToBeRecovered; // 0xc8(0x04)
	float _stomachFullnessAtWhichToAutoCancelConsumptionOnce; // 0xcc(0x04)
	float _stomachFullnessAtWhichToEnableAutoConsumptionCancelationAgain; // 0xd0(0x04)
	float _minMaxStaminaModifierForFatigueSymptom; // 0xd4(0x04)
	float _stomachFullnessAtWhichBurpingStarts; // 0xd8(0x04)
	float _burpingInterval; // 0xdc(0x04)
	struct UPrisonerBodySymptom_StomachFullness* _stomachFullnessSymptomClass; // 0xe0(0x08)
	struct UPrisonerBodySymptomCause* _stomachFullnessSymptomCause; // 0xe8(0x08)
	struct UPrisonerBodySymptom_Fatigue* _fatigueSymptomClass; // 0xf0(0x08)
	struct UPrisonerBodySymptomCause_Fatigue* _fatigueSymptomCause; // 0xf8(0x08)
	struct UPrisonerBodySymptom_Burping* _burpingSymptomClass; // 0x100(0x08)
	struct UPrisonerBodySymptomCause_Burping* _burpingSymptomCause; // 0x108(0x08)
	struct UNotificationDescription* _stomachRuptureWarningNotificationClass; // 0x110(0x08)
	struct UNotificationDescription* _stomachRuptureNotificationClass; // 0x118(0x08)
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerBodyCondition_TearGasExposure
// Size: 0x160 (Inherited: 0xc0)
struct UPrisonerBodyCondition_TearGasExposure : UPrisonerBodyCondition {
	struct FRuntimeFloatCurve _severityVsTime; // 0xc0(0x88)
	float _timeSinceExposure; // 0x148(0x04)
	float _timeAtRecoveryStart; // 0x14c(0x04)
	char pad_150[0x10]; // 0x150(0x10)
};

// Class ConZ.PrisonerBodyCondition_TrenchFoot
// Size: 0x6f8 (Inherited: 0xc0)
struct UPrisonerBodyCondition_TrenchFoot : UPrisonerBodyCondition_Injury {
	struct FRuntimeFloatCurve _trenchnessIncreaseRateVsFeetWetness; // 0xc0(0x88)
	struct FFloatInterval _trenchnessIncreaseRateMultiplierVsConstitution; // 0x148(0x08)
	struct FRuntimeFloatCurve _trenchnessIncreaseRateMultiplierVsAirTemperature; // 0x150(0x88)
	struct FRuntimeFloatCurve _trenchnessDecreaseRateMultiplierVsAirTemperature; // 0x1d8(0x88)
	struct FRuntimeFloatCurve _recoveryDurationMultiplierVsAirTemperature; // 0x260(0x88)
	float _trenchnessFallRate; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct FRuntimeFloatCurve _severityVsTrenchness; // 0x2f0(0x88)
	float _trenchness; // 0x378(0x04)
	float _trenchnessTreated; // 0x37c(0x04)
	float _trenchnessAtRecoveryStart; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity; // 0x388(0x88)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity; // 0x410(0x88)
	struct UAkAudioEvent* _painGruntAudioEvent; // 0x498(0x08)
	struct FRuntimeFloatCurve _painGruntIntervalVsSeverity; // 0x4a0(0x88)
	char pad_528[0x8]; // 0x528(0x08)
	struct UPrisonerBodySymptom_Pain* _painSymptomClass; // 0x530(0x08)
	struct UPrisonerBodySymptomCause_Pain* _painSymptomCause; // 0x538(0x08)
	struct FRuntimeFloatCurve _painSymptomOverallIntensityVsSeverity; // 0x540(0x88)
	struct FRuntimeFloatCurve _painSymptomLimpingIntensityVsSeverity; // 0x5c8(0x88)
	struct FPrisonerMaxMovementPaceVsSeverity _painSymptomMaxMovementPaceVsSeverity; // 0x650(0x10)
	struct FRuntimeFloatCurve _painSymptomMovementSpeedModifierVsSeverity; // 0x660(0x88)
	enum class EPrisonerBodyConditionState _state; // 0x6e8(0x01)
	char pad_6E9[0x7]; // 0x6e9(0x07)
	float _timerElapsedTime; // 0x6f0(0x04)
	float _timerDuration; // 0x6f4(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_TrenchFoot
// Size: 0x1b0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_TrenchFoot : UPrisonerBodyConditionUIData {
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class ConZ.PrisonerBodyCondition_TutorialInjury
// Size: 0x338 (Inherited: 0xc0)
struct UPrisonerBodyCondition_TutorialInjury : UPrisonerBodyCondition_Injury {
	char pad_C0[0x8]; // 0xc0(0x08)
	struct FRuntimeFloatCurve _severityVsDamageRatio; // 0xc8(0x88)
	struct FRuntimeFloatCurve _stabilizationDurationVsSeverity; // 0x150(0x88)
	struct FRuntimeFloatCurve _recoveryDurationVsSeverity; // 0x1d8(0x88)
	struct FRuntimeFloatCurve _fakeBloodLossVsFakeDamageRatio; // 0x260(0x88)
	struct UPrisonerBodySymptom_Bleeding* _bleedingSymptomClass; // 0x2e8(0x08)
	struct UPrisonerBodySymptomCause_Bleeding* _bleedingSymptomCause; // 0x2f0(0x08)
	float _fakeDamage; // 0x2f8(0x04)
	float _fakeDamageAtRecoveryStart; // 0x2fc(0x04)
	float _maxFakeDamage; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
	struct FBandages _bandages; // 0x308(0x18)
	enum class EPrisonerBodyMuscleGroup _muscleGroup; // 0x320(0x01)
	enum class EPrisonerBodyConditionState _state; // 0x321(0x01)
	char pad_322[0xa]; // 0x322(0x0a)
	float _timerElapsedTime; // 0x32c(0x04)
	float _timerDuration; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
};

// Class ConZ.PrisonerBodyConditionUIData_TutorialInjury
// Size: 0x1b0 (Inherited: 0x1a8)
struct UPrisonerBodyConditionUIData_TutorialInjury : UPrisonerBodyConditionUIData {
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class ConZ.PrisonerBodyConditionCause
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionCause : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionCause_Sepsis
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodyConditionCause_Sepsis : UPrisonerBodyConditionCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodyConditionCauseUIData
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodyConditionCauseUIData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodyConditionCauseUIData_Sepsis
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodyConditionCauseUIData_Sepsis : UPrisonerBodyConditionCauseUIData {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodyConditionInteraction
// Size: 0x80 (Inherited: 0x28)
struct UPrisonerBodyConditionInteraction : UObject {
	struct FText _name; // 0x28(0x18)
	float _actionDurationVsPhysicianSkillLevel[0x5]; // 0x40(0x14)
	float _experiencePointsToGainVsPhysicianSkillLevel[0x5]; // 0x54(0x14)
	enum class EPrisonerMontage _beginInteractionMontage; // 0x68(0x01)
	enum class EPrisonerMontage _endInteractionMontage; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct UAkAudioEvent* _beginInteractionPatientAudioEvent; // 0x70(0x08)
	struct UAkAudioEvent* _endInteractionPatientAudioEvent; // 0x78(0x08)
};

// Class ConZ.PrisonerBodyConditionInteraction_RemoveBandages
// Size: 0x88 (Inherited: 0x80)
struct UPrisonerBodyConditionInteraction_RemoveBandages : UPrisonerBodyConditionInteraction {
	char pad_80[0x8]; // 0x80(0x08)
};

// Class ConZ.PrisonerBodyConditionInteractionQueryResults
// Size: 0xa0 (Inherited: 0x28)
struct UPrisonerBodyConditionInteractionQueryResults : UObject {
	char pad_28[0x78]; // 0x28(0x78)
};

// Class ConZ.PrisonerBodyConditionInteractionItemTag
// Size: 0x90 (Inherited: 0x30)
struct UPrisonerBodyConditionInteractionItemTag : UBaseItemTag {
	struct TArray<struct UPrisonerBodyCondition*> SupportedConditions; // 0x30(0x10)
	bool HasSupportedBodyParts; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<enum class EBodyPart> SupportedBodyPartsList; // 0x48(0x10)
	bool HasUnsupportedBodyParts; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct TArray<enum class EBodyPart> UnsupportedBodyPartsList; // 0x60(0x10)
	struct FText InteractionCaption; // 0x70(0x18)
	enum class EPrisonerMontage BeginInteractionMontage; // 0x88(0x01)
	enum class EPrisonerMontage EndInteractionMontage; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
};

// Class ConZ.PrisonerBodyConditionTreatInteractionItemTag
// Size: 0x90 (Inherited: 0x90)
struct UPrisonerBodyConditionTreatInteractionItemTag : UPrisonerBodyConditionInteractionItemTag {
};

// Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_Disinfect
// Size: 0x100 (Inherited: 0x90)
struct UPBCTIIT_ApplyBandagesOrDisinfect_Disinfect : UPrisonerBodyConditionTreatInteractionItemTag {
	struct TArray<float> TreatmentDurationPerSeverityLevel; // 0x90(0x10)
	struct TArray<float> TreatmentDurationPerUsePerSeverityLevel; // 0xa0(0x10)
	struct FPBCTIIT_ApplyBandagesOrDisinfect_Disinfect_PerSkillData SkillData[0x5]; // 0xb0(0x50)
};

// Class ConZ.PBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages
// Size: 0x110 (Inherited: 0x90)
struct UPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages : UPrisonerBodyConditionTreatInteractionItemTag {
	struct TArray<float> TreatmentDurationPerSeverityLevel; // 0x90(0x10)
	struct TArray<float> TreatmentDurationPerUsePerSeverityLevel; // 0xa0(0x10)
	float StabilizationDurationReduction; // 0xb0(0x04)
	float RecoveryDurationReduction; // 0xb4(0x04)
	struct UCurveFloat* RecoveryDurationReductionMultiplierVsItemHealthRatio; // 0xb8(0x08)
	struct FPBCTIIT_ApplyBandagesOrDisinfect_ApplyBandages_PerSkillData SkillData[0x5]; // 0xc0(0x50)
};

// Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_Disinfect
// Size: 0xa8 (Inherited: 0xa0)
struct UPBCIQR_ApplyBandagesOrDisinfect_Disinfect : UPrisonerBodyConditionInteractionQueryResults {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class ConZ.PBCIQR_ApplyBandagesOrDisinfect_ApplyBandages
// Size: 0xc0 (Inherited: 0xa0)
struct UPBCIQR_ApplyBandagesOrDisinfect_ApplyBandages : UPrisonerBodyConditionInteractionQueryResults {
	char pad_A0[0x20]; // 0xa0(0x20)
};

// Class ConZ.PrisonerBodyConditionTreatInteraction
// Size: 0x80 (Inherited: 0x80)
struct UPrisonerBodyConditionTreatInteraction : UPrisonerBodyConditionInteraction {
};

// Class ConZ.PrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect
// Size: 0x128 (Inherited: 0x80)
struct UPrisonerBodyConditionTreatInteraction_ApplyBandagesOrDisinfect : UPrisonerBodyConditionTreatInteraction {
	char pad_80[0x20]; // 0x80(0x20)
	struct FPBCTI_ApplyBandagesOrDisinfect_DisinfectData _disinfectData; // 0xa0(0x38)
	struct FPBCTI_ApplyBandagesOrDisinfect_ApplyBandagesData _applyBandagesData; // 0xd8(0x50)
};

// Class ConZ.PBCTIIT_ApplyGel
// Size: 0x100 (Inherited: 0x90)
struct UPBCTIIT_ApplyGel : UPrisonerBodyConditionTreatInteractionItemTag {
	struct TArray<float> TreatmentDurationPerSeverityLevel; // 0x90(0x10)
	struct TArray<float> TreatmentDurationPerUsePerSeverityLevel; // 0xa0(0x10)
	struct FPBCTIIT_ApplyGel_PerSkillData SkillData[0x5]; // 0xb0(0x50)
};

// Class ConZ.PBCIQR_ApplyGel
// Size: 0xa8 (Inherited: 0xa0)
struct UPBCIQR_ApplyGel : UPrisonerBodyConditionInteractionQueryResults {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class ConZ.PrisonerBodyConditionTreatInteraction_ApplyGel
// Size: 0xc0 (Inherited: 0x80)
struct UPrisonerBodyConditionTreatInteraction_ApplyGel : UPrisonerBodyConditionTreatInteraction {
	char pad_80[0x8]; // 0x80(0x08)
	struct FPBCTI_ApplyGelData _applyGelData; // 0x88(0x38)
};

// Class ConZ.PrisonerBodyEffect_AntibioticsReaction
// Size: 0xd0 (Inherited: 0x40)
struct UPrisonerBodyEffect_AntibioticsReaction : UPrisonerBodyEffect {
	struct UPrisonerBodyEffectUIData_AntibioticsReaction* _uiDataClass; // 0x40(0x08)
	struct FRuntimeFloatCurve _immuneSystemEfficiencyModifierVsAntibioticsAmountRatio; // 0x48(0x88)
};

// Class ConZ.PrisonerBodyEffectUIData_AntibioticsReaction
// Size: 0x60 (Inherited: 0x40)
struct UPrisonerBodyEffectUIData_AntibioticsReaction : UPrisonerBodyEffectUIData {
	char pad_40[0x8]; // 0x40(0x08)
	struct FText _name; // 0x48(0x18)
};

// Class ConZ.PrisonerBodyEffect_Coma
// Size: 0x40 (Inherited: 0x40)
struct UPrisonerBodyEffect_Coma : UPrisonerBodyEffect {
};

// Class ConZ.PrisonerBodyEffect_CoolingSwingItem
// Size: 0x48 (Inherited: 0x40)
struct UPrisonerBodyEffect_CoolingSwingItem : UPrisonerBodyEffect {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class ConZ.PrisonerBodyEffect_Death
// Size: 0x40 (Inherited: 0x40)
struct UPrisonerBodyEffect_Death : UPrisonerBodyEffect {
};

// Class ConZ.PrisonerBodyEffect_ExhaustionChange
// Size: 0x88 (Inherited: 0x40)
struct UPrisonerBodyEffect_ExhaustionChange : UPrisonerBodyEffect {
	char pad_40[0x30]; // 0x40(0x30)
	struct UPrisonerBodyEffectUIData_ExhaustionChange* _uiDataClass; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class ConZ.PrisonerBodyEffectUIData_ExhaustionChange
// Size: 0x78 (Inherited: 0x40)
struct UPrisonerBodyEffectUIData_ExhaustionChange : UPrisonerBodyEffectUIData {
	char pad_40[0x8]; // 0x40(0x08)
	struct FText _name; // 0x48(0x18)
	struct FText _suffix; // 0x60(0x18)
};

// Class ConZ.PrisonerBodyEffect_InfectionController
// Size: 0xd0 (Inherited: 0x40)
struct UPrisonerBodyEffect_InfectionController : UPrisonerBodyEffect {
	struct FRuntimeFloatCurve _passiveContaminationIncreaseRateVsContaminationRatio; // 0x40(0x88)
	float _contaminationSuppressionRate; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class ConZ.PrisonerBodyEffect_Limping
// Size: 0x48 (Inherited: 0x40)
struct UPrisonerBodyEffect_Limping : UPrisonerBodyEffect {
	float _duration; // 0x40(0x04)
	float _elapsedTime; // 0x44(0x04)
};

// Class ConZ.PrisonerBodyEffect_NotificationCooldown
// Size: 0x50 (Inherited: 0x40)
struct UPrisonerBodyEffect_NotificationCooldown : UPrisonerBodyEffect {
	struct UNotificationDescription* _notificationClass; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class ConZ.PrisonerBodyMuscleGroupToInfectionClassMappings
// Size: 0xf8 (Inherited: 0x30)
struct UPrisonerBodyMuscleGroupToInfectionClassMappings : UDataAsset {
	struct UPrisonerBodyCondition_Infection* _infectionClasses[0x19]; // 0x30(0xc8)
};

// Class ConZ.AsepsisItemTag
// Size: 0x38 (Inherited: 0x30)
struct UAsepsisItemTag : UBaseItemTag {
	float Asepsis; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.PrisonerBodyInfectionStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodyInfectionStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerBodySimulationComponent
// Size: 0x728 (Inherited: 0xb0)
struct UPrisonerBodySimulationComponent : UActorComponent {
	char pad_B0[0x1b0]; // 0xb0(0x1b0)
	struct UPrisonerBodySimulationData* _data; // 0x260(0x08)
	char pad_268[0x2b8]; // 0x268(0x2b8)
	struct TArray<struct UPrisonerBodyEffect*> _bodyEffects; // 0x520(0x10)
	char pad_530[0x178]; // 0x530(0x178)
	struct UMetabolism* _metabolism; // 0x6a8(0x08)
	char pad_6B0[0x20]; // 0x6b0(0x20)
	uint64_t _repState1; // 0x6d0(0x08)
	uint64_t _repState2; // 0x6d8(0x08)
	uint64_t _repState3; // 0x6e0(0x08)
	uint64_t _repState4; // 0x6e8(0x08)
	uint64_t _repState5; // 0x6f0(0x08)
	char _repState6; // 0x6f8(0x01)
	char pad_6F9[0x7]; // 0x6f9(0x07)
	uint64_t _repState7; // 0x700(0x08)
	uint64_t _repState8; // 0x708(0x08)
	struct TArray<struct UPrisonerBodyEffect*> _repBodyEffects; // 0x710(0x10)
	char pad_720[0x8]; // 0x720(0x08)

	void OnRep_State8(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State8 // (Final|Native|Private) // @ game+0x24a7f40
	void OnRep_State7(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State7 // (Final|Native|Private) // @ game+0x24a7f20
	void OnRep_State6(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State6 // (Final|Native|Private) // @ game+0x24a7f00
	void OnRep_State5(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State5 // (Final|Native|Private) // @ game+0x24a7ee0
	void OnRep_State4(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State4 // (Final|Native|Private) // @ game+0x24a7ec0
	void OnRep_State3(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State3 // (Final|Native|Private) // @ game+0x24a7ea0
	void OnRep_State2(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State2 // (Final|Native|Private) // @ game+0x24a7e80
	void OnRep_State1(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_State1 // (Final|Native|Private) // @ game+0x24a7e60
	void OnRep_BodyEffects(); // Function ConZ.PrisonerBodySimulationComponent.OnRep_BodyEffects // (Final|Native|Private) // @ game+0x24a7e40
};

// Class ConZ.PrisonerBodySimulationData
// Size: 0x708 (Inherited: 0x30)
struct UPrisonerBodySimulationData : UDataAsset {
	struct FRuntimeFloatCurve MaxStrengthGainRateVsStrength; // 0x30(0x88)
	float StrengthLossPerMissingProtein; // 0xb8(0x04)
	float MaxConstitutionGainRate; // 0xbc(0x04)
	float MaxConstitutionLossRate; // 0xc0(0x04)
	float DexterityChangePerStorageFatEnergy; // 0xc4(0x04)
	float IntelligenceExperiencePercentagePerAttribute; // 0xc8(0x04)
	float IntelligenceLossOnSuicide; // 0xcc(0x04)
	float MaxBleedingSeverity; // 0xd0(0x04)
	struct FFloatInterval BleedOutDurationVsBleedingSeverity; // 0xd4(0x08)
	struct FFloatInterval BleedOutDurationMultiplierVsConstitution; // 0xdc(0x08)
	float MaxBurnSeverity; // 0xe4(0x04)
	struct FRuntimeFloatCurve DamageRatioVsBloodLossRatio; // 0xe8(0x88)
	struct FFloatInterval HealingSpeedMultiplierVsConstitution; // 0x170(0x08)
	struct FRuntimeFloatCurve HealingSpeedMultiplierVsActionDifficultyRatio; // 0x178(0x88)
	struct FFloatInterval ImmuneSystemEfficiencyMultiplierVsConstitution; // 0x200(0x08)
	struct FRuntimeFloatCurve ImmuneSystemEfficiencyMultiplierVsActionDifficultyRatio; // 0x208(0x88)
	struct FPrisonerActionDifficultyCurve StaminaChangeRateVsActionDifficulty; // 0x290(0x18)
	float ExhaustionIncrement; // 0x2a8(0x04)
	float ExhaustionFallRate; // 0x2ac(0x04)
	float ExhaustionFallRateMultiplierWhenLyingOnFurniture; // 0x2b0(0x04)
	float ExhaustionBonusModifierPerConsumedItem; // 0x2b4(0x04)
	float ExhaustionBonusMaxModifier; // 0x2b8(0x04)
	float MaxStaminaReductionIncreaseMultiplier; // 0x2bc(0x04)
	struct FPrisonerActionDifficultyCurve HeartRateRatioVsActionDifficulty; // 0x2c0(0x18)
	float HeartRateRaiseInterpSpeed; // 0x2d8(0x04)
	float HeartRateFallRate; // 0x2dc(0x04)
	float BreathingRateInterpSpeed; // 0x2e0(0x04)
	struct FPrisonerActionDifficultyCurve OxygenSaturationRaiseRateVsActionDifficulty; // 0x2e4(0x18)
	struct FPrisonerActionDifficultyCurve OxygenSaturationFallRateVsActionDifficulty; // 0x2fc(0x18)
	float PreferredEnvironmentTemperatureWhenNaked; // 0x314(0x04)
	struct FRuntimeFloatCurve PhoenixTearsDiscardRateVsAmount; // 0x318(0x88)
	struct FRuntimeFloatCurve HealingSpeedMultiplierVsPhoenixTearsAmount; // 0x3a0(0x88)
	struct FRuntimeFloatCurve ImmuneSystemEfficiencyMultiplierVsPhoenixTearsAmount; // 0x428(0x88)
	struct UMetabolism* MetabolismClass; // 0x4b0(0x08)
	float MetabolismUpdateInterval; // 0x4b8(0x04)
	char pad_4BC[0x4]; // 0x4bc(0x04)
	struct FRuntimeFloatCurve CaloriesConsumptionMultiplierVsHeartRateRatio; // 0x4c0(0x88)
	struct FRuntimeFloatCurve WaterConsumptionMultiplierVsHeartRateRatio; // 0x548(0x88)
	struct FFloatInterval NutrientsConsumptionFactorVsConstitutionRatio; // 0x5d0(0x08)
	float StomachFullnessToBeAbleToVomit; // 0x5d8(0x04)
	float BladderFullnessToBeAbleToUrinate; // 0x5dc(0x04)
	float ColonFullnessToBeAbleToDefecate; // 0x5e0(0x04)
	float ColonWaterContentRatioToHaveDiarrhea; // 0x5e4(0x04)
	struct FFloatInterval ConsumptionDurationMultiplierVsEatingSpeed; // 0x5e8(0x08)
	struct TMap<struct FGameplayTag, float> ConsumptionDurations; // 0x5f0(0x50)
	struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableHealthRatios; // 0x640(0x10)
	struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges DigestionHandlersPerConsumableFatsContentRatios; // 0x650(0x10)
	struct TMap<enum class ENutrient, struct FPrisonerBodySimulationData_ConsumableDigestionHandlersForValueRanges> DigestionHandlersPerConsumableNutrientContentRatios; // 0x660(0x50)
	struct FPrisonerBodySimulationData_Effects Effects; // 0x6b0(0x58)
};

// Class ConZ.PrisonerBodySimulationSave
// Size: 0xc8 (Inherited: 0x28)
struct UPrisonerBodySimulationSave : UObject {
	bool IsDead; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	double BaseStrength; // 0x30(0x08)
	double BaseConstitution; // 0x38(0x08)
	double BaseDexterity; // 0x40(0x08)
	double BaseIntelligence; // 0x48(0x08)
	float InitialAge; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	double LifeTimeSinceInitialization; // 0x58(0x08)
	double LifeTimeSinceSpawn; // 0x60(0x08)
	int64_t TimeOfDeath; // 0x68(0x08)
	int64_t TimeOfRevive; // 0x70(0x08)
	int64_t TimeOfComa; // 0x78(0x08)
	int64_t TimeOfComaWakeUp; // 0x80(0x08)
	float Stamina; // 0x88(0x04)
	float AccumulatedFatigue; // 0x8c(0x04)
	float HeartRate; // 0x90(0x04)
	float BreathingRate; // 0x94(0x04)
	float OxygenSaturation; // 0x98(0x04)
	float BodyTemperature; // 0x9c(0x04)
	float PhoenixTearsAmount; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct TArray<struct FPrisonerBodyEffectSave> BodyEffects; // 0xa8(0x10)
	struct TArray<char> Metabolism; // 0xb8(0x10)
};

// Class ConZ.PrisonerBodySimulationStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodySimulationStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerBodySimulationUIDataImpl
// Size: 0x110 (Inherited: 0x58)
struct UPrisonerBodySimulationUIDataImpl : UPrisonerBodySimulationUIData {
	char pad_58[0xa0]; // 0x58(0xa0)
	struct TArray<struct UPrisonerBodyEffectUIData*> BodyEffectsUIData; // 0xf8(0x10)
	struct UPrisonerMetabolismUIData* MetabolismUIData; // 0x108(0x08)
};

// Class ConZ.PrisonerBodySimulationUIStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerBodySimulationUIStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerBodySymptom
// Size: 0xb8 (Inherited: 0xa0)
struct UPrisonerBodySymptom : UPrisonerBodyConditionOrSymptom {
	char pad_A0[0x10]; // 0xa0(0x10)
	struct UPrisonerBodySymptomNotifier* _notifier; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptom_AttributeChange
// Size: 0x108 (Inherited: 0xb8)
struct UPrisonerBodySymptom_AttributeChange : UPrisonerBodySymptom {
	struct TSet<struct UPrisonerForeignSubstance_AttributeModifier*> _attributeModifierForeignSubstanceClasses; // 0xb8(0x50)
};

// Class ConZ.PrisonerBodySymptomUIData
// Size: 0xb0 (Inherited: 0x98)
struct UPrisonerBodySymptomUIData : UPrisonerBodyConditionOrSymptomUIData {
	bool _shouldCreateTooltipElementForSeverity; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct TArray<struct UPrisonerBodySymptomCauseUIData*> _causes; // 0xa0(0x10)
};

// Class ConZ.PrisonerBodySymptomUIData_AttributeChange
// Size: 0xc0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_AttributeChange : UPrisonerBodySymptomUIData {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class ConZ.PrisonerBodySymptomCause
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodySymptomCause : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Blackout
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Blackout : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Blackout
// Size: 0xb8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Blackout : UPrisonerBodySymptom {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Blackout
// Size: 0xc8 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Blackout : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Blackout* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Blackout* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
};

// Class ConZ.PrisonerBodySymptomCause_Bleeding
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Bleeding : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Bleeding
// Size: 0x260 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Bleeding : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _vignetteEffectIntensityVsSeverityRatio; // 0xb8(0x88)
	struct FRuntimeFloatCurve _vignetteEffectPulsationFrequencyVsSeverityRatio; // 0x140(0x88)
	struct FRuntimeFloatCurve _vignetteEffectSeverityRatioMultiplierVsHealthRatio; // 0x1c8(0x88)
	float _vignetteEffectIntensityInterpSpeed; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	float _vignetteEffectFrequencyInterpSpeed; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_Bleeding
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Bleeding : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_BloodshotEyes
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_BloodshotEyes : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_BloodshotEyes
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_BloodshotEyes : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_BloodshotEyes : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_BloodshotEyes* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_BloodshotEyes* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_BlurredVision
// Size: 0x40 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_BlurredVision : UPrisonerBodySymptomCause {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.PrisonerBodySymptom_BlurredVision
// Size: 0xd0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_BlurredVision : UPrisonerBodySymptom {
	char pad_B8[0xc]; // 0xb8(0x0c)
	float _repOffset; // 0xc4(0x04)
	float _repFalloff; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_BlurredVision
// Size: 0xb0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_BlurredVision : UPrisonerBodySymptomUIData {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_BlurredVision
// Size: 0x1d8 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_BlurredVision : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_BlurredVision* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_BlurredVision* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	struct FRuntimeFloatCurve _offsetVsSeverity; // 0xc8(0x88)
	struct FRuntimeFloatCurve _falloffVsSeverity; // 0x150(0x88)
};

// Class ConZ.PrisonerBodySymptom_BoostOfEnergy
// Size: 0x148 (Inherited: 0xb8)
struct UPrisonerBodySymptom_BoostOfEnergy : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsEnergyBoosterSubstanceAmountRatio; // 0xb8(0x88)
	struct UForeignSubstance* _energyBoosterSubstanceClass; // 0x140(0x08)
};

// Class ConZ.PrisonerBodySymptomUIData_BoostOfEnergy
// Size: 0xd8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_BoostOfEnergy : UPrisonerBodySymptomUIData {
	char pad_B0[0x28]; // 0xb0(0x28)
};

// Class ConZ.PrisonerBodySymptom_BreathingObstructed
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_BreathingObstructed : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_BreathingObstructed
// Size: 0xb0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_BreathingObstructed : UPrisonerBodySymptomUIData {
};

// Class ConZ.PrisonerBodySymptomCause_PeriodicSound
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_PeriodicSound : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Burping
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerBodySymptomCause_Burping : UPrisonerBodySymptomCause_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptom_PeriodicSound
// Size: 0xd8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_PeriodicSound : UPrisonerBodySymptom {
	struct UAkAudioEvent* _sound; // 0xb8(0x08)
	struct FFloatInterval _soundInitialDelay; // 0xc0(0x08)
	struct FFloatInterval _soundIntervalDeviationRatio; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)

	void NetMulticast_PlaySound(); // Function ConZ.PrisonerBodySymptom_PeriodicSound.NetMulticast_PlaySound // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24adf50
};

// Class ConZ.PrisonerBodySymptom_Burping
// Size: 0xd8 (Inherited: 0xd8)
struct UPrisonerBodySymptom_Burping : UPrisonerBodySymptom_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptomCause_PeriodicAffect
// Size: 0x48 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_PeriodicAffect : UPrisonerBodySymptomCause {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class ConZ.PrisonerBodySymptomCause_Diarrhea
// Size: 0x48 (Inherited: 0x48)
struct UPrisonerBodySymptomCause_Diarrhea : UPrisonerBodySymptomCause_PeriodicAffect {
};

// Class ConZ.PrisonerBodySymptom_PeriodicAffect
// Size: 0xe8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_PeriodicAffect : UPrisonerBodySymptom {
	struct FFloatInterval _affectIntervalDeviationRatio; // 0xb8(0x08)
	struct FFloatInterval _affectDurationDeviationRatio; // 0xc0(0x08)
	char pad_C8[0x20]; // 0xc8(0x20)

	void Client_PendAffect(float Duration, float Intensity); // Function ConZ.PrisonerBodySymptom_PeriodicAffect.Client_PendAffect // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x24ade80
};

// Class ConZ.PrisonerBodySymptom_Diarrhea
// Size: 0xe8 (Inherited: 0xe8)
struct UPrisonerBodySymptom_Diarrhea : UPrisonerBodySymptom_PeriodicAffect {
};

// Class ConZ.PrisonerBodySymptomCause_Disorientation
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Disorientation : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Disorientation
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Disorientation : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Disorientation
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Disorientation : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Disorientation* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Disorientation* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Dizziness
// Size: 0x48 (Inherited: 0x48)
struct UPrisonerBodySymptomCause_Dizziness : UPrisonerBodySymptomCause_PeriodicAffect {
};

// Class ConZ.PrisonerBodySymptom_Dizziness
// Size: 0x298 (Inherited: 0xe8)
struct UPrisonerBodySymptom_Dizziness : UPrisonerBodySymptom_PeriodicAffect {
	struct FRuntimeFloatCurve _blackoutIntensityVsElapsedTime; // 0xe8(0x88)
	float _blackoutFadeOutDuration; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct FRuntimeFloatCurve _colorDesaturationIntensityVsElapsedTime; // 0x178(0x88)
	float _colorDesaturationFadeOutDuration; // 0x200(0x04)
	char pad_204[0x4]; // 0x204(0x04)
	struct FRuntimeFloatCurve _blurredVisionIntensityVsElapsedTime; // 0x208(0x88)
	float _blurredVisionFadeOutDuration; // 0x290(0x04)
	float _unconsciousnessDelay; // 0x294(0x04)
};

// Class ConZ.PrisonerBodySymptomCause_DoubleVision
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_DoubleVision : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_DoubleVision
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_DoubleVision : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_DoubleVision
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_DoubleVision : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_DoubleVision* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_DoubleVision* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_EyePressure
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_EyePressure : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_EyePressure
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_EyePressure : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_EyePressure
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_EyePressure : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_EyePressure* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_EyePressure* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Farting
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerBodySymptomCause_Farting : UPrisonerBodySymptomCause_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptom_Farting
// Size: 0xd8 (Inherited: 0xd8)
struct UPrisonerBodySymptom_Farting : UPrisonerBodySymptom_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptomCause_Fatigue
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Fatigue : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Fatigue
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Fatigue : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	float _maxSeverityMaxStaminaModifier; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Fatigue
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Fatigue : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Fatigue* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Fatigue* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _maxStaminaModifierVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomUIData_Fatigue
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Fatigue : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptomCauseUIData
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodySymptomCauseUIData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerBodySymptomCauseUIData_Fatigue
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCauseUIData_Fatigue : UPrisonerBodySymptomCauseUIData {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_FeelingCold
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_FeelingCold : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	float _temperatureDeltaAtMaxSeverity; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_FeelingCold
// Size: 0xb0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_FeelingCold : UPrisonerBodySymptomUIData {
};

// Class ConZ.PrisonerBodySymptom_FeelingHot
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_FeelingHot : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	float _temperatureDeltaAtMaxSeverity; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_FeelingHot
// Size: 0xb0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_FeelingHot : UPrisonerBodySymptomUIData {
};

// Class ConZ.PrisonerBodySymptomCause_Hallucinations
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Hallucinations : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Hallucinations
// Size: 0x228 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Hallucinations : UPrisonerBodySymptom {
	struct TArray<struct FPrisonerHallucinationSymptomSeverityLevelParams> _severityLevelParams; // 0xb8(0x10)
	struct UPrisonerHallucinationEpisode* _hallucinationEpisodeClass; // 0xc8(0x08)
	struct TArray<struct FPrisonerHallucinationIllusionInfo> _hallucinationIllusionInfosSP; // 0xd0(0x10)
	struct TArray<struct FPrisonerHallucinationIllusionInfo> _hallucinationIllusionInfosMP; // 0xe0(0x10)
	char pad_F0[0x10]; // 0xf0(0x10)
	struct FRuntimeFloatCurve _effectsIntensityVsElapsedTimePeriod; // 0x100(0x88)
	float _effectsBlendInDuration; // 0x188(0x04)
	float _effectsFrequencyMultiplier; // 0x18c(0x04)
	struct FRuntimeFloatCurve _effectsIntensityScaleVsSeverityRatio; // 0x190(0x88)
	float _visualEffectsIntensityScale; // 0x218(0x04)
	float _soundEffectsIntensityScale; // 0x21c(0x04)
	char pad_220[0x8]; // 0x220(0x08)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Hallucinations
// Size: 0xc8 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Hallucinations : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Hallucinations* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Hallucinations* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _hallucinationsSeverityVsSeverity; // 0x40(0x88)
};

// Class ConZ.PrisonerHallucinationEpisode
// Size: 0x110 (Inherited: 0x28)
struct UPrisonerHallucinationEpisode : UObject {
	struct UAkAudioEvent* _begunAudioEvent; // 0x28(0x08)
	struct UAkAudioEvent* _endedAudioEvent; // 0x30(0x08)
	struct FRuntimeFloatCurve _visualEffectIntensityVsTime; // 0x38(0x88)
	float _illusionsPreSpawnEffectsDelay; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UAkAudioEvent* _illusionsPreSpawnAudioEvent; // 0xc8(0x08)
	float _spawnIllusionsDelay; // 0xd0(0x04)
	char pad_D4[0x2c]; // 0xd4(0x2c)
	struct TArray<struct UObject*> _loadedIllusionClasses; // 0x100(0x10)
};

// Class ConZ.PrisonerBodySymptomCause_HeightenedSenses
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_HeightenedSenses : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_HeightenedSenses
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_HeightenedSenses : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_HeightenedSenses : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_HeightenedSenses* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_HeightenedSenses* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intensityVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptom_Hunger
// Size: 0x140 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Hunger : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsEnergyRatio; // 0xb8(0x88)
};

// Class ConZ.PrisonerBodySymptomCause_Leukopenia
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Leukopenia : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Leukopenia
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Leukopenia : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	float _maxSeverityImmuneSystemEfficiencyModifier; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Leukopenia
// Size: 0xd0 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Leukopenia : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Leukopenia* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Leukopenia* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _immuneSystemEfficiencyModifierVsSeverity; // 0x40(0x88)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class ConZ.PrisonerBodySymptomUIData_Leukopenia
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Leukopenia : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptomCauseUIData_Leukopenia
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCauseUIData_Leukopenia : UPrisonerBodySymptomCauseUIData {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Nausea
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Nausea : UPrisonerBodySymptomCause {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptom_Nausea
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Nausea : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_Nausea
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Nausea : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptom_NeedToDefecate
// Size: 0x140 (Inherited: 0xb8)
struct UPrisonerBodySymptom_NeedToDefecate : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsColonFullness; // 0xb8(0x88)
};

// Class ConZ.PrisonerBodySymptom_NeedToUrinate
// Size: 0x140 (Inherited: 0xb8)
struct UPrisonerBodySymptom_NeedToUrinate : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsBladderFullness; // 0xb8(0x88)
};

// Class ConZ.PrisonerBodySymptomCause_Pain
// Size: 0x40 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Pain : UPrisonerBodySymptomCause {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.PrisonerBodySymptom_Pain
// Size: 0xc8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Pain : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	struct FFloatInterval _painSuppressorsRatioForPainToBeSuppressedVsConstitution; // 0xbc(0x08)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_Pain
// Size: 0xc8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Pain : UPrisonerBodySymptomUIData {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect
// Size: 0x160 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_PeriodicAffect : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_PeriodicAffect* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_PeriodicAffect* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _intervalVsSeverity; // 0x40(0x88)
	struct FRuntimeFloatCurve _chanceVsSeverity; // 0xc8(0x88)
	struct FFloatInterval _durationVsConstitution; // 0x150(0x08)
	struct FFloatInterval _intensityVsConstitution; // 0x158(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_PhoenixTearsPresence
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_PhoenixTearsPresence : UPrisonerBodySymptomCause {
};

// Class ConZ.PrisonerBodySymptom_PhoenixTearsPresence
// Size: 0xb8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_PhoenixTearsPresence : UPrisonerBodySymptom {
};

// Class ConZ.PrisonerBodySymptomUIData_PhoenixTearsPresence
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_PhoenixTearsPresence : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptom_StomachFullness
// Size: 0x1c8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_StomachFullness : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsStomachFullness; // 0xb8(0x88)
	struct FRuntimeFloatCurve _eatingSpeedModifierVsSeverity; // 0x140(0x88)
};

// Class ConZ.PrisonerBodySymptomUIData_StomachFullness
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_StomachFullness : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_StomachGrowling
// Size: 0x38 (Inherited: 0x38)
struct UPrisonerBodySymptomCause_StomachGrowling : UPrisonerBodySymptomCause_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptom_StomachGrowling
// Size: 0xd8 (Inherited: 0xd8)
struct UPrisonerBodySymptom_StomachGrowling : UPrisonerBodySymptom_PeriodicSound {
};

// Class ConZ.PrisonerBodySymptom_Thirst
// Size: 0x140 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Thirst : UPrisonerBodySymptom {
	struct FRuntimeFloatCurve _severityVsHydrationRatio; // 0xb8(0x88)
};

// Class ConZ.PrisonerBodySymptomCause_Unconsciousness
// Size: 0x30 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Unconsciousness : UPrisonerBodySymptomCause {
};

// Class ConZ.PrisonerBodySymptom_Unconsciousness
// Size: 0xb8 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Unconsciousness : UPrisonerBodySymptom {
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Unconsciousness
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Unconsciousness : UPrisonerBodyConditionOrSymptomSideEffect {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerBodySymptomCause_Vomiting
// Size: 0x48 (Inherited: 0x48)
struct UPrisonerBodySymptomCause_Vomiting : UPrisonerBodySymptomCause_PeriodicAffect {
};

// Class ConZ.PrisonerBodySymptom_Vomiting
// Size: 0x100 (Inherited: 0xe8)
struct UPrisonerBodySymptom_Vomiting : UPrisonerBodySymptom_PeriodicAffect {
	float _minimalSubstanceVolumeInStomachRatioToVomit; // 0xe8(0x04)
	struct FFloatInterval _retryVomitingInterval; // 0xec(0x08)
	char pad_F4[0xc]; // 0xf4(0x0c)
};

// Class ConZ.PrisonerBodySymptomCause_Weakness
// Size: 0x40 (Inherited: 0x30)
struct UPrisonerBodySymptomCause_Weakness : UPrisonerBodySymptomCause {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.PrisonerBodySymptom_Weakness
// Size: 0xc0 (Inherited: 0xb8)
struct UPrisonerBodySymptom_Weakness : UPrisonerBodySymptom {
	float _maxSeverity; // 0xb8(0x04)
	float _maxSeverityPerformanceScoreModifier; // 0xbc(0x04)
};

// Class ConZ.PrisonerBodyConditionOrSymptomSideEffect_Weakness
// Size: 0xd8 (Inherited: 0x30)
struct UPrisonerBodyConditionOrSymptomSideEffect_Weakness : UPrisonerBodyConditionOrSymptomSideEffect {
	struct UPrisonerBodySymptom_Weakness* _symptomClass; // 0x30(0x08)
	struct UPrisonerBodySymptomCause_Weakness* _symptomCause; // 0x38(0x08)
	struct FRuntimeFloatCurve _performanceScoreModifierVsSeverity; // 0x40(0x88)
	float _strengthModifierPerPerformanceScoreModifier; // 0xc8(0x04)
	float _constitutionModifierPerPerformanceScoreModifier; // 0xcc(0x04)
	float _dexterityModifierPerPerformanceScoreModifier; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
};

// Class ConZ.PrisonerBodySymptomUIData_Weakness
// Size: 0xc0 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_Weakness : UPrisonerBodySymptomUIData {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class ConZ.PrisonerBodySymptomCauseUIData_Weakness
// Size: 0x40 (Inherited: 0x30)
struct UPrisonerBodySymptomCauseUIData_Weakness : UPrisonerBodySymptomCauseUIData {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.PrisonerBodySymptom_WetFeet
// Size: 0x148 (Inherited: 0xb8)
struct UPrisonerBodySymptom_WetFeet : UPrisonerBodySymptom {
	float _feetWetnessToExist; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FRuntimeFloatCurve _severityVsFeetWetness; // 0xc0(0x88)
};

// Class ConZ.PrisonerBodySymptomUIData_WetFeet
// Size: 0xb8 (Inherited: 0xb0)
struct UPrisonerBodySymptomUIData_WetFeet : UPrisonerBodySymptomUIData {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.PrisonerBodySymptomNotifier
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerBodySymptomNotifier : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.BasicPrisonerBodySymptomNotifier
// Size: 0x60 (Inherited: 0x30)
struct UBasicPrisonerBodySymptomNotifier : UPrisonerBodySymptomNotifier {
	struct FFloatInterval _triggerDelay; // 0x30(0x08)
	bool _shouldDisplayNotificationOnChangeForWorse; // 0x38(0x01)
	bool _shouldResetNotificationTimerOnSeverityChange; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
	struct TArray<struct FBasicPrisonerBodySymptomNotificationParameters> _notificationParameters; // 0x40(0x10)
	char pad_50[0x10]; // 0x50(0x10)
};

// Class ConZ.PrisonerBuryComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UPrisonerBuryComponent : UCharacterActionComponent {
	enum class EBuryState _buryState; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)

	void OnRep_BuryState(); // Function ConZ.PrisonerBuryComponent.OnRep_BuryState // (Final|Native|Private) // @ game+0x24b2210
};

// Class ConZ.PrisonerCharacterMesh
// Size: 0x90 (Inherited: 0x60)
struct UPrisonerCharacterMesh : UCharacterMesh {
	enum class EBodySlot BodySlotMapping; // 0x60(0x01)
	char pad_61[0x3]; // 0x61(0x03)
	struct FPrisonerCharacterMeshDecayMultiplierData DecayMultiplierData; // 0x64(0x28)
	float WarmthFactor; // 0x8c(0x04)
};

// Class ConZ.PrisonerCommonData
// Size: 0x1250 (Inherited: 0x30)
struct UPrisonerCommonData : UDataAsset {
	struct UPrisonerMovementCommonData* MovementData; // 0x30(0x08)
	struct UAnimInstance* FemaleAnimationInstance; // 0x38(0x08)
	struct UAnimInstance* MaleAnimationInstance; // 0x40(0x08)
	struct UAnimInstance* ServerAnimationInstance; // 0x48(0x08)
	struct FFloatInterval ExhaustionRange; // 0x50(0x08)
	float ExhaustionDamageMultiplier; // 0x58(0x04)
	float SkinHardness; // 0x5c(0x04)
	float ClothesBaseTemperatureResistanceThreshold; // 0x60(0x04)
	float LastDamageDealerResetTime; // 0x64(0x04)
	struct FFloatInterval StrengthMeleeDamageMultiplierRange; // 0x68(0x08)
	float ExhaustionMeleeDamageMultiplier; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct TMap<struct FGameplayTag, enum class EClothesPart> ClothesPartUsedByMeleeAttackCapsuleAttachment; // 0x78(0x50)
	struct TMap<struct FGameplayTag, struct FName> AttackerBoneByMeleeAttackCapsuleAttachment; // 0xc8(0x50)
	float UnarmedAttackBaseEnergy; // 0x118(0x04)
	struct FFloatInterval StrengthThrowingDamageMultiplierRange; // 0x11c(0x08)
	float ExhaustionThrowingDamageMultiplier; // 0x124(0x04)
	float NoSkillThrowingDamageMultiplier; // 0x128(0x04)
	float BasicSkillThrowingDamageMultiplier; // 0x12c(0x04)
	float MediumSkillThrowingDamageMultiplier; // 0x130(0x04)
	float AdvancedSkillThrowingDamageMultiplier; // 0x134(0x04)
	float AboveAdvancedSkillThrowingDamageMultiplier; // 0x138(0x04)
	struct FFloatInterval ThrowEnergyRange; // 0x13c(0x08)
	char pad_144[0x4]; // 0x144(0x04)
	struct APrisonerCorpse* CorpseClass; // 0x148(0x08)
	struct AGib* HeadExplosionGibClass; // 0x150(0x08)
	struct UParticleSystem* HeadExplosionParticles; // 0x158(0x08)
	struct TArray<struct UStaticMesh*> HeadExplosionGibMeshes; // 0x160(0x10)
	struct UChoppingRecipeDataAsset* CorpseChoppingRecipeDataAsset; // 0x170(0x08)
	struct UChoppingRecipeDataAsset* CorpseHeadlessChoppingRecipeDataAsset; // 0x178(0x08)
	struct UAkAudioEvent* CorpseStartSearchAudioEvent; // 0x180(0x08)
	struct UAkAudioEvent* CorpseStopSearchAudioEvent; // 0x188(0x08)
	float MaxActorEyesOffsetWhenLeaning; // 0x190(0x04)
	char pad_194[0xc]; // 0x194(0x0c)
	struct FTransform DefaultMeshTransform; // 0x1a0(0x30)
	int32_t NumberOfCrouchStages; // 0x1d0(0x04)
	float CrouchStagesInterpSpeed; // 0x1d4(0x04)
	struct UCurveFloat* CrouchViewsAdditionalGlobalOffsetZVsCrouchStage; // 0x1d8(0x08)
	float ProneEyeHeight; // 0x1e0(0x04)
	float ProneEyeForwardOffset; // 0x1e4(0x04)
	float SittingOnGroundEyeHeight; // 0x1e8(0x04)
	float LyingOnGroundEyeHeight; // 0x1ec(0x04)
	float RestingOnGroundBackwardOffset; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	struct UPrisonerMovementSettings* MovementSettings; // 0x1f8(0x08)
	float DefaultViewBlendDuration; // 0x200(0x04)
	float MinEyesRotationYaw; // 0x204(0x04)
	float MaxEyesRotationYaw; // 0x208(0x04)
	float MinEyesRotationPitch; // 0x20c(0x04)
	float MaxEyesRotationPitch; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
	struct UCurveFloat* MinEyesRotationPitchCurve; // 0x218(0x08)
	struct UCurveFloat* MaxEyesRotationPitchCurve; // 0x220(0x08)
	float EyesRotationSpeed; // 0x228(0x04)
	bool DebugEyesRotation; // 0x22c(0x01)
	char pad_22D[0x3]; // 0x22d(0x03)
	float ForcedBoneTransformRefreshTime; // 0x230(0x04)
	float ForcedBoneTransformRefreshPeriod; // 0x234(0x04)
	struct UAkAudioEvent* ComaAudioEvent; // 0x238(0x08)
	struct UAkAudioEvent* ComaScreamAudioEvent; // 0x240(0x08)
	struct UAkAudioEvent* DeathAudioEvent; // 0x248(0x08)
	struct UAkAudioEvent* DeathScreamAudioEvent; // 0x250(0x08)
	struct UParticleSystem* ColdBreathParticles; // 0x258(0x08)
	struct FName ColdBreathParticlesAttachPointName; // 0x260(0x08)
	struct UMaterialInstance* StandardUndershirtMaterial; // 0x268(0x08)
	struct UMaterialInstance* DeluxeUndershirtMaterial; // 0x270(0x08)
	struct UAkAudioEvent* JumpAudioEvent; // 0x278(0x08)
	float LandingImpactHorizontalSpeedWeight; // 0x280(0x04)
	float LandingImpactVerticalSpeedWeight; // 0x284(0x04)
	struct UCurveFloat* LandingStaminaDrainCurve; // 0x288(0x08)
	struct UCurveFloat* ForceUnmountDamageCurve; // 0x290(0x08)
	struct ULandingEffects* LandingEffects; // 0x298(0x08)
	float DisplaceFromPrisonerSpeed; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UParticleSystem* WaterParticlesWhenIdle; // 0x2a8(0x08)
	struct UParticleSystem* WaterParticlesWhenIdleInOcean; // 0x2b0(0x08)
	struct UParticleSystem* WaterParticlesWhenMoving; // 0x2b8(0x08)
	struct UParticleSystem* WaterParticlesWhenMovingInOcean; // 0x2c0(0x08)
	struct UParticleSystem* WaterParticlesWhenDiving; // 0x2c8(0x08)
	struct FName WaterParticlesWhenDivingAttachPointName; // 0x2d0(0x08)
	struct UParticleSystem* WaterContactParticles; // 0x2d8(0x08)
	struct FName WaterContactParticlesAttachPointName; // 0x2e0(0x08)
	float MinVelocityZToSpawnWaterContactParticles; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct UCurveFloat* BuoyancyMultiplierVsGearWeightLimitDeviation; // 0x2f0(0x08)
	struct UAkAudioEvent* StartedDivingAudioEvent; // 0x2f8(0x08)
	struct UAkAudioEvent* StoppedDivingAudioEvent; // 0x300(0x08)
	struct UAkAudioEvent* EndDivingOnPlayAudioEvent; // 0x308(0x08)
	float MaxHeadWaterWeight; // 0x310(0x04)
	float MaxUpperBodyWaterWeight; // 0x314(0x04)
	float MaxLowerBodyWaterWeight; // 0x318(0x04)
	float MaxFeetWaterWeight; // 0x31c(0x04)
	float OutwardsWaterPropagationFactor; // 0x320(0x04)
	float InwardsWaterPropagationRate; // 0x324(0x04)
	float OutwardsWaterPropagationRate; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct UCurveFloat* GettingDryRateVsSpeed; // 0x330(0x08)
	float MinDepthToBeInvisibleToAI; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UParticleSystem* SmallBleedingEffect; // 0x340(0x08)
	struct UParticleSystem* LargeBleedingEffect; // 0x348(0x08)
	struct UParticleSystem* UrineParticles; // 0x350(0x08)
	struct FName UrineParticlesAttachPointName; // 0x358(0x08)
	struct FName UrineParticlesAttachPointSmallestName; // 0x360(0x08)
	struct FName UrineParticlesAttachPointBiggestName; // 0x368(0x08)
	struct FName UrineParticlesAttachPointFemaleName; // 0x370(0x08)
	struct FName UrineParticlesAttachPointMaleName; // 0x378(0x08)
	float DistanceBetweenFoliageQueriesClient; // 0x380(0x04)
	float DetectNearbyFoliageRadiusClient; // 0x384(0x04)
	float DistanceBetweenFoliageQueriesServer; // 0x388(0x04)
	float DetectNearbyFoliageRadiusServer; // 0x38c(0x04)
	float ClearFoliageCoveragePreventionTime; // 0x390(0x04)
	float MinSpeedToTriggerMovingThroughFoliageEffects; // 0x394(0x04)
	float MinAngularSpeedToTriggerMovingThroughFoliageEffects; // 0x398(0x04)
	float ShouldAutomaticallyBeSeenInFoliageByAIDistance; // 0x39c(0x04)
	struct UAkAudioEvent* OpenInventoryAudioEvent; // 0x3a0(0x08)
	struct UAkAudioEvent* CloseInventoryAudioEvent; // 0x3a8(0x08)
	struct UAkAudioEvent* OpenOceanAudioEvent; // 0x3b0(0x08)
	float CharacterDetectionRadiusForIngameMusic; // 0x3b8(0x04)
	float BulletFlybyDangerCooldown; // 0x3bc(0x04)
	float HeadExplodeDamageThreshold; // 0x3c0(0x04)
	float MeleeDangerCooldown; // 0x3c4(0x04)
	float MeleeDangerRadius; // 0x3c8(0x04)
	float MeleeDangerAngle; // 0x3cc(0x04)
	float PostReviveStateDuration; // 0x3d0(0x04)
	struct FGameplayTag HitReactTypeWhenStanding; // 0x3d4(0x08)
	struct FGameplayTag HitReactTypeWhenStandingInCombatMode; // 0x3dc(0x08)
	struct FGameplayTag HitReactTypeWhenStandingInCombatModeAndHoldingBlock; // 0x3e4(0x08)
	struct FGameplayTag HitReactTypeWhenCrouching; // 0x3ec(0x08)
	struct FGameplayTag HitReactTypeWhenProne; // 0x3f4(0x08)
	struct FGameplayTag HitReactTypeWhenCaptured; // 0x3fc(0x08)
	char pad_404[0x4]; // 0x404(0x04)
	struct TMap<enum class EPrisonerAerialPose, struct UHitReactLandingParams*> HitReactLandingParamsMap; // 0x408(0x50)
	struct FGameplayTag MeleeAttackCapsulesAttachmentForItemInLHand; // 0x458(0x08)
	struct FGameplayTag MeleeAttackCapsulesAttachmentForItemInRHand; // 0x460(0x08)
	struct FPrisonerMeleeAttackTypes MeleeAttackTypes; // 0x468(0x88)
	float MeleeTargetMaxDistance; // 0x4f0(0x04)
	float MeleeTargetMaxHeightDifference; // 0x4f4(0x04)
	struct UCurveFloat* MeleeTargetMaxConeHalfAngleVsDistanceToTarget; // 0x4f8(0x08)
	float TimeSpanAfterWhichMeleeAttacksBecomeInitial; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct TMap<enum class EDamageMagnitudeType, float> MeleeHitRagdollImpulseByDamageMagnitudeType; // 0x508(0x50)
	float DefaultMeleeHitRagdollImpulse; // 0x558(0x04)
	float ThrowModeActivationDelay; // 0x55c(0x04)
	struct FName ThrowLaunchLocationSocketName; // 0x560(0x08)
	struct UCurveFloat* ThrowingPathBrightnessFromTimeCurve; // 0x568(0x08)
	float IslandBoundsCheckInterval; // 0x570(0x04)
	char pad_574[0x4]; // 0x574(0x04)
	struct UPhysicalSurfacesData* PhysicalSurfacesData; // 0x578(0x08)
	struct AWristwatch* DeluxeWristwatchClass; // 0x580(0x08)
	struct UWeaponScopeWidget* ScopeWidget; // 0x588(0x08)
	struct APlaceableActorBase* PlaceableActorItemsClass; // 0x590(0x08)
	struct APlaceableActorBase* PlaceableActorFortificationsClass; // 0x598(0x08)
	struct APlaceableActorBase* PlaceableActorBaseBuildingClass; // 0x5a0(0x08)
	struct APlaceableActorBase* PlaceableActorBaseUpgradeClass; // 0x5a8(0x08)
	struct APlaceableActorBase* PlaceableActorGardenClass; // 0x5b0(0x08)
	struct APlaceableActorBase* PlaceableActorModularBaseBuildingClass; // 0x5b8(0x08)
	int32_t MaxPossiblePlacedBlueprints; // 0x5c0(0x04)
	float OpenOceanRange; // 0x5c4(0x04)
	struct FGameplayTag FeetSlot; // 0x5c8(0x08)
	struct FGameplayTag HairSlot; // 0x5d0(0x08)
	struct FGameplayTag HeadSlot; // 0x5d8(0x08)
	struct FGameplayTag NeckSlot; // 0x5e0(0x08)
	struct FGameplayTag FacialHairSlot; // 0x5e8(0x08)
	struct FGameplayTag PenisSlot; // 0x5f0(0x08)
	struct FGameplayTag ChipSlot; // 0x5f8(0x08)
	struct FGameplayTag LEyeSlot; // 0x600(0x08)
	struct FGameplayTag REyeSlot; // 0x608(0x08)
	struct FGameplayTag EyewearSlot; // 0x610(0x08)
	struct FGameplayTag HandsSlot; // 0x618(0x08)
	struct FGameplayTag MaskSlot; // 0x620(0x08)
	struct FGameplayTag CensorshipActiveTag; // 0x628(0x08)
	struct FGameplayTag PrisonerMountedTag; // 0x630(0x08)
	struct FGameplayTag HeadHiddenTag; // 0x638(0x08)
	struct FGameplayTag HeadExplodedTag; // 0x640(0x08)
	struct FGameplayTag ShowGenitalsOverrideTag; // 0x648(0x08)
	struct FGameplayTag HideWristwatchTag; // 0x650(0x08)
	struct UCharacterMesh* BodyCharacterMeshClass; // 0x658(0x08)
	struct UCharacterMesh* ClothesCharacterMeshClass; // 0x660(0x08)
	struct UCharacterMesh* CensorshipCharacterMeshClass; // 0x668(0x08)
	struct TArray<struct UCharacterMesh*> ShoesCharacterMeshClasses; // 0x670(0x10)
	struct TArray<struct UCharacterMesh*> FaceCoveringCharacterMeshClasses; // 0x680(0x10)
	struct FGameplayTagContainer GearSlotsCausingUpperBodyNoise; // 0x690(0x20)
	struct TMap<enum class EPrisonerBorderCrossingPenalty, float> LeavingTheIslandPenaltyTimes; // 0x6b0(0x50)
	float GameEventOutOfBoundsDamage; // 0x700(0x04)
	char pad_704[0x4]; // 0x704(0x04)
	struct UMaterialInstance* ItemPlacingMaterialAllowed; // 0x708(0x08)
	struct UMaterialInstance* ItemPlacingMaterialDisallowed; // 0x710(0x08)
	struct UMaterialInstance* VehicleServiceMaterial; // 0x718(0x08)
	float IkInterpSpeed; // 0x720(0x04)
	char pad_724[0x4]; // 0x724(0x04)
	struct UMaterialParameterCollection* CommonParameterCollection; // 0x728(0x08)
	struct FName WeaponSocketName; // 0x730(0x08)
	struct FName WeaponHolsterSocketName; // 0x738(0x08)
	struct UAnimMontage* SwapWeapons; // 0x740(0x08)
	struct UAnimMontage* SwapItemsThrowingItemToWeapon; // 0x748(0x08)
	struct UAnimMontage* SwapItemsThrowingItemToNotWeapon; // 0x750(0x08)
	struct UAnimMontage* SwapItemsWeaponToThrowingItem; // 0x758(0x08)
	struct UAnimMontage* SwapItemsNotWeaponToNotWeapon; // 0x760(0x08)
	struct UAnimMontage* SwapItemsWeaponToWeapon; // 0x768(0x08)
	struct UAnimMontage* SwapItemsNotWeaponToWeapon; // 0x770(0x08)
	struct UAnimMontage* SwapItemsWeaponToNotWeapon; // 0x778(0x08)
	struct UAnimMontage* EquipRifleStanding; // 0x780(0x08)
	struct UAnimMontage* UnequipRifleStanding; // 0x788(0x08)
	struct UAnimMontage* EquipHandgunStanding; // 0x790(0x08)
	struct UAnimMontage* UnequipHadgunStanding; // 0x798(0x08)
	struct UAnimMontage* UrinateMaleMontage; // 0x7a0(0x08)
	struct UAnimMontage* UrinateFemaleMontage; // 0x7a8(0x08)
	struct UAnimMontage* UrinateMaleForcedMontage; // 0x7b0(0x08)
	struct UAnimMontage* UrinateFemaleForcedMontage; // 0x7b8(0x08)
	struct UAnimMontage* DefecateMontage; // 0x7c0(0x08)
	struct UAnimMontage* DefecateForcedMontage; // 0x7c8(0x08)
	struct UAnimMontage* VomitMontage; // 0x7d0(0x08)
	struct UAnimMontage* VomitForcedMontage; // 0x7d8(0x08)
	struct UAnimMontage* SearchObject; // 0x7e0(0x08)
	struct UAnimMontage* SearchObjectWhileItemInHands; // 0x7e8(0x08)
	struct UAnimMontage* SearchObjectWhileWeaponInHands; // 0x7f0(0x08)
	struct UAnimMontage* SearchObjectWhenSwimming; // 0x7f8(0x08)
	struct UAnimMontage* SearchPrisoner; // 0x800(0x08)
	struct UAnimMontage* PatchWoundsStanding; // 0x808(0x08)
	struct UAnimMontage* PatchWoundsCrouching; // 0x810(0x08)
	struct UAnimMontage* PatchWoundsProne; // 0x818(0x08)
	struct UAnimMontage* PatchWoundsStandingEnd; // 0x820(0x08)
	struct UAnimMontage* PatchWoundsCrouchingEnd; // 0x828(0x08)
	struct UAnimMontage* PatchWoundsProneEnd; // 0x830(0x08)
	struct UAnimMontage* EatGeneric; // 0x838(0x08)
	struct UAnimMontage* EatCan; // 0x840(0x08)
	struct UAnimMontage* DrinkFromBottleStanding; // 0x848(0x08)
	struct UAnimMontage* DrinkFromBottleCrouching; // 0x850(0x08)
	struct UAnimMontage* DrinkInteraction; // 0x858(0x08)
	struct UAnimMontage* DefaultLongThrowMontage; // 0x860(0x08)
	struct UAnimMontage* DefaultLongThrowLoopMontage; // 0x868(0x08)
	struct UAnimMontage* DefaultShortThrowMontage; // 0x870(0x08)
	struct UAnimMontage* DefaultThrowbackGrenadeMontage; // 0x878(0x08)
	struct UAnimMontage* ChopTreeStanding; // 0x880(0x08)
	struct UAnimMontage* ChopTreeStandingEnd; // 0x888(0x08)
	struct UAnimMontage* ChopLogStanding; // 0x890(0x08)
	struct UAnimMontage* ChopLogStandingEnd; // 0x898(0x08)
	struct UAnimMontage* BreakStone; // 0x8a0(0x08)
	struct UAnimMontage* BreakStoneEnd; // 0x8a8(0x08)
	struct UAnimMontage* CraftStanding; // 0x8b0(0x08)
	struct UAnimMontage* CraftCrouching; // 0x8b8(0x08)
	struct UAnimMontage* CraftProne; // 0x8c0(0x08)
	struct UAnimMontage* UncraftStanding; // 0x8c8(0x08)
	struct UAnimMontage* UncraftCrouching; // 0x8d0(0x08)
	struct UAnimMontage* UncraftProne; // 0x8d8(0x08)
	struct UAnimMontage* CheckTime; // 0x8e0(0x08)
	struct UAnimMontage* CheckTimeFemale; // 0x8e8(0x08)
	struct UAnimMontage* CheckTimeWhileItemInHands; // 0x8f0(0x08)
	struct UAnimMontage* CheckTimeWhileItemInHandsFemale; // 0x8f8(0x08)
	struct UAnimMontage* CheckTimeWhileWeaponInHands; // 0x900(0x08)
	struct UAnimMontage* CheckTimeWhileWeaponInHandsFemale; // 0x908(0x08)
	struct UAnimMontage* CheckTemperature; // 0x910(0x08)
	struct UAnimMontage* ForceUnlockStanding; // 0x918(0x08)
	struct UAnimMontage* ForceUnlockStandingEnd; // 0x920(0x08)
	struct UAnimMontage* ForceUnlockStandingStop; // 0x928(0x08)
	struct UAnimMontage* ManualUnlockStanding; // 0x930(0x08)
	struct UAnimMontage* ManualUnlockStandingEnd; // 0x938(0x08)
	struct UAnimMontage* ManualUnlockStandingStop; // 0x940(0x08)
	struct UAnimMontage* SpillMontage; // 0x948(0x08)
	struct UAnimMontage* StompOutFireMontage; // 0x950(0x08)
	struct UAnimMontage* BlowAirIntoFireMontage; // 0x958(0x08)
	struct UAnimMontage* BlowAirIntoLowFireMontage; // 0x960(0x08)
	struct UAnimMontage* GestureShowFinger; // 0x968(0x08)
	struct UAnimMontage* GestureStandSurrender; // 0x970(0x08)
	struct UAnimMontage* GestureWaveHi; // 0x978(0x08)
	struct UAnimMontage* GestureYouAreDead; // 0x980(0x08)
	struct UAnimMontage* GestureFY; // 0x988(0x08)
	struct UAnimMontage* GesturePoint; // 0x990(0x08)
	struct UAnimMontage* GestureHeart; // 0x998(0x08)
	struct UAnimMontage* GestureBallpalm; // 0x9a0(0x08)
	struct UAnimMontage* GestureFacepalm; // 0x9a8(0x08)
	struct UAnimMontage* GestureFingerGun; // 0x9b0(0x08)
	struct UAnimMontage* GestureLaughing; // 0x9b8(0x08)
	struct UAnimMontage* GestureSmellWave; // 0x9c0(0x08)
	struct UAnimMontage* GestureSquat; // 0x9c8(0x08)
	struct UAnimMontage* GestureCharge; // 0x9d0(0x08)
	struct UAnimMontage* GestureChargeCombat; // 0x9d8(0x08)
	struct UAnimMontage* GestureFreeze; // 0x9e0(0x08)
	struct UAnimMontage* GestureFreezeCombat; // 0x9e8(0x08)
	struct UAnimMontage* GestureGetDown; // 0x9f0(0x08)
	struct UAnimMontage* GestureGetDownCombat; // 0x9f8(0x08)
	struct UAnimMontage* GestureGetUp; // 0xa00(0x08)
	struct UAnimMontage* GestureGetUpCombat; // 0xa08(0x08)
	struct UAnimMontage* GestureHalt; // 0xa10(0x08)
	struct UAnimMontage* GestureHaltCombat; // 0xa18(0x08)
	struct UAnimMontage* GestureHurryUp; // 0xa20(0x08)
	struct UAnimMontage* GestureHurryUpCombat; // 0xa28(0x08)
	struct UAnimMontage* GesturePointMe; // 0xa30(0x08)
	struct UAnimMontage* GesturePointMeCombat; // 0xa38(0x08)
	struct UAnimMontage* GesturePointYou; // 0xa40(0x08)
	struct UAnimMontage* GesturePointYouCombat; // 0xa48(0x08)
	struct UAnimMontage* GestureRally; // 0xa50(0x08)
	struct UAnimMontage* GestureRallyCombat; // 0xa58(0x08)
	struct UAnimMontage* GestureThumbsUp; // 0xa60(0x08)
	struct UAnimMontage* GestureThumbsUpCombat; // 0xa68(0x08)
	struct UAnimMontage* GestureThumbsDown; // 0xa70(0x08)
	struct UAnimMontage* GestureThumbsDownCombat; // 0xa78(0x08)
	struct UAnimMontage* GestureUnderstandNo; // 0xa80(0x08)
	struct UAnimMontage* GestureUnderstandNoCombat; // 0xa88(0x08)
	struct UAnimMontage* GestureUnderstandYes; // 0xa90(0x08)
	struct UAnimMontage* GestureUnderstandYesCombat; // 0xa98(0x08)
	struct UAnimMontage* CommitSuicideStanding; // 0xaa0(0x08)
	struct UAnimMontage* CommitSuicideCrouching; // 0xaa8(0x08)
	struct UAnimMontage* CommitSuicideRareStanding; // 0xab0(0x08)
	struct UAnimMontage* LockpickRegular; // 0xab8(0x08)
	struct UAnimMontage* WhistleMontageMale; // 0xac0(0x08)
	struct UAnimMontage* WhistleMontageFemale; // 0xac8(0x08)
	struct UAnimMontage* TuneBowMontage; // 0xad0(0x08)
	struct UAnimMontage* RepairVehicleMontage; // 0xad8(0x08)
	struct UAnimMontage* WashClothMontage; // 0xae0(0x08)
	struct UAnimMontage* BuryStandingMontage; // 0xae8(0x08)
	struct UAnimMontage* BuryRestStandingMontage; // 0xaf0(0x08)
	struct UAnimMontage* BuryResumeStandingMontage; // 0xaf8(0x08)
	struct UAnimMontage* BuryCrouchingMontage; // 0xb00(0x08)
	struct UAnimMontage* BuryRestCrouchingMontage; // 0xb08(0x08)
	struct UAnimMontage* SitOnGroundStandingStartMontage; // 0xb10(0x08)
	struct UAnimMontage* SitOnGroundStandingEndMontage; // 0xb18(0x08)
	struct UAnimMontage* SitOnGroundCrouchingStartMontage; // 0xb20(0x08)
	struct UAnimMontage* SitOnGroundCrouchingEndMontage; // 0xb28(0x08)
	struct UAnimMontage* LayOnGroundStandingStartMontage; // 0xb30(0x08)
	struct UAnimMontage* LayOnGroundStandingEndMontage; // 0xb38(0x08)
	struct UAnimMontage* LayOnGroundCrouchingStartMontage; // 0xb40(0x08)
	struct UAnimMontage* LayOnGroundCrouchingEndMontage; // 0xb48(0x08)
	struct UAnimSequenceBase* SittingOnGroundAnimation; // 0xb50(0x08)
	struct UAnimSequenceBase* LyingOnGroundAnimation; // 0xb58(0x08)
	struct UAnimMontage* LightFlareMontage; // 0xb60(0x08)
	struct UAnimMontage* ArmTrapMontage; // 0xb68(0x08)
	struct UAnimMontage* FishingEnterMontage; // 0xb70(0x08)
	struct UAnimMontage* FishingLeaveMontage; // 0xb78(0x08)
	struct UAnimMontage* FishingCastMontage; // 0xb80(0x08)
	struct UAnimMontage* FishingLongCastEndMontage; // 0xb88(0x08)
	struct UAnimMontage* FishingShortCastEndMontage; // 0xb90(0x08)
	struct UAnimMontage* FishingPullStartMontage; // 0xb98(0x08)
	struct UAnimMontage* FishingPullEndMontage; // 0xba0(0x08)
	struct UAnimMontage* FishingFishCaughtMontage; // 0xba8(0x08)
	struct UAnimMontage* FishingKeepFishMontage; // 0xbb0(0x08)
	struct UAnimMontage* FishingDiscardFishMontage; // 0xbb8(0x08)
	struct UAnimMontage* FishingWireBreakMontage; // 0xbc0(0x08)
	struct UAnimMontage* DanceSwagMontageMale; // 0xbc8(0x08)
	struct UAnimMontage* DanceSlinkyMontageMale; // 0xbd0(0x08)
	struct UAnimMontage* DanceJungleStepMontageMale; // 0xbd8(0x08)
	struct UAnimMontage* DanceMoonslideMontageMale; // 0xbe0(0x08)
	struct UAnimMontage* DanceFlossMontageMale; // 0xbe8(0x08)
	struct UAnimMontage* DanceOrangeJusticeMontageMale; // 0xbf0(0x08)
	struct UAnimMontage* DanceShowtimeMontageMale; // 0xbf8(0x08)
	struct UAnimMontage* DanceScrubMontageMale; // 0xc00(0x08)
	struct UAnimMontage* DanceTheCarltonMontageMale; // 0xc08(0x08)
	struct UAnimMontage* DanceGangnamStyleMontageMale; // 0xc10(0x08)
	struct UAnimMontage* DanceTechnoVikingMontageMale; // 0xc18(0x08)
	struct UAnimMontage* DanceOhMamaMontageMale; // 0xc20(0x08)
	struct UAnimMontage* DanceLoserMontageMale; // 0xc28(0x08)
	struct UAnimMontage* DanceSeductionMontageMale; // 0xc30(0x08)
	struct UAnimMontage* DanceTemptationMontageMale; // 0xc38(0x08)
	struct UAnimMontage* DanceVogueMontageMale; // 0xc40(0x08)
	struct UAnimMontage* DanceTangoMontageMale; // 0xc48(0x08)
	struct UAnimMontage* DanceDiscoSpinMontageMale; // 0xc50(0x08)
	struct UAnimMontage* DanceJaggerMontageMale; // 0xc58(0x08)
	struct UAnimMontage* DanceSlayinAliveMontageMale; // 0xc60(0x08)
	struct UAnimMontage* DancePuppetDanceMontageMale; // 0xc68(0x08)
	struct UAnimMontage* DanceGunsBlazingMontageMale; // 0xc70(0x08)
	struct UAnimMontage* DanceStepUpMontageMale; // 0xc78(0x08)
	struct UAnimMontage* DancePartyAnimalMontageMale; // 0xc80(0x08)
	struct UAnimMontage* DanceHardbassMontageMale; // 0xc88(0x08)
	struct UAnimMontage* DanceKazachokMontageMale; // 0xc90(0x08)
	struct UAnimMontage* DancePaddleDanceMontageMale; // 0xc98(0x08)
	struct UAnimMontage* DanceMoonwalkMontageMale; // 0xca0(0x08)
	struct UAnimMontage* DanceSneakyMontageMale; // 0xca8(0x08)
	struct UAnimMontage* DanceDeathDropMontageMale; // 0xcb0(0x08)
	struct UAnimMontage* DanceFelineMontageMale; // 0xcb8(0x08)
	struct UAnimMontage* DanceGoddessMontageMale; // 0xcc0(0x08)
	struct UAnimMontage* DanceSultanaMontageMale; // 0xcc8(0x08)
	struct UAnimMontage* DanceSerpentsCharmMontageMale; // 0xcd0(0x08)
	struct UAnimMontage* DanceBootyliciousMontageMale; // 0xcd8(0x08)
	struct UAnimMontage* DanceBubbleBounceMontageMale; // 0xce0(0x08)
	struct UAnimMontage* DanceSwagMontageFemale; // 0xce8(0x08)
	struct UAnimMontage* DanceSlinkyMontageFemale; // 0xcf0(0x08)
	struct UAnimMontage* DanceJungleStepMontageFemale; // 0xcf8(0x08)
	struct UAnimMontage* DanceMoonslideMontageFemale; // 0xd00(0x08)
	struct UAnimMontage* DanceFlossMontageFemale; // 0xd08(0x08)
	struct UAnimMontage* DanceOrangeJusticeMontageFemale; // 0xd10(0x08)
	struct UAnimMontage* DanceShowtimeMontageFemale; // 0xd18(0x08)
	struct UAnimMontage* DanceScrubMontageFemale; // 0xd20(0x08)
	struct UAnimMontage* DanceTheCarltonMontageFemale; // 0xd28(0x08)
	struct UAnimMontage* DanceGangnamStyleMontageFemale; // 0xd30(0x08)
	struct UAnimMontage* DanceTechnoVikingMontageFemale; // 0xd38(0x08)
	struct UAnimMontage* DanceOhMamaMontageFemale; // 0xd40(0x08)
	struct UAnimMontage* DanceLoserMontageFemale; // 0xd48(0x08)
	struct UAnimMontage* DanceSeductionMontageFemale; // 0xd50(0x08)
	struct UAnimMontage* DanceTemptationMontageFemale; // 0xd58(0x08)
	struct UAnimMontage* DanceVogueMontageFemale; // 0xd60(0x08)
	struct UAnimMontage* DanceTangoMontageFemale; // 0xd68(0x08)
	struct UAnimMontage* DanceDiscoSpinMontageFemale; // 0xd70(0x08)
	struct UAnimMontage* DanceJaggerMontageFemale; // 0xd78(0x08)
	struct UAnimMontage* DanceSlayinAliveMontageFemale; // 0xd80(0x08)
	struct UAnimMontage* DancePuppetDanceMontageFemale; // 0xd88(0x08)
	struct UAnimMontage* DanceGunsBlazingMontageFemale; // 0xd90(0x08)
	struct UAnimMontage* DanceStepUpMontageFemale; // 0xd98(0x08)
	struct UAnimMontage* DancePartyAnimalMontageFemale; // 0xda0(0x08)
	struct UAnimMontage* DanceHardbassMontageFemale; // 0xda8(0x08)
	struct UAnimMontage* DanceKazachokMontageFemale; // 0xdb0(0x08)
	struct UAnimMontage* DancePaddleDanceMontageFemale; // 0xdb8(0x08)
	struct UAnimMontage* DanceMoonwalkMontageFemale; // 0xdc0(0x08)
	struct UAnimMontage* DanceSneakyMontageFemale; // 0xdc8(0x08)
	struct UAnimMontage* DanceDeathDropMontageFemale; // 0xdd0(0x08)
	struct UAnimMontage* DanceFelineMontageFemale; // 0xdd8(0x08)
	struct UAnimMontage* DanceGoddessMontageFemale; // 0xde0(0x08)
	struct UAnimMontage* DanceSultanaMontageFemale; // 0xde8(0x08)
	struct UAnimMontage* DanceSerpentsCharmMontageFemale; // 0xdf0(0x08)
	struct UAnimMontage* DanceBootyliciousMontageFemale; // 0xdf8(0x08)
	struct UAnimMontage* DanceBubbleBounceMontageFemale; // 0xe00(0x08)
	struct UAnimMontage* InjectSelfMontage; // 0xe08(0x08)
	struct UAnimMontage* InjectOtherMontage; // 0xe10(0x08)
	struct UAnimMontage* HalloweenGesture1Montage; // 0xe18(0x08)
	struct UAnimMontage* HalloweenGesture2Montage; // 0xe20(0x08)
	struct UAnimMontage* HalloweenGesture3Montage; // 0xe28(0x08)
	struct UAnimMontage* HalloweenGesture4Montage; // 0xe30(0x08)
	struct UAnimMontage* RemoveWeedMontage; // 0xe38(0x08)
	struct UAnimMontage* RemoveWeedWithHoeMontage; // 0xe40(0x08)
	struct UAnimMontage* ApplyPesticideMontage; // 0xe48(0x08)
	struct UAnimMontage* AddFertilizerMontage; // 0xe50(0x08)
	struct UAnimMontage* PlantSeedMontage; // 0xe58(0x08)
	struct UAnimMontage* RemovePlantMontage; // 0xe60(0x08)
	struct UAnimMontage* DestroyGardenMontage; // 0xe68(0x08)
	struct UAnimMontage* WashEyesMontage; // 0xe70(0x08)
	struct FPrisonerTurnMontageDescription TurnMontageDescription; // 0xe78(0x30)
	float MinThrowItemSpeed; // 0xea8(0x04)
	float MaxThrowItemSpeed; // 0xeac(0x04)
	float ScreenCenterDotOpacityDecreaseDelay; // 0xeb0(0x04)
	float ScreenCenterDotOpacityDecrease; // 0xeb4(0x04)
	float ScreenCenterDotOpacityIncrease; // 0xeb8(0x04)
	float ShortThrowReductionMultiplier; // 0xebc(0x04)
	float ThrowingObstacleCheckOffset; // 0xec0(0x04)
	float ThrowingObstacleOffset; // 0xec4(0x04)
	struct TMap<enum class EThrowingAnimationType, struct FThrowingAnimationSet> ThrowingAnimationSets; // 0xec8(0x50)
	float respawnTime; // 0xf18(0x04)
	char pad_F1C[0x4]; // 0xf1c(0x04)
	struct UCurveFloat* FocusModeZoomEffectCurve; // 0xf20(0x08)
	float FocusModeZoomSpeed; // 0xf28(0x04)
	char pad_F2C[0x4]; // 0xf2c(0x04)
	struct TArray<struct UCircularMenuSegmentInfo*> SelfInteractionSegmentInfo; // 0xf30(0x10)
	struct UCircularMenuSegmentIcons* SelfInteractionVoicelineIcons; // 0xf40(0x08)
	struct TArray<struct UCharacterVoiceline*> CharacterDeluxeVoicelines; // 0xf48(0x10)
	struct TArray<struct UCharacterVoiceline*> CharacterVoicelines; // 0xf58(0x10)
	struct TSoftClassPtr<UObject> PrisonWalletComponentClass; // 0xf68(0x28)
	struct UPrisonerMusicPlayerComponent* MusicPlayerComponentClass; // 0xf90(0x08)
	float WetnessReachableFromSkyChecksInterval; // 0xf98(0x04)
	float DedicatedServerHandleFootstepInterval; // 0xf9c(0x04)
	float PlayInstrumentEventNetworkDelay; // 0xfa0(0x04)
	float PlayInstrumentExitStateDuration; // 0xfa4(0x04)
	struct UPrisonerBodyCompositionMorphsComputer* BodyCompositionMorphsComputer; // 0xfa8(0x08)
	struct FVector PenisLocationDefault; // 0xfb0(0x0c)
	struct FVector PenisLocationFat; // 0xfbc(0x0c)
	struct FVector PenisLocationMuscular; // 0xfc8(0x0c)
	struct FVector PenisLocationSkinny; // 0xfd4(0x0c)
	float PenisMinSizeHandleZ; // 0xfe0(0x04)
	float PenisMaxSizeHandleZ; // 0xfe4(0x04)
	float PenisGrowOverTimeThreshold; // 0xfe8(0x04)
	float UnmountSpeedThresholdForRagdoll; // 0xfec(0x04)
	float MountTiltAngleForRagdoll; // 0xff0(0x04)
	float RareSuicideAnimationChance; // 0xff4(0x04)
	struct UCurveFloat* FaceAgingIntensityCurve; // 0xff8(0x08)
	float HairGrowthTotalTime; // 0x1000(0x04)
	float FacialHairGrowthTotalTime; // 0x1004(0x04)
	float HairUpdateRate; // 0x1008(0x04)
	char pad_100C[0x4]; // 0x100c(0x04)
	struct UCurveFloat* ShortHairCurve; // 0x1010(0x08)
	struct UCurveFloat* MediumHairCurve; // 0x1018(0x08)
	struct UCurveFloat* MediumHairPDOCurve; // 0x1020(0x08)
	struct UCurveFloat* MediumHairTopOpacityCurve; // 0x1028(0x08)
	struct UCurveFloat* LongHairCurve; // 0x1030(0x08)
	struct UCurveFloat* LongHairPDOCurve; // 0x1038(0x08)
	struct UCurveFloat* LongHairTopOpacityCurve; // 0x1040(0x08)
	struct UCurveFloat* AfroHairCurve; // 0x1048(0x08)
	struct UCurveFloat* ShortFacialHairCurve; // 0x1050(0x08)
	struct UCurveFloat* MediumFacialHairCurve; // 0x1058(0x08)
	struct UCurveFloat* MediumFacialHairPDOCurve; // 0x1060(0x08)
	struct UCurveFloat* MediumFacialHairTopOpacityCurve; // 0x1068(0x08)
	struct UCurveFloat* LongFacialHairCurve; // 0x1070(0x08)
	struct UCurveFloat* LongFacialHairPDOCurve; // 0x1078(0x08)
	struct UCurveFloat* LongFacialHairTopOpacityCurve; // 0x1080(0x08)
	float MaxRestingAngle; // 0x1088(0x04)
	float GenericAcceptanceRadius; // 0x108c(0x04)
	float DistanceWhereRotationStarts; // 0x1090(0x04)
	char pad_1094[0x4]; // 0x1094(0x04)
	struct UNotificationDescription* AutoTriggeredVomitingNotification; // 0x1098(0x08)
	struct UNotificationDescription* AutoTriggeredUrinationNotification; // 0x10a0(0x08)
	struct UNotificationDescription* AutoTriggeredDefecationNotification; // 0x10a8(0x08)
	struct UPrisonerUIDataImpl* UIDataClass; // 0x10b0(0x08)
	struct UAkAudioEvent* DefecateNakedForcedAudioEvent; // 0x10b8(0x08)
	struct UAkAudioEvent* DefecateClothedForcedAudioEvent; // 0x10c0(0x08)
	struct UAkAudioEvent* DefecateNakedForcedDiarrheaAudioEvent; // 0x10c8(0x08)
	struct UAkAudioEvent* DefecateClothedForcedDiarrheaAudioEvent; // 0x10d0(0x08)
	struct UAkAudioEvent* UrinateForcedAudioEvent; // 0x10d8(0x08)
	struct UAkAudioEvent* StartBlowingAirAudioEvent; // 0x10e0(0x08)
	struct UAkAudioEvent* StopBlowingAirAudioEvent; // 0x10e8(0x08)
	struct UAkAudioEvent* PhoenixTearsEffectSound; // 0x10f0(0x08)
	struct UParticleSystem* DiarrheaParticleSystem; // 0x10f8(0x08)
	struct AActor* FecesClass; // 0x1100(0x08)
	struct FName FecesSocketName; // 0x1108(0x08)
	struct FPrisonerCommonData_ResponseIdles ResponseIdles; // 0x1110(0x08)
	struct UAkAudioEvent* SkydivingStartAudioEvent; // 0x1118(0x08)
	struct UAkAudioEvent* SkydivingStopAudioEvent; // 0x1120(0x08)
	struct UAkAudioEvent* IntroCinematicScreamAudioEvent; // 0x1128(0x08)
	float MaxSpeedWhileMountedToBeRelevantForHunting; // 0x1130(0x04)
	float EncounterSpawnMaxMovementSpeed; // 0x1134(0x04)
	struct USurvivalTipEventListener* SurvivalTipEventListenerClass; // 0x1138(0x08)
	struct FRuntimeFloatCurve MaxRunningSpeedMultiplierVsStaminaRatio; // 0x1140(0x88)
	struct FRuntimeFloatCurve RunningActionDifficultyMultiplierVsStaminaRatio; // 0x11c8(0x88)
};

// Class ConZ.PrisonerConsumableDigestionHandler_Exhaustion
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerConsumableDigestionHandler_Exhaustion : UConsumableDigestionHandler {
	float _exhaustionAmountToRecoverPerSubstancesAbsorbedMass; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class ConZ.PrisonerConsumableUserData
// Size: 0x48 (Inherited: 0x28)
struct UPrisonerConsumableUserData : UConsumableUserData {
	enum class EGameResourceConsumptionMethod ConsumptionMethod; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct AItem* ItemClass; // 0x30(0x08)
	struct UGameResourceType* ResourceTypeClass; // 0x38(0x08)
	float RadiationAmount; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.PrisonerCorpse
// Size: 0x750 (Inherited: 0x220)
struct APrisonerCorpse : AActor {
	char pad_220[0x20]; // 0x220(0x20)
	struct USkeletalMeshComponent* RagdollMeshComponent; // 0x240(0x08)
	struct FName MainBoneName; // 0x248(0x08)
	struct FCorpseSkeletalMeshRepData RagdollMeshData; // 0x250(0x70)
	struct TArray<struct FCorpseStaticMeshRepData> StaticMeshData; // 0x2c0(0x10)
	struct TArray<struct FCorpseSkeletalMeshRepData> SkeletalMeshData; // 0x2d0(0x10)
	float SearchTime; // 0x2e0(0x04)
	float PhysicsPauseDistance; // 0x2e4(0x04)
	float AutoDestructTime; // 0x2e8(0x04)
	float AutoDestructRadius; // 0x2ec(0x04)
	struct TArray<struct AActor*> Attachements; // 0x2f0(0x10)
	struct TArray<struct FName> AttachementSockets; // 0x300(0x10)
	struct TArray<struct FCorpseStaticMeshRepData> StrippedStaticMeshData; // 0x310(0x10)
	struct TArray<struct FCorpseSkeletalMeshRepData> StrippedSkeletalMeshData; // 0x320(0x10)
	struct UStaticMesh* CensorMesh; // 0x330(0x08)
	struct UMaterialInstance* CensorMaterial; // 0x338(0x08)
	struct UStaticMeshComponent* GenitalsCensorComponent; // 0x340(0x08)
	struct UStaticMeshComponent* LeftBreastCensorComponent; // 0x348(0x08)
	struct UStaticMeshComponent* RightBreastCensorComponent; // 0x350(0x08)
	float _mass; // 0x358(0x04)
	float _fatness; // 0x35c(0x04)
	float _muscliness; // 0x360(0x04)
	float _skinniness; // 0x364(0x04)
	float _breastSize; // 0x368(0x04)
	float _penisSize; // 0x36c(0x04)
	bool _penisShowing; // 0x370(0x01)
	bool _breastsShowing; // 0x371(0x01)
	char pad_372[0x36]; // 0x372(0x36)
	struct FBuoyancy _serverBuoyancy; // 0x3a8(0x70)
	struct FBuoyancy _buoyancy; // 0x418(0x70)
	struct UCharacterMesh* _censorClass; // 0x488(0x08)
	char pad_490[0x240]; // 0x490(0x240)
	struct FCorpsePoseData PoseData; // 0x6d0(0x40)
	struct TArray<struct AItem*> inventory; // 0x710(0x10)
	bool _atRest; // 0x720(0x01)
	char pad_721[0x1f]; // 0x721(0x1f)
	struct UChoppingRecipeDataAsset* _choppingRecipeDataAsset; // 0x740(0x08)
	char pad_748[0x8]; // 0x748(0x08)

	void OnRep_PoseData(); // Function ConZ.PrisonerCorpse.OnRep_PoseData // (Final|Native|Private) // @ game+0x24b5e10
	void OnRep_PenisShowing(); // Function ConZ.PrisonerCorpse.OnRep_PenisShowing // (Final|Native|Private) // @ game+0x24b5db0
	void OnRep_Inventory(); // Function ConZ.PrisonerCorpse.OnRep_Inventory // (Final|Native|Private) // @ game+0x24b5df0
	void OnRep_BreastsShowing(); // Function ConZ.PrisonerCorpse.OnRep_BreastsShowing // (Final|Native|Private) // @ game+0x24b5db0
	void OnRep_AtRest(); // Function ConZ.PrisonerCorpse.OnRep_AtRest // (Final|Native|Private) // @ game+0x24b5d90
	void Multicast_ClonePoseLocally(struct AConZCharacter* sourceCharacter); // Function ConZ.PrisonerCorpse.Multicast_ClonePoseLocally // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23cdb90
	struct USkeletalMeshComponent* GetHairMeshComponent(); // Function ConZ.PrisonerCorpse.GetHairMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b5d60
	struct USkeletalMeshComponent* GetFacialHairMeshComponent(); // Function ConZ.PrisonerCorpse.GetFacialHairMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b5d30
};

// Class ConZ.PrisonerCreationUIController
// Size: 0x4b0 (Inherited: 0x28)
struct UPrisonerCreationUIController : UObject {
	char pad_28[0x31c]; // 0x28(0x31c)
	struct FName _editedPrisonerActorTag; // 0x344(0x08)
	struct FName _mugshotPrisonerActorTag; // 0x34c(0x08)
	char pad_354[0x4]; // 0x354(0x04)
	struct TArray<struct UCharacterMesh*> _characterMeshesToAddOntoMugshotPrisoner; // 0x358(0x10)
	struct FGameplayTag _femaleTag; // 0x368(0x08)
	struct FGameplayTag _maleTag; // 0x370(0x08)
	char pad_378[0x138]; // 0x378(0x138)
};

// Class ConZ.PrisonerUIDebugData
// Size: 0x38 (Inherited: 0x28)
struct UPrisonerUIDebugData : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.PrisonerDebugUI_SkillItem
// Size: 0x38 (Inherited: 0x28)
struct UPrisonerDebugUI_SkillItem : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.PrisonerDebugUI_SkillEntryWidget
// Size: 0x278 (Inherited: 0x268)
struct UPrisonerDebugUI_SkillEntryWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UTextBlock* _nameTextBlock; // 0x270(0x08)
};

// Class ConZ.PrisonerDebugUI_BodyConditionItem
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerDebugUI_BodyConditionItem : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerDebugUI_BodyStateItem
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerDebugUI_BodyStateItem : UPrisonerDebugUI_BodyConditionItem {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerDebugUI_BodyEffectItem
// Size: 0x38 (Inherited: 0x30)
struct UPrisonerDebugUI_BodyEffectItem : UPrisonerDebugUI_BodyConditionItem {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.PrisonerDebugUI_BodyConditionEntryWidget
// Size: 0x278 (Inherited: 0x268)
struct UPrisonerDebugUI_BodyConditionEntryWidget : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)
	struct UTextBlock* _nameTextBlock; // 0x270(0x08)
};

// Class ConZ.PrisonerDebugUI_MainWidget
// Size: 0x2f8 (Inherited: 0x268)
struct UPrisonerDebugUI_MainWidget : UUserWidget {
	struct UComboBoxString* _prisonersComboBox; // 0x268(0x08)
	struct UTextBlock* _lifeTimeTextBlock; // 0x270(0x08)
	struct UTextBlock* _strengthTextBlock; // 0x278(0x08)
	struct UTextBlock* _constitutionTextBlock; // 0x280(0x08)
	struct UTextBlock* _dexterityTextBlock; // 0x288(0x08)
	struct UTextBlock* _intelligenceTextBlock; // 0x290(0x08)
	struct UTextBlock* _healthTextBlock; // 0x298(0x08)
	struct UTextBlock* _bodyTemperatureTextBlock; // 0x2a0(0x08)
	struct UTextBlock* _apparentTemperatureTextBlock; // 0x2a8(0x08)
	struct UTextBlock* _clothesTemperatureTextBlock; // 0x2b0(0x08)
	struct UListView* _skillsListView; // 0x2b8(0x08)
	struct UListView* _bodyConditionsListView; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)
	struct UPrisonerUIData* _data; // 0x2d0(0x08)
	struct UPrisonerUITooltipCache* _tooltipCache; // 0x2d8(0x08)
	char pad_2E0[0x4]; // 0x2e0(0x04)
	float _dataRequestTimerInterval; // 0x2e4(0x04)
	char pad_2E8[0x4]; // 0x2e8(0x04)
	float _dataApplyTimerInterval; // 0x2ec(0x04)
	struct UTextBlock* _prisonerBodyEffects; // 0x2f0(0x08)

	void PrisonersComboBox_SelectionChanged(struct FString SelectedItem, enum class ESelectInfo SelectionType); // Function ConZ.PrisonerDebugUI_MainWidget.PrisonersComboBox_SelectionChanged // (Final|Native|Private) // @ game+0x24b5e30
};

// Class ConZ.PrisonerEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UPrisonerEntitySetup : UEntitySetup {
};

// Class ConZ.PrisonerExcretionUserData
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerExcretionUserData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerFirstPersonSubviewComponent
// Size: 0x8c0 (Inherited: 0x7d0)
struct UPrisonerFirstPersonSubviewComponent : UCameraComponent {
	char pad_7D0[0x8]; // 0x7d0(0x08)
	enum class EPrisonerFirstPersonSubview SubviewID; // 0x7d8(0x01)
	char pad_7D9[0x3]; // 0x7d9(0x03)
	float WeaponFOV; // 0x7dc(0x04)
	struct FVector WeaponFoveationOffset; // 0x7e0(0x0c)
	float MinViewPitch; // 0x7ec(0x04)
	float MaxViewPitch; // 0x7f0(0x04)
	float MinViewYaw; // 0x7f4(0x04)
	float MaxViewYaw; // 0x7f8(0x04)
	char pad_7FC[0x4]; // 0x7fc(0x04)
	struct UCurveLinearColor* MinMaxViewPitchByYawAndSpeed; // 0x800(0x08)
	struct UCurveVector* LocalSpaceOffsetByYaw; // 0x808(0x08)
	struct UCurveVector* LocalSpaceOffsetByPitch; // 0x810(0x08)
	struct UCurveVector* ActorSpaceOffsetByYaw; // 0x818(0x08)
	struct UCurveVector* ActorSpaceOffsetByPitch; // 0x820(0x08)
	struct FName LockRotationToSocketAnimationCurveName; // 0x828(0x08)
	struct FName LockRotationToSocketSocketName; // 0x830(0x08)
	float ProbeSize; // 0x838(0x04)
	enum class ECollisionChannel ProbeChannel; // 0x83c(0x01)
	bool DoCollisionTest; // 0x83d(0x01)
	char pad_83E[0x2]; // 0x83e(0x02)
	struct FName AnimationBobbingTXCurveName; // 0x840(0x08)
	struct FName AnimationBobbingTYCurveName; // 0x848(0x08)
	struct FName AnimationBobbingTZCurveName; // 0x850(0x08)
	struct FName AnimationBobbingRYCurveName; // 0x858(0x08)
	struct FName AnimationBobbingRPCurveName; // 0x860(0x08)
	struct FName AnimationBobbingRRCurveName; // 0x868(0x08)
	float AnimationBobbingTScale; // 0x870(0x04)
	float AnimationBobbingRScale; // 0x874(0x04)
	struct FName AnimationCameraOffsetTXCurveName; // 0x878(0x08)
	struct FName AnimationCameraOffsetTYCurveName; // 0x880(0x08)
	struct FName AnimationCameraOffsetTZCurveName; // 0x888(0x08)
	struct FName AnimationCameraOffsetRYCurveName; // 0x890(0x08)
	struct FName AnimationCameraOffsetRPCurveName; // 0x898(0x08)
	struct FName AnimationCameraOffsetRRCurveName; // 0x8a0(0x08)
	float AnimationCameraOffsetTScale; // 0x8a8(0x04)
	float AnimationCameraOffsetRScale; // 0x8ac(0x04)
	float BlendInDuration; // 0x8b0(0x04)
	float BlendOutDuration; // 0x8b4(0x04)
	float _minFactorForPrisonerHiding; // 0x8b8(0x04)
	char pad_8BC[0x4]; // 0x8bc(0x04)
};

// Class ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent
// Size: 0x8c0 (Inherited: 0x8c0)
struct UPrisonerFirstPersonVehicleAimingSubviewComponent : UPrisonerFirstPersonSubviewComponent {
};

// Class ConZ.PrisonerViewComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UPrisonerViewComponent : UActorComponent {
	float DefaultSubviewBlendDuration; // 0xb0(0x04)
	char pad_B4[0x1c]; // 0xb4(0x1c)
};

// Class ConZ.PrisonerFirstPersonViewComponent
// Size: 0x210 (Inherited: 0xd0)
struct UPrisonerFirstPersonViewComponent : UPrisonerViewComponent {
	struct TArray<enum class EPrisonerFirstPersonSubview> SubviewBlendingPriorities; // 0xd0(0x10)
	struct TArray<struct FPrisonerFirstPersonSubviewBlendOverride> SubviewBlendOverrides; // 0xe0(0x10)
	char pad_F0[0x120]; // 0xf0(0x120)
};

// Class ConZ.PrisonerFishingComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UPrisonerFishingComponent : UCharacterActionComponent {
	enum class EFishingState _fishingState; // 0xc0(0x01)
	char pad_C1[0xf]; // 0xc1(0x0f)

	void OnRep_FishingState(); // Function ConZ.PrisonerFishingComponent.OnRep_FishingState // (Final|Native|Private) // @ game+0x24b5dd0
};

// Class ConZ.PrisonerForeignSubstance
// Size: 0x140 (Inherited: 0xa8)
struct UPrisonerForeignSubstance : UForeignSubstance {
	bool _shouldConstitutionAffectAbsorptionCapacity; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct FRuntimeFloatCurve _absorptionCapacityModifierVsConstitutionRatio; // 0xb0(0x88)
	bool _shouldBeDiscardedWithPhoenixTears; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
};

// Class ConZ.PrisonerForeignSubstance_Antibiotics
// Size: 0x140 (Inherited: 0x140)
struct UPrisonerForeignSubstance_Antibiotics : UPrisonerForeignSubstance {
};

// Class ConZ.PrisonerForeignSubstance_AttributeModifier
// Size: 0x160 (Inherited: 0x140)
struct UPrisonerForeignSubstance_AttributeModifier : UPrisonerForeignSubstance {
	float _strengthModifier; // 0x140(0x04)
	float _strengthChange; // 0x144(0x04)
	float _constitutionModifier; // 0x148(0x04)
	float _constitutionChange; // 0x14c(0x04)
	float _dexterityModifier; // 0x150(0x04)
	float _dexterityChange; // 0x154(0x04)
	float _intelligenceModifier; // 0x158(0x04)
	float _intelligenceChange; // 0x15c(0x04)
};

// Class ConZ.PrisonerForeignSubstance_Painkillers
// Size: 0x140 (Inherited: 0x140)
struct UPrisonerForeignSubstance_Painkillers : UPrisonerForeignSubstance {
};

// Class ConZ.PrisonerForeignSubstance_Toxins
// Size: 0x140 (Inherited: 0x140)
struct UPrisonerForeignSubstance_Toxins : UPrisonerForeignSubstance {
};

// Class ConZ.PrisonerForeignSubstanceStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerForeignSubstanceStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.PrisonerHallucinationIllusion
// Size: 0x220 (Inherited: 0x220)
struct APrisonerHallucinationIllusion : AActor {
};

// Class ConZ.PrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas
// Size: 0x240 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SeeFirearmsAsSticksAndBananas : APrisonerHallucinationIllusion {
	struct UStaticMesh* _bananaMesh; // 0x220(0x08)
	struct UStaticMesh* _mediumStickMesh; // 0x228(0x08)
	char pad_230[0x10]; // 0x230(0x10)
};

// Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny
// Size: 0x270 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SeeOtherPlayersExtremelyFatOrSkinny : APrisonerHallucinationIllusion {
	char pad_220[0x50]; // 0x220(0x50)
};

// Class ConZ.PrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks
// Size: 0x250 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SeeOtherPlayersWithWeirdMasks : APrisonerHallucinationIllusion {
	struct TArray<struct UStaticMesh*> _maskMeshes; // 0x220(0x10)
	struct TArray<struct UCharacterMesh*> _maskCharacterMeshes; // 0x230(0x10)
	char pad_240[0x10]; // 0x240(0x10)
};

// Class ConZ.PrisonerHallucinationIllusion_SpawnCompanionCrow
// Size: 0x520 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SpawnCompanionCrow : APrisonerHallucinationIllusion {
	struct ACompanionCrow* _crowClass; // 0x220(0x08)
	struct FName _crowAttachSocketName; // 0x228(0x08)
	struct FTransform _attachedCrowRelativeTransform; // 0x230(0x30)
	struct FFloatInterval _responseIdleInitialInterval; // 0x260(0x08)
	struct FFloatInterval _responseIdleInterval; // 0x268(0x08)
	struct TArray<struct UAnimMontage*> _responseIdleMontages; // 0x270(0x10)
	struct FVector _flyoffDirection; // 0x280(0x0c)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct FRuntimeFloatCurve _flyoffSpeedVsTime; // 0x290(0x88)
	struct UAkAudioEvent* _flyoffAudioEvent; // 0x318(0x08)
	struct FRuntimeFloatCurve _cruisingSpeedVsTime; // 0x320(0x88)
	struct FRuntimeFloatCurve _cruisingRotationRateVsTime; // 0x3a8(0x88)
	struct FRuntimeFloatCurve _rollVsSteerRate; // 0x430(0x88)
	float _landingDuration; // 0x4b8(0x04)
	char pad_4BC[0x4]; // 0x4bc(0x04)
	struct UAkAudioEvent* _landingAudioEvent; // 0x4c0(0x08)
	struct UAkAudioEvent* _landedAudioEvent; // 0x4c8(0x08)
	struct UAnimMontage* _landedMontage; // 0x4d0(0x08)
	char pad_4D8[0x48]; // 0x4d8(0x48)
};

// Class ConZ.PrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup
// Size: 0x288 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SpawnFakeItemsThatDisappearOnPickup : APrisonerHallucinationIllusion {
	struct TArray<struct AFakeItem*> _fakeItemClasses; // 0x220(0x10)
	float _fakeItemSpawnChance; // 0x230(0x04)
	char pad_234[0x54]; // 0x234(0x54)
};

// Class ConZ.PrisonerHallucinationIllusion_SpawnMiniatureZombies
// Size: 0x288 (Inherited: 0x220)
struct APrisonerHallucinationIllusion_SpawnMiniatureZombies : APrisonerHallucinationIllusion {
	struct TArray<struct AZombie2*> _zombieClasses; // 0x220(0x10)
	struct AZombieAIController2* _aiControllerClass; // 0x230(0x08)
	int32_t _zombieGroupSize; // 0x238(0x04)
	int32_t _maxZombiesToSpawnPerTick; // 0x23c(0x04)
	int32_t _maxZombiesToDestroyPerTick; // 0x240(0x04)
	struct FFloatInterval _zombieGroupSpawnInterval; // 0x244(0x08)
	struct FFloatInterval _zombieSpawnDistance; // 0x24c(0x08)
	float _maxZombieDistance; // 0x254(0x04)
	float _maxTimeWithoutZombieLineOfSight; // 0x258(0x04)
	float _zombieSoundAttenuationScalingFactor; // 0x25c(0x04)
	char pad_260[0x18]; // 0x260(0x18)
	struct TArray<struct AController*> _zombieControllers; // 0x278(0x10)
};

// Class ConZ.PrisonerHUD
// Size: 0xa00 (Inherited: 0x348)
struct APrisonerHUD : AConZHUD {
	char pad_348[0x28]; // 0x348(0x28)
	struct UHudWidget* HudWidget; // 0x370(0x08)
	struct UDamageDirectionIndicator* DamageDirectionIndicator; // 0x378(0x08)
	bool ShouldDrawCrosshair; // 0x380(0x01)
	bool ShouldDrawScreenCenterDot; // 0x381(0x01)
	char pad_382[0x6]; // 0x382(0x06)
	struct UMaterialInterface* TacticsMaterial; // 0x388(0x08)
	struct ULoadingIconWidget* LoadingIconWidget; // 0x390(0x08)
	struct USpawnScreen* SpawnScreenWidget; // 0x398(0x08)
	struct UWaypointScreenWidget* WaypointScreenWidget; // 0x3a0(0x08)
	struct FMulticastInlineDelegate OnShouldShowExtendedWidgetTooltipChanged; // 0x3a8(0x10)
	struct UFont* _HUDFont; // 0x3b8(0x08)
	struct UFont* _HUDFontScope; // 0x3c0(0x08)
	char pad_3C8[0x28]; // 0x3c8(0x28)
	struct UTexture* _mapPropertiesTexture; // 0x3f0(0x08)
	float _customMapBorderWidth; // 0x3f8(0x04)
	struct FLinearColor _customMapBorderColor; // 0x3fc(0x10)
	char pad_40C[0x4]; // 0x40c(0x04)
	struct UPlantingPanel* _plantingPanelWidgetClass; // 0x410(0x08)
	struct UAdminPlantPanel* _adminPlantPanelWidgetClass; // 0x418(0x08)
	struct UPlantStatusIndicatorWidget* _plantStatusIndicatorWidgetClass; // 0x420(0x08)
	struct FGameplayTagContainer _traderCategories; // 0x428(0x20)
	struct UPauseMenuUIController* _pauseMenuUIControllerClass; // 0x448(0x08)
	struct UItemsCraftingUIController* _itemsCraftingUIControllerClass; // 0x450(0x08)
	struct UBaseBuildingUIController* _baseBuildingUIControllerClass; // 0x458(0x08)
	struct UCookingUIController* _cookingUIControllerClass; // 0x460(0x08)
	struct UChatUIController* _chatUIControllerClass; // 0x468(0x08)
	char pad_470[0xc8]; // 0x470(0xc8)
	struct UObject* _activeUIContextType; // 0x538(0x08)
	struct UConZUniqueObjectCacher* _existingUIContexts; // 0x540(0x08)
	char pad_548[0x50]; // 0x548(0x50)
	struct UUserWidget* _scoreboardWidget; // 0x598(0x08)
	char pad_5A0[0x12]; // 0x5a0(0x12)
	bool _shouldDrawOtherPlayerInfo; // 0x5b2(0x01)
	bool _isLeftMouseButtonPressed; // 0x5b3(0x01)
	char pad_5B4[0x34]; // 0x5b4(0x34)
	struct FMapHUDPrisonerObject _prisonerMapHUDObject; // 0x5e8(0x40)
	struct FMapHUDHomeLocationObject _homeLocationMapHUDObject; // 0x628(0x48)
	struct FMapHUDWorldEventsObject _worldEventsMapHUDObject; // 0x670(0x18)
	struct FMapHUDOtherPlayersObject _otherPlayersMapHUDObjects; // 0x688(0xc0)
	struct FMapHUDDroneObject _droneMapHUDObject; // 0x748(0x38)
	struct FMapHUDVehiclesObject _vehicleMapHUDObjects; // 0x780(0xc0)
	char pad_840[0x20]; // 0x840(0x20)
	struct FMapHUDFlagsObject _flagMapHUDObjects; // 0x860(0xc0)
	char pad_920[0x20]; // 0x920(0x20)
	struct FMapHUDQuestObject _questMapHUDObject; // 0x940(0x80)
	char pad_9C0[0x10]; // 0x9c0(0x10)
	struct UItemSplitWidget* _itemSplitWidget; // 0x9d0(0x08)
	struct URaidProtectionSelectionWidget* _raidProtectionSelectionWidget; // 0x9d8(0x08)
	char pad_9E0[0x10]; // 0x9e0(0x10)
	struct UAkAudioEvent* _onMapOpened; // 0x9f0(0x08)
	struct UAkAudioEvent* _onMapClosed; // 0x9f8(0x08)

	void ShouldShowExtendedWidgetTooltipChanged__DelegateSignature(bool ShouldShowExtendedWidgetTooltip); // DelegateFunction ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltipChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x297fc00
	bool ShouldShowExtendedWidgetTooltip(); // Function ConZ.PrisonerHUD.ShouldShowExtendedWidgetTooltip // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b9810
	void SetHUDMode(enum class EPrisonerHUDMode newMode); // Function ConZ.PrisonerHUD.SetHUDMode // (Final|Native|Public|BlueprintCallable) // @ game+0x24b9790
	void SendVehicleMarkerDataDataRequest(); // Function ConZ.PrisonerHUD.SendVehicleMarkerDataDataRequest // (Final|Native|Private) // @ game+0x24b9600
	void ReceiveVehicleMarkerData(struct UVehicleMarkersData* Data); // Function ConZ.PrisonerHUD.ReceiveVehicleMarkerData // (Final|Native|Private) // @ game+0x24b9360
	bool IsShowingSpawnScreen(); // Function ConZ.PrisonerHUD.IsShowingSpawnScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b92a0
	bool IsShowingLoading(); // Function ConZ.PrisonerHUD.IsShowingLoading // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b9270
	struct UWaypointScreenWidget* GetWaypointScreenWidget(); // Function ConZ.PrisonerHUD.GetWaypointScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x24b91a0
	struct UCanvasPanel* GetHudWidgetCanvasPanel(); // Function ConZ.PrisonerHUD.GetHudWidgetCanvasPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x24b9070
	enum class EPrisonerHUDMode GetHUDMode(); // Function ConZ.PrisonerHUD.GetHUDMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b9040
};

// Class ConZ.PrisonerInventoryComponent
// Size: 0x3a0 (Inherited: 0xb0)
struct UPrisonerInventoryComponent : UActorComponent {
	char pad_B0[0x88]; // 0xb0(0x88)
	float AddSelectionDuration; // 0x138(0x04)
	float AddSelectionReplicationDelay; // 0x13c(0x04)
	float TickFrequency; // 0x140(0x04)
	char pad_144[0xc]; // 0x144(0x0c)
	struct UStaticMesh* _chipMesh; // 0x150(0x08)
	struct UQuickAccessManager* _quickAccessManager; // 0x158(0x08)
	char pad_160[0x18]; // 0x160(0x18)
	struct TMap<struct TWeakObjectPtr<struct AItem>, uint32_t> _vicinityItems; // 0x178(0x50)
	char pad_1C8[0x18]; // 0x1c8(0x18)
	struct TMap<struct FGameplayTag, struct FClothesPartSet> _clothesPartsToDamageByMeleeAttackCapsuleAttachment; // 0x1e0(0x50)
	struct TArray<struct TSoftClassPtr<UObject>> _characterMeshClassesSorted; // 0x230(0x10)
	struct AClothesItem* _parachuteClass; // 0x240(0x08)
	struct UInventoryContainerClothes* _inventoryClothes; // 0x248(0x08)
	struct UInventoryContainerHandsHolsters* _inventoryHandsHolsters; // 0x250(0x08)
	char pad_258[0x148]; // 0x258(0x148)

	void UnEquipStolenClothesItemOnServer(struct APrisoner* stolenPrisoner, struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.UnEquipStolenClothesItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24b9bb0
	void UnEquipClothesItemOnServer(struct AClothesItem* Item, bool placeInInventory, bool shouldEverDrop); // Function ConZ.PrisonerInventoryComponent.UnEquipClothesItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24b9a90
	void UnEquipClothesItem(struct AClothesItem* Item, bool placeInInventory, bool shouldEverDrop); // Function ConZ.PrisonerInventoryComponent.UnEquipClothesItem // (Final|Native|Public|BlueprintCallable) // @ game+0x24b9980
	void SpawnAndDropItemAtOnServer(struct UContainerItemDescriptor* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PrisonerInventoryComponent.SpawnAndDropItemAtOnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24b9840
	void Server_SendQuickAccessState(struct TArray<struct FQuickAccessSlotData> Data); // Function ConZ.PrisonerInventoryComponent.Server_SendQuickAccessState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2441950
	void Server_InitializeItemVirtualizedInventory(struct UObject* Item, struct UObject* container); // Function ConZ.PrisonerInventoryComponent.Server_InitializeItemVirtualizedInventory // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24b96c0
	void Server_DropAllItems(struct TArray<struct AItem*> Items); // Function ConZ.PrisonerInventoryComponent.Server_DropAllItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24b9620
	void Server_AutoAddAllItems(struct TArray<struct AItem*> Items); // Function ConZ.PrisonerInventoryComponent.Server_AutoAddAllItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x245dc00
	void RemoveStolenItemOnServer(struct APrisoner* stolenPrisoner, struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.RemoveStolenItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24b9530
	struct TScriptInterface<IInventoryNode> RemoveStacks(int32_t stacksToSplit); // Function ConZ.PrisonerInventoryComponent.RemoveStacks // (Native|Public|BlueprintCallable) // @ game+0x24b9480
	void RemoveItemOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.RemoveItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24b93f0
	void OnEquippedClothesDestroyed(struct AActor* Actor); // Function ConZ.PrisonerInventoryComponent.OnEquippedClothesDestroyed // (Final|Native|Public) // @ game+0x24b92d0
	bool IsClothesItemEquipped(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.IsClothesItemEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x24b91d0
	int32_t GetStacksCount(); // Function ConZ.PrisonerInventoryComponent.GetStacksCount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b9160
	float GetMaxHairLength(enum class EConZGender Gender); // Function ConZ.PrisonerInventoryComponent.GetMaxHairLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b90d0
	float GetMaxFacialHairLength(); // Function ConZ.PrisonerInventoryComponent.GetMaxFacialHairLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b90a0
	float GetGearWeightFast(); // Function ConZ.PrisonerInventoryComponent.GetGearWeightFast // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b9010
	float GetGearWeight(); // Function ConZ.PrisonerInventoryComponent.GetGearWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b8fe0
	struct TArray<struct AClothesItem*> GetEquippedClothes(); // Function ConZ.PrisonerInventoryComponent.GetEquippedClothes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b8f60
	void EquipItemInHandsOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipItemInHandsOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x241aa60
	void EquipClothesItemOnServer(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipClothesItemOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24b8ce0
	void EquipClothesItem(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.EquipClothesItem // (Final|Native|Public|BlueprintCallable) // @ game+0x24b8c50
	void DropItemOnServer(struct AItem* Item); // Function ConZ.PrisonerInventoryComponent.DropItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24b8bc0
	void DropItemOnClient(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PrisonerInventoryComponent.DropItemOnClient // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x24b8a80
	void DropItemAtOnServer(struct AItem* Item, struct FVector Location, struct FRotator Rotation); // Function ConZ.PrisonerInventoryComponent.DropItemAtOnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x24b8940
	void Client_SendQuickAccessState(struct TArray<struct FQuickAccessClientSyncData> Data, bool enableSendingState); // Function ConZ.PrisonerInventoryComponent.Client_SendQuickAccessState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24b8850
	bool CanStackWith(struct UObject* Item); // Function ConZ.PrisonerInventoryComponent.CanStackWith // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b87b0
	bool CanStack(); // Function ConZ.PrisonerInventoryComponent.CanStack // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24b8770
	bool CanEquipClothesItem(struct AClothesItem* Item); // Function ConZ.PrisonerInventoryComponent.CanEquipClothesItem // (Final|Native|Public|BlueprintCallable) // @ game+0x24b86d0
	bool CanAddItem(struct AItem* Item, bool tryToJoinItems); // Function ConZ.PrisonerInventoryComponent.CanAddItem // (Final|Native|Public|BlueprintCallable) // @ game+0x24b8600
	void AutoAddItemOnServer(struct AItem* Item, bool tryToJoinItems); // Function ConZ.PrisonerInventoryComponent.AutoAddItemOnServer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x24632b0
	void AddStack(struct TScriptInterface<IInventoryNode> Item); // Function ConZ.PrisonerInventoryComponent.AddStack // (Native|Public|BlueprintCallable) // @ game+0x24b8550
	void AddDefaultEquipment(); // Function ConZ.PrisonerInventoryComponent.AddDefaultEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x24b8530
};

// Class ConZ.PrisonerLifeIndicatorsSprite
// Size: 0x378 (Inherited: 0x268)
struct UPrisonerLifeIndicatorsSprite : UUserWidget {
	struct UVerticalBox* _mainVerticalBox; // 0x268(0x08)
	struct USizeBox* _sizeBox; // 0x270(0x08)
	struct UDualArcedProgressBar* _dualProgressBarBreathing; // 0x278(0x08)
	struct UGradedArcedProgressBar* _gradedProgressBarActionDifficulty; // 0x280(0x08)
	struct UCircularProgressBar* CircularProgressBarSpritesHLTH; // 0x288(0x08)
	float _healthRelevancyThreshold; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
	struct UCircularProgressBar* CircularProgressBarSpritesSTA; // 0x298(0x08)
	float _staminaRelevancyThreshold; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UCircularProgressBar* CircularProgressBarSpritesNRG; // 0x2a8(0x08)
	float _energyRelevancyThreshold; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct UCircularProgressBar* CircularProgressBarSpritesHYD; // 0x2b8(0x08)
	float _hydrationRelevancyThreshold; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct UCircularProgressBar* CircularProgressBarSpritesNoise; // 0x2c8(0x08)
	float _noiseRelevancyThreshold; // 0x2d0(0x04)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct UCircularProgressBar* CircularProgressBarSpritesAIPerception; // 0x2d8(0x08)
	float _aiPerceptionRelevancyThreshold; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct UImage* _overburdenedWarningImage; // 0x2e8(0x08)
	char pad_2F0[0x78]; // 0x2f0(0x78)
	struct UWidgetAnimation* NewAnimation_2; // 0x368(0x08)
	struct APrisoner* _prisoner; // 0x370(0x08)
};

// Class ConZ.PrisonerSpawnEquipment
// Size: 0xa8 (Inherited: 0x30)
struct UPrisonerSpawnEquipment : UDataAsset {
	struct FGameplayTagQuery Condition; // 0x30(0x48)
	struct TSoftClassPtr<UObject> ItemClass; // 0x78(0x28)
	enum class EPrisonerItemEquipType EquipType; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	enum class EBiomeType BiomeRequriment; // 0xa4(0x04)
};

// Class ConZ.PrisonerLoadout
// Size: 0x98 (Inherited: 0x30)
struct UPrisonerLoadout : UDataAsset {
	struct AItem* primary; // 0x30(0x08)
	struct TArray<struct AItem*> primaryAttachments; // 0x38(0x10)
	struct AItem* secondary; // 0x48(0x08)
	struct TArray<struct AItem*> secondaryAttachments; // 0x50(0x10)
	struct AItem* tertiary; // 0x60(0x08)
	struct TArray<struct AItem*> tertiaryAttachments; // 0x68(0x10)
	struct TArray<struct AItem*> outfit; // 0x78(0x10)
	struct TArray<struct AItem*> support; // 0x88(0x10)

	void EquipPrisoner(struct APrisoner* Prisoner, struct TArray<struct AItem*>& givenItems, bool ClearEquipment, bool applyOutfit, bool applyItems); // Function ConZ.PrisonerLoadout.EquipPrisoner // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24b8d70
};

// Class ConZ.PrisonerMakeoverUIController
// Size: 0x188 (Inherited: 0x28)
struct UPrisonerMakeoverUIController : UObject {
	char pad_28[0x160]; // 0x28(0x160)
};

// Class ConZ.PrisonerMeshManager
// Size: 0x8d0 (Inherited: 0x230)
struct UPrisonerMeshManager : UCharacterMeshManager {
	char pad_230[0x18]; // 0x230(0x18)
	struct USkeletalMeshComponent* _prisonerFPShadowMeshComponent; // 0x248(0x08)
	char pad_250[0x2e8]; // 0x250(0x2e8)
	struct USkeletalMesh* _prisonerFPShadowMesh; // 0x538(0x08)
	struct FGameplayTagContainer _bodyPartVsCharacterMeshSlotMapping[0xc]; // 0x540(0x180)
	struct FGameplayTagContainer _wettablePartVsCharacterMeshSlotMapping[0x4]; // 0x6c0(0x80)
	struct FGameplayTagContainer _clothesPartVsCharacterMeshSlotMapping[0xb]; // 0x740(0x160)
	struct UCharacterMesh* _characterBodyClass; // 0x8a0(0x08)
	struct TArray<struct UCharacterMesh*> _classesIgnoringFPVHiding; // 0x8a8(0x10)
	struct FGameplayTag _highHeelsTag; // 0x8b8(0x08)
	char pad_8C0[0x10]; // 0x8c0(0x10)
};

// Class ConZ.PrisonerMetabolismUIData
// Size: 0x100 (Inherited: 0x28)
struct UPrisonerMetabolismUIData : UObject {
	char pad_28[0xd8]; // 0x28(0xd8)
};

// Class ConZ.PrisonerMetabolismUIDataImpl
// Size: 0x3c8 (Inherited: 0x100)
struct UPrisonerMetabolismUIDataImpl : UPrisonerMetabolismUIData {
	char pad_100[0x2c8]; // 0x100(0x2c8)
};

// Class ConZ.PrisonerMovementCommonData
// Size: 0x380 (Inherited: 0x30)
struct UPrisonerMovementCommonData : UDataAsset {
	struct FPrisonerGroundStanceData StandingData; // 0x30(0x0c)
	struct FPrisonerGroundStanceData CrouchingData; // 0x3c(0x0c)
	struct FPrisonerGroundStanceData ProneData; // 0x48(0x0c)
	struct FPrisonerAquaticModeData SwimmingData; // 0x54(0x0c)
	struct FPrisonerAquaticModeData DivingData; // 0x60(0x0c)
	struct FPrisonerAerialPoseData FallData; // 0x6c(0x18)
	struct FPrisonerAerialPoseData SkydiveSlowData; // 0x84(0x18)
	struct FPrisonerAerialPoseData SkydiveFastData; // 0x9c(0x18)
	struct FPrisonerAerialPoseData HandsBoundData; // 0xb4(0x18)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct TMap<struct FPrisonerAerialPosePair, struct FPrisonerAerialPoseTransition> AerialPoseTransitionMap; // 0xd0(0x50)
	float BaseJumpZVelocity; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct FRuntimeFloatCurve JumpZVelocityMultiplierVsGroundSpeedMps; // 0x128(0x88)
	struct FRuntimeFloatCurve JumpZVelocityMultiplierVsGroundSlopeDegrees; // 0x1b0(0x88)
	struct FRuntimeFloatCurve JumpStaminaDrainVsTotalMassKg; // 0x238(0x88)
	struct TArray<struct FWindowMantlingAnimationInfo> WindowMantlingAnimations; // 0x2c0(0x10)
	struct TArray<struct FLedgeMantlingAnimationInfo> LedgeMantlingAnimations; // 0x2d0(0x10)
	float MaxFallingSpeedForMantling; // 0x2e0(0x04)
	float MaxFallingSpeedForLadderClimbing; // 0x2e4(0x04)
	float MaxHorzontalDistanceToLadderForClimbing; // 0x2e8(0x04)
	float LadderClimbingMaxSpeed; // 0x2ec(0x04)
	int32_t NumberOfLadderPeekSteps; // 0x2f0(0x04)
	struct FVector PostLadderClimbingLaunchVelocity; // 0x2f4(0x0c)
	float MaxHeightToJumpOffLadderSafely; // 0x300(0x04)
	float MaxGroundSlopeAllowedForLadderDisembarking; // 0x304(0x04)
	float DefaultBuoyancy; // 0x308(0x04)
	float DesiredNonWaterImmersedCapsuleHeightWhenSwimmingOnSurface; // 0x30c(0x04)
	float NonWaterImmersedHeightToStartSwimming; // 0x310(0x04)
	float NonWaterImmersedHeightToStopSwimming; // 0x314(0x04)
	float DiveInAttemptTime; // 0x318(0x04)
	float WaterFriction; // 0x31c(0x04)
	float LongFallSpeedThreshold; // 0x320(0x04)
	float TimeToSpendFallingWithHandsBound; // 0x324(0x04)
	float BodyRotationCorrectionRate; // 0x328(0x04)
	struct FVector BodyRotationDrag; // 0x32c(0x0c)
	struct FFloatInterval RotationRateMultiplierVsPerformanceRatio; // 0x338(0x08)
	struct FFloatInterval MantlingSpeedMultiplierVsPerformanceRatio; // 0x340(0x08)
	struct TArray<struct FConditionalPrisonerMovementParams> _groundMovementParams; // 0x348(0x10)
	struct TArray<struct FConditionalPrisonerMovementParams> _aquaticMovementParams; // 0x358(0x10)
	float _maxWalkingSpeed; // 0x368(0x04)
	float _maxJoggingSpeed; // 0x36c(0x04)
	float _maxRunningSpeed; // 0x370(0x04)
	float _maxLimpingWalkingSpeed; // 0x374(0x04)
	float _maxLimpingJoggingSpeed; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
};

// Class ConZ.PrisonerMovementComponent
// Size: 0x1550 (Inherited: 0xda0)
struct UPrisonerMovementComponent : UConZCharacterMovementComponent {
	char pad_DA0[0x30]; // 0xda0(0x30)
	float CapsuleHalfHeightWhenCrouched; // 0xdd0(0x04)
	float CapsuleHalfHeightWhenProne; // 0xdd4(0x04)
	float CapsuleHalfHeightWhenSwimming; // 0xdd8(0x04)
	bool UseCustomRotationRate; // 0xddc(0x01)
	bool RequestedPathMovesForwardOnly; // 0xddd(0x01)
	char pad_DDE[0x2]; // 0xdde(0x02)
	float RotationInterpolationSpeed; // 0xde0(0x04)
	char pad_DE4[0x4]; // 0xde4(0x04)
	struct UCurveFloat* MaxRotationRateCurve; // 0xde8(0x08)
	float RotationRateMultiplierWhenStanding; // 0xdf0(0x04)
	float RotationRateMultiplierWhenCrouched; // 0xdf4(0x04)
	float RotationRateMultiplierWhenProne; // 0xdf8(0x04)
	float RotationRateMultiplierWhenSwimming; // 0xdfc(0x04)
	float RotationRateMultiplierWhenSwimmingAndDiving; // 0xe00(0x04)
	float GroundSlopeAngleForSpeedScalingSmoothingRate; // 0xe04(0x04)
	float GroundSlopeAngleSmoothingRate; // 0xe08(0x04)
	bool UseSmoothedGroundSlopeAngleForPaceChecks; // 0xe0c(0x01)
	char pad_E0D[0x3]; // 0xe0d(0x03)
	float MinGroundSlopeAngleForJogging; // 0xe10(0x04)
	float MaxGroundSlopeAngleForJogging; // 0xe14(0x04)
	float MinGroundSlopeAngleForRunning; // 0xe18(0x04)
	float MaxGroundSlopeAngleForRunning; // 0xe1c(0x04)
	float MinSpeedModifierWhenMovingUphill; // 0xe20(0x04)
	float BaseJumpZVelocity; // 0xe24(0x04)
	char pad_E28[0x38]; // 0xe28(0x38)
	float MaxAbsoluteVelocityZAfterClimb; // 0xe60(0x04)
	float StaminaUnitsToDrainOnJump; // 0xe64(0x04)
	struct UCurveFloat* JumpZVelocityMultiplierVsSpeed; // 0xe68(0x08)
	struct UCurveFloat* JumpZVelocityMultiplierVsGroundSlopeAngle; // 0xe70(0x08)
	struct TArray<struct FPrisonerClimbAnimationInfo> ClimbAnimations; // 0xe78(0x10)
	float ClimbingStaminaDrainModifier; // 0xe88(0x04)
	bool ClimbingDebuggingEnabled; // 0xe8c(0x01)
	char pad_E8D[0x3]; // 0xe8d(0x03)
	float ClimbingDebuggingDrawTime; // 0xe90(0x04)
	float LadderClimbingMaxSpeed; // 0xe94(0x04)
	float MaxHorzDistanceToLadderForClimbing; // 0xe98(0x04)
	int32_t NumberOfLadderPeekSteps; // 0xe9c(0x04)
	struct FVector PostLadderClimbingLaunchVelocity; // 0xea0(0x0c)
	float MaxHeightToJumpOffLadderSafely; // 0xeac(0x04)
	float MaxFallingSpeedAllowedForLadderClimbing; // 0xeb0(0x04)
	float MaxGroundSlopeAllowedForLadderClimbing; // 0xeb4(0x04)
	struct UCurveFloat* MaxHorzDistanceToWindowForClimbingVsSpeed; // 0xeb8(0x08)
	struct TArray<struct FWindowClimbingAnimationInfo> WindowClimbingAnimations; // 0xec0(0x10)
	float WaterImmersionToStartSwimming; // 0xed0(0x04)
	float WaterImmersionToStopSwimming; // 0xed4(0x04)
	float MinimalSwimmingTime; // 0xed8(0x04)
	float SwimmingToWalkingDepthTolerance; // 0xedc(0x04)
	float SwimmingToWalkingCapsuleCollisionTolerance; // 0xee0(0x04)
	float DesiredWaterImmersion; // 0xee4(0x04)
	float DesiredWaterImmersionCorrectionAcceleration; // 0xee8(0x04)
	char pad_EEC[0x4]; // 0xeec(0x04)
	struct UCurveFloat* DesiredWaterImmersionCorrectionAccelerationCurve; // 0xef0(0x08)
	float WaterResurfaceAcceleration; // 0xef8(0x04)
	struct FVector2D OceanWavesAcceleration; // 0xefc(0x08)
	float WaterImmersionAfterWhichRunningIsDisabled; // 0xf04(0x04)
	float ImmersionCorrectionDownMultiplier; // 0xf08(0x04)
	float RotationRateMultiplierWhenImmersedInWater; // 0xf0c(0x04)
	float DiveInAccelerationScale; // 0xf10(0x04)
	float DiveInAccelerationTimeout; // 0xf14(0x04)
	float DiveInCollisionCheckOffset; // 0xf18(0x04)
	float BuoyancyWhenDiving; // 0xf1c(0x04)
	float BuoyancyWhenNotDiving; // 0xf20(0x04)
	float RotationRatePitchWhenDiving; // 0xf24(0x04)
	float SurfaceTensionForce; // 0xf28(0x04)
	float MaxWindSpeedForAerialDrag; // 0xf2c(0x04)
	float LongFallSpeedThreshold; // 0xf30(0x04)
	float BodyRotationCorrectionRate; // 0xf34(0x04)
	struct FVector BodyRotationDrag; // 0xf38(0x0c)
	float DistanceToAutomaticallyOpenParachuteAt; // 0xf44(0x04)
	float MinimalFallingTimeBeforeAutomaticParachuteCanOpen; // 0xf48(0x04)
	struct FWaterForceWhenSwimmingParams WaterForceWhenSwimmingParams; // 0xf4c(0x14)
	char pad_F60[0x4]; // 0xf60(0x04)
	struct FVector_NetQuantizeNormal _repAccelerationNormal; // 0xf64(0x0c)
	char pad_F70[0x34]; // 0xf70(0x34)
	float _timeToSpendFallingBeforeHandsAreFree; // 0xfa4(0x04)
	float _maxLatencyForStanceCheckInterpolation; // 0xfa8(0x04)
	char pad_FAC[0xb0]; // 0xfac(0xb0)
	char _repBuoyancy; // 0x105c(0x01)
	char pad_105D[0x1a3]; // 0x105d(0x1a3)
	struct FLadderInfoRepData _ladderInfoRepData; // 0x1200(0x50)
	char pad_1250[0x226]; // 0x1250(0x226)
	uint16_t _aerialPoseBlendRepData; // 0x1476(0x02)
	char pad_1478[0xd8]; // 0x1478(0xd8)

	void Server_SetDivingState(enum class EPrisonerDivingState Value); // Function ConZ.PrisonerMovementComponent.Server_SetDivingState // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24bddf0
	void Server_SetDesiredAerialPose(enum class EPrisonerAerialPose Pose, bool Force); // Function ConZ.PrisonerMovementComponent.Server_SetDesiredAerialPose // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24bdd10
	void Server_ClimbOffLadder(); // Function ConZ.PrisonerMovementComponent.Server_ClimbOffLadder // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x240b3d0
	void OnRep_Buoyancy(); // Function ConZ.PrisonerMovementComponent.OnRep_Buoyancy // (Final|Native|Private) // @ game+0x24bdcf0
	void OnRep_AerialPoseBlend(); // Function ConZ.PrisonerMovementComponent.OnRep_AerialPoseBlend // (Final|Native|Private) // @ game+0x24bdcd0
	void OnRep_AccelerationNormal(); // Function ConZ.PrisonerMovementComponent.OnRep_AccelerationNormal // (Final|Native|Private) // @ game+0xbbc480
	void NetMulticast_SetDesiredAerialPose(enum class EPrisonerAerialPose Pose, bool Force); // Function ConZ.PrisonerMovementComponent.NetMulticast_SetDesiredAerialPose // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24bdbf0
	void NetMulticast_SetBodyRotation(struct FQuat Rotation, struct FVector AngularVelocity); // Function ConZ.PrisonerMovementComponent.NetMulticast_SetBodyRotation // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x24bdb10
	void NetMulticast_PlayAnimMontageIfSimulatedProxy(struct UAnimMontage* Montage, float PlayRate); // Function ConZ.PrisonerMovementComponent.NetMulticast_PlayAnimMontageIfSimulatedProxy // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24bda30
	void NetMulticast_FinishAnchoring(bool anchoringSucceded); // Function ConZ.PrisonerMovementComponent.NetMulticast_FinishAnchoring // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24bd9a0
	bool IsFlyingOrFalling(); // Function ConZ.PrisonerMovementComponent.IsFlyingOrFalling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd970
	bool IsDiving(); // Function ConZ.PrisonerMovementComponent.IsDiving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd940
	struct FWindowInfo GetWindowInfo(); // Function ConZ.PrisonerMovementComponent.GetWindowInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd880
	float GetTimeSpentInAir(); // Function ConZ.PrisonerMovementComponent.GetTimeSpentInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd850
	enum class EPrisonerMovementPace GetMaxAllowedPace(); // Function ConZ.PrisonerMovementComponent.GetMaxAllowedPace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd820
	float GetGroundSlopeAngleSmoothed(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleSmoothed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd7f0
	float GetGroundSlopeAngleForSpeedScaling(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngleForSpeedScaling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd7c0
	float GetGroundSlopeAngle(); // Function ConZ.PrisonerMovementComponent.GetGroundSlopeAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd790
	float GetDivingDepth(); // Function ConZ.PrisonerMovementComponent.GetDivingDepth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd760
	float GetDesiredCoursePitchAngle(); // Function ConZ.PrisonerMovementComponent.GetDesiredCoursePitchAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd730
	float GetDesiredCourseAngle(); // Function ConZ.PrisonerMovementComponent.GetDesiredCourseAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd700
	enum class EPrisonerMovementMode GetCustomMovementMode(); // Function ConZ.PrisonerMovementComponent.GetCustomMovementMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd6d0
	float GetCurrentTimeSpentInAir(); // Function ConZ.PrisonerMovementComponent.GetCurrentTimeSpentInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd6a0
	struct FClimbableObstacleInfo GetClimbableObstacleInfo(); // Function ConZ.PrisonerMovementComponent.GetClimbableObstacleInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd640
	float GetActualCourseAngle(); // Function ConZ.PrisonerMovementComponent.GetActualCourseAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd610
	bool DetectWindow(struct FWindowInfo& Result); // Function ConZ.PrisonerMovementComponent.DetectWindow // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd4d0
	bool DetectClimbableObstacle(struct FClimbableObstacleInfo& Result); // Function ConZ.PrisonerMovementComponent.DetectClimbableObstacle // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd3c0
	bool ClimbWindow(struct FWindowInfo& WindowInfo); // Function ConZ.PrisonerMovementComponent.ClimbWindow // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24bd280
	bool CanClimbWindow(); // Function ConZ.PrisonerMovementComponent.CanClimbWindow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24bd250
};

// Class ConZ.PrisonerMovementSettings
// Size: 0x1a0 (Inherited: 0x30)
struct UPrisonerMovementSettings : UDataAsset {
	struct FPrisonerMovementSettings_Ground Ground; // 0x30(0x1c)
	struct FPrisonerMovementSettings_Ground GroundMI; // 0x4c(0x1c)
	struct FPrisonerMovementSettings_Air Air; // 0x68(0xf8)
	struct FPrisonerMovementSettings_Water Water; // 0x160(0x0c)
	struct FPrisonerMovementSettings_Misc Misc; // 0x16c(0x18)
	struct FPrisonerMovementSettings_Misc MiscMI; // 0x184(0x18)
	char pad_19C[0x4]; // 0x19c(0x04)
};

// Class ConZ.PrisonerMovementDebugWidget
// Size: 0x280 (Inherited: 0x268)
struct UPrisonerMovementDebugWidget : UUserWidget {
	struct UTextBlock* ServerText; // 0x268(0x08)
	struct UTextBlock* ClientText; // 0x270(0x08)
	struct APrisoner* Prisoner; // 0x278(0x08)
};

// Class ConZ.PrisonerMusicPlayerComponent
// Size: 0x150 (Inherited: 0xc0)
struct UPrisonerMusicPlayerComponent : UCharacterActionComponent {
	struct FName _musicRootFolder; // 0xc0(0x08)
	float _volumeChangeRate; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	int64_t _fileSizeLimitInMB; // 0xd0(0x08)
	struct UAkAudioEvent* _turnOnAudioEvent; // 0xd8(0x08)
	struct UAkAudioEvent* _turnOffAudioEvent; // 0xe0(0x08)
	struct URuntimeAudioImporterLibrary* _importerLibrary; // 0xe8(0x08)
	struct UAudioComponent* _audioComponent; // 0xf0(0x08)
	struct URadioComponent* _radioComponent; // 0xf8(0x08)
	struct TWeakObjectPtr<struct UImportedSoundWave> _playingSoundWave; // 0x100(0x08)
	char pad_108[0x48]; // 0x108(0x48)

	void OnResult(struct URuntimeAudioImporterLibrary* RuntimeAudioImporterObjectRef, struct UImportedSoundWave* SoundWaveRef, enum class ETranscodingStatus Status); // Function ConZ.PrisonerMusicPlayerComponent.OnResult // (Final|Native|Private) // @ game+0x24c24f0
	void OnRadioTrackStarted(); // Function ConZ.PrisonerMusicPlayerComponent.OnRadioTrackStarted // (Final|Native|Private) // @ game+0x24c2490
	void OnAudioPlaybackFinished(); // Function ConZ.PrisonerMusicPlayerComponent.OnAudioPlaybackFinished // (Final|Native|Private) // @ game+0x24c2470
};

// Class ConZ.PrisonerNameChangeRequest
// Size: 0x48 (Inherited: 0x28)
struct UPrisonerNameChangeRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.PrisonerNameChangeResponse
// Size: 0x38 (Inherited: 0x28)
struct UPrisonerNameChangeResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.PrisonerPhotoModeAnimInstance
// Size: 0x380 (Inherited: 0x2c0)
struct UPrisonerPhotoModeAnimInstance : UAnimInstance {
	float PoseBlendTime; // 0x2b8(0x04)
	struct TArray<struct UAnimSequence*> _unarmedPoses; // 0x2c0(0x10)
	struct TArray<struct UAnimSequence*> _riflePoses; // 0x2d0(0x10)
	struct TArray<struct UAnimSequence*> _handgunPoses; // 0x2e0(0x10)
	struct TArray<struct UAnimSequence*> _meleePoses; // 0x2f0(0x10)
	struct TArray<struct UAnimSequence*> _lowerBodyPoses; // 0x300(0x10)
	struct TArray<struct UAnimSequence*> _facialExpressions; // 0x310(0x10)
	struct TArray<struct UAnimSequence*> _maleFacialExpressions; // 0x320(0x10)
	struct TArray<struct UAnimSequence*> _femaleFacialExpressions; // 0x330(0x10)
	enum class EPrisonerPhotoModePoseGroup _poseGroup; // 0x340(0x01)
	float _spineCurvature; // 0x344(0x04)
	float _spineRotation; // 0x348(0x04)
	int32_t _upperBodyPoseIndex; // 0x34c(0x04)
	int32_t _lowerBodyPoseIndex; // 0x350(0x04)
	int32_t _lastUpperBodyPoseIndex; // 0x354(0x04)
	int32_t _lastLowerBodyPoseIndex; // 0x358(0x04)
	int32_t _facialExpressionIndex; // 0x35c(0x04)
	int32_t _lastFacialExpressionIndex; // 0x360(0x04)
	char pad_365[0x3]; // 0x365(0x03)
	struct UAnimSequenceBase* _correctionPose; // 0x368(0x08)
	float _upperBodyPoseBlendAlpha; // 0x370(0x04)
	float _lowerBodyPoseBlendAlpha; // 0x374(0x04)
	float _facialExpressionBlendAlpha; // 0x378(0x04)
	bool _isFemale; // 0x37c(0x01)
	char pad_37D[0x3]; // 0x37d(0x03)

	struct UAnimSequence* GetLastFacialExpression(); // Function ConZ.PrisonerPhotoModeAnimInstance.GetLastFacialExpression // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24c2440
	struct UAnimSequence* GetCurrentFacialExpression(); // Function ConZ.PrisonerPhotoModeAnimInstance.GetCurrentFacialExpression // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24c2410
};

// Class ConZ.PrisonerPrisonWalletComponent
// Size: 0xf0 (Inherited: 0xc0)
struct UPrisonerPrisonWalletComponent : UCharacterActionComponent {
	struct TArray<struct AItem*> _deluxeItems; // 0xc0(0x10)
	struct TArray<struct AItem*> _milestoneEventItems; // 0xd0(0x10)
	enum class EPrisonWalletChoiceType _milestoneItemChoiceType; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	int32_t _lastMilestone; // 0xe4(0x04)
	char pad_E8[0x8]; // 0xe8(0x08)
};

// Class ConZ.PrisonerResponseIdle
// Size: 0x98 (Inherited: 0x28)
struct UPrisonerResponseIdle : UObject {
	struct TArray<struct UAnimMontage*> Montages; // 0x28(0x10)
	float PreMontageDelay; // 0x38(0x04)
	float PostMontageDelay; // 0x3c(0x04)
	float CooldownDuration; // 0x40(0x04)
	bool CanBeUsedWhenItemIsInHands; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	struct TSet<enum class EPrisonerAnimationSet> CombatibleAnimationsSets; // 0x48(0x50)
};

// Class ConZ.PrisonerResponseIdle_StaminaInRange
// Size: 0xa8 (Inherited: 0x98)
struct UPrisonerResponseIdle_StaminaInRange : UPrisonerResponseIdle {
	struct FFloatRange StaminaRatioRange; // 0x98(0x10)
};

// Class ConZ.PrisonerResponseIdle_BodyConditionOrSymptomPresence
// Size: 0xb0 (Inherited: 0x98)
struct UPrisonerResponseIdle_BodyConditionOrSymptomPresence : UPrisonerResponseIdle {
	struct UPrisonerBodyConditionOrSymptom* BodyConditionOrSymptom; // 0x98(0x08)
	struct FInt32Range SeverityLevels; // 0xa0(0x10)
};

// Class ConZ.PrisonerResponseIdle_NeedToUrinate
// Size: 0x98 (Inherited: 0x98)
struct UPrisonerResponseIdle_NeedToUrinate : UPrisonerResponseIdle {
};

// Class ConZ.PrisonerResponseIdle_NeedToDefecate
// Size: 0x98 (Inherited: 0x98)
struct UPrisonerResponseIdle_NeedToDefecate : UPrisonerResponseIdle {
};

// Class ConZ.PrisonerRestingComponent
// Size: 0x120 (Inherited: 0xc0)
struct UPrisonerRestingComponent : UCharacterActionComponent {
	struct FPrisonerRestingData _restingData; // 0xc0(0x18)
	struct FPrisonerRestingDataAutonomous _restingDataAutonomous; // 0xd8(0x1c)
	char pad_F4[0x2c]; // 0xf4(0x2c)

	void OnRep_RestingDataAutonomous(); // Function ConZ.PrisonerRestingComponent.OnRep_RestingDataAutonomous // (Final|Native|Private) // @ game+0x24c24d0
	void OnRep_RestingData(); // Function ConZ.PrisonerRestingComponent.OnRep_RestingData // (Final|Native|Private) // @ game+0x24c24b0
};

// Class ConZ.TeleportUserData
// Size: 0x28 (Inherited: 0x28)
struct UTeleportUserData : UObject {
};

// Class ConZ.PrisonerTeleportUserData
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerTeleportUserData : UTeleportUserData {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerShotsFiredTrackerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UPrisonerShotsFiredTrackerComponent : UActorComponent {
	char pad_B0[0x4]; // 0xb0(0x04)
	int32_t _repNumShotsFired; // 0xb4(0x04)
	char pad_B8[0x8]; // 0xb8(0x08)

	void OnRep_NumShotsFired(); // Function ConZ.PrisonerShotsFiredTrackerComponent.OnRep_NumShotsFired // (Final|Native|Private) // @ game+0x24c5e50
	void Client_SetWidgetVisibilityAndReset(bool Visibility); // Function ConZ.PrisonerShotsFiredTrackerComponent.Client_SetWidgetVisibilityAndReset // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x23f9e50
};

// Class ConZ.PrisonerSkillComponent
// Size: 0x2c0 (Inherited: 0xb0)
struct UPrisonerSkillComponent : UActorComponent {
	struct TArray<struct FPrisonerInitialSkillInfo> InitialSkills; // 0xb0(0x10)
	float TickFrequency; // 0xc0(0x04)
	char pad_C4[0xc]; // 0xc4(0x0c)
	struct TArray<struct USkill*> _skills; // 0xd0(0x10)
	struct TArray<struct USkillAction*> _actions; // 0xe0(0x10)
	char pad_F0[0xa8]; // 0xf0(0xa8)
	struct USkillClasses* _skillClasses; // 0x198(0x08)
	struct TArray<struct AItem*> _lastSurroundingItems; // 0x1a0(0x10)
	char pad_1B0[0x88]; // 0x1b0(0x88)
	struct TArray<struct FSkillRecord> _replicatedSkills; // 0x238(0x10)
	struct TArray<struct FSkillRecord> _simProxyReplicatedSkills; // 0x248(0x10)
	char pad_258[0x54]; // 0x258(0x54)
	uint32_t _replicatedNoiseLevel; // 0x2ac(0x04)
	char pad_2B0[0x4]; // 0x2b0(0x04)
	float _skillReplicationPeriod; // 0x2b4(0x04)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void UpdateIsInFocusModeOnServer(bool isInFocus); // Function ConZ.PrisonerSkillComponent.UpdateIsInFocusModeOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x23f9e50
	void ShowWatchingWarningOnClient(); // Function ConZ.PrisonerSkillComponent.ShowWatchingWarningOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24c64e0
	void SetSkillStaminaConsumptionOnServer(struct USkill* Skill, float Consumption); // Function ConZ.PrisonerSkillComponent.SetSkillStaminaConsumptionOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24c6400
	void Server_UpdateNearbyFoliageCoverage(char nearbyFoliageCoveragePackedData); // Function ConZ.PrisonerSkillComponent.Server_UpdateNearbyFoliageCoverage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24c6380
	void Server_UpdateDetectablePrisoners(struct TArray<struct APrisoner*> deltaToAdd, struct TArray<struct APrisoner*> deltaToRemove); // Function ConZ.PrisonerSkillComponent.Server_UpdateDetectablePrisoners // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24c6280
	void Server_IncreaseSkillExperiencePoints(enum class ESkillReplicationID skillReplicationID, float Points); // Function ConZ.PrisonerSkillComponent.Server_IncreaseSkillExperiencePoints // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x24c61b0
	void SendVisiblePrisoners(); // Function ConZ.PrisonerSkillComponent.SendVisiblePrisoners // (Final|Native|Public) // @ game+0x24c6190
	void RequestNearbyFoliageUpdateOnClient(); // Function ConZ.PrisonerSkillComponent.RequestNearbyFoliageUpdateOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24c6170
	void OnRep_Skills(); // Function ConZ.PrisonerSkillComponent.OnRep_Skills // (Final|Native|Private) // @ game+0x24c5e90
	void OnRep_SimProxySkills(); // Function ConZ.PrisonerSkillComponent.OnRep_SimProxySkills // (Final|Native|Private) // @ game+0x24c5e70
	void HighlightNearbyItems(); // Function ConZ.PrisonerSkillComponent.HighlightNearbyItems // (Final|Native|Public) // @ game+0x24c5c90
	void HighlightItemOnClient(struct AItem* Item); // Function ConZ.PrisonerSkillComponent.HighlightItemOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x24c5c00
	struct TArray<struct USkill*> GetSkills(); // Function ConZ.PrisonerSkillComponent.GetSkills // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24c5b70
	void ForceSkillsReplicationOnServer(); // Function ConZ.PrisonerSkillComponent.ForceSkillsReplicationOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x241ac50
};

// Class ConZ.PrisonerSkillsUIDataImpl
// Size: 0x38 (Inherited: 0x28)
struct UPrisonerSkillsUIDataImpl : UPrisonerSkillsUIData {
	struct TArray<struct UPrisonerSkillUIData*> SkillsUIData; // 0x28(0x10)
};

// Class ConZ.PrisonerSoundComponent
// Size: 0x2f8 (Inherited: 0x128)
struct UPrisonerSoundComponent : UCharacterSoundComponent {
	float MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents; // 0x128(0x04)
	float MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents; // 0x12c(0x04)
	struct UAkAudioEvent* PeriodicInhaleAudioEvent; // 0x130(0x08)
	struct UAkAudioEvent* PeriodicExhaleAudioEvent; // 0x138(0x08)
	struct UAkAudioEvent* HoldBreathInhaleAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* HoldBreathExhaleAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* HoldBreathBreathlessExhaleAudioEvent; // 0x150(0x08)
	float MinHeartRateToPostHeartbeatAudioEvent; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
	struct UAkAudioEvent* HeartbeatAudioEvent; // 0x160(0x08)
	struct UAkAudioEvent* FootstepsAudioEvent; // 0x168(0x08)
	struct UAkAudioEvent* FootstepsEnhancerAudioEvent; // 0x170(0x08)
	float MovingThroughFoliageGateDuration; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct UAkAudioEvent* StartGenericMovingThroughFoliageAudioEvent; // 0x180(0x08)
	struct UAkAudioEvent* StopGenericMovingThroughFoliageAudioEvent; // 0x188(0x08)
	struct UAkAudioEvent* GenericOneShotMovingThroughFoliageAudioEvent; // 0x190(0x08)
	struct UAkAudioEvent* GearNoiseAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* GearNoiseAudioEventWhenInWater; // 0x1a0(0x08)
	float ItemMotionNoiseTimeToLive; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct UAkAudioEvent* StartGenericEatItemAudioEvent; // 0x1b0(0x08)
	struct UAkAudioEvent* StopGenericEatItemAudioEvent; // 0x1b8(0x08)
	struct UAkAudioEvent* StartGenericDrinkItemAudioEvent; // 0x1c0(0x08)
	struct UAkAudioEvent* StopGenericDrinkItemAudioEvent; // 0x1c8(0x08)
	struct UAkAudioEvent* StartGenericDrinkWaterAudioEvent; // 0x1d0(0x08)
	struct UAkAudioEvent* StopGenericDrinkWaterAudioEvent; // 0x1d8(0x08)
	struct UAkAudioEvent* StartGenericExamineObjectAudioEvent; // 0x1e0(0x08)
	struct UAkAudioEvent* StopGenericExamineObjectAudioEvent; // 0x1e8(0x08)
	struct UAkAudioEvent* StartGenericCraftAudioEvent; // 0x1f0(0x08)
	struct UAkAudioEvent* StopGenericCraftAudioEvent; // 0x1f8(0x08)
	struct UAkAudioEvent* StartGenericUncraftAudioEvent; // 0x200(0x08)
	struct UAkAudioEvent* StopGenericUncraftAudioEvent; // 0x208(0x08)
	struct UAkAudioEvent* StartGenericVehicleRepairAudioEvent; // 0x210(0x08)
	struct UAkAudioEvent* StopGenericVehicleRepairAudioEvent; // 0x218(0x08)
	struct UAkAudioEvent* StartWashClothAudioEvent; // 0x220(0x08)
	struct UAkAudioEvent* StopWashClothAudioEvent; // 0x228(0x08)
	struct UAkAudioEvent* StartInGameAudioEvent; // 0x230(0x08)
	struct UAkAudioEvent* StopInGameAudioEvent; // 0x238(0x08)
	struct UAkAudioEvent* CalmStateAudioEvent; // 0x240(0x08)
	struct UAkAudioEvent* IntenseStateAudioEvent; // 0x248(0x08)
	struct UAkAudioEvent* CombatStateAudioEvent; // 0x250(0x08)
	struct USoundCue* OutOfBoundsSound; // 0x258(0x08)
	struct UAkAudioEvent* ChipExplosionSound; // 0x260(0x08)
	struct UAkAudioEvent* UnconsciousnessStartAudioEvent; // 0x268(0x08)
	struct UAkAudioEvent* UnconsciousnessResetAudioEvent; // 0x270(0x08)
	char pad_278[0x48]; // 0x278(0x48)
	struct TArray<struct FActiveMovingThroughFoliageSounds> _activeMovingThroughFoliageSounds; // 0x2c0(0x10)
	char pad_2D0[0x1c]; // 0x2d0(0x1c)
	int32_t _maxNumberOfFootstepsToPlayFootstepEnhancerSound; // 0x2ec(0x04)
	int32_t _minNumberOfFootstepsToPlayFootstepEnhancerSound; // 0x2f0(0x04)
	char pad_2F4[0x4]; // 0x2f4(0x04)

	bool UpdateMovingThroughFoliageSounds(int32_t PlayingID, enum class EMotionIntensity motionIntensity); // Function ConZ.PrisonerSoundComponent.UpdateMovingThroughFoliageSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c65c0
	bool StopMovingThroughFoliageSounds(int32_t PlayingID); // Function ConZ.PrisonerSoundComponent.StopMovingThroughFoliageSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c6520
	void StopAllMovingThroughFoliageSounds(); // Function ConZ.PrisonerSoundComponent.StopAllMovingThroughFoliageSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c6500
	int32_t PlayMovingThroughFoliageSounds(struct UAkAudioEvent* StartAudioEvent, struct UAkAudioEvent* StopAudioEvent, enum class EMotionIntensity motionIntensity); // Function ConZ.PrisonerSoundComponent.PlayMovingThroughFoliageSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c6060
	void PlayGearSounds(enum class EMotionIntensity motionIntensity); // Function ConZ.PrisonerSoundComponent.PlayGearSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c5fe0
	void PlayFootstepSounds(enum class EPhysicalSurface inPhysicalSurface); // Function ConZ.PrisonerSoundComponent.PlayFootstepSounds // (Final|Native|Public|BlueprintCallable) // @ game+0x24c5f60
	void OnOutOfBoundsSoundPercentChanged(struct USoundWave* PlayingSoundWave, float PlaybackPercent); // Function ConZ.PrisonerSoundComponent.OnOutOfBoundsSoundPercentChanged // (Final|Native|Public) // @ game+0x24c5d80
	void OnBorderCrossingStateChanged(struct APrisoner* Prisoner, enum class EPrisonerBorderCrossingPenalty penalty); // Function ConZ.PrisonerSoundComponent.OnBorderCrossingStateChanged // (Final|Native|Public) // @ game+0x24c5cb0
};

// Class ConZ.PrisonerStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerStatics : UBlueprintFunctionLibrary {

	int32_t GetAdditionalPenisInchesBasedOnTotalPlayTime(struct UPrisonerCommonData* commonData); // Function ConZ.PrisonerStatics.GetAdditionalPenisInchesBasedOnTotalPlayTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24c5ae0
};

// Class ConZ.PrisonerSubview
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerSubview : UInterface {
};

// Class ConZ.PrisonerThirdPersonAerialSubviewComponent
// Size: 0x7b0 (Inherited: 0x200)
struct UPrisonerThirdPersonAerialSubviewComponent : USceneComponent {
	float FieldOfView; // 0x200(0x04)
	bool UseFieldOfViewForLOD; // 0x204(0x01)
	bool ConstrainAspectRatio; // 0x205(0x01)
	char pad_206[0x2]; // 0x206(0x02)
	float AspectRatio; // 0x208(0x04)
	float MinViewYaw; // 0x20c(0x04)
	float MaxViewYaw; // 0x210(0x04)
	float MinViewPitch; // 0x214(0x04)
	float MaxViewPitch; // 0x218(0x04)
	float PostProcessBlendWeight; // 0x21c(0x04)
	struct FPostProcessSettings PostProcessSettings; // 0x220(0x560)
	float BlendInDuration; // 0x780(0x04)
	float BlendOutDuration; // 0x784(0x04)
	float BaseOrbitDistance; // 0x788(0x04)
	float SpeedOrbitDistanceIncreaseFactor; // 0x78c(0x04)
	char pad_790[0x20]; // 0x790(0x20)
};

// Class ConZ.PrisonerThirdPersonSubviewComponent
// Size: 0x900 (Inherited: 0x290)
struct UPrisonerThirdPersonSubviewComponent : USpringArmComponent {
	char pad_290[0x8]; // 0x290(0x08)
	enum class EPrisonerThirdPersonSubview SubviewID; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	float FieldOfView; // 0x29c(0x04)
	bool UseFieldOfViewForLOD; // 0x2a0(0x01)
	bool ConstrainAspectRatio; // 0x2a1(0x01)
	char pad_2A2[0x2]; // 0x2a2(0x02)
	float AspectRatio; // 0x2a4(0x04)
	float MinViewYaw; // 0x2a8(0x04)
	float MaxViewYaw; // 0x2ac(0x04)
	float MinViewPitch; // 0x2b0(0x04)
	float MaxViewPitch; // 0x2b4(0x04)
	float LeanOffsetLeft; // 0x2b8(0x04)
	float LeanOffsetRight; // 0x2bc(0x04)
	struct FVector GlobalOffset; // 0x2c0(0x0c)
	bool MirrorAroundXZPlane; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)
	struct FVector MaxLocalOffsetWhenColliding; // 0x2d0(0x0c)
	bool ShouldConstrainTraceOriginToOwnerCapsule; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)
	float OwnerCapsuleContrainBuffer; // 0x2e0(0x04)
	struct FVector TraceOriginGlobalOffset; // 0x2e4(0x0c)
	struct FVector TraceOriginRelativeOffset; // 0x2f0(0x0c)
	float LocalOffsetCurvesBlendSpeed; // 0x2fc(0x04)
	struct FLocalOffsetCurves LocalOffsetCurves[0x2]; // 0x300(0x40)
	struct FName AnimationOffsetTZCurveName; // 0x340(0x08)
	float PostProcessBlendWeight; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct FPostProcessSettings PostProcessSettings; // 0x350(0x560)
	float BlendInDuration; // 0x8b0(0x04)
	float BlendOutDuration; // 0x8b4(0x04)
	bool ShouldScaleProbeWithFOV; // 0x8b8(0x01)
	char pad_8B9[0x1b]; // 0x8b9(0x1b)
	struct FVector _clippingPreventionOffset; // 0x8d4(0x0c)
	float _clippingPreventionSweepLength; // 0x8e0(0x04)
	float _clippingPreventionAmount; // 0x8e4(0x04)
	struct FVector _clippingPreventionTraceOffset; // 0x8e8(0x0c)
	float _minFactorForPrisonerHiding; // 0x8f4(0x04)
	char pad_8F8[0x8]; // 0x8f8(0x08)
};

// Class ConZ.PrisonerThirdPersonViewComponent
// Size: 0x200 (Inherited: 0xd0)
struct UPrisonerThirdPersonViewComponent : UPrisonerViewComponent {
	struct TArray<enum class EPrisonerThirdPersonSubview> SubviewBlendingPriorities; // 0xd0(0x10)
	struct TArray<struct FPrisonerThirdPersonSubviewBlendOverride> SubviewBlendOverrides; // 0xe0(0x10)
	char pad_F0[0x110]; // 0xf0(0x110)
};

// Class ConZ.PrisonerThrowComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UPrisonerThrowComponent : UCharacterActionComponent {
	enum class EThrowingState _throwingState; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	struct TWeakObjectPtr<struct AItem> _itemToThrow; // 0xc4(0x08)
	char pad_CC[0x4]; // 0xcc(0x04)

	void OnRep_ThrowState(); // Function ConZ.PrisonerThrowComponent.OnRep_ThrowState // (Final|Native|Private) // @ game+0x24c5eb0
};

// Class ConZ.PrisonerTradingComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UPrisonerTradingComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.PrisonerTreatmentUIController
// Size: 0x268 (Inherited: 0x28)
struct UPrisonerTreatmentUIController : UObject {
	char pad_28[0x240]; // 0x28(0x240)

	void Patient_Destroyed(struct AActor* Actor); // Function ConZ.PrisonerTreatmentUIController.Patient_Destroyed // (Final|Native|Private) // @ game+0x24c5ed0
};

// Class ConZ.PrisonerUIDataController
// Size: 0x358 (Inherited: 0x28)
struct UPrisonerUIDataController : UObject {
	char pad_28[0xa0]; // 0x28(0xa0)
	struct UPrisonerUIData* _prisonerUIData; // 0xc8(0x08)
	struct UPrisonerUITooltipCache* _tooltipCache; // 0xd0(0x08)
	char pad_D8[0x280]; // 0xd8(0x280)
};

// Class ConZ.PrisonerUIDataImpl
// Size: 0x848 (Inherited: 0x808)
struct UPrisonerUIDataImpl : UPrisonerUIData {
	char pad_808[0x30]; // 0x808(0x30)
	struct UPrisonerSkillsUIData* SkillsUIData; // 0x838(0x08)
	struct UPrisonerBodySimulationUIData* BodySimulationUIData; // 0x840(0x08)
};

// Class ConZ.PrisonerUIDataRequest
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerUIDataRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.PrisonerUIDataResponse
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerUIDataResponse : UPlayerRpcChannelServerResponse {
	struct UPrisonerUIData* _payload; // 0x28(0x08)
};

// Class ConZ.PrisonerUIDebugDataRequest
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerUIDebugDataRequest : UPlayerRpcChannelServerRequest {
};

// Class ConZ.PrisonerUIDebugDataResponse
// Size: 0x30 (Inherited: 0x28)
struct UPrisonerUIDebugDataResponse : UPlayerRpcChannelServerResponse {
	struct UPrisonerUIDebugData* _payload; // 0x28(0x08)
};

// Class ConZ.PrisonerUIStatics
// Size: 0x28 (Inherited: 0x28)
struct UPrisonerUIStatics : UBlueprintFunctionLibrary {

	float GetPrisonerStaminaRatio(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerStaminaRatio // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24cb700
	float GetPrisonerHydration(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerHydration // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24cb670
	float GetPrisonerHealthRatio(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerHealthRatio // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24cb5e0
	float GetPrisonerEnergy(struct APrisoner* Prisoner); // Function ConZ.PrisonerUIStatics.GetPrisonerEnergy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24cb550
};

// Class ConZ.PrisonerUITooltipCache
// Size: 0x1b8 (Inherited: 0x28)
struct UPrisonerUITooltipCache : UObject {
	char pad_28[0x190]; // 0x28(0x190)
};

// Class ConZ.PrisonerActionDismountWeaponFromVehicle
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionDismountWeaponFromVehicle : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionDismountWeaponFromVehicleDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionDismountWeaponFromVehicleDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerVehicleAction_ForcePush
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerVehicleAction_ForcePush : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerVehicleAction_ForcePushDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_ForcePushDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerVehicleAction_ForceUnmount
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerVehicleAction_ForceUnmount : UPrisonerAction {
};

// Class ConZ.PrisonerVehicleAction_ForceUnmountDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerVehicleAction_ForceUnmountDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerVehicleAction_InstallAttachment
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerVehicleAction_InstallAttachment : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerVehicleAction_InstallAttachmentDescription
// Size: 0x90 (Inherited: 0x38)
struct UPrisonerVehicleAction_InstallAttachmentDescription : UPrisonerActionDescription {
	struct AVehicleBase* Vehicle; // 0x38(0x08)
	char pad_40[0x50]; // 0x40(0x50)
};

// Class ConZ.PrisonerVehicleAction_ModifyAttachmentPaintjob
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerVehicleAction_ModifyAttachmentPaintjob : UPrisonerAction {
};

// Class ConZ.PrisonerVehicleAction_ModifyAttachmentPaintjobDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_ModifyAttachmentPaintjobDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerVehicleAction_Mount
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_Mount : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_MountDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_MountDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerActionMountWeaponToVehicle
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerActionMountWeaponToVehicle : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerActionMountWeaponToVehicleDescription
// Size: 0x50 (Inherited: 0x38)
struct UPrisonerActionMountWeaponToVehicleDescription : UPrisonerActionDescription {
	char pad_38[0x18]; // 0x38(0x18)
};

// Class ConZ.PrisonerVehicleAction_OpenOrCloseDoor
// Size: 0x138 (Inherited: 0x120)
struct UPrisonerVehicleAction_OpenOrCloseDoor : UPrisonerAction {
	char pad_120[0x18]; // 0x120(0x18)
};

// Class ConZ.PrisonerVehicleAction_OpenOrCloseDoorDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_OpenOrCloseDoorDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerVehicleAction_QuickInstallAttachment
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_QuickInstallAttachment : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_QuickInstallAttachmentDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerVehicleAction_QuickInstallAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x30]; // 0x38(0x30)
};

// Class ConZ.PrisonerVehicleAction_QuickRemoveAttachment
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_QuickRemoveAttachment : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_QuickRemoveAttachmentDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerVehicleAction_QuickRemoveAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x30]; // 0x38(0x30)
};

// Class ConZ.PrisonerVehicleAction_QuickRepairAttachment
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_QuickRepairAttachment : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_QuickRepairAttachmentDescription
// Size: 0x68 (Inherited: 0x38)
struct UPrisonerVehicleAction_QuickRepairAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x30]; // 0x38(0x30)
};

// Class ConZ.PrisonerVehicleAction_RemoveAttachment
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerVehicleAction_RemoveAttachment : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerVehicleAction_RemoveAttachmentDescription
// Size: 0x88 (Inherited: 0x38)
struct UPrisonerVehicleAction_RemoveAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x50]; // 0x38(0x50)
};

// Class ConZ.PrisonerVehicleAction_RepairAttachment
// Size: 0x128 (Inherited: 0x120)
struct UPrisonerVehicleAction_RepairAttachment : UPrisonerAction {
	char pad_120[0x8]; // 0x120(0x08)
};

// Class ConZ.PrisonerVehicleAction_RepairAttachmentDescription
// Size: 0x80 (Inherited: 0x38)
struct UPrisonerVehicleAction_RepairAttachmentDescription : UPrisonerActionDescription {
	char pad_38[0x48]; // 0x38(0x48)
};

// Class ConZ.PrisonerVehicleAction_SetupCarJack
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_SetupCarJack : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_SetupCarJackDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_SetupCarJackDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.PrisonerVehicleAction_SwitchMountSlot
// Size: 0x120 (Inherited: 0x120)
struct UPrisonerVehicleAction_SwitchMountSlot : UPrisonerAction {
};

// Class ConZ.PrisonerVehicleAction_SwitchMountSlotDescription
// Size: 0x40 (Inherited: 0x38)
struct UPrisonerVehicleAction_SwitchMountSlotDescription : UPrisonerActionDescription {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class ConZ.PrisonerVehicleAction_Unmount
// Size: 0x130 (Inherited: 0x120)
struct UPrisonerVehicleAction_Unmount : UPrisonerAction {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class ConZ.PrisonerVehicleAction_UnmountDescription
// Size: 0x48 (Inherited: 0x38)
struct UPrisonerVehicleAction_UnmountDescription : UPrisonerActionDescription {
	char pad_38[0x10]; // 0x38(0x10)
};

// Class ConZ.Projectile
// Size: 0x468 (Inherited: 0x220)
struct AProjectile : AActor {
	struct UStaticMeshComponent* StaticMesh; // 0x220(0x08)
	bool RotationFollowsVelocity; // 0x228(0x01)
	bool AddImpulseOnHit; // 0x229(0x01)
	char pad_22A[0x2]; // 0x22a(0x02)
	float ImpulseMultiplier; // 0x22c(0x04)
	float MaxImpulse; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct UProjectileImpactEffects* ImpactEffects; // 0x238(0x08)
	struct FProjectileData ProjectileData; // 0x240(0x60)
	float MeshScaleStartLocal; // 0x2a0(0x04)
	float MeshScaleRangeLocal; // 0x2a4(0x04)
	float MeshScaleMinLocal; // 0x2a8(0x04)
	float MeshScaleMaxLocal; // 0x2ac(0x04)
	float MeshScaleStart; // 0x2b0(0x04)
	float MeshScaleRange; // 0x2b4(0x04)
	float MeshScaleMin; // 0x2b8(0x04)
	float MeshScaleMax; // 0x2bc(0x04)
	float TraceScaleMultiplier; // 0x2c0(0x04)
	float GravityScale; // 0x2c4(0x04)
	float Sharpness; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct UAkAudioEvent* FlyByAudioEvent; // 0x2d0(0x08)
	struct FName ColorMaterialParameterName; // 0x2d8(0x08)
	struct FLinearColor InitialColor; // 0x2e0(0x10)
	struct FLinearColor FinalColor; // 0x2f0(0x10)
	int32_t MaxHitCount; // 0x300(0x04)
	float NoiseLoudnessOnHit; // 0x304(0x04)
	bool IgnoreCallingWeaponsFiringEffects; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	float ExperienceMultiplier; // 0x30c(0x04)
	bool ShouldForceStopWhenNoVelocity; // 0x310(0x01)
	bool CanEverCollide; // 0x311(0x01)
	char pad_312[0x6]; // 0x312(0x06)
	struct UNiagaraSystem* TrailNiagaraSystem; // 0x318(0x08)
	struct UParticleSystem* WaterSplashParticleSystem; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)
	struct AActor* _directlyHitActor; // 0x330(0x08)
	struct UPrimitiveComponent* _directlyHitComponent; // 0x338(0x08)
	float _lifeSpanAfterStopping; // 0x340(0x04)
	bool _useFixedTimestep; // 0x344(0x01)
	char pad_345[0x3]; // 0x345(0x03)
	float _fixedTimestep; // 0x348(0x04)
	char pad_34C[0x20]; // 0x34c(0x20)
	int32_t _zeroRange; // 0x36c(0x04)
	float _windage; // 0x370(0x04)
	float _distanceTraveled; // 0x374(0x04)
	float _meshScaleFactor; // 0x378(0x04)
	char pad_37C[0x20]; // 0x37c(0x20)
	float _offsetFromBarrel; // 0x39c(0x04)
	char pad_3A0[0x4]; // 0x3a0(0x04)
	int32_t _randomSeed; // 0x3a4(0x04)
	char pad_3A8[0x60]; // 0x3a8(0x60)
	struct UNiagaraComponent* _trailNiagaraComponent; // 0x408(0x08)
	bool _doNotForceInitialReplication; // 0x410(0x01)
	char pad_411[0x3]; // 0x411(0x03)
	float _muzzleVelocity; // 0x414(0x04)
	float _initialDamageMultiplier; // 0x418(0x04)
	enum class EProjectileFlags _flags; // 0x41c(0x01)
	char pad_41D[0x3]; // 0x41d(0x03)
	float _halfAngle; // 0x420(0x04)
	char pad_424[0x4]; // 0x424(0x04)
	struct TArray<struct UPrimitiveComponent*> _ignoreComponentsArray; // 0x428(0x10)
	struct UMaterialInstanceDynamic* _materialInstance; // 0x438(0x08)
	char pad_440[0x8]; // 0x440(0x08)
	enum class EWeaponFiringMode _weaponFiringModeWhenShot; // 0x448(0x01)
	char pad_449[0x7]; // 0x449(0x07)
	struct FFiredShotDescriptionRep _firedShotDescriptionRep; // 0x450(0x04)
	char pad_454[0x14]; // 0x454(0x14)

	void OnStop(struct FHitResult& HitResult); // Function ConZ.Projectile.OnStop // (Native|Protected|HasOutParms) // @ game+0x24cb790
};

// Class ConZ.AmmunitionArrowSpawningParams
// Size: 0x38 (Inherited: 0x28)
struct UAmmunitionArrowSpawningParams : UObject {
	struct UObject* AmmunitionArrowClass; // 0x28(0x08)
	float ItemsHealth; // 0x30(0x04)
	bool IsPartOfEvent; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class ConZ.ProjectileArrow
// Size: 0x4a8 (Inherited: 0x468)
struct AProjectileArrow : AProjectile {
	struct USceneComponent* _tempSceneComponent; // 0x468(0x08)
	struct USceneComponent* _relativeRotationSceneComponent; // 0x470(0x08)
	struct FProjectileArrowData _projectileArrowData; // 0x478(0x20)
	char pad_498[0x10]; // 0x498(0x10)

	void UpdateParameters(); // Function ConZ.ProjectileArrow.UpdateParameters // (Native|Event|Public|BlueprintEvent) // @ game+0x15379e0
};

// Class ConZ.ProjectileExplosive
// Size: 0x4a8 (Inherited: 0x468)
struct AProjectileExplosive : AProjectile {
	float _selfDestructTime; // 0x468(0x04)
	float _explosionDamage; // 0x46c(0x04)
	float _explosionInnerRadius; // 0x470(0x04)
	float _explosionOuterRadius; // 0x474(0x04)
	float _explosionFalloff; // 0x478(0x04)
	float _explosionForce; // 0x47c(0x04)
	float _hearingDamageRadius; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct UParticleSystem* _explosionParticle; // 0x488(0x08)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x490(0x08)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x498(0x08)
	char pad_4A0[0x8]; // 0x4a0(0x08)
};

// Class ConZ.ExplosiveAmmunitionArrowSpawningParams
// Size: 0x40 (Inherited: 0x38)
struct UExplosiveAmmunitionArrowSpawningParams : UAmmunitionArrowSpawningParams {
	enum class EPhysicalSurface HitPhysicalSurface; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class ConZ.ProjectileExplosiveArrow
// Size: 0x4a8 (Inherited: 0x4a8)
struct AProjectileExplosiveArrow : AProjectileArrow {
};

// Class ConZ.ProjectileFlare
// Size: 0x4e0 (Inherited: 0x468)
struct AProjectileFlare : AProjectile {
	struct UParticleSystemComponent* _particleSystemComponent; // 0x468(0x08)
	struct UPointLightComponent* _pointLightComponent; // 0x470(0x08)
	struct UAkComponent* _akFlareComponent; // 0x478(0x08)
	bool _hasParachute; // 0x480(0x01)
	char pad_481[0x3]; // 0x481(0x03)
	float _parachuteGravityScale; // 0x484(0x04)
	float _parachuteEffectiveBallisticCoefficient; // 0x488(0x04)
	struct FVector _parachuteParticlesScale; // 0x48c(0x0c)
	float _parachuteParticlesScaleSpeed; // 0x498(0x04)
	char pad_49C[0x4]; // 0x49c(0x04)
	struct UAkAudioEvent* _burnStart; // 0x4a0(0x08)
	struct UAkAudioEvent* _burnEnd; // 0x4a8(0x08)
	float _burnTime; // 0x4b0(0x04)
	struct FName _burningNoiseTag; // 0x4b4(0x08)
	float _noiseLoudnessWhileIgnited; // 0x4bc(0x04)
	float _noiseLoudnessUpdateFrequencyPerHour; // 0x4c0(0x04)
	char pad_4C4[0x1c]; // 0x4c4(0x1c)
};

// Class ConZ.ProjectileGrenade
// Size: 0x4a8 (Inherited: 0x4a8)
struct AProjectileGrenade : AProjectileExplosive {
};

// Class ConZ.ProjectileImpactEffects
// Size: 0x470 (Inherited: 0x30)
struct UProjectileImpactEffects : UDataAsset {
	float MinDecalSize; // 0x30(0x04)
	float MaxDecalSize; // 0x34(0x04)
	float MinDecalLifetime; // 0x38(0x04)
	float MaxDecalLifetime; // 0x3c(0x04)
	float DecalFadeFactor; // 0x40(0x04)
	float ParticleEffectsInitialScale; // 0x44(0x04)
	float ParticleEffectsScaleDistanceStart; // 0x48(0x04)
	float ParticleEffectsScaleDistanceRange; // 0x4c(0x04)
	float ParticleEffectsScaleByDistanceFactor; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct UParticleSystem* BulletPenetrationExitParticlesDaytime; // 0x58(0x08)
	struct UParticleSystem* BulletPenetrationExitParticlesNighttime; // 0x60(0x08)
	struct UMaterialInterface* DayTimePenetrationDecal; // 0x68(0x08)
	struct UMaterialInterface* NightTimePenetrationDecal; // 0x70(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x78(0x08)
	struct FImpactEffectData Default; // 0x80(0x18)
	struct FImpactEffectData grass; // 0x98(0x18)
	struct FImpactEffectData ForrestGroundCoastal; // 0xb0(0x18)
	struct FImpactEffectData ForrestGroundContinental; // 0xc8(0x18)
	struct FImpactEffectData Rock; // 0xe0(0x18)
	struct FImpactEffectData Stone; // 0xf8(0x18)
	struct FImpactEffectData Gravel; // 0x110(0x18)
	struct FImpactEffectData GravelBeach; // 0x128(0x18)
	struct FImpactEffectData Pebbles; // 0x140(0x18)
	struct FImpactEffectData Snow; // 0x158(0x18)
	struct FImpactEffectData Ice; // 0x170(0x18)
	struct FImpactEffectData Sand; // 0x188(0x18)
	struct FImpactEffectData Asphalt; // 0x1a0(0x18)
	struct FImpactEffectData Dirt; // 0x1b8(0x18)
	struct FImpactEffectData Water; // 0x1d0(0x18)
	struct FImpactEffectData WaterOcean; // 0x1e8(0x18)
	struct FImpactEffectData Cloth; // 0x200(0x18)
	struct FImpactEffectData Metal; // 0x218(0x18)
	struct FImpactEffectData Aluminium; // 0x230(0x18)
	struct FImpactEffectData Concrete; // 0x248(0x18)
	struct FImpactEffectData Brick; // 0x260(0x18)
	struct FImpactEffectData Wood; // 0x278(0x18)
	struct FImpactEffectData Plastic; // 0x290(0x18)
	struct FImpactEffectData Rubber; // 0x2a8(0x18)
	struct FImpactEffectData Glass; // 0x2c0(0x18)
	struct FImpactEffectData Folliage; // 0x2d8(0x18)
	struct FImpactEffectData Bark; // 0x2f0(0x18)
	struct FImpactEffectData Flesh; // 0x308(0x18)
	struct FImpactEffectData RoofTile; // 0x320(0x18)
	struct FImpactEffectData CeramicsTiles; // 0x338(0x18)
	struct FImpactEffectData Scrap; // 0x350(0x18)
	struct FImpactEffectData Trunk; // 0x368(0x18)
	struct FImpactEffectData Leaves; // 0x380(0x18)
	struct FImpactEffectData Cardboard; // 0x398(0x18)
	struct FImpactEffectData Plaster; // 0x3b0(0x18)
	struct FImpactEffectData Kevlar; // 0x3c8(0x18)
	struct FImpactEffectData ForceField; // 0x3e0(0x18)
	struct FImpactEffectData NoEffect; // 0x3f8(0x18)
	struct FImpactEffectData WhiteGravel; // 0x410(0x18)
	struct FImpactEffectData Mud; // 0x428(0x18)
	struct FImpactEffectData RiverSand; // 0x440(0x18)
	struct FImpactEffectData GrassContinental; // 0x458(0x18)
};

// Class ConZ.ProjectilePool
// Size: 0x88 (Inherited: 0x28)
struct UProjectilePool : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	int32_t _maxNumPermanentlyAvailableProjectiles; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	float _projectileLifeSpanSeconds; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class ConZ.ProjectileRocket
// Size: 0x4d8 (Inherited: 0x4a8)
struct AProjectileRocket : AProjectileExplosive {
	float _alternateMashDelay; // 0x4a8(0x04)
	char pad_4AC[0x4]; // 0x4ac(0x04)
	struct UStaticMesh* _alternateMash; // 0x4b0(0x08)
	float _propulsionDelay; // 0x4b8(0x04)
	char pad_4BC[0x4]; // 0x4bc(0x04)
	struct UParticleSystem* _propulsionParticleSystem; // 0x4c0(0x08)
	char pad_4C8[0x10]; // 0x4c8(0x10)
};

// Class ConZ.ProjectileShotgun
// Size: 0x478 (Inherited: 0x468)
struct AProjectileShotgun : AProjectile {
	struct AProjectile* projectileClass; // 0x468(0x08)
	int32_t ShotsCount; // 0x470(0x04)
	char pad_474[0x4]; // 0x474(0x04)
};

// Class ConZ.ProjectileStatics
// Size: 0x28 (Inherited: 0x28)
struct UProjectileStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.QuartalPieProgressBar
// Size: 0x280 (Inherited: 0x268)
struct UQuartalPieProgressBar : UUserWidget {
	struct TArray<struct FSlateBrush> ProgressIcons; // 0x268(0x10)
	struct UImage* _displayedImage; // 0x278(0x08)

	void SetProgressIndex(int32_t progressIndex); // Function ConZ.QuartalPieProgressBar.SetProgressIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x24cfe50
};

// Class ConZ.QuestInteractableAssetUserData
// Size: 0x30 (Inherited: 0x28)
struct UQuestInteractableAssetUserData : UAssetUserData {
	struct FGameplayTag QuestInteractableTag; // 0x28(0x08)
};

// Class ConZ.QuestBook
// Size: 0x260 (Inherited: 0x220)
struct AQuestBook : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _meshComponent; // 0x228(0x08)
	char pad_230[0x28]; // 0x230(0x28)
	struct AQuestBookMinigame* _questBookMinigameClass; // 0x258(0x08)
};

// Class ConZ.QuestBookMinigame
// Size: 0x3e0 (Inherited: 0x340)
struct AQuestBookMinigame : AMinigame {
	struct UWidgetComponent* _questPagesWidgetComponent; // 0x340(0x08)
	struct USkeletalMeshComponent* _questBookMeshComponent; // 0x348(0x08)
	struct UAnimationAsset* _openBookIdleAnimation; // 0x350(0x08)
	struct UAnimationAsset* _closedBookIdleAnimation; // 0x358(0x08)
	struct UAnimationAsset* _openBookAnimation; // 0x360(0x08)
	struct UAnimationAsset* _closeBookAnimation; // 0x368(0x08)
	struct UAnimationAsset* _forwardsPageFlipAnimation; // 0x370(0x08)
	struct UAnimationAsset* _backwardsPageFlipAnimation; // 0x378(0x08)
	struct UMaterialInterface* _questBookMaterial; // 0x380(0x08)
	float _acceptHoldTime; // 0x388(0x04)
	float _stampFadeTime; // 0x38c(0x04)
	float _timeAfterAcceptBeforeClose; // 0x390(0x04)
	char pad_394[0x4c]; // 0x394(0x4c)
};

// Class ConZ.QuestBookMinigameConfiguration
// Size: 0x58 (Inherited: 0x50)
struct UQuestBookMinigameConfiguration : UMinigameConfiguration {
	struct AQuestBook* QuestBookUsed; // 0x50(0x08)
};

// Class ConZ.QuestBookMinigameWidget
// Size: 0x318 (Inherited: 0x280)
struct UQuestBookMinigameWidget : UMinigameWidget {
	struct FText _acceptQuestControlCaption; // 0x280(0x18)
	struct FText _changeSideControlCaption; // 0x298(0x18)
	struct FText _exitBookControlCaption; // 0x2b0(0x18)
	struct UTextBlock* _acceptQuestLabel; // 0x2c8(0x08)
	struct URichTextBlock* _acceptQuestControlText; // 0x2d0(0x08)
	struct UTextBlock* _changeSideLabel; // 0x2d8(0x08)
	struct URichTextBlock* _changeSideControlText; // 0x2e0(0x08)
	struct UTextBlock* _exitBookLabel; // 0x2e8(0x08)
	struct URichTextBlock* _exitBookControlText; // 0x2f0(0x08)
	struct UProgressBar* _acceptQuestProgressBar; // 0x2f8(0x08)
	struct UUniformGridPanel* _gridPanel; // 0x300(0x08)
	char pad_308[0x10]; // 0x308(0x10)
};

// Class ConZ.QuestBookPagesWidget
// Size: 0x290 (Inherited: 0x268)
struct UQuestBookPagesWidget : UUserWidget {
	struct UQuestBookPageWidget* _movingPage; // 0x268(0x08)
	struct UQuestBookPageWidget* _staticPage; // 0x270(0x08)
	char pad_278[0x18]; // 0x278(0x18)
};

// Class ConZ.QuestBookPageWidget
// Size: 0x3e8 (Inherited: 0x268)
struct UQuestBookPageWidget : UUserWidget {
	struct UTextBlock* _titleText; // 0x268(0x08)
	struct UImage* _tierIcon; // 0x270(0x08)
	struct UTextBlock* _descriptionText; // 0x278(0x08)
	struct UTextBlock* _requirementsLabel; // 0x280(0x08)
	struct UTextBlock* _requirementsText; // 0x288(0x08)
	struct UTextBlock* _timeLimitText; // 0x290(0x08)
	struct UTextBlock* _locationText; // 0x298(0x08)
	struct UTextBlock* _rewardsText; // 0x2a0(0x08)
	struct UImage* _acceptedImage; // 0x2a8(0x08)
	struct UOverlay* _splattersOverlay; // 0x2b0(0x08)
	struct UHorizontalBox* _timeLimitHorizontalBox; // 0x2b8(0x08)
	struct UVerticalBox* _rewardsVerticalBox; // 0x2c0(0x08)
	struct TArray<struct FPageSplatterInfo> _splatterInfos; // 0x2c8(0x10)
	struct FRuntimeFloatCurve _splatterSpawnRangeFromYCurve; // 0x2d8(0x88)
	struct FRuntimeFloatCurve _stampPressAnimationCurve; // 0x360(0x88)
};

// Class ConZ.QuestCommonData
// Size: 0xa8 (Inherited: 0x30)
struct UQuestCommonData : UDataAsset {
	struct TSoftClassPtr<UObject> TemplateInteractable; // 0x30(0x28)
	struct TMap<struct FString, struct TSoftClassPtr<UObject>> JsonClassMapping; // 0x58(0x50)
};

// Class ConZ.QuestCondition
// Size: 0x78 (Inherited: 0x28)
struct UQuestCondition : UObject {
	bool CanBeAutoCompleted; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FText TrackingCaption; // 0x30(0x18)
	struct FName DialogueUponCompletionName; // 0x48(0x08)
	struct TArray<struct FMapLocationMarker> LocationsShownOnMap; // 0x50(0x10)
	int32_t SequenceIndex; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct TArray<struct FGameplayTag> WidgetsToHighlight; // 0x68(0x10)
};

// Class ConZ.QuestCondition_BodyCondition
// Size: 0xa8 (Inherited: 0x78)
struct UQuestCondition_BodyCondition : UQuestCondition {
	struct TSoftClassPtr<UObject> BodyCondition; // 0x78(0x28)
	enum class EPrisonerBodyConditionState State; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class ConZ.QuestCondition_CircularMenuOpened
// Size: 0x78 (Inherited: 0x78)
struct UQuestCondition_CircularMenuOpened : UQuestCondition {
};

// Class ConZ.QuestCondition_CircularSubMenuOpened
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_CircularSubMenuOpened : UQuestCondition {
	struct UCircularMenuSegmentInfo* SubMenu; // 0x78(0x08)
};

// Class ConZ.QuestCondition_ClickUIButton
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_ClickUIButton : UQuestCondition {
	struct FGameplayTag ButtonTag; // 0x78(0x08)
};

// Class ConZ.QuestCondition_CustomZone
// Size: 0x88 (Inherited: 0x78)
struct UQuestCondition_CustomZone : UQuestCondition {
	struct TArray<struct FName> ZoneNames; // 0x78(0x10)
};

// Class ConZ.QuestCondition_DrivingWaypoint
// Size: 0xb8 (Inherited: 0x78)
struct UQuestCondition_DrivingWaypoint : UQuestCondition {
	struct TSoftClassPtr<UObject> WaypointClass; // 0x78(0x28)
	struct FPrimaryAssetId VehicleToSpawn; // 0xa0(0x10)
	struct FName CircularAreaGroupName; // 0xb0(0x08)
};

// Class ConZ.QuestCondition_Elimination
// Size: 0xe0 (Inherited: 0x78)
struct UQuestCondition_Elimination : UQuestCondition {
	struct TSoftClassPtr<UObject> CharacterClass; // 0x78(0x28)
	struct TArray<struct TSoftClassPtr<UObject>> AdditionalCharacterClasses; // 0xa0(0x10)
	int32_t Amount; // 0xb0(0x04)
	struct FName CircularAreaName; // 0xb4(0x08)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct TSoftClassPtr<UObject>> AllowedWeapons; // 0xc0(0x10)
	struct TArray<struct TSoftObjectPtr<UBaseItemTag>> AllowedBaseTags; // 0xd0(0x10)
};

// Class ConZ.QuestCondition_HudMode
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_HudMode : UQuestCondition {
	enum class EPrisonerHUDMode TargetMode; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class ConZ.QuestCondition_InputMapping
// Size: 0xb8 (Inherited: 0x78)
struct UQuestCondition_InputMapping : UQuestCondition {
	struct FName MappingName; // 0x78(0x08)
	struct TArray<struct FName> MappingNames; // 0x80(0x10)
	struct TSoftClassPtr<UObject> RequiredHoveredActor; // 0x90(0x28)
};

// Class ConZ.QuestCondition_Interactable
// Size: 0xb0 (Inherited: 0x78)
struct UQuestCondition_Interactable : UQuestCondition {
	struct TSoftClassPtr<UObject> InteractableClass; // 0x78(0x28)
	struct TArray<struct TSoftClassPtr<UObject>> InteractableClasses; // 0xa0(0x10)
};

// Class ConZ.QuestCondition_InteractablePersistentMesh
// Size: 0xd0 (Inherited: 0xb0)
struct UQuestCondition_InteractablePersistentMesh : UQuestCondition_Interactable {
	struct TArray<struct FInteractableDescription> Interactables; // 0xb0(0x10)
	bool SpawnOnlyNeededInteractables; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	struct FInt32Interval MaxNumInteractables; // 0xc4(0x08)
	int32_t WorldMarkerShowDistance; // 0xcc(0x04)
};

// Class ConZ.QuestCondition_InteractableUserData
// Size: 0xf8 (Inherited: 0xb0)
struct UQuestCondition_InteractableUserData : UQuestCondition_Interactable {
	struct FGameplayTag _questInteractableTag; // 0xb0(0x08)
	bool SpawnOnlyNeededInteractables; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct FGameplayTagContainer PossibleInteractableSets; // 0xc0(0x20)
	struct FInt32Interval MaxNumInteractables; // 0xe0(0x08)
	struct TArray<struct FName> LimitToCircularAreaNames; // 0xe8(0x10)
};

// Class ConZ.QuestCondition_ItemEquipped
// Size: 0xa8 (Inherited: 0x78)
struct UQuestCondition_ItemEquipped : UQuestCondition {
	struct TArray<struct TSoftClassPtr<UObject>> ItemFilter; // 0x78(0x10)
	bool ClothesEquip; // 0x88(0x01)
	enum class EHandsHolstersType SlotFilter; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct TArray<enum class EHandsHolstersType> SlotFilterMulti; // 0x90(0x10)
	enum class EItemAttachTriggerType TriggerOn; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class ConZ.QuestItemSet_Asset
// Size: 0x40 (Inherited: 0x30)
struct UQuestItemSet_Asset : UDataAsset {
	struct FQuestItemSet_Data ItemSet; // 0x30(0x10)
};

// Class ConZ.QuestCondition_ItemSet
// Size: 0xa0 (Inherited: 0x78)
struct UQuestCondition_ItemSet : UQuestCondition {
	bool DisablePurchasingItems; // 0x78(0x01)
	bool PlayerKeepsItems; // 0x79(0x01)
	bool AllowNonEmptyContainers; // 0x7a(0x01)
	bool AllowWeaponsWithAttachments; // 0x7b(0x01)
	bool AllowEquippedClothes; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	struct UQuestItemSet_Asset* ItemSetAsset; // 0x80(0x08)
	float RequiredAmountMultiplier; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FQuestItemSet_Data ItemSetData; // 0x90(0x10)
};

// Class ConZ.QuestCondition_ItemsInVicinity
// Size: 0x88 (Inherited: 0x78)
struct UQuestCondition_ItemsInVicinity : UQuestCondition {
	struct TArray<struct FVicinityItems> MustBeInVicinity; // 0x78(0x10)
};

// Class ConZ.QuestCondition_PlaceableActor
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_PlaceableActor : UQuestCondition {
	enum class EPlaceableActorTriggerType TriggerType; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class ConZ.QuestCondition_PrisonerActionMatcher
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher : UObject {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_CraftItem
// Size: 0x38 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_CraftItem : UQuestCondition_PrisonerActionMatcher {
	struct TArray<struct TSoftObjectPtr<UItemCraftingRecipe>> AcceptedRecipes; // 0x28(0x10)
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_CutObject
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_CutObject : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_LightFire
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_LightFire : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_FuelFire
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_FuelFire : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_ChopObject
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_ChopObject : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_SearchObject
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_SearchObject : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_ThrowItem
// Size: 0x38 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_ThrowItem : UQuestCondition_PrisonerActionMatcher {
	struct TArray<struct TSoftClassPtr<UObject>> AcceptedItems; // 0x28(0x10)
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_EatItem
// Size: 0x38 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_EatItem : UQuestCondition_PrisonerActionMatcher {
	struct TArray<struct TSoftClassPtr<UObject>> AcceptedItems; // 0x28(0x10)
};

// Class ConZ.QuestCondition_PrisonerActionMatcher_ExecuteBodyConditionInteraction
// Size: 0x28 (Inherited: 0x28)
struct UQuestCondition_PrisonerActionMatcher_ExecuteBodyConditionInteraction : UQuestCondition_PrisonerActionMatcher {
};

// Class ConZ.QuestCondition_PrisonerAction
// Size: 0x90 (Inherited: 0x78)
struct UQuestCondition_PrisonerAction : UQuestCondition {
	struct TArray<struct TSoftClassPtr<UObject>> ActionMatchers; // 0x78(0x10)
	enum class EPrisonerActionTriggerType TriggerType; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class ConZ.QuestCondition_TalkToNPC
// Size: 0xa0 (Inherited: 0x78)
struct UQuestCondition_TalkToNPC : UQuestCondition {
	struct TSoftClassPtr<UObject> CharacterClass; // 0x78(0x28)
};

// Class ConZ.QuestCondition_UITabOpen
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_UITabOpen : UQuestCondition {
	bool TriggerOnTabOpen; // 0x78(0x01)
	enum class ETabMenuTab TargetTab; // 0x79(0x01)
	bool TriggerOnSubTabOpen; // 0x7a(0x01)
	enum class ETabMenuSubTab TargetSubTab; // 0x7b(0x01)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class ConZ.QuestCondition_UITabOpen_ManualWidget
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_UITabOpen_ManualWidget : UQuestCondition {
	int32_t TabIndex; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class ConZ.QuestCondition_Wait
// Size: 0x80 (Inherited: 0x78)
struct UQuestCondition_Wait : UQuestCondition {
	bool WaitUntilDialogueCompletes; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float AdditionalWaitDuration; // 0x7c(0x04)
};

// Class ConZ.QuestDrivingWaypoint
// Size: 0x258 (Inherited: 0x220)
struct AQuestDrivingWaypoint : AActor {
	char pad_220[0x38]; // 0x220(0x38)
};

// Class ConZ.QuestEntriesPanelWidget
// Size: 0x2a0 (Inherited: 0x268)
struct UQuestEntriesPanelWidget : UUserWidget {
	struct USearchBox* _searchBox; // 0x268(0x08)
	struct UVerticalBox* _entryContainer; // 0x270(0x08)
	struct UQuestEntryWidget* _entryWidgetClass; // 0x278(0x08)
	char pad_280[0x20]; // 0x280(0x20)
};

// Class ConZ.QuestEntryDetailsPanelWidget
// Size: 0x380 (Inherited: 0x268)
struct UQuestEntryDetailsPanelWidget : UUserWidget {
	struct UOverlay* _mainOverlay; // 0x268(0x08)
	struct UScrollBox* _scrollBox; // 0x270(0x08)
	struct UTextBlock* _entryName; // 0x278(0x08)
	struct UQuestTimerTextBlock* _entryRemainingTime; // 0x280(0x08)
	struct UTextBlock* _entryDescription; // 0x288(0x08)
	struct UTextBlock* _entryQuestGiver; // 0x290(0x08)
	struct UTextBlock* _entryOutpost; // 0x298(0x08)
	struct UTextBlock* _entryTierText; // 0x2a0(0x08)
	struct FSlateColor _entryTierIconColor; // 0x2a8(0x28)
	struct UImage* _entryQuestGiverIcon; // 0x2d0(0x08)
	struct UVerticalBox* _entryTrackingDataContainer; // 0x2d8(0x08)
	struct UVerticalBox* _entryRewardsVerticalBox; // 0x2e0(0x08)
	struct UVerticalBox* _entryRewardsContainer; // 0x2e8(0x08)
	struct UPrimaryButton* _abandonQuestButton; // 0x2f0(0x08)
	struct UQuestTrackingDataWidget* _trackingDataWidgetClass; // 0x2f8(0x08)
	struct FText _abandonQuestTooltipText; // 0x300(0x18)
	struct UTextOnlyTooltip* _tooltipClass; // 0x318(0x08)
	char pad_320[0x60]; // 0x320(0x60)

	void OnAbandonQuestButtonHovered(); // Function ConZ.QuestEntryDetailsPanelWidget.OnAbandonQuestButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void OnAbandonQuestButtonClicked(); // Function ConZ.QuestEntryDetailsPanelWidget.OnAbandonQuestButtonClicked // (Final|Native|Private) // @ game+0x24d4d60
};

// Class ConZ.QuestEntryWidget
// Size: 0x2e8 (Inherited: 0x268)
struct UQuestEntryWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UImage* _questNotificationIcon; // 0x280(0x08)
	struct UTextBlock* _entryName; // 0x288(0x08)
	struct UQuestTimerTextBlock* _entryTimeRemaining; // 0x290(0x08)
	struct UQuestTrackingCheckbox* _trackingCheckbox; // 0x298(0x08)
	struct FName _pixelSizeMaterialParameterName; // 0x2a0(0x08)
	struct FName _dpiMaterialParameterName; // 0x2a8(0x08)
	struct UMaterialInstance* _inactiveMaterialInstance; // 0x2b0(0x08)
	struct UMaterialInstance* _inactiveHoveredMaterialInstance; // 0x2b8(0x08)
	struct UMaterialInstance* _activeMaterialInstance; // 0x2c0(0x08)
	struct UImage* _customQuestSymbol; // 0x2c8(0x08)
	char pad_2D0[0x18]; // 0x2d0(0x18)
};

// Class ConZ.QuestGiverComponent
// Size: 0x118 (Inherited: 0xb0)
struct UQuestGiverComponent : UActorComponent {
	bool _ownerInstancesShareId; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	uint64_t _gameUniqueId; // 0xb8(0x08)
	struct TSoftClassPtr<UObject> _typeOfSourceActor; // 0xc0(0x28)
	bool _uniqueForEachPlayer; // 0xe8(0x01)
	enum class EQuestGiverSectorSelectionType _sectorSelectionType; // 0xe9(0x01)
	char pad_EA[0x2e]; // 0xea(0x2e)
};

// Class ConZ.QuestInteractableComponent
// Size: 0x510 (Inherited: 0x500)
struct UQuestInteractableComponent : UStaticMeshComponent {
	char pad_500[0x10]; // 0x500(0x10)
};

// Class ConZ.QuestInteractable
// Size: 0x2c0 (Inherited: 0x220)
struct AQuestInteractable : AActor {
	char pad_220[0x10]; // 0x220(0x10)
	struct UQuestInteractableComponent* _component; // 0x230(0x08)
	struct FText _interactionPrompt; // 0x238(0x18)
	char pad_250[0x18]; // 0x250(0x18)
	bool _shouldShowWorldQuestMarker; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	float _maxWorldMarkerDistanceToShow; // 0x26c(0x04)
	struct FGameplayTagContainer _allowOnlyTags; // 0x270(0x20)
	char pad_290[0x30]; // 0x290(0x30)
};

// Class ConZ.QuestManagerData
// Size: 0x178 (Inherited: 0x30)
struct UQuestManagerData : UDataAsset {
	struct TMap<int32_t, int32_t> NumberOfQuestsThatUnlocksATier; // 0x30(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, struct FQuestGiverSetup> QuestGiversSetup; // 0x80(0x50)
	struct TArray<struct FSpecialQuestSetupArray> SpecialQuestSets; // 0xd0(0x10)
	bool QuestListManualOverride; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct TArray<struct TSoftObjectPtr<UQuestSetup>> QuestsManualOverride; // 0xe8(0x10)
	struct FName QuestRootFolder; // 0xf8(0x08)
	struct TArray<struct FName> QuestSubFolders; // 0x100(0x10)
	struct TArray<struct UTaskSetup*> InitiallyAvailableTasks; // 0x110(0x10)
	int32_t MaxSimultaneousTasks; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TSoftClassPtr<UObject> MobilePhoneItemClass; // 0x128(0x28)
	struct TSoftClassPtr<UObject> GeneralGoodsNPCClass; // 0x150(0x28)

	struct TArray<struct FString> ListDirectory(); // Function ConZ.QuestManagerData.ListDirectory // (Final|Native|Public|Const) // @ game+0x24d4c80
};

// Class ConZ.CircularAreaGroupComponent
// Size: 0x210 (Inherited: 0x200)
struct UCircularAreaGroupComponent : USceneComponent {
	struct FName Name; // 0x1f8(0x08)
	struct FCircularAreaGroup CircularAreaGroup; // 0x200(0x10)
};

// Class ConZ.QuestManager
// Size: 0x688 (Inherited: 0x220)
struct AQuestManager : AActor {
	char pad_220[0x78]; // 0x220(0x78)
	struct UQuestManagerData* _data; // 0x298(0x08)
	struct TMap<struct TSoftClassPtr<UObject>, enum class EQuestGiverType> _actorQuestGiverTypeMapping; // 0x2a0(0x50)
	struct TMap<struct FName, struct FVector> _outpostLocations; // 0x2f0(0x50)
	struct TMap<int32_t, struct UQuestSetup*> _questSetups; // 0x340(0x50)
	struct TMap<struct FPrimaryAssetId, int32_t> _questAssetIdToNetIndexMap; // 0x390(0x50)
	char pad_3E0[0xf8]; // 0x3e0(0xf8)
	struct TMap<struct FName, struct FCircularAreaGroup> _circularAreaGroups; // 0x4d8(0x50)
	struct TMap<struct FGameplayTag, struct FComponentReferenceCollection> _interactableComponentsMap; // 0x528(0x50)
	char pad_578[0x8]; // 0x578(0x08)
	struct TMap<uint64_t, int32_t> _questGiverUniqueIdToNetIndexMap; // 0x580(0x50)
	struct TMap<int32_t, uint64_t> _questGiverNetIndexToUniqueIdMap; // 0x5d0(0x50)
	char pad_620[0x68]; // 0x620(0x68)
};

// Class ConZ.QuestSetup
// Size: 0x118 (Inherited: 0x30)
struct UQuestSetup : UPrimaryDataAsset {
	struct TSoftClassPtr<UObject> AssociatedNPC; // 0x30(0x28)
	bool LimitLocation; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FVector LimitedToLocation; // 0x5c(0x0c)
	int32_t Tier; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct FText Title; // 0x70(0x18)
	struct TArray<struct FText> DescriptionSegments; // 0x88(0x10)
	bool UseCustomPhoneCompletionMessage; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct FText CustomPhoneCompletionMessage; // 0xa0(0x18)
	struct TArray<struct FQuestRewards> PossibleRewards; // 0xb8(0x10)
	struct FGameplayTagContainer TagUnlocks; // 0xc8(0x20)
	float TimeLimit; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct TArray<struct UQuestCondition*> ConditionsSequence; // 0xf0(0x10)
	bool ForceAllowAutoComplete; // 0x100(0x01)
	bool AlwaysShownInPhone; // 0x101(0x01)
	char pad_102[0x2]; // 0x102(0x02)
	int32_t _cachedNetIndex; // 0x104(0x04)
	struct FString _loadableName; // 0x108(0x10)
};

// Class ConZ.QuestTimerTextBlock
// Size: 0x360 (Inherited: 0x268)
struct UQuestTimerTextBlock : UUserWidget {
	struct UTextBlock* _textBlock; // 0x268(0x08)
	struct FSlateFontInfo _timerFont; // 0x270(0x58)
	struct FSlateColor _timerColorAndOpacity; // 0x2c8(0x28)
	struct FSlateColor _questCompletedColorAndOpacity; // 0x2f0(0x28)
	struct FSlateColor _questFailedColorAndOpacity; // 0x318(0x28)
	char pad_340[0x20]; // 0x340(0x20)
};

// Class ConZ.QuestTrackingCheckbox
// Size: 0x4c8 (Inherited: 0x268)
struct UQuestTrackingCheckbox : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct FSlateBrush _uncheckedNormalImage; // 0x298(0x88)
	struct FSlateBrush _uncheckedHoveredImage; // 0x320(0x88)
	struct FSlateBrush _checkedNormalImage; // 0x3a8(0x88)
	struct FSlateBrush _checkedHoveredImage; // 0x430(0x88)
	struct UImage* _image; // 0x4b8(0x08)
	char pad_4C0[0x8]; // 0x4c0(0x08)
};

// Class ConZ.QuestTrackingDataWidget
// Size: 0x3d0 (Inherited: 0x268)
struct UQuestTrackingDataWidget : UUserWidget {
	struct UImage* _icon; // 0x268(0x08)
	struct UTextBlock* _caption; // 0x270(0x08)
	struct UTextBlock* _progressText; // 0x278(0x08)
	struct FQuestTrackingDataWidgetStyle _widgetStyle; // 0x280(0x150)
};

// Class ConZ.QuestTrackingWidget
// Size: 0x328 (Inherited: 0x268)
struct UQuestTrackingWidget : UUserWidget {
	struct UTextBlock* _title; // 0x268(0x08)
	struct UTextBlock* _turnInText; // 0x270(0x08)
	struct UVerticalBox* _trackingDataContainer; // 0x278(0x08)
	struct USizeBox* _mainSizeBox; // 0x280(0x08)
	struct UVerticalBox* _mainWidgetVerticalBox; // 0x288(0x08)
	struct UQuestTimerTextBlock* _questTimer; // 0x290(0x08)
	struct FMargin _paddingWhileInTabMenu; // 0x298(0x10)
	struct FMargin _paddingNormal; // 0x2a8(0x10)
	struct UQuestTrackingDataWidget* _trackingDataWidgetClass; // 0x2b8(0x08)
	char pad_2C0[0x68]; // 0x2c0(0x68)
};

// Class ConZ.QuestUIData
// Size: 0x208 (Inherited: 0x30)
struct UQuestUIData : UDataAsset {
	struct TMap<enum class ETaskCategory, struct FSlateBrush> TaskCategoryIconTypeMap; // 0x30(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, struct FQuestGiverUIData> QuestGiverUIDataMap; // 0x80(0x50)
	struct TArray<struct FSlateBrush> QuestTierBrushes; // 0xd0(0x10)
	struct TArray<struct UMaterialInstance*> QuestTierTextMaterials; // 0xe0(0x10)
	struct TMap<enum class EQuestStartLimiterFlags, struct FText> QuestStartLimiterFlagsMessageMap; // 0xf0(0x50)
	struct FText PhoneMessageReceivedNotificationTitle; // 0x140(0x18)
	struct FText PhoneMessageReceivedNotificationText; // 0x158(0x18)
	float QuestAudioCooldown; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct FText QuestBookInteractionTraderLocked; // 0x178(0x18)
	struct FText QuestBookInteractionUnknownTraderLocked; // 0x190(0x18)
	struct FText QuestBookInteractionActiveLimit; // 0x1a8(0x18)
	struct FText QuestBookInteractionDailyLimit; // 0x1c0(0x18)
	struct FText QuestBookInteractionDepleted; // 0x1d8(0x18)
	struct FText QuestBookInteractionLoading; // 0x1f0(0x18)
};

// Class ConZ.QuickAccessBarWidget
// Size: 0x2d8 (Inherited: 0x268)
struct UQuickAccessBarWidget : UUserWidget {
	struct TArray<struct UQuickAccessItemWidget*> _quickAccessItemContainers; // 0x268(0x10)
	struct UHorizontalBox* _horizontalBox; // 0x278(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_2; // 0x280(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_3; // 0x288(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_4; // 0x290(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_5; // 0x298(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_6; // 0x2a0(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_7; // 0x2a8(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_8; // 0x2b0(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_9; // 0x2b8(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_10; // 0x2c0(0x08)
	struct UQuickAccessItemWidget* UI_QuickAccessItemWidget_1; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class ConZ.QuickAccessItemSwitcher3
// Size: 0x2e8 (Inherited: 0x268)
struct UQuickAccessItemSwitcher3 : UInventoryContainerWidget2 {
	int32_t Index; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UTextBlock* _nameText; // 0x270(0x08)
	struct UInventorySlotUserWidget* _slotWidget; // 0x278(0x08)
	struct UTextBlock* IndexText; // 0x280(0x08)
	struct UItemWidget2* _itemWidget; // 0x288(0x08)
	struct UCheckBox* _throwingModeCheckbox; // 0x290(0x08)
	char pad_298[0x18]; // 0x298(0x18)
	struct FText _throwingModeCaption; // 0x2b0(0x18)
	struct FText _throwingModeDescription; // 0x2c8(0x18)
	struct FName _conzInputMappingName; // 0x2e0(0x08)

	void ThrowingModePressed(bool IsChecked); // Function ConZ.QuickAccessItemSwitcher3.ThrowingModePressed // (Final|Native|Public) // @ game+0x24da190
};

// Class ConZ.QuickAccessItemWidget
// Size: 0x3f8 (Inherited: 0x268)
struct UQuickAccessItemWidget : UUserWidget {
	struct UImage* _imageWidget; // 0x268(0x08)
	char pad_270[0x18]; // 0x270(0x18)
	float DefaultWidth; // 0x288(0x04)
	float DefaultHeight; // 0x28c(0x04)
	struct FVector2D DefaultPosition; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
	struct UImage* _additionalIcon; // 0x2a0(0x08)
	struct UTextBlock* _additionalText; // 0x2a8(0x08)
	char pad_2B0[0x80]; // 0x2b0(0x80)
	struct USizeBox* _lowerLeftBox; // 0x330(0x08)
	struct USizeBox* _additionalIconSizeBox; // 0x338(0x08)
	char pad_340[0x20]; // 0x340(0x20)
	struct FLinearColor TextColor; // 0x360(0x10)
	struct FName _conzControlMappingName; // 0x370(0x08)
	struct FText _alternativeControlText; // 0x378(0x18)
	struct FLinearColor _alarmColor; // 0x390(0x10)
	struct UTextBlock* TextBlockSlotNumber; // 0x3a0(0x08)
	struct USizeBox* _sizeBox; // 0x3a8(0x08)
	struct UWidgetAnimation* LowerLeftBoxFadeIn; // 0x3b0(0x08)
	struct UWidgetAnimation* LowerLeftBoxFadeOut; // 0x3b8(0x08)
	struct UWidgetAnimation* BlinkingBackground; // 0x3c0(0x08)
	struct UWidgetAnimation* AdditionalIconFadeIn; // 0x3c8(0x08)
	struct UWidgetAnimation* AdditionalIconFadeOut; // 0x3d0(0x08)
	struct UWidgetAnimation* ShowLowerLeftBoxAnimation; // 0x3d8(0x08)
	struct UWidgetAnimation* ShowAdditionalIconAnimation; // 0x3e0(0x08)
	char pad_3E8[0x10]; // 0x3e8(0x10)

	void OnItemDestroyed(struct AActor* itemActor); // Function ConZ.QuickAccessItemWidget.OnItemDestroyed // (Final|Native|Public) // @ game+0x24d9f50
	struct FEventReply OnImageWidgetMouseButtonDown(struct FGeometry inGeometry, struct FPointerEvent& InMouseEvent); // Function ConZ.QuickAccessItemWidget.OnImageWidgetMouseButtonDown // (Final|Native|Public|HasOutParms) // @ game+0x24d9d80
};

// Class ConZ.QuickAccessManager
// Size: 0x120 (Inherited: 0x28)
struct UQuickAccessManager : UObject {
	char pad_28[0xf8]; // 0x28(0xf8)
};

// Class ConZ.Quiver
// Size: 0x1e00 (Inherited: 0xa50)
struct AQuiver : AClothesItem {
	struct FName ArrowsBoneName; // 0xa48(0x08)
	struct TArray<struct UStaticMeshComponent*> _arrowMeshComponentsArray2; // 0xa50(0x10)
	float _containerDepth; // 0xa64(0x04)
	char pad_A6C[0x1394]; // 0xa6c(0x1394)
};

// Class ConZ.Rabbit2
// Size: 0x9d0 (Inherited: 0x9d0)
struct ARabbit2 : AAnimal2 {
};

// Class ConZ.SimpleAnimalAIController
// Size: 0x4f8 (Inherited: 0x450)
struct ASimpleAnimalAIController : AConZAIController {
	float WanderRadius; // 0x450(0x04)
	float RunAwayTime; // 0x454(0x04)
	float MinActionTime; // 0x458(0x04)
	float MaxActionTime; // 0x45c(0x04)
	float WalkSpeed; // 0x460(0x04)
	float RunSpeed; // 0x464(0x04)
	float FleeSegmentDistance; // 0x468(0x04)
	float AlertStartupTime; // 0x46c(0x04)
	float MinMoveDistance; // 0x470(0x04)
	float DoNotDespawnTime; // 0x474(0x04)
	char pad_478[0x80]; // 0x478(0x80)

	void UpdatePerception(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.SimpleAnimalAIController.UpdatePerception // (Native|Public|HasOutParms) // @ game+0x24f0050
	void StartAlert(); // Function ConZ.SimpleAnimalAIController.StartAlert // (Final|Native|Public) // @ game+0x24f0030
	void OnTakeDamageHandler(struct AActor* damageActor, float Damage, struct FVector HitLocation, struct APawn* eventInstigator); // Function ConZ.SimpleAnimalAIController.OnTakeDamageHandler // (Final|Native|Public|HasDefaults) // @ game+0x24efe90
};

// Class ConZ.Rabbit2AIController
// Size: 0x508 (Inherited: 0x4f8)
struct ARabbit2AIController : ASimpleAnimalAIController {
	float MoveSegment; // 0x4f8(0x04)
	float MovementPauseMinTime; // 0x4fc(0x04)
	float MovementPauseMaxTime; // 0x500(0x04)
	float AngleOffset; // 0x504(0x04)

	void Wander(); // Function ConZ.Rabbit2AIController.Wander // (Final|Native|Private) // @ game+0x24da220
};

// Class ConZ.RackItem
// Size: 0xbb0 (Inherited: 0xb90)
struct ARackItem : AChestItem {
	struct UStaticMesh* _lockStaticMesh; // 0xb90(0x08)
	char pad_B98[0x18]; // 0xb98(0x18)
};

// Class ConZ.RadiationManager
// Size: 0x2f8 (Inherited: 0x220)
struct ARadiationManager : AActor {
	char pad_220[0x18]; // 0x220(0x18)
	struct TArray<struct FRadiationSourceDescription> _levelRadiationSources; // 0x238(0x10)
	char pad_248[0x4]; // 0x248(0x04)
	float _radiationDispersionRate; // 0x24c(0x04)
	char pad_250[0xa8]; // 0x250(0xa8)
};

// Class ConZ.RadioComponent
// Size: 0x400 (Inherited: 0x3d0)
struct URadioComponent : UAkComponent {
	float _volume; // 0x3c8(0x04)
	int32_t _currentStationIndex; // 0x3cc(0x04)
	bool _isHiFi; // 0x3d4(0x01)
	bool _isReachableFromSkyWhenMounted; // 0x3d5(0x01)
	float _attenuationScale; // 0x3d8(0x04)
	bool _turnedOn; // 0x3dc(0x01)
	char pad_3DF[0x21]; // 0x3df(0x21)

	void PlayTrackFromRadioStation(); // Function ConZ.RadioComponent.PlayTrackFromRadioStation // (Final|Native|Private) // @ game+0x24da120
	void OnTrackStarted(); // Function ConZ.RadioComponent.OnTrackStarted // (Final|Native|Private) // @ game+0x24da100
	void OnTrackEnded(); // Function ConZ.RadioComponent.OnTrackEnded // (Final|Native|Private) // @ game+0x24da0e0
	void OnRep_Volume(); // Function ConZ.RadioComponent.OnRep_Volume // (Final|Native|Private) // @ game+0x24da0a0
	void OnRep_TurnedOn(); // Function ConZ.RadioComponent.OnRep_TurnedOn // (Final|Native|Private) // @ game+0x24da080
	void OnRep_StationIndex(); // Function ConZ.RadioComponent.OnRep_StationIndex // (Final|Native|Private) // @ game+0x24da060
};

// Class ConZ.RadioItem
// Size: 0x9d0 (Inherited: 0x9b0)
struct ARadioItem : AItem {
	struct URadioComponent* _radioComponent; // 0x9b0(0x08)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9b8(0x08)
	float _EMInterferenceDisabledTime; // 0x9c0(0x04)
	char pad_9C4[0xc]; // 0x9c4(0x0c)

	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.RadioItem.OnComponentDeactivated // (Final|Native|Private) // @ game+0x24d9cf0
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.RadioItem.OnComponentActivated // (Final|Native|Private) // @ game+0x24d9c20
};

// Class ConZ.RadioTrack
// Size: 0x48 (Inherited: 0x30)
struct URadioTrack : UDataAsset {
	struct UAkAudioEvent* Audio; // 0x30(0x08)
	float Duration; // 0x38(0x04)
	struct FName TrackName; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.RadioCategory
// Size: 0x40 (Inherited: 0x28)
struct URadioCategory : UObject {
	struct TArray<struct URadioTrack*> Tracks; // 0x28(0x10)
	int32_t _index; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	struct URadioTrack* ProvideNextRadioTrack(); // Function ConZ.RadioCategory.ProvideNextRadioTrack // (Native|Event|Public|BlueprintEvent) // @ game+0x24da140
};

// Class ConZ.RadioCategoryShuffle
// Size: 0x58 (Inherited: 0x40)
struct URadioCategoryShuffle : URadioCategory {
	bool _canTracksRepeat; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<struct URadioTrack*> _tracksAlreadyPlayed; // 0x48(0x10)
};

// Class ConZ.RadioProgram
// Size: 0x50 (Inherited: 0x28)
struct URadioProgram : UObject {
	struct TArray<struct URadioCategory*> CategoryClasses; // 0x28(0x10)
	struct TArray<struct URadioCategory*> Categories; // 0x38(0x10)
	int32_t _categoryIndex; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)

	struct URadioCategory* ProvideNextRadioCategory(); // Function ConZ.RadioProgram.ProvideNextRadioCategory // (Native|Event|Public|BlueprintEvent) // @ game+0x24da140
};

// Class ConZ.RadioStation
// Size: 0x298 (Inherited: 0x220)
struct ARadioStation : AActor {
	char pad_220[0x30]; // 0x220(0x30)
	struct FName _stationName; // 0x250(0x08)
	struct TArray<struct FRadioProgramData> _programsData; // 0x258(0x10)
	int32_t _maxTracksToQueue; // 0x268(0x04)
	int32_t _currentIndex; // 0x26c(0x04)
	struct TArray<struct URadioTrack*> _playlist; // 0x270(0x10)
	float _elapsedTime; // 0x280(0x04)
	char pad_284[0x14]; // 0x284(0x14)

	void StartTrack(); // Function ConZ.RadioStation.StartTrack // (Final|Native|Private) // @ game+0x24da170
	void OnTrackEnded(); // Function ConZ.RadioStation.OnTrackEnded // (Final|Native|Private) // @ game+0x24da0c0
	void OnRep_Playlist(); // Function ConZ.RadioStation.OnRep_Playlist // (Final|Native|Private) // @ game+0x24da000
	void Multicast_SendNextTrack(struct URadioTrack* Track); // Function ConZ.RadioStation.Multicast_SendNextTrack // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23cdb90
};

// Class ConZ.RagItem
// Size: 0xb00 (Inherited: 0x9c0)
struct ARagItem : AEquipmentItem {
	struct TSoftObjectPtr<UTexture2D> _inventoryIcon_Dirty; // 0x9c0(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconInHands_Dirty; // 0x9e8(0x28)
	struct TSoftObjectPtr<UTexture2D> _outsideInventoryIcon_Dirty; // 0xa10(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIcon_Aseptic; // 0xa38(0x28)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconInHands_Aseptic; // 0xa60(0x28)
	struct TSoftObjectPtr<UTexture2D> _outsideInventoryIcon_Aseptic; // 0xa88(0x28)
	int32_t _washing_ItemUsage; // 0xab0(0x04)
	float _washing_ExperienceGain; // 0xab4(0x04)
	float _disinfection_RequiredDisinfectantAmount; // 0xab8(0x04)
	float _disinfection_ActionDuration; // 0xabc(0x04)
	struct UStaticMesh* _dirtyMesh; // 0xac0(0x08)
	struct UStaticMesh* _cleanMesh; // 0xac8(0x08)
	struct UStaticMesh* _asepticMesh; // 0xad0(0x08)
	struct UMaterialInstance* _dirtyMaterial; // 0xad8(0x08)
	struct UMaterialInstance* _cleanMaterial; // 0xae0(0x08)
	struct UMaterialInstance* _asepticMaterial; // 0xae8(0x08)
	float _dirtinessRep; // 0xaf0(0x04)
	char pad_AF4[0xc]; // 0xaf4(0x0c)

	void OnRep_Dirtiness(); // Function ConZ.RagItem.OnRep_Dirtiness // (Final|Native|Private) // @ game+0x24d9fe0
};

// Class ConZ.RagItemEntitySave
// Size: 0x30 (Inherited: 0x28)
struct URagItemEntitySave : UObject {
	float dirtiness; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class ConZ.RagItemEntitySetup
// Size: 0x98 (Inherited: 0x90)
struct URagItemEntitySetup : UItemEntitySetup {
	float DefaultDirtiness; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class ConZ.RaidProtectionSelectionWidget
// Size: 0x430 (Inherited: 0x268)
struct URaidProtectionSelectionWidget : UUserWidget {
	char pad_268[0x20]; // 0x268(0x20)
	struct UButton* _buttonCancel; // 0x288(0x08)
	struct UButton* _buttonPay; // 0x290(0x08)
	struct UButton* _buttonCancel2; // 0x298(0x08)
	struct UButton* _buttonSet; // 0x2a0(0x08)
	struct UNumberPicker* _startHour; // 0x2a8(0x08)
	struct UNumberPicker* _startMinute; // 0x2b0(0x08)
	struct UNumberPicker* _endHour; // 0x2b8(0x08)
	struct UNumberPicker* _endMinute; // 0x2c0(0x08)
	struct UTextBlock* _remainingCooldown; // 0x2c8(0x08)
	struct UTextBlock* _currencyText; // 0x2d0(0x08)
	struct UImage* _currencyIcon; // 0x2d8(0x08)
	struct UWidgetSwitcher* _panelSwitcher; // 0x2e0(0x08)
	struct UHorizontalBox* _timeSpanContainer; // 0x2e8(0x08)
	struct UTextBlock* _timeSpanText; // 0x2f0(0x08)
	struct FSlateBrush _goldIcon; // 0x2f8(0x88)
	struct FSlateBrush _cashIcon; // 0x380(0x88)
	char pad_408[0x28]; // 0x408(0x28)

	void OnTimeValuesChanged(); // Function ConZ.RaidProtectionSelectionWidget.OnTimeValuesChanged // (Final|Native|Private) // @ game+0x24dd2d0
	void OnSetButtonClicked(); // Function ConZ.RaidProtectionSelectionWidget.OnSetButtonClicked // (Final|Native|Private) // @ game+0x24dd2b0
	void OnPayButtonClicked(); // Function ConZ.RaidProtectionSelectionWidget.OnPayButtonClicked // (Final|Native|Private) // @ game+0x24dd040
	void OnCancelButtonClicked(); // Function ConZ.RaidProtectionSelectionWidget.OnCancelButtonClicked // (Final|Native|Private) // @ game+0x241aef0
};

// Class ConZ.RainCollectionManager
// Size: 0x138 (Inherited: 0xb0)
struct URainCollectionManager : UActorComponent {
	char pad_B0[0x88]; // 0xb0(0x88)
};

// Class ConZ.RainCollectorComponent
// Size: 0xf8 (Inherited: 0xc8)
struct URainCollectorComponent : UItemComponent {
	struct FDbIntegerId _collectorID; // 0xc8(0x08)
	char pad_D0[0x4]; // 0xd0(0x04)
	float _fillRate; // 0xd4(0x04)
	float _maxAmount; // 0xd8(0x04)
	char pad_DC[0xc]; // 0xdc(0x0c)
	struct UAkAudioEvent* _collectingStartSound; // 0xe8(0x08)
	struct UAkAudioEvent* _collectingStopSound; // 0xf0(0x08)

	void OnResourceAmountChanged(struct UBasicGameResourceContainerComponent* containerComponent, float newAmount); // Function ConZ.RainCollectorComponent.OnResourceAmountChanged // (Final|Native|Private) // @ game+0x24dd1e0
	void OnRep_CollectorID(); // Function ConZ.RainCollectorComponent.OnRep_CollectorID // (Final|Native|Private|Const) // @ game+0x24dd080
};

// Class ConZ.RangedResourceConsumerComponent
// Size: 0xf0 (Inherited: 0xc8)
struct URangedResourceConsumerComponent : UItemComponent {
	char pad_C8[0x18]; // 0xc8(0x18)
	struct UGameResourceType* _repResourceType; // 0xe0(0x08)
	float _repResourceAmount; // 0xe8(0x04)
	float _repRequiredResourceAmount; // 0xec(0x04)

	void OnRep_ResourceType(); // Function ConZ.RangedResourceConsumerComponent.OnRep_ResourceType // (Final|Native|Private) // @ game+0x24dd1a0
	void OnRep_ResourceAmount(); // Function ConZ.RangedResourceConsumerComponent.OnRep_ResourceAmount // (Final|Native|Private) // @ game+0x24dd160
	void OnRep_RequiredResourceAmount(); // Function ConZ.RangedResourceConsumerComponent.OnRep_RequiredResourceAmount // (Final|Native|Private) // @ game+0x24dd140
};

// Class ConZ.RangedResourceConsumerComponentMultipleProviders
// Size: 0xf0 (Inherited: 0xf0)
struct URangedResourceConsumerComponentMultipleProviders : URangedResourceConsumerComponent {
};

// Class ConZ.RangedResourceConsumerComponentSingleProvider
// Size: 0xf0 (Inherited: 0xf0)
struct URangedResourceConsumerComponentSingleProvider : URangedResourceConsumerComponent {
};

// Class ConZ.RangedResourceConsumerEntityComponentSave
// Size: 0x70 (Inherited: 0x28)
struct URangedResourceConsumerEntityComponentSave : UObject {
	struct UGameResourceType* ResourceType; // 0x28(0x08)
	float ResourceAmount; // 0x30(0x04)
	float RequiredResourceAmount; // 0x34(0x04)
	bool ResourceUsageEnabled; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FEntityComponentId ResourceSupplierId; // 0x40(0x10)
	struct TArray<struct FEntityComponentId> RegisteredProviders; // 0x50(0x10)
	struct TArray<struct FConnectionSaveData> Connections; // 0x60(0x10)
};

// Class ConZ.RangedResourceConsumerEntityComponentSetup
// Size: 0x68 (Inherited: 0x48)
struct URangedResourceConsumerEntityComponentSetup : UEntityComponentSetup {
	struct UGameResourceType* ResourceType; // 0x48(0x08)
	float ResourceAmount; // 0x50(0x04)
	float RequiredResourceAmount; // 0x54(0x04)
	bool AutoFindResourceSupplier; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FName ResourceSupplierName; // 0x5c(0x08)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class ConZ.RangedResourceConsumerEntityComponentSetupMultipleProviders
// Size: 0x70 (Inherited: 0x68)
struct URangedResourceConsumerEntityComponentSetupMultipleProviders : URangedResourceConsumerEntityComponentSetup {
	bool AutoConnect; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class ConZ.RangedResourceConsumerEntityComponentStateSingleProvider
// Size: 0x70 (Inherited: 0x70)
struct URangedResourceConsumerEntityComponentStateSingleProvider : URangedResourceConsumerEntityComponentSave {
};

// Class ConZ.RangedResourceConsumerEntityComponentSetupSingleProvider
// Size: 0x68 (Inherited: 0x68)
struct URangedResourceConsumerEntityComponentSetupSingleProvider : URangedResourceConsumerEntityComponentSetup {
};

// Class ConZ.RangedResourceProviderComponent
// Size: 0x118 (Inherited: 0xc8)
struct URangedResourceProviderComponent : UItemComponent {
	char pad_C8[0x30]; // 0xc8(0x30)
	struct UGameResourceType* _repResourceType; // 0xf8(0x08)
	float _repResourceAmount; // 0x100(0x04)
	float _repAvailableResourceAmount; // 0x104(0x04)
	struct AInfluenceAreaVisualizer* _influenceAreaVisualizerClass; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void OnRep_ResourceType(); // Function ConZ.RangedResourceProviderComponent.OnRep_ResourceType // (Final|Native|Private) // @ game+0x24dd1c0
	void OnRep_ResourceAmount(); // Function ConZ.RangedResourceProviderComponent.OnRep_ResourceAmount // (Final|Native|Private) // @ game+0x24dd180
	void OnRep_AvailableResourceAmount(); // Function ConZ.RangedResourceProviderComponent.OnRep_AvailableResourceAmount // (Final|Native|Private) // @ game+0x24dd060
};

// Class ConZ.RangedResourceProviderComponentContinousAmount
// Size: 0x118 (Inherited: 0x118)
struct URangedResourceProviderComponentContinousAmount : URangedResourceProviderComponent {
};

// Class ConZ.RangedResourceProviderEntityComponentSave
// Size: 0x60 (Inherited: 0x28)
struct URangedResourceProviderEntityComponentSave : UObject {
	struct UGameResourceType* ResourceType; // 0x28(0x08)
	float ResourceAmount; // 0x30(0x04)
	float AvailableResourceAmount; // 0x34(0x04)
	bool ResourceUsageEnabled; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FEntityComponentId ResourceSupplierId; // 0x40(0x10)
	struct TArray<struct FConnectionSaveData> Connections; // 0x50(0x10)
};

// Class ConZ.RangedResourceProviderEntityComponentSetup
// Size: 0x68 (Inherited: 0x48)
struct URangedResourceProviderEntityComponentSetup : UEntityComponentSetup {
	struct UGameResourceType* ResourceType; // 0x48(0x08)
	float ResourceAmount; // 0x50(0x04)
	bool AutoFindResourceSupplier; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
	struct FName ResourceSupplierName; // 0x58(0x08)
	bool MirrorResourceSupplierResources; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// Class ConZ.RangedResourceProviderEntityComponentContinousAmountSave
// Size: 0x60 (Inherited: 0x60)
struct URangedResourceProviderEntityComponentContinousAmountSave : URangedResourceProviderEntityComponentSave {
};

// Class ConZ.RangedResourceProviderEntityComponentContinousAmountSetup
// Size: 0x68 (Inherited: 0x68)
struct URangedResourceProviderEntityComponentContinousAmountSetup : URangedResourceProviderEntityComponentSetup {
};

// Class ConZ.Razor
// Size: 0x930 (Inherited: 0x830)
struct ARazor : AConZCharacter {
	char pad_830[0x30]; // 0x830(0x30)
	struct USphereComponent* _razorWeakSpotComponent; // 0x860(0x08)
	struct UNavigationInvokerComponent* _navigationInvokerComponent; // 0x868(0x08)
	struct UHitReactComponent* _hitReactComponent; // 0x870(0x08)
	struct URazorCommonData* _razorCommonData; // 0x878(0x08)
	char pad_880[0x19]; // 0x880(0x19)
	bool _isAlive; // 0x899(0x01)
	char pad_89A[0x6]; // 0x89a(0x06)
	bool _isSearched; // 0x8a0(0x01)
	char pad_8A1[0x3]; // 0x8a1(0x03)
	struct TWeakObjectPtr<struct APawn> _targetPawn; // 0x8a4(0x08)
	bool _shouldAdjustUpperBodyPitchToTargetPawn; // 0x8ac(0x01)
	char pad_8AD[0x7]; // 0x8ad(0x07)
	bool _isVentilationAnimationFallingSimulationActive; // 0x8b4(0x01)
	char pad_8B5[0x3f]; // 0x8b5(0x3f)
	enum class ERazorStance _razorStance; // 0x8f4(0x01)
	enum class ERazorSleepingStage _razorSleepingStage; // 0x8f5(0x01)
	char pad_8F6[0x3a]; // 0x8f6(0x3a)

	void OnRep_RazorStance(enum class ERazorStance oldStance); // Function ConZ.Razor.OnRep_RazorStance // (Final|Native|Private) // @ game+0x24dd0c0
	void OnRep_IsVentilationAnimationFallingSimulationActive(); // Function ConZ.Razor.OnRep_IsVentilationAnimationFallingSimulationActive // (Final|Native|Private) // @ game+0x24dd0a0
	void NetMulticast_StopOpenDoorAnimation(); // Function ConZ.Razor.NetMulticast_StopOpenDoorAnimation // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x234bb80
	void NetMulticast_PlayTurnMontage(enum class ERazorTurnMontage turnMontage, float angle); // Function ConZ.Razor.NetMulticast_PlayTurnMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24dcf50
	void NetMulticast_PlayMontage(enum class ERazorMontageType montageType, int32_t Index); // Function ConZ.Razor.NetMulticast_PlayMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24dce80
	void NetMulticast_PlayGroupAttackMontage(int32_t attackMontageIndex); // Function ConZ.Razor.NetMulticast_PlayGroupAttackMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24dcdf0
	void NetMulticast_PlayDoorDestructionMontage(int32_t Index); // Function ConZ.Razor.NetMulticast_PlayDoorDestructionMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24dcd60
	void NetMulticast_PlayBasicAttackMontage(int32_t attackMontageIndex); // Function ConZ.Razor.NetMulticast_PlayBasicAttackMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c7720
	void NetMulticast_OnRazorKilled(enum class ERazorDeathType deathType, enum class EHitDirectionType directionType); // Function ConZ.Razor.NetMulticast_OnRazorKilled // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24dcc90
};

// Class ConZ.RazorAIController
// Size: 0x7b0 (Inherited: 0x450)
struct ARazorAIController : AConZAIController {
	char pad_450[0x18]; // 0x450(0x18)
	struct UAISenseConfig_Sight* _currentSightSenseConfig; // 0x468(0x08)
	struct UAISenseConfig_Hearing* _currentHearingSenseConfig; // 0x470(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigSleeping; // 0x478(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigSleeping; // 0x480(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigAlerted; // 0x488(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigAlerted; // 0x490(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigCombat; // 0x498(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigCombat; // 0x4a0(0x08)
	float _timeToForgetKnownCharacter; // 0x4a8(0x04)
	bool _shouldConsiderSightStimuli; // 0x4ac(0x01)
	bool _shouldConsiderHearingStimuli; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct TMap<struct FName, float> _noiseAccumulationMultiplierPerNoiseTag; // 0x4b0(0x50)
	float _stimulusImmunityTime; // 0x500(0x04)
	char pad_504[0x4]; // 0x504(0x04)
	struct UGrappleActionParameters* _grappleActionParameters; // 0x508(0x08)
	char pad_510[0x38]; // 0x510(0x38)
	float _cooldownBetweenSwitchingTargets; // 0x548(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
	float _timeUntilRecentDamageDrop; // 0x550(0x04)
	float _recentDamageDropRatePerSecond; // 0x554(0x04)
	float _recentDamageThresholdToConsider; // 0x558(0x04)
	char pad_55C[0x14]; // 0x55c(0x14)
	float _wakeUpNoiseThreshold[0x4]; // 0x570(0x10)
	float _sleepingAccumulatedNoiseDropRate; // 0x580(0x04)
	char pad_584[0x4]; // 0x584(0x04)
	float _playerDistanceForInstantWakeUp; // 0x588(0x04)
	char pad_58C[0xc]; // 0x58c(0x0c)
	float _sleepingStateRecentWakingResetTimer; // 0x598(0x04)
	char pad_59C[0x8]; // 0x59c(0x08)
	struct FFloatRange _alertedStateDurationRange; // 0x5a4(0x10)
	char pad_5B4[0x8]; // 0x5b4(0x08)
	float _alertedNoiseThresholdToBecomeAggressive; // 0x5bc(0x04)
	float _alertedStateAccumulatedNoiseDropRate; // 0x5c0(0x04)
	char pad_5C4[0x4]; // 0x5c4(0x04)
	float _alertedRandomPointSearchRadius; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	struct FFloatRange _alertedAggressiveStateTimeOnInterestPoint; // 0x5d0(0x10)
	struct FFloatInterval _alertedAggressiveStateDurationRange; // 0x5e0(0x08)
	char pad_5E8[0x4]; // 0x5e8(0x04)
	float _targetFocusDistance; // 0x5ec(0x04)
	float _distanceToTargetToConsiderForGroupAttack; // 0x5f0(0x04)
	float _chanceToChangeActiveTargetDuringGroupAttack; // 0x5f4(0x04)
	char pad_5F8[0x10]; // 0x5f8(0x10)
	float _combatAcceptanceRadius; // 0x608(0x04)
	struct FFloatRange _combatPauseBetweenAttacksRange; // 0x60c(0x10)
	struct FFloatRange _combatPauseBetweenMovementsRange; // 0x61c(0x10)
	float _combatStandingStillTimeToTriggerMovementDelay; // 0x62c(0x04)
	char pad_630[0x14]; // 0x630(0x14)
	int32_t _minRequiredConsecutiveAttackToTriggerIntimidation; // 0x644(0x04)
	char pad_648[0x4]; // 0x648(0x04)
	float _resetIntimidationAttackCounterTime; // 0x64c(0x04)
	float _chanceToTriggerIntimidation; // 0x650(0x04)
	float _mountAttackInitiateDistance; // 0x654(0x04)
	float _mountAttackMinDistance; // 0x658(0x04)
	float _mountAttackAttemptDistance; // 0x65c(0x04)
	float _mountAttackAttemptForceTime; // 0x660(0x04)
	char pad_664[0x4]; // 0x664(0x04)
	float _mountAttackOverrideForwardSpeed; // 0x668(0x04)
	float _mountAttackJumpApexHeight; // 0x66c(0x04)
	char pad_670[0x8]; // 0x670(0x08)
	float _mountAttackCooldown; // 0x678(0x04)
	char pad_67C[0x4]; // 0x67c(0x04)
	float _distanceFromPlayerForMountAttackToBeValid; // 0x680(0x04)
	float _heightDifferenceFromPlayerForMountAttackToBeValid; // 0x684(0x04)
	float _mountAttackDamageInterval; // 0x688(0x04)
	char pad_68C[0x4]; // 0x68c(0x04)
	struct TArray<struct FName> _mountAttackTargetDamageBoneNames; // 0x690(0x10)
	float _damagePerMountAttack; // 0x6a0(0x04)
	char pad_6A4[0x4]; // 0x6a4(0x04)
	float _mountAttackDamageTakenLimit; // 0x6a8(0x04)
	char pad_6AC[0x4]; // 0x6ac(0x04)
	float _minDistanceFromPlayerToIntimidateAfterFailedMountAttack; // 0x6b0(0x04)
	char pad_6B4[0x18]; // 0x6b4(0x18)
	struct FFloatRange _ventilationDespawnMovementDelayRange; // 0x6cc(0x10)
	char pad_6DC[0x4]; // 0x6dc(0x04)
	float _timeNotSeenByPlayersToDespawn; // 0x6e0(0x04)
	char pad_6E4[0x4]; // 0x6e4(0x04)
	float _noiseLoudnessToInterruptVentilationDespawn; // 0x6e8(0x04)
	float _minAngleCosRequiredToTurn; // 0x6ec(0x04)
	float _genericAcceptanceRadius; // 0x6f0(0x04)
	float _timeToBeConsideredStuck; // 0x6f4(0x04)
	float _costOfJumpingInPathLength; // 0x6f8(0x04)
	float _distanceForDestinationToBeConsideredChanged; // 0x6fc(0x04)
	char pad_700[0x30]; // 0x700(0x30)
	float _razorTargetDistanceXYToGiveUpBangingOnDoors; // 0x730(0x04)
	float _razorTargetDistanceZToGiveUpBangingOnDoors; // 0x734(0x04)
	char pad_738[0x78]; // 0x738(0x78)

	void SensingComponent_OnActorSensed(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.RazorAIController.SensingComponent_OnActorSensed // (Final|Native|Private|HasOutParms) // @ game+0x24dd2f0
	void OnDoorBreakdownInterrupted(); // Function ConZ.RazorAIController.OnDoorBreakdownInterrupted // (Final|Native|Private) // @ game+0x24dd020
};

// Class ConZ.RazorAnimInstance
// Size: 0x3a0 (Inherited: 0x2c0)
struct URazorAnimInstance : UAnimInstance {
	bool _isInRagdoll; // 0x2c0(0x01)
	enum class ERazorStance _razorStance; // 0x2c1(0x01)
	enum class ERazorSleepingStage _sleepingStage; // 0x2c2(0x01)
	char pad_2C3[0x1]; // 0x2c3(0x01)
	struct FVector _acceleration; // 0x2c4(0x0c)
	bool _wantsToMove; // 0x2d0(0x01)
	char pad_2D1[0x3]; // 0x2d1(0x03)
	struct FVector _velocity; // 0x2d4(0x0c)
	float _speed; // 0x2e0(0x04)
	float _speedXY; // 0x2e4(0x04)
	float _walkStoppingDistance; // 0x2e8(0x04)
	float _walkStoppingTime; // 0x2ec(0x04)
	bool _isFalling; // 0x2f0(0x01)
	char pad_2F1[0x3]; // 0x2f1(0x03)
	float _fallingPlayRate; // 0x2f4(0x04)
	bool _isJumping; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	float _jumpApex; // 0x2fc(0x04)
	float _jumpDuration; // 0x300(0x04)
	float _speedInWalkAnimation; // 0x304(0x04)
	float _speedInJogAnimation; // 0x308(0x04)
	float _speedInRunAnimation; // 0x30c(0x04)
	float _ventilationSpawnFallingAnimPlayRate; // 0x310(0x04)
	float _moveStartAnimationPlayRate; // 0x314(0x04)
	float _moveLoopAnimationPlayRate; // 0x318(0x04)
	float _moveStopAnimationStartTime; // 0x31c(0x04)
	float _moveStopAnimationPlayRate; // 0x320(0x04)
	struct FVector2D _moveDirectionRelativeToForwardVector; // 0x324(0x08)
	bool _shouldUseCurvedRunAnimation; // 0x32c(0x01)
	char pad_32D[0x3]; // 0x32d(0x03)
	float _distanceToActivateCurvedRunAnimation; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct UAnimSequenceBase* _walkStopAnimation; // 0x338(0x08)
	struct UAnimSequenceBase* _jogStopAnimation; // 0x340(0x08)
	struct UAnimSequenceBase* _runStopAnimation; // 0x348(0x08)
	struct UAnimSequenceBase* _runCurveStopAnimation; // 0x350(0x08)
	struct UAnimSequence* _grappledIdleAnimation; // 0x358(0x08)
	bool _shouldUseGrappleAnimation; // 0x360(0x01)
	char pad_361[0x3]; // 0x361(0x03)
	float _minUpperBodyBlendWeight; // 0x364(0x04)
	float _upperBodyBlendMaxSpeedXY; // 0x368(0x04)
	float _upperBodyBlendWeight; // 0x36c(0x04)
	float _upperBodyPitch; // 0x370(0x04)
	float _meshRootMaxOffset; // 0x374(0x04)
	float _meshRootMaxOffsetFP; // 0x378(0x04)
	float _meshRootMaxOffsetWall; // 0x37c(0x04)
	float _minDistanceToApplyMeshRootOffset; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	float _rootOffsetChangeRatePerSecond; // 0x388(0x04)
	struct FVector _meshRootCurrentOffset; // 0x38c(0x0c)
	char pad_398[0x8]; // 0x398(0x08)

	void AnimNotify_RFootDown(); // Function ConZ.RazorAnimInstance.AnimNotify_RFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed60
	void AnimNotify_LFootDown(); // Function ConZ.RazorAnimInstance.AnimNotify_LFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed40
};

// Class ConZ.RazorCommonData
// Size: 0x2a0 (Inherited: 0x30)
struct URazorCommonData : UDataAsset {
	float MaxHealth; // 0x30(0x04)
	float ProjectileDamageMultiplierPerBodyPart[0xc]; // 0x34(0x30)
	float MeleeDamageMultiplierPerBodyPart[0xc]; // 0x64(0x30)
	float ExplosionDamageMultiplier; // 0x94(0x04)
	float ExplosionDamageThresholdToTriggerHitReact; // 0x98(0x04)
	float WeakSpotDamageMultiplier; // 0x9c(0x04)
	float RagdollHitImpulseStrengthPerUnitDamage; // 0xa0(0x04)
	float HeadMaxAccumulatedDamageBeforeHitReact; // 0xa4(0x04)
	float BodyMaxAccumulatedDamageBeforeSmallHitReact; // 0xa8(0x04)
	float BodyMaxAccumulatedDamageBeforeLargeHitReact; // 0xac(0x04)
	float WeakSpotMaxAccumulatedDamageBeforeHitReact; // 0xb0(0x04)
	float WeakSpotHeavyHitReactMinSpeed; // 0xb4(0x04)
	float TimeNeededForAccumulatedDamageToStartDropping; // 0xb8(0x04)
	float TimeNeededToFullyDropAccumulatedDamage; // 0xbc(0x04)
	float DefaultAccumulatedDamageMultiplier; // 0xc0(0x04)
	float MeleeAccumulatedDamageMultiplier; // 0xc4(0x04)
	float DamageImmunityTime; // 0xc8(0x04)
	float CorpseSearchDuration; // 0xcc(0x04)
	struct FRazorTurnMontageDescription TurnMontageDescriptions[0x2]; // 0xd0(0x50)
	struct TArray<struct UAnimMontage*> SuddenWakeUpMontages; // 0x120(0x10)
	struct TArray<struct UAnimMontage*> NormalWakeUpMontages; // 0x130(0x10)
	struct UAnimMontage* EnterCombatMontage; // 0x140(0x08)
	struct TArray<struct FRazorAttackMontageDescription> BasicAttackAnimations; // 0x148(0x10)
	struct TArray<struct FRazorAttackMontageDescription> GroupAttackAnimations; // 0x158(0x10)
	struct UAnimMontage* MountAttackJumpMontage; // 0x168(0x08)
	struct UAnimMontage* MountAttackFailedMontage; // 0x170(0x08)
	struct UAnimMontage* MountAttackFailedToTallObstacleMontage; // 0x178(0x08)
	struct UAnimMontage* MountAttackFailedToShortObstacleMontage; // 0x180(0x08)
	float MountAttackFailMoveDistance; // 0x188(0x04)
	float MountAttackObstacleHeightThreshold; // 0x18c(0x04)
	struct UAnimMontage* VentilationSpawnAttackMontage; // 0x190(0x08)
	struct UAnimMontage* VentilationSpawnAttackMontageEnd; // 0x198(0x08)
	struct TArray<struct FRazorDeathAnimationData> WeakSpotDeathMontages; // 0x1a0(0x10)
	struct TArray<struct FRazorDeathAnimationData> MeleeDeathFrontMontage; // 0x1b0(0x10)
	struct TArray<struct FRazorDeathAnimationData> MeleeDeathBackMontage; // 0x1c0(0x10)
	struct TArray<struct FRazorDeathAnimationData> ProjectileDeathFrontMontage; // 0x1d0(0x10)
	struct TArray<struct FRazorDeathAnimationData> ProjectileDeathBackMontage; // 0x1e0(0x10)
	struct TArray<struct FRazorUpperBodyPitchRangeData> UpperBodyPitchRanges; // 0x1f0(0x10)
	float UpperBodyPitchChangeRate; // 0x200(0x04)
	float MaxUpperBodyPitchChangeDistance; // 0x204(0x04)
	struct TArray<struct UAnimMontage*> MountAttackInitiateChargeMontages; // 0x208(0x10)
	struct TArray<struct UAnimMontage*> IntimidationMontages; // 0x218(0x10)
	struct TArray<struct UAnimMontage*> DoorDestructionAnimations; // 0x228(0x10)
	float DoorBreakdownAnimationDistance; // 0x238(0x04)
	struct FName DoorDestructionNotifyName; // 0x23c(0x08)
	char pad_244[0x4]; // 0x244(0x04)
	struct UCurveVector* RazorPositionDuringVentilationAttackCurve; // 0x248(0x08)
	struct UAkAudioEvent* IdleSleepingAudioEvent; // 0x250(0x08)
	struct UAkAudioEvent* IdleAlertedAudioEvent; // 0x258(0x08)
	struct UAkAudioEvent* IdleAlertedAggressiveAudioEvent; // 0x260(0x08)
	struct UAkAudioEvent* IdleCombatAudioEvent; // 0x268(0x08)
	struct UAkAudioEvent* DeathAudioEvent; // 0x270(0x08)
	struct UAkAudioEvent* FootstepAudioEvent; // 0x278(0x08)
	struct UAkAudioEvent* StartSearchAudioEvent; // 0x280(0x08)
	struct UAkAudioEvent* StopSearchAudioEvent; // 0x288(0x08)
	struct FGameplayTag HitReactTypeStanding; // 0x290(0x08)
	struct FGameplayTag HitReactTypeWeakSpot; // 0x298(0x08)
};

// Class ConZ.RazorMovementComponent
// Size: 0xea0 (Inherited: 0xda0)
struct URazorMovementComponent : UConZCharacterMovementComponent {
	char pad_DA0[0x8]; // 0xda0(0x08)
	float _walkSpeedPerRazorStance[0x6]; // 0xda8(0x18)
	float _walkAccelerationPerRazorStance[0x6]; // 0xdc0(0x18)
	float _walkDecelerationPerRazorStance[0x6]; // 0xdd8(0x18)
	float _yawRotationSpeedPerRazorStance[0x6]; // 0xdf0(0x18)
	float _combatCloseChargeSpeedDistance; // 0xe08(0x04)
	float _combatCloseChargeSpeed; // 0xe0c(0x04)
	float _combatCloseChargeAcceleration; // 0xe10(0x04)
	float _combatCloseChargeDeceleration; // 0xe14(0x04)
	float _hitReactStateWalkSpeedMultiplier; // 0xe18(0x04)
	float _hitReactSlowdownDuration; // 0xe1c(0x04)
	char pad_E20[0x80]; // 0xe20(0x80)
};

// Class ConZ.RazorSpawnPoint
// Size: 0x2d0 (Inherited: 0x220)
struct ARazorSpawnPoint : AActor {
	struct UStaticMeshComponent* _staticMeshComponent; // 0x220(0x08)
	struct UStaticMeshComponent* _grateStaticMeshComponent; // 0x228(0x08)
	struct UMovableAudioSpline* _movableAudioSpline; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct FTransform _exitTransform; // 0x240(0x30)
	struct FVector _grateLaunchPosition; // 0x270(0x0c)
	struct FVector _grateLaunchDirectionVectorRelative; // 0x27c(0x0c)
	float _grateLaunchMinVelocity; // 0x288(0x04)
	float _grateLaunchMaxVelocity; // 0x28c(0x04)
	float _grateLaunchvelocityHalfAnglePitch; // 0x290(0x04)
	float _grateLaunchvelocityHalfAngleYaw; // 0x294(0x04)
	struct UNiagaraSystem* _burstOpenParticles; // 0x298(0x08)
	struct FName _particleAttachPointName; // 0x2a0(0x08)
	struct UAkAudioEvent* _beginPlayAudioEvent; // 0x2a8(0x08)
	struct UAkAudioEvent* _stopAudioEvent; // 0x2b0(0x08)
	struct UAkAudioEvent* _commotionAudioEvent; // 0x2b8(0x08)
	struct UAkAudioEvent* _burstOpenAudioEvent; // 0x2c0(0x08)
	bool _isOpened; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void NetMulticast_PlaySoundNearLocation(struct FVector Location, struct FVector destinationLocation); // Function ConZ.RazorSpawnPoint.NetMulticast_PlaySoundNearLocation // (Final|Net|Native|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e0f10
	void NetMulticast_PlaySoundFromRandomPoint(); // Function ConZ.RazorSpawnPoint.NetMulticast_PlaySoundFromRandomPoint // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x125cad0
	void NetMulticast_PlaySoundFromNearestEnd(struct FVector Location, struct FVector destinationLocation); // Function ConZ.RazorSpawnPoint.NetMulticast_PlaySoundFromNearestEnd // (Final|Net|Native|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e0e20
	void NetMulticast_PlayCommotionAudioEvent(); // Function ConZ.RazorSpawnPoint.NetMulticast_PlayCommotionAudioEvent // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1537780
	void NetMulticast_PlayBurstOpenEffects(); // Function ConZ.RazorSpawnPoint.NetMulticast_PlayBurstOpenEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x236c4d0
};

// Class ConZ.RecastNavMesh_Brenner
// Size: 0x578 (Inherited: 0x578)
struct ARecastNavMesh_Brenner : ARecastNavMesh {
};

// Class ConZ.RecastNavMesh_Humanoids
// Size: 0x578 (Inherited: 0x578)
struct ARecastNavMesh_Humanoids : ARecastNavMesh {
};

// Class ConZ.RecastNavMesh_LargeAnimals
// Size: 0x578 (Inherited: 0x578)
struct ARecastNavMesh_LargeAnimals : ARecastNavMesh {
};

// Class ConZ.RecastNavMesh_Sentries
// Size: 0x578 (Inherited: 0x578)
struct ARecastNavMesh_Sentries : ARecastNavMesh {
};

// Class ConZ.RecastNavMesh_SmallAnimals
// Size: 0x578 (Inherited: 0x578)
struct ARecastNavMesh_SmallAnimals : ARecastNavMesh {
};

// Class ConZ.RecipeIngredientButton
// Size: 0x320 (Inherited: 0x268)
struct URecipeIngredientButton : UUserWidget {
	char pad_268[0x58]; // 0x268(0x58)
	struct UImage* _background; // 0x2c0(0x08)
	struct UImage* _lines; // 0x2c8(0x08)
	struct UImage* _border; // 0x2d0(0x08)
	struct UImage* _icon; // 0x2d8(0x08)
	struct UHorizontalBox* _wholeUsesHBox; // 0x2e0(0x08)
	struct UTextBlock* _wholeUsesTextBlock; // 0x2e8(0x08)
	struct UHorizontalBox* _partialUsesHBox; // 0x2f0(0x08)
	struct UTextBlock* _partialUsesTextBlock; // 0x2f8(0x08)
	struct UCookingInfoButton* _infoButton; // 0x300(0x08)
	char pad_308[0x8]; // 0x308(0x08)
	struct UTextOnlyTooltip* _ingredientTextTooltipClass; // 0x310(0x08)
	char pad_318[0x8]; // 0x318(0x08)
};

// Class ConZ.RefrigeratorItem
// Size: 0xba0 (Inherited: 0xb90)
struct ARefrigeratorItem : AChestItem {
	struct URangedResourceConsumerComponentMultipleProviders* _rangedResourceConsumerComponent; // 0xb90(0x08)
	char pad_B98[0x8]; // 0xb98(0x08)
};

// Class ConZ.RegularDoorStatic
// Size: 0x5a0 (Inherited: 0x580)
struct ARegularDoorStatic : ADoor {
	struct FRotator _openRotation; // 0x580(0x0c)
	struct FRotator _closedRotation; // 0x58c(0x0c)
	char pad_598[0x8]; // 0x598(0x08)
};

// Class ConZ.RemoteKeyItem
// Size: 0x9e0 (Inherited: 0x9b0)
struct ARemoteKeyItem : AItem {
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9a8(0x08)
	float _triggerRadius; // 0x9b0(0x04)
	struct UAkAudioEvent* _triggerAudioEvent; // 0x9b8(0x08)
	char pad_9C4[0xc]; // 0x9c4(0x0c)
	bool _isPaired; // 0x9d0(0x01)
	char pad_9D1[0xf]; // 0x9d1(0x0f)
};

// Class ConZ.RemoteSensorItem
// Size: 0x9f0 (Inherited: 0x9b0)
struct ARemoteSensorItem : AItem {
	char pad_9B0[0x18]; // 0x9b0(0x18)
	struct UBasicGameResourceSlotItemComponent* _resourceSlotComponent; // 0x9c8(0x08)
	int32_t _maxPairedDevices; // 0x9d0(0x04)
	bool _hasAvailableSlots; // 0x9d4(0x01)
	char pad_9D5[0x1b]; // 0x9d5(0x1b)
};

// Class ConZ.RemoteSensorRegistry
// Size: 0x48 (Inherited: 0x28)
struct URemoteSensorRegistry : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.WeaponActionUnloadAmmoSequence
// Size: 0x50 (Inherited: 0x28)
struct UWeaponActionUnloadAmmoSequence : UWeaponAction {
	struct FBodyWeaponAnimation Animations; // 0x28(0x10)
	bool CanBeInterrupted; // 0x38(0x01)
	char pad_39[0x17]; // 0x39(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSectionFromPrevious // (Final|Native|Public|BlueprintCallable) // @ game+0x2535bf0
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionUnloadAmmoSequence.SetNextMontageSection // (Final|Native|Public|BlueprintCallable) // @ game+0x25359b0
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageEnded // (Native|Protected) // @ game+0x25356a0
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionUnloadAmmoSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x25355d0
	int32_t GetAmmoCount(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534f40
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534e80
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionUnloadAmmoSequence.GetActiveAnimationBody // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534dc0
	float Execute(int32_t AmmoCount); // Function ConZ.WeaponActionUnloadAmmoSequence.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x2534c60
	void End(bool Regular); // Function ConZ.WeaponActionUnloadAmmoSequence.End // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2534a30
	bool CanInterrupt(); // Function ConZ.WeaponActionUnloadAmmoSequence.CanInterrupt // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x115be80
	bool CanExecute(); // Function ConZ.WeaponActionUnloadAmmoSequence.CanExecute // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25347b0
};

// Class ConZ.RemoveCartridge
// Size: 0x58 (Inherited: 0x50)
struct URemoveCartridge : UWeaponActionUnloadAmmoSequence {
	struct FName MontageEndSectionName; // 0x50(0x08)
};

// Class ConZ.RemoveMagazineInsertCartridge
// Size: 0x90 (Inherited: 0x90)
struct URemoveMagazineInsertCartridge : UWeaponActionReloadSequence {
};

// Class ConZ.RemoveMagazineInsertMagazine
// Size: 0x90 (Inherited: 0x90)
struct URemoveMagazineInsertMagazine : UWeaponActionReloadSequence {
};

// Class ConZ.RemoveMagazineInsertMagazineInsertCartridge
// Size: 0xa0 (Inherited: 0x90)
struct URemoveMagazineInsertMagazineInsertCartridge : UWeaponActionReloadSequence {
	struct FName MontageEndSectionName; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class ConZ.RemoveMagazineRemoveCartridge
// Size: 0x58 (Inherited: 0x50)
struct URemoveMagazineRemoveCartridge : UWeaponActionUnloadAmmoSequence {
	struct FName MontageEndSectionName; // 0x50(0x08)
};

// Class ConZ.RepairableItemTag
// Size: 0x68 (Inherited: 0x30)
struct URepairableItemTag : UBaseItemTag {
	struct FRepairableParams Params; // 0x30(0x38)
};

// Class ConZ.RepairStatics
// Size: 0x28 (Inherited: 0x28)
struct URepairStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.RepairToolItemTag
// Size: 0x88 (Inherited: 0x30)
struct URepairToolItemTag : UBaseItemTag {
	struct FRepairToolItemParams Params; // 0x30(0x58)
};

// Class ConZ.ReplenishableResourceComponent
// Size: 0x690 (Inherited: 0x640)
struct UReplenishableResourceComponent : UReplenishableResourceBaseComponent {
	struct FFillItemWithReplenishableResourceInteractionData _replenishableResourceFillItemInteractionData; // 0x638(0x40)
	float QuantityPerDrink; // 0x678(0x04)
	float Salinity; // 0x67c(0x04)
	struct UAkAudioEvent* StartDrinkingAudioEvent; // 0x680(0x08)
	struct UAkAudioEvent* StopDrinkingAudioEvent; // 0x688(0x08)
};

// Class ConZ.ReplenishableResourceManager
// Size: 0x230 (Inherited: 0xb0)
struct UReplenishableResourceManager : UActorComponent {
	char pad_B0[0x178]; // 0xb0(0x178)
	int32_t _maxNumReplenishableResourceReplenishmentsPerTick; // 0x228(0x04)
	float _playerProximityToReplenish; // 0x22c(0x04)

	void NetMulticast_SetReplenishableResourceAmount(int32_t dataVersion, struct FPackedLocation ID, float Value); // Function ConZ.ReplenishableResourceManager.NetMulticast_SetReplenishableResourceAmount // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e5860
	void NetMulticast_ReserveReplenishableResourceSlot(int32_t dataVersion, struct FPackedLocation ID, int32_t SlotIndex); // Function ConZ.ReplenishableResourceManager.NetMulticast_ReserveReplenishableResourceSlot // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e5670
	void NetMulticast_ReleaseReplenishableResourceSlot(int32_t dataVersion, struct FPackedLocation ID, int32_t SlotIndex); // Function ConZ.ReplenishableResourceManager.NetMulticast_ReleaseReplenishableResourceSlot // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e51d0
	void NetMulticast_DestroyReplenishableResource(int32_t dataVersion, struct FPackedLocation ID); // Function ConZ.ReplenishableResourceManager.NetMulticast_DestroyReplenishableResource // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e4e80
	void NetMulticast_CreateReplenishableResource(int32_t dataVersion, struct FReplenishableResourceDescription Description); // Function ConZ.ReplenishableResourceManager.NetMulticast_CreateReplenishableResource // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e4d00
};

// Class ConZ.ReplicatedEffectsActor
// Size: 0x228 (Inherited: 0x220)
struct AReplicatedEffectsActor : AActor {
	float _lifeSpan; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
};

// Class ConZ.ReplicatedExplosionEffectsActor
// Size: 0x2d0 (Inherited: 0x228)
struct AReplicatedExplosionEffectsActor : AReplicatedEffectsActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct FTransform _explosionParticlesTransform; // 0x230(0x30)
	struct UParticleSystem* _defaultParticleSystem; // 0x260(0x08)
	struct TMap<enum class EPhysicalSurface, struct UParticleSystem*> _onImpactExplosionEffectsOverrides; // 0x268(0x50)
	struct UAkAudioEvent* _explosionSound; // 0x2b8(0x08)
	char pad_2C0[0x10]; // 0x2c0(0x10)
};

// Class ConZ.ReportingManager
// Size: 0x7d0 (Inherited: 0x220)
struct AReportingManager : AActor {
	char pad_220[0x168]; // 0x220(0x168)
	struct FMulticastInlineDelegate PrisonerWhistled; // 0x388(0x10)
	char pad_398[0x438]; // 0x398(0x438)
};

// Class ConZ.RequestMinigameToolsRequest
// Size: 0x40 (Inherited: 0x28)
struct URequestMinigameToolsRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.RequestMinigameToolsResponse
// Size: 0x38 (Inherited: 0x28)
struct URequestMinigameToolsResponse : UPlayerRpcChannelServerResponse {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.ResistanceSkill
// Size: 0xc8 (Inherited: 0xc8)
struct UResistanceSkill : UConstitutionSkill {
};

// Class ConZ.ResourceIndicatorWidget
// Size: 0x278 (Inherited: 0x268)
struct UResourceIndicatorWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)

	float GetResourceAmountRatio(); // Function ConZ.ResourceIndicatorWidget.GetResourceAmountRatio // (Final|Native|Public|BlueprintCallable) // @ game+0x24e4cd0
};

// Class ConZ.BaseResourceLightAnimator
// Size: 0x168 (Inherited: 0x28)
struct UBaseResourceLightAnimator : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	float _perlinNoiseTraversalSpeed; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FRuntimeFloatCurve _resourceRatioToBaseLightModifierCurve; // 0x38(0x88)
	struct FRuntimeFloatCurve _resourceRatioToRandomLightModifierBumpCurve; // 0xc0(0x88)
	char pad_148[0x20]; // 0x148(0x20)
};

// Class ConZ.ResourceSpotLightAnimator
// Size: 0x180 (Inherited: 0x168)
struct UResourceSpotLightAnimator : UBaseResourceLightAnimator {
	char pad_168[0x18]; // 0x168(0x18)
};

// Class ConZ.ResourcePointLightAnimator
// Size: 0x178 (Inherited: 0x168)
struct UResourcePointLightAnimator : UBaseResourceLightAnimator {
	char pad_168[0x10]; // 0x168(0x10)
};

// Class ConZ.ResourceLockingManager
// Size: 0x1a0 (Inherited: 0xb0)
struct UResourceLockingManager : UActorComponent {
	char pad_B0[0xf0]; // 0xb0(0xf0)

	void OnResourceDestroyed(struct AActor* Resource); // Function ConZ.ResourceLockingManager.OnResourceDestroyed // (Final|Native|Private) // @ game+0x24e5e20
	void OnLockOwnerDestroyed(struct AActor* lockOwner); // Function ConZ.ResourceLockingManager.OnLockOwnerDestroyed // (Final|Native|Private) // @ game+0x24e5d70
	void NetMulticast_UnlockResource(int32_t dataVersion, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockResource // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e5b10
	void NetMulticast_UnlockIntersectingAreas(int32_t dataVersion, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockIntersectingAreas // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e5a40
	void NetMulticast_UnlockArea(int32_t dataVersion, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_UnlockArea // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e5970
	void NetMulticast_RemoveAreaLocks(int32_t dataVersion, struct TArray<struct FAreaResourceLockNetwork> Locks); // Function ConZ.ResourceLockingManager.NetMulticast_RemoveAreaLocks // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e53c0
	void NetMulticast_RemoveActorLocks(int32_t dataVersion, struct TArray<struct FActorResourceLockNetwork> Locks); // Function ConZ.ResourceLockingManager.NetMulticast_RemoveActorLocks // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e52e0
	void NetMulticast_LockResource(int32_t dataVersion, struct FResourceNetworkGUID LockOwnerGUID, struct FResourceNetworkGUID ResourceGUID, int32_t ResourceId); // Function ConZ.ResourceLockingManager.NetMulticast_LockResource // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e5080
	void NetMulticast_LockArea(int32_t dataVersion, struct FResourceNetworkGUID LockOwnerGUID, struct FBox Area); // Function ConZ.ResourceLockingManager.NetMulticast_LockArea // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e4f50
};

// Class ConZ.ResourcePoweredLightItemComponent
// Size: 0x130 (Inherited: 0xc8)
struct UResourcePoweredLightItemComponent : UItemComponent {
	char pad_C8[0x18]; // 0xc8(0x18)
	float _intensityChangeStep; // 0xe0(0x04)
	float _minIntensityValue; // 0xe4(0x04)
	struct FColor _emissiveColorOn; // 0xe8(0x04)
	struct FColor _emissiveColorOff; // 0xec(0x04)
	struct UAkAudioEvent* _lightActivatedAudioEvent; // 0xf0(0x08)
	struct UBaseResourceLightAnimator* _animatorClass; // 0xf8(0x08)
	char pad_100[0x4]; // 0x100(0x04)
	char _lightIntensityReplicated; // 0x104(0x01)
	char pad_105[0x23]; // 0x105(0x23)
	struct UBaseResourceLightAnimator* _lightAnimator; // 0x128(0x08)

	void OnRep_LightIntensity(); // Function ConZ.ResourcePoweredLightItemComponent.OnRep_LightIntensity // (Final|Native|Private) // @ game+0x24e5e00
	void OnComponentDeactivated(struct UActorComponent* Component); // Function ConZ.ResourcePoweredLightItemComponent.OnComponentDeactivated // (Final|Native|Private) // @ game+0x24e5ce0
	void OnComponentActivated(struct UActorComponent* Component, bool wasReset); // Function ConZ.ResourcePoweredLightItemComponent.OnComponentActivated // (Final|Native|Private) // @ game+0x24e5c10
};

// Class ConZ.RespawnSettings
// Size: 0xb8 (Inherited: 0x30)
struct URespawnSettings : UDataAsset {
	char pad_30[0x18]; // 0x30(0x18)
	struct FRespawnParameters Parameters; // 0x48(0x6c)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class ConZ.RestAssetData
// Size: 0x50 (Inherited: 0x30)
struct URestAssetData : UInteractionAssetData {
	enum class EPrisonerRestingMode RestingMode; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UAnimSequenceBase* RestingAnimation; // 0x38(0x08)
	struct TArray<struct FVector> AdditionalEndRestLocations; // 0x40(0x10)
};

// Class ConZ.RestorableMeshInstancesManager
// Size: 0x350 (Inherited: 0xb0)
struct URestorableMeshInstancesManager : UActorComponent {
	char pad_B0[0x110]; // 0xb0(0x110)
	float _actorsProcessingDelayOnStreamingLevelLoad; // 0x1c0(0x04)
	float _processingBudgetPerTick; // 0x1c4(0x04)
	char pad_1C8[0x168]; // 0x1c8(0x168)
	float _generateMeshInstancesToRestoreUpdateInterval; // 0x330(0x04)
	char pad_334[0x14]; // 0x334(0x14)
	float _minDistanceToPlayerPawnToRestoreMeshInstance; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)

	void NetMulticast_RestoreRemovedMeshInstance(int32_t dataVersion, struct FRestorableMeshInstanceId InstanceId); // Function ConZ.RestorableMeshInstancesManager.NetMulticast_RestoreRemovedMeshInstance // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e5780
	void NetMulticast_RemoveMeshInstance(int32_t dataVersion, struct UInstancedStaticMeshComponent* Component, struct FRestorableMeshInstanceId InstanceId, struct FTransform InstanceTransform); // Function ConZ.RestorableMeshInstancesManager.NetMulticast_RemoveMeshInstance // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x24e54a0
};

// Class ConZ.RichTextInlineTextDecorator
// Size: 0x28 (Inherited: 0x28)
struct URichTextInlineTextDecorator : URichTextBlockDecorator {
};

// Class ConZ.RiflesSkill
// Size: 0x218 (Inherited: 0x218)
struct URiflesSkill : URangedWeaponsSkill {
};

// Class ConZ.RizzonerMovementComponent
// Size: 0x1900 (Inherited: 0xda0)
struct URizzonerMovementComponent : UConZCharacterMovementComponent {
	char pad_DA0[0xc]; // 0xda0(0x0c)
	float WaterImmersionToStartSwimming; // 0xdac(0x04)
	float WaterImmersionToStopSwimming; // 0xdb0(0x04)
	char pad_DB4[0xb4c]; // 0xdb4(0xb4c)

	struct FString GetServerData(); // Function ConZ.RizzonerMovementComponent.GetServerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24e4c50
	struct FString GetClientData(); // Function ConZ.RizzonerMovementComponent.GetClientData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24e4c50
};

// Class ConZ.RunningSkill
// Size: 0x138 (Inherited: 0xc8)
struct URunningSkill : UConstitutionSkill {
	struct FRunningSkillExperienceAwards NoSkillExperienceAwards; // 0xc8(0x08)
	struct FRunningSkillExperienceAwards BasicSkillExperienceAwards; // 0xd0(0x08)
	struct FRunningSkillExperienceAwards MediumSkillExperienceAwards; // 0xd8(0x08)
	struct FRunningSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xe0(0x08)
	struct FRunningSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xe8(0x08)
	struct FRunningSkillParametersPerSkillLevel NoSkillParameters; // 0xf0(0x10)
	struct FRunningSkillParametersPerSkillLevel BasicSkillParameters; // 0x100(0x10)
	struct FRunningSkillParametersPerSkillLevel MediumSkillParameters; // 0x110(0x10)
	struct FRunningSkillParametersPerSkillLevel AdvancedSkillParameters; // 0x120(0x10)
	char pad_130[0x8]; // 0x130(0x08)
};

// Class ConZ.PrisonerSkillUIData_Running
// Size: 0x58 (Inherited: 0x50)
struct UPrisonerSkillUIData_Running : UPrisonerSkillUIData {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class ConZ.ScopeableItemComponentState
// Size: 0x48 (Inherited: 0x40)
struct UScopeableItemComponentState : UItemComponentStateBase {
	int32_t CurrentZoomLevel; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class ConZ.ScopeableItemComponent
// Size: 0x120 (Inherited: 0xc8)
struct UScopeableItemComponent : UItemComponent {
	struct TArray<struct FScopeZoomLevelSettings> _zoomLevelSettings; // 0xc8(0x10)
	struct UTexture2D* _scopingOverlayTexture; // 0xd8(0x08)
	float _scopingStartDelay; // 0xe0(0x04)
	float _scopingStopDelay; // 0xe4(0x04)
	struct UAnimMontage* _montageStandingFP; // 0xe8(0x08)
	struct UAnimMontage* _montageCrouchingFP; // 0xf0(0x08)
	struct UAnimMontage* _montageProneFP; // 0xf8(0x08)
	struct UAnimMontage* _montageStandingTP; // 0x100(0x08)
	struct UAnimMontage* _montageCrouchingTP; // 0x108(0x08)
	struct UAnimMontage* _montageProneTP; // 0x110(0x08)
	int32_t _currentZoomLevel; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
};

// Class ConZ.ScreenSpaceHealthWidget
// Size: 0x268 (Inherited: 0x268)
struct UScreenSpaceHealthWidget : UUserWidget {

	void SetMaxHealthPercentage(float Value); // Function ConZ.ScreenSpaceHealthWidget.SetMaxHealthPercentage // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void SetHealthPercentage(float Value); // Function ConZ.ScreenSpaceHealthWidget.SetHealthPercentage // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.ScrollingSizeBox
// Size: 0x2c8 (Inherited: 0x268)
struct UScrollingSizeBox : UUserWidget {
	struct USizeBox* _mainSizeBox; // 0x268(0x08)
	struct UNamedSlot* _customContentSlot; // 0x270(0x08)
	bool _overrideWidth; // 0x278(0x01)
	bool _overrideHeight; // 0x279(0x01)
	char pad_27A[0x2]; // 0x27a(0x02)
	float _width; // 0x27c(0x04)
	float _height; // 0x280(0x04)
	float _speed; // 0x284(0x04)
	float _startHaltDuration; // 0x288(0x04)
	float _startAccelerationDuration; // 0x28c(0x04)
	float _endHaltDuration; // 0x290(0x04)
	float _endRetardationDuration; // 0x294(0x04)
	bool _isCultureDependantScrolling; // 0x298(0x01)
	enum class EScrollingSizeBoxDirection _direction; // 0x299(0x01)
	enum class EScrollingSizeBoxLoopingType _loopingType; // 0x29a(0x01)
	enum class EScrollingSizeBoxDynamic _dynamic; // 0x29b(0x01)
	enum class EScrollingSizeBoxScrollDemand _scrollDemand; // 0x29c(0x01)
	char pad_29D[0x2b]; // 0x29d(0x2b)
};

// Class ConZ.SearchBox
// Size: 0x308 (Inherited: 0x268)
struct USearchBox : UUserWidget {
	char pad_268[0x40]; // 0x268(0x40)
	bool PreviewSelectedState; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UEditableText* _editBox; // 0x2b0(0x08)
	struct UWidgetSwitcher* _backgroundSwitcher; // 0x2b8(0x08)
	struct UClearSearchButton* _clearSearchButton; // 0x2c0(0x08)
	char pad_2C8[0x20]; // 0x2c8(0x20)
	bool _overrideSearchQueryText; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct FText _searchQueryTextOverride; // 0x2f0(0x18)

	void TextChanged(struct FText& Text); // Function ConZ.SearchBox.TextChanged // (Final|Native|Private|HasOutParms) // @ game+0x24e9150
};

// Class ConZ.SearchItemDataAsset
// Size: 0x78 (Inherited: 0x30)
struct USearchItemDataAsset : UDataAsset {
	struct FText Caption; // 0x30(0x18)
	float Duration; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct FSearchPerItemData> SearchData; // 0x50(0x10)
	struct UAkAudioEvent* StartSearchAudioEvent; // 0x60(0x08)
	struct UAkAudioEvent* StopSearchAudioEvent; // 0x68(0x08)
	enum class ENoiseLevel noiseLevel; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class ConZ.SearchForItemsAssetData
// Size: 0x38 (Inherited: 0x30)
struct USearchForItemsAssetData : UInteractionAssetData {
	struct USearchItemDataAsset* SearchAsset; // 0x30(0x08)
};

// Class ConZ.SedentaryNPCAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct USedentaryNPCAnimInstance : UAnimInstance {
	struct FRotator _headTurningRotator; // 0x2c0(0x0c)
	char pad_2CC[0x4]; // 0x2cc(0x04)
};

// Class ConZ.SedentaryNPCBackgroundInteraction
// Size: 0xa0 (Inherited: 0x28)
struct USedentaryNPCBackgroundInteraction : UObject {
	enum class EBackgroundInteractionType _backgroundInteractionType; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t _priority; // 0x2c(0x04)
	float _cooldownTime; // 0x30(0x04)
	bool _canEverTick; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct FFloatRange _newBackgroundInteractionInterval; // 0x38(0x10)
	char pad_48[0x10]; // 0x48(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsBegin; // 0x58(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsTick; // 0x68(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsEnd; // 0x78(0x10)
	struct TArray<struct FSedentaryNPCHeadAnimationAndAudio> _animationVariationsOneShot; // 0x88(0x10)
	struct UAkAudioEvent* _stopOwningPawnAudioEvent; // 0x98(0x08)

	void NetMulticast_PlayBackgroundInteraction(int32_t animationAudioPairIndex, enum class EBackgroundInteractionPlayType playType); // Function ConZ.SedentaryNPCBackgroundInteraction.NetMulticast_PlayBackgroundInteraction // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e8f30
};

// Class ConZ.SedentaryNPCHeadAnimInstance
// Size: 0x400 (Inherited: 0x2c0)
struct USedentaryNPCHeadAnimInstance : UAnimInstance {
	struct TArray<struct FName> _updateableBones; // 0x2c0(0x10)
	struct TMap<struct FName, struct FTransform> _bonesWithUpdateableTransforms; // 0x2d0(0x50)
	struct UAnimSequenceBase* _faceIdleAnimation; // 0x320(0x08)
	struct FName _headBoneName; // 0x328(0x08)
	struct FRotator _headFollowingRotation; // 0x330(0x0c)
	char pad_33C[0x44]; // 0x33c(0x44)
	struct FVector _animationHeadScale; // 0x380(0x0c)
	char pad_38C[0x20]; // 0x38c(0x20)
	float _eyesYawCurveValue; // 0x3ac(0x04)
	float _eyesPitchCurveValue; // 0x3b0(0x04)
	char pad_3B4[0x44]; // 0x3b4(0x44)
	float _blinkCurveValue; // 0x3f8(0x04)
	char pad_3FC[0x4]; // 0x3fc(0x04)
};

// Class ConZ.SelectionOverlayWidget
// Size: 0x2e8 (Inherited: 0x268)
struct USelectionOverlayWidget : UUserWidget {
	char pad_268[0x48]; // 0x268(0x48)
	struct UImage* _solidShown; // 0x2b0(0x08)
	struct UImage* _gradientShown; // 0x2b8(0x08)
	struct UImage* _solidSelected; // 0x2c0(0x08)
	struct UImage* _gradientSelected; // 0x2c8(0x08)
	struct FDataTableRowHandle _highlightColorRef; // 0x2d0(0x10)
	float _solidWidth; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
};

// Class ConZ.SentryEncounterSaveState
// Size: 0x78 (Inherited: 0x38)
struct USentryEncounterSaveState : UConZCharacterEncounterSaveState {
	float health; // 0x38(0x04)
	bool IsSpawnedThroughSpawner; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	struct FVector SpawnerLocationZero; // 0x40(0x0c)
	struct FRotator SpawnerRotator; // 0x4c(0x0c)
	struct TArray<struct FVector> PatrolPointsRelativeLocations; // 0x58(0x10)
	float OperatingRange; // 0x68(0x04)
	bool IsForcedUnderground; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	int32_t AmmunitionLongRangeWeapon; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class ConZ.Sentry2
// Size: 0xf10 (Inherited: 0x830)
struct ASentry2 : AConZCharacter {
	char pad_830[0x80]; // 0x830(0x80)
	struct FName _pelvisBoneName; // 0x8b0(0x08)
	struct FName _eyesViewPointSocketName; // 0x8b8(0x08)
	struct FName _longRangeWeaponSocketName; // 0x8c0(0x08)
	struct TArray<struct FName> _longRangeWeaponMuzzleFlashBoneNames; // 0x8c8(0x10)
	struct FName _longRangeWeaponBoneName; // 0x8d8(0x08)
	struct FName _mediumRangeWeaponSocketName; // 0x8e0(0x08)
	struct TArray<struct FName> _mediumRangeWeaponMuzzleFlashBoneNames; // 0x8e8(0x10)
	struct FName _mediumRangeWeaponBoneName; // 0x8f8(0x08)
	struct FName _highPrecisionWeaponSocketName; // 0x900(0x08)
	struct FName _highPrecisionWeaponBoneName; // 0x908(0x08)
	struct TArray<struct FName> _grenadeLauncherSocketNames; // 0x910(0x10)
	struct FName _highPrecisionWeaponChargingSocket; // 0x920(0x08)
	struct FName _meleeAttackFailureGrenadeDropSocket; // 0x928(0x08)
	float _sensorHeightOffset; // 0x930(0x04)
	char pad_934[0x4]; // 0x934(0x04)
	struct TArray<struct FName> _damageParticlesSockets; // 0x938(0x10)
	struct UAkAudioEvent* _fireBulletAudioEvent; // 0x948(0x08)
	struct UAkAudioEvent* _startHighFireRateAttack; // 0x950(0x08)
	struct UAkAudioEvent* _endHighFireRateAttack; // 0x958(0x08)
	struct UAkAudioEvent* _reloadAudioEvent; // 0x960(0x08)
	struct UAkAudioEvent* _highPrecisionWeaponFireShotAudioEvent; // 0x968(0x08)
	struct UAkAudioEvent* _grenadeLaunchAudioEffect; // 0x970(0x08)
	struct UAkAudioEvent* _tearGasGrenadeLaunchAudioEffect; // 0x978(0x08)
	struct UAkAudioEvent* _stunGrenadeLaunchAudioEffect; // 0x980(0x08)
	struct UAkAudioEvent* _deathAudioEvent; // 0x988(0x08)
	struct UAkAudioEvent* _freezeWarningAudioEvent; // 0x990(0x08)
	struct UAkAudioEvent* _dropWeaponsRaiseHandsAudioEvent; // 0x998(0x08)
	struct UAkAudioEvent* _walkAwayAudioEvent; // 0x9a0(0x08)
	struct UAkAudioEvent* _beginCombatAudioEvent; // 0x9a8(0x08)
	struct UAkAudioEvent* _startSearchCorpseAudioEvent; // 0x9b0(0x08)
	struct UAkAudioEvent* _stopSearchCorpseAudioEvent; // 0x9b8(0x08)
	struct UAkAudioEvent* _upperBodyRotationAudioEvent; // 0x9c0(0x08)
	struct UAnimMontage* _normalAttackMontage; // 0x9c8(0x08)
	struct UAnimMontage* _mediumRangeAttackMontage; // 0x9d0(0x08)
	struct UAnimMontage* _reloadMontageLongRangeWeapon; // 0x9d8(0x08)
	struct UAnimMontage* _reloadMontageMediumRangeWeapon; // 0x9e0(0x08)
	struct UAnimMontage* _deathMontage; // 0x9e8(0x08)
	struct TArray<struct FSentryMeleeAttackDescription> _meleeMontageDescriptions; // 0x9f0(0x10)
	struct UAnimMontage* _highprecisionAttackMontage; // 0xa00(0x08)
	struct UAnimMontage* _enemySpottedMontage; // 0xa08(0x08)
	bool _hasUpperBodyRotation; // 0xa10(0x01)
	char pad_A11[0x3]; // 0xa11(0x03)
	float _upperBodyRotationMaxYawDegrees; // 0xa14(0x04)
	float _upperBodyRotationHighPrecisionAttackMaxYawDegrees; // 0xa18(0x04)
	float _upperBodyRotationFactor; // 0xa1c(0x04)
	float _upperBodyNetSmoothUpdateRotationTime; // 0xa20(0x04)
	float _upperBodyRotationAngularVelocitySoundThreshold; // 0xa24(0x04)
	char pad_A28[0x4]; // 0xa28(0x04)
	struct FVector _upperBodyFocusLocation; // 0xa2c(0x0c)
	char pad_A38[0x9]; // 0xa38(0x09)
	bool _hasHighFireRateAttackAnimation; // 0xa41(0x01)
	char pad_A42[0x6]; // 0xa42(0x06)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyLongRange; // 0xa48(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyHighFireRate; // 0xa50(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyHighPrecision; // 0xa58(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyMediumRange; // 0xa60(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyLongRangeSP; // 0xa68(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyHighFireRateSP; // 0xa70(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyHighPrecisionSP; // 0xa78(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyMediumRangeSP; // 0xa80(0x08)
	char pad_A88[0x8]; // 0xa88(0x08)
	float _gunsLerpFactor; // 0xa90(0x04)
	char pad_A94[0x4]; // 0xa94(0x04)
	struct AProjectile* _projectileClass; // 0xa98(0x08)
	struct AProjectile* _projectileClassClient; // 0xaa0(0x08)
	float _maxLongRangeWeaponHalfAngle; // 0xaa8(0x04)
	char pad_AAC[0xc]; // 0xaac(0x0c)
	float _mediumGunsLerpFactor; // 0xab8(0x04)
	char pad_ABC[0x4]; // 0xabc(0x04)
	struct AProjectile* _mediumRangeProjectileClass; // 0xac0(0x08)
	struct AProjectile* _mediumRangeProjectileClassClient; // 0xac8(0x08)
	float _maxMediumRangeWeaponHalfAngle; // 0xad0(0x04)
	char pad_AD4[0x14]; // 0xad4(0x14)
	struct AProjectile* _highPrecisonWeaponProjectileClass; // 0xae8(0x08)
	struct AProjectile* _highPrecisonWeaponProjectileClassClient; // 0xaf0(0x08)
	float _maxHighPrecisionWeaponHalfAngle; // 0xaf8(0x04)
	char pad_AFC[0xc]; // 0xafc(0x0c)
	struct AProjectile* _grenadeProjectileClass; // 0xb08(0x08)
	struct AItem* _tearGasGrenadeItemClass; // 0xb10(0x08)
	struct AItem* _stunGrenadeItemClass; // 0xb18(0x08)
	float _stunGreandeExplosionDelayAfterReachingGround; // 0xb20(0x04)
	float _itemGreandeDirectionRandomizationAngle; // 0xb24(0x04)
	char pad_B28[0x10]; // 0xb28(0x10)
	struct USentryMovementComponent* _sentryMovementComponent; // 0xb38(0x08)
	struct UHitReactComponent* _hitReactComponent; // 0xb40(0x08)
	struct FGameplayTag _hitReactTag; // 0xb48(0x08)
	bool _isAlive; // 0xb50(0x01)
	char pad_B51[0x3]; // 0xb51(0x03)
	float _maxHealth; // 0xb54(0x04)
	float _health; // 0xb58(0x04)
	char pad_B5C[0x4]; // 0xb5c(0x04)
	float _healthStateThresholds[0x6]; // 0xb60(0x18)
	float _deactivatedTime; // 0xb78(0x04)
	char pad_B7C[0x4]; // 0xb7c(0x04)
	float _armorDamageReductionExplosion; // 0xb80(0x04)
	float _armorDamageReductionCollision; // 0xb84(0x04)
	float _exlosionDamageHitReactThreshold; // 0xb88(0x04)
	bool _isStunnedDuringHitReact; // 0xb8c(0x01)
	char pad_B8D[0x3]; // 0xb8d(0x03)
	float _longRangeWeaponFireRate; // 0xb90(0x04)
	float _longRangeWeaponFireRateVariation; // 0xb94(0x04)
	float _longRangeWeaponHalfAngleDegrees; // 0xb98(0x04)
	int32_t _maxAmmunitionLongRangeWeapon; // 0xb9c(0x04)
	char pad_BA0[0x4]; // 0xba0(0x04)
	int32_t _maxAmmunitionMediumRangeWeapon; // 0xba4(0x04)
	char pad_BA8[0x4]; // 0xba8(0x04)
	float _longRangeWeaponSpreadHalfAngle; // 0xbac(0x04)
	float _mediumRangeWeaponFireRate; // 0xbb0(0x04)
	float _mediumRangeWeaponHalfAngleDegrees; // 0xbb4(0x04)
	float _meleeAttackRate; // 0xbb8(0x04)
	char pad_BBC[0x14]; // 0xbbc(0x14)
	struct FVector _weaponOverrideAimLocationRep; // 0xbd0(0x0c)
	char pad_BDC[0x34]; // 0xbdc(0x34)
	struct TArray<struct FSentryPatrolPoint> _patrolPoints; // 0xc10(0x10)
	struct UParticleSystem* _muzzlePS; // 0xc20(0x08)
	struct TArray<struct UParticleSystemComponent*> _muzzlePSCs; // 0xc28(0x10)
	struct UParticleSystem* _highPrecisionWeaponMuzzlePS; // 0xc38(0x08)
	struct UParticleSystemComponent* _highPrecisionWeaponMuzzlePSC; // 0xc40(0x08)
	float _muzzleEffectsScaleDistanceStart; // 0xc48(0x04)
	float _muzzleEffectsScaleDistanceRange; // 0xc4c(0x04)
	float _muzzleEffectsScaleByDistanceFactor; // 0xc50(0x04)
	char pad_C54[0x4]; // 0xc54(0x04)
	struct UNiagaraSystem* _highPrecisionWeaponChargingPS; // 0xc58(0x08)
	struct UNiagaraComponent* _highPrecisionWeaponChargingPSC; // 0xc60(0x08)
	struct UNiagaraSystem* _mediumRangeWeaponPS; // 0xc68(0x08)
	struct UNiagaraComponent* _mediumRangeWeaponPSC; // 0xc70(0x08)
	char pad_C78[0x38]; // 0xc78(0x38)
	struct FName _lightMaterialSlotName; // 0xcb0(0x08)
	struct TArray<struct FName> _additionalLightsMaterialSlotNames; // 0xcb8(0x10)
	struct FColor _normalLightColor; // 0xcc8(0x04)
	struct FColor _alertedLightColor; // 0xccc(0x04)
	struct FColor _combatLightColor; // 0xcd0(0x04)
	char pad_CD4[0x4]; // 0xcd4(0x04)
	struct FName _emissionColorParameterName; // 0xcd8(0x08)
	float _spottingPercentage; // 0xce0(0x04)
	struct FInt32Range _damageEffectsNumPerHealthStateData[0x6]; // 0xce4(0x60)
	char pad_D44[0x4]; // 0xd44(0x04)
	struct TArray<struct FSentryDamageEffectData> _damageParticleEffectsPSData; // 0xd48(0x10)
	char pad_D58[0x50]; // 0xd58(0x50)
	float _damageParticleIntensityPerHealthState[0x6]; // 0xda8(0x18)
	float _stompShakeEffectRadius; // 0xdc0(0x04)
	float _stompShakeMaxEffectRadius; // 0xdc4(0x04)
	float _stompShakeEffectFalloffExponent; // 0xdc8(0x04)
	char pad_DCC[0x4]; // 0xdcc(0x04)
	struct UMatineeCameraShake* _stompCameraShake; // 0xdd0(0x08)
	struct UStaticMeshComponent* _laserMeshComponent; // 0xdd8(0x08)
	bool _canEverDrawLaser; // 0xde0(0x01)
	char pad_DE1[0x3]; // 0xde1(0x03)
	float _walkSpeedMultiplier; // 0xde4(0x04)
	float _walkSpeedMultiplierMin; // 0xde8(0x04)
	float _walkSpeedMultiplierMax; // 0xdec(0x04)
	char pad_DF0[0x4]; // 0xdf0(0x04)
	float _corpseSearchDuration; // 0xdf4(0x04)
	char pad_DF8[0x1]; // 0xdf8(0x01)
	char _packedGeneralData; // 0xdf9(0x01)
	char pad_DFA[0x2]; // 0xdfa(0x02)
	uint32_t _packedCombatData; // 0xdfc(0x04)
	struct FHeatSourceParameters _transientHeatSourceParameters; // 0xe00(0x24)
	struct FVector _transientHeatSourceOffset; // 0xe24(0x0c)
	char pad_E30[0x10]; // 0xe30(0x10)
	float _autoSaveInterval; // 0xe40(0x04)
	char pad_E44[0x4]; // 0xe44(0x04)
	bool _shouldSaveAndLoadSentry; // 0xe48(0x01)
	char pad_E49[0x1f]; // 0xe49(0x1f)
	struct TWeakObjectPtr<struct AActor> _foe; // 0xe68(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> _knownTargets; // 0xe70(0x10)
	char pad_E80[0x20]; // 0xe80(0x20)
	struct FName _healthServerSettingName; // 0xea0(0x08)
	struct FName _projectileDamageMultiplierServerSettingName; // 0xea8(0x08)
	struct FName _railgunProjectileDamageMultiplierServerSettingName; // 0xeb0(0x08)
	struct FName _grenadeProjectileDamageMultiplierServerSettingName; // 0xeb8(0x08)
	struct TSoftClassPtr<UObject> _spawnableDropshipClass; // 0xec0(0x28)
	char pad_EE8[0x20]; // 0xee8(0x20)
	int32_t _initialRandomSeed; // 0xf08(0x04)
	char pad_F0C[0x4]; // 0xf0c(0x04)

	void OnRep_SpottingPercentage(); // Function ConZ.Sentry2.OnRep_SpottingPercentage // (Final|Native|Private) // @ game+0x24e9130
	void OnRep_PackedGeneralData(); // Function ConZ.Sentry2.OnRep_PackedGeneralData // (Final|Native|Private) // @ game+0x24e9110
	void OnRep_PackedCombatData(); // Function ConZ.Sentry2.OnRep_PackedCombatData // (Final|Native|Private) // @ game+0x24e90f0
	void OnRep_IsAlive(); // Function ConZ.Sentry2.OnRep_IsAlive // (Final|Native|Private) // @ game+0x24e90d0
	void NetMulticast_StartHighSpreadAttackEffects(); // Function ConZ.Sentry2.NetMulticast_StartHighSpreadAttackEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x240a660
	void NetMulticast_RemoveKnownTarget(struct AActor* Actor); // Function ConZ.Sentry2.NetMulticast_RemoveKnownTarget // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c98a0
	void NetMulticast_ReloadMediumRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_ReloadMediumRangeWeapon // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2383f80
	void NetMulticast_ReloadLongRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_ReloadLongRangeWeapon // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2453f50
	void NetMulticast_PlayWalkAwaySound(); // Function ConZ.Sentry2.NetMulticast_PlayWalkAwaySound // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9880
	void NetMulticast_PlayTearGasGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayTearGasGrenadeLaunchEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24721d0
	void NetMulticast_PlayStunGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayStunGrenadeLaunchEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24e90b0
	void NetMulticast_PlayMeleeAttackMontage(int32_t kickIndex); // Function ConZ.Sentry2.NetMulticast_PlayMeleeAttackMontage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e9020
	void NetMulticast_PlayHighPrecisionAttackMontage(); // Function ConZ.Sentry2.NetMulticast_PlayHighPrecisionAttackMontage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x246f810
	void NetMulticast_PlayGrenadeLaunchEffects(); // Function ConZ.Sentry2.NetMulticast_PlayGrenadeLaunchEffects // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24e9000
	void NetMulticast_PlayFreezeWarningSound(); // Function ConZ.Sentry2.NetMulticast_PlayFreezeWarningSound // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2347030
	void NetMulticast_PlayEnemySpottedMontage(); // Function ConZ.Sentry2.NetMulticast_PlayEnemySpottedMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c97c0
	void NetMulticast_PlayDropWeaponsRaiseHandsSound(); // Function ConZ.Sentry2.NetMulticast_PlayDropWeaponsRaiseHandsSound // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9860
	void NetMulticast_PlayBeginCombatSound(); // Function ConZ.Sentry2.NetMulticast_PlayBeginCombatSound // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x23c9780
	void NetMulticast_OnSentryDeath(); // Function ConZ.Sentry2.NetMulticast_OnSentryDeath // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x237a360
	void NetMulticast_OnSentryDeactivated(); // Function ConZ.Sentry2.NetMulticast_OnSentryDeactivated // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23dc2d0
	void NetMulticast_OnSentryActivating(); // Function ConZ.Sentry2.NetMulticast_OnSentryActivating // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2473f60
	void NetMulticast_OnSentryActivated(); // Function ConZ.Sentry2.NetMulticast_OnSentryActivated // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24e8f10
	void NetMulticast_HandleHit(enum class EHitDirectionType hitDirectionType); // Function ConZ.Sentry2.NetMulticast_HandleHit // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x234bba0
	void NetMulticast_FireShotEffectsMediumRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_FireShotEffectsMediumRangeWeapon // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x246f490
	void NetMulticast_FireShotEffectsLongRangeWeapon(); // Function ConZ.Sentry2.NetMulticast_FireShotEffectsLongRangeWeapon // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x24e8ef0
	void NetMulticast_FireShotEffectsHighSpread(); // Function ConZ.Sentry2.NetMulticast_FireShotEffectsHighSpread // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x246f7f0
	void NetMulticast_EndHighSpreadAttackEffects(); // Function ConZ.Sentry2.NetMulticast_EndHighSpreadAttackEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2476080
	void NetMulticast_AddKnownTarget(struct AActor* Actor); // Function ConZ.Sentry2.NetMulticast_AddKnownTarget // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x23c96f0
	struct UFlamethrowerComponent* GetFlamethrowerComponent(); // Function ConZ.Sentry2.GetFlamethrowerComponent // (Final|Native|Private|Const) // @ game+0x24e8ec0
};

// Class ConZ.SentryAIControllerEncounterSaveState
// Size: 0x88 (Inherited: 0x80)
struct USentryAIControllerEncounterSaveState : UConZAIControllerEncounterSaveState {
	enum class ESentryState2 SentryState; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class ConZ.SentryAIController2
// Size: 0x910 (Inherited: 0x450)
struct ASentryAIController2 : AConZAIController {
	char pad_450[0xd0]; // 0x450(0xd0)
	bool _canHear; // 0x520(0x01)
	bool _canSee; // 0x521(0x01)
	char pad_522[0x6]; // 0x522(0x06)
	struct UAISenseConfig_Sight* _currentSightSenseConfig; // 0x528(0x08)
	struct UAISenseConfig_Hearing* _currentHearingSenseConfig; // 0x530(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigPatrolling; // 0x538(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigAlerted; // 0x540(0x08)
	struct UAISenseConfig_Sight* _sightSenseConfigCombat; // 0x548(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigPatrolling; // 0x550(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigAlerted; // 0x558(0x08)
	struct UAISenseConfig_Hearing* _hearingSenseConfigCombat; // 0x560(0x08)
	float _spottingTimeDecayMultiplier; // 0x568(0x04)
	float _forgetKnownEnemyTime; // 0x56c(0x04)
	int32_t _noiseStimuliBeforeInstantlyLocatingCharacter; // 0x570(0x04)
	char pad_574[0x4]; // 0x574(0x04)
	struct TArray<struct FName> _specialNoiseTags; // 0x578(0x10)
	float _timeUntilNoiseStimuliCounterReset; // 0x588(0x04)
	char pad_58C[0xc]; // 0x58c(0x0c)
	float _threatLevelAccumulationMultiplier; // 0x598(0x04)
	float _onHearNoiseThreatLevelIncrease; // 0x59c(0x04)
	float _onDamageTakeThreatLevelIncrease; // 0x5a0(0x04)
	char pad_5A4[0x4]; // 0x5a4(0x04)
	float _switchTargetCharacterTime; // 0x5a8(0x04)
	struct FDetectionDelayTimerData _detectionDelayTimerData; // 0x5ac(0x10)
	float _distanceWhenConsideredCharacterEnteredHotZone; // 0x5bc(0x04)
	float _maxDistanceWhenTemporaryPointIsConsideredTooClose; // 0x5c0(0x04)
	int32_t _temporaryPatrolPointVisitsUntilDeleted; // 0x5c4(0x04)
	char pad_5C8[0x4]; // 0x5c8(0x04)
	float _checkSurroundingsTime; // 0x5cc(0x04)
	char pad_5D0[0x4]; // 0x5d0(0x04)
	bool _shouldRotateDuringCheck; // 0x5d4(0x01)
	char pad_5D5[0x3]; // 0x5d5(0x03)
	float _checkSurroundingsAngle; // 0x5d8(0x04)
	char pad_5DC[0xc]; // 0x5dc(0x0c)
	float _investigatingLocationOverallTime; // 0x5e8(0x04)
	char pad_5EC[0x4]; // 0x5ec(0x04)
	float _investigatingLocationTime; // 0x5f0(0x04)
	char pad_5F4[0x4]; // 0x5f4(0x04)
	float _investigatingBuildingTime; // 0x5f8(0x04)
	char pad_5FC[0x24]; // 0x5fc(0x24)
	float _guardLocationTime; // 0x620(0x04)
	char pad_624[0x4]; // 0x624(0x04)
	float _guardLocationSwitchFocusTime; // 0x628(0x04)
	char pad_62C[0x24]; // 0x62c(0x24)
	float _enemySpottedWarningTime; // 0x650(0x04)
	char pad_654[0x4]; // 0x654(0x04)
	float _maxTolerance; // 0x658(0x04)
	char pad_65C[0x4]; // 0x65c(0x04)
	float _enemySpottedOutOfSightTimeLimit; // 0x660(0x04)
	char pad_664[0x8]; // 0x664(0x08)
	float _distanceWhenConsideredCharacterLeavingHotZone; // 0x66c(0x04)
	float _freezeCheckTime; // 0x670(0x04)
	float _freezeCheckToleranceDrainMultiplier; // 0x674(0x04)
	int32_t _numberOfWarningShots; // 0x678(0x04)
	char pad_67C[0x4]; // 0x67c(0x04)
	float _raiseHandsCheckTime; // 0x680(0x04)
	float _raiseHandsCheckToleranceDrainMultiplier; // 0x684(0x04)
	float _walkAwayCheckToleranceDrainMultiplier; // 0x688(0x04)
	float _movingToHotZoneToleranceDrainMultiplier; // 0x68c(0x04)
	float _minMovingToHotZoneRange; // 0x690(0x04)
	float _otherToleranceDrainMultiplier; // 0x694(0x04)
	float _minimumAlertedTime; // 0x698(0x04)
	char pad_69C[0x4]; // 0x69c(0x04)
	float _observeEnemyMovementTime; // 0x6a0(0x04)
	char pad_6A4[0x4]; // 0x6a4(0x04)
	float _observeEnemyMovementThreatLevelIncreasePerStateEntry; // 0x6a8(0x04)
	float _observeEnemyMovementOpenFireThreshold; // 0x6ac(0x04)
	char pad_6B0[0xc]; // 0x6b0(0x0c)
	float _beginShootingTime; // 0x6bc(0x04)
	char pad_6C0[0x8]; // 0x6c0(0x08)
	struct TArray<struct FSentryCombatBehaviorMode> _sentryCombatBehaviorModes; // 0x6c8(0x10)
	char pad_6D8[0x4]; // 0x6d8(0x04)
	float _combatBehaviorModeIncreaseTime; // 0x6dc(0x04)
	char pad_6E0[0x4]; // 0x6e0(0x04)
	float _combatBehaviorModeTimeIncreasePerDamageTaken; // 0x6e4(0x04)
	float _combatBehaviorModeDecreaseTime; // 0x6e8(0x04)
	char pad_6EC[0x4]; // 0x6ec(0x04)
	float _combatSwitchVariationTimeMin; // 0x6f0(0x04)
	float _combatSwitchVariationTimeMax; // 0x6f4(0x04)
	char pad_6F8[0x8]; // 0x6f8(0x08)
	float _combatModeOnEnterCombatSwitchVariationTimeElapsedTimePercentage; // 0x700(0x04)
	float _meleeFireRateTime; // 0x704(0x04)
	char pad_708[0x4]; // 0x708(0x04)
	float _highFireRateSpreadMultiplier; // 0x70c(0x04)
	float _highFireRateInitialAttackDelay; // 0x710(0x04)
	char pad_714[0x4]; // 0x714(0x04)
	float _highFireRateAttackDuration; // 0x718(0x04)
	char pad_71C[0x4]; // 0x71c(0x04)
	float _highPrecisionShotAimTime; // 0x720(0x04)
	float _highPrecisionShotCooldownTime; // 0x724(0x04)
	float _highPrecisionBlockCheckDistance; // 0x728(0x04)
	float _grenadeLaunchMinDistance; // 0x72c(0x04)
	float _grenadeLaunchPredictionVariationMin; // 0x730(0x04)
	float _grenadeLaunchPredictionVariationMax; // 0x734(0x04)
	float _grenadeLaunchAimTime; // 0x738(0x04)
	int32_t _grenadeLaunchAmountMax; // 0x73c(0x04)
	char pad_740[0x4]; // 0x740(0x04)
	float _grenadeLaunchPauseBetweenShotsTime; // 0x744(0x04)
	char pad_748[0x4]; // 0x748(0x04)
	float _grenadeLaunchCooldownTime; // 0x74c(0x04)
	char pad_750[0x4]; // 0x750(0x04)
	struct FFloatRange _attackModeExitRanges[0x3]; // 0x754(0x30)
	float _attackModeEntryRanges[0x3]; // 0x784(0x0c)
	float _combatMoveCloserDistance; // 0x790(0x04)
	float _combatDistance; // 0x794(0x04)
	char pad_798[0xc]; // 0x798(0x0c)
	int32_t _consecutiveMeleeAttacksNeededToDropGrenade; // 0x7a4(0x04)
	char pad_7A8[0x4]; // 0x7a8(0x04)
	float _combatNoSightTime; // 0x7ac(0x04)
	float _timeSpentStandingToStartAimingForTheHead; // 0x7b0(0x04)
	char pad_7B4[0x4]; // 0x7b4(0x04)
	float _chanceToHitOverrideTargetActor; // 0x7b8(0x04)
	float _damageToDealHitOverrideTargetActorPerShot; // 0x7bc(0x04)
	float _searchForEnemyAfterLostStimulusTime; // 0x7c0(0x04)
	float _combatLostSightInvestigateLocationTime; // 0x7c4(0x04)
	char pad_7C8[0x4]; // 0x7c8(0x04)
	float _distanceFromActorWhenInvestigationLocationIsChanged; // 0x7cc(0x04)
	float _relocatingAngle; // 0x7d0(0x04)
	float _relocatingRadius; // 0x7d4(0x04)
	struct FFloatInterval _pauseBetweenBaseElementsToDestroy; // 0x7d8(0x08)
	char pad_7E0[0x4]; // 0x7e0(0x04)
	float _baseElementChanceToHit; // 0x7e4(0x04)
	float _damageToBBElement; // 0x7e8(0x04)
	char pad_7EC[0x30]; // 0x7ec(0x30)
	struct FFloatInterval _extractionCooldownTimeInterval; // 0x81c(0x08)
	char pad_824[0x20]; // 0x824(0x20)
	float _maximumOperatingRadius; // 0x844(0x04)
	char pad_848[0xc]; // 0x848(0x0c)
	float _movingAwayHalfAngleDegrees; // 0x854(0x04)
	float _movingTowardsHalfAngleDegrees; // 0x858(0x04)
	float _acceptanceRadius; // 0x85c(0x04)
	char pad_860[0x10]; // 0x860(0x10)
	float _timeToBeConsideredStuck; // 0x870(0x04)
	char pad_874[0x8]; // 0x874(0x08)
	float _rotationAngleCosToStartWalking; // 0x87c(0x04)
	char pad_880[0x90]; // 0x880(0x90)

	void SensingComponent_OnSensePawn(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.SentryAIController2.SensingComponent_OnSensePawn // (Final|Native|Private|HasOutParms) // @ game+0x24eb940
};

// Class ConZ.SentryAnimInstance2
// Size: 0x400 (Inherited: 0x2c0)
struct USentryAnimInstance2 : UAnimInstance {
	bool ShouldUseLUWalkStopAnimation; // 0x2b8(0x01)
	float stoppingDistance; // 0x2bc(0x04)
	char pad_2C5[0xb]; // 0x2c5(0x0b)
	struct FInPlaceTurningData _turnInPlaceData; // 0x2d0(0x2c)
	char pad_2FC[0x10]; // 0x2fc(0x10)
	float _upperBodyRotationLerpFactor; // 0x30c(0x04)
	float _grenadeLauncherUpperFlapMaxPitch; // 0x310(0x04)
	float _grenadeLauncherLowerFlapMaxPitch; // 0x314(0x04)
	float _grenadeLauncherFlapsTimeToOpenFlaps; // 0x318(0x04)
	int32_t _glitchingVaritionsNum; // 0x31c(0x04)
	float _glitchingUpdateTimeMin; // 0x320(0x04)
	float _glitchingUpdateTimeMax; // 0x324(0x04)
	float _chanceToGlitchPerHealthState[0x6]; // 0x328(0x18)
	int32_t _miningunBonesNum; // 0x340(0x04)
	float _minigunRotationSpeed; // 0x344(0x04)
	float _minigunRotationAcceleration; // 0x348(0x04)
	float _minigunRotationDeceleration; // 0x34c(0x04)
	char pad_350[0x4]; // 0x350(0x04)
	bool _isSentryCompletelyInitialized; // 0x354(0x01)
	bool _wantsToMove; // 0x355(0x01)
	bool _previousWantsToMove; // 0x356(0x01)
	enum class ESentryMovementPace2 _movementPace; // 0x357(0x01)
	float _actualCourseAngle; // 0x358(0x04)
	float _desiredCourseAngle; // 0x35c(0x04)
	float _desiredCoursePitchAngle; // 0x360(0x04)
	float _angularVelocity; // 0x364(0x04)
	struct FVector _velocity; // 0x368(0x0c)
	float _speed; // 0x374(0x04)
	float _walkSpeedMultiplier; // 0x378(0x04)
	struct FVector _forwardVector; // 0x37c(0x0c)
	bool _isFalling; // 0x388(0x01)
	bool _isDead; // 0x389(0x01)
	enum class ESentryStance _sentryStance; // 0x38a(0x01)
	enum class ESentryHealthState _sentryHealthState; // 0x38b(0x01)
	enum class ESentryCombatVariation _combatVariation; // 0x38c(0x01)
	bool _shouldAimLongRangeWeapon; // 0x38d(0x01)
	char pad_38E[0x2]; // 0x38e(0x02)
	struct FVector _longRangeGunLookAtLocation; // 0x390(0x0c)
	bool _shouldAimMediumRangeWeapon; // 0x39c(0x01)
	char pad_39D[0x3]; // 0x39d(0x03)
	struct FVector _mediumRangeGunLookAtLocation; // 0x3a0(0x0c)
	bool _shouldAimHighPrecisionWeapon; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)
	struct FVector _highPrecisionGunLookAtLocation; // 0x3b0(0x0c)
	bool _hasUpperBodyFocusLocation; // 0x3bc(0x01)
	char pad_3BD[0x3]; // 0x3bd(0x03)
	float _upperBodyFocusRotationYaw; // 0x3c0(0x04)
	float _grenadeLauncherUpperFlapCurrentPitch; // 0x3c4(0x04)
	float _grenadeLauncherLowerFlapCurrentPitch; // 0x3c8(0x04)
	bool _isFiring; // 0x3cc(0x01)
	char pad_3CD[0x3]; // 0x3cd(0x03)
	struct TArray<struct FSentryGlitchingPartInfo> _partGlitchingInfo; // 0x3d0(0x10)
	struct TArray<float> _minigunRotationAngles; // 0x3e0(0x10)
	bool _isDeactivated; // 0x3f0(0x01)
	bool _isActivating; // 0x3f1(0x01)
	char pad_3F2[0xe]; // 0x3f2(0x0e)

	float GetTurnInPlaceElapsedTimeRight(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeRight // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x24eb370
	float GetTurnInPlaceElapsedTimeLeft(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceElapsedTimeLeft // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x24eb350
	float GetTurnInPlaceDirectionBlendAlpha(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceDirectionBlendAlpha // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x24eb300
	float GetTurnInPlaceBlendAlpha(); // Function ConZ.SentryAnimInstance2.GetTurnInPlaceBlendAlpha // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x24eb2b0
	float FindTimeAtStoppingDistance(struct UAnimSequenceBase* AnimSequence, float stoppingDistance); // Function ConZ.SentryAnimInstance2.FindTimeAtStoppingDistance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24eb1e0
	void AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryPlayLongRangeWeaponMuzzleFlash // (Native|Event|Public|BlueprintEvent) // @ game+0x24eb1c0
	void AnimNotify_SentryJump(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryJump // (Native|Event|Public|BlueprintEvent) // @ game+0xbbc480
	void AnimNotify_SentryHighPrecisionWeaponStartCharging(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionWeaponStartCharging // (Native|Event|Public|BlueprintEvent) // @ game+0x24eb1a0
	void AnimNotify_SentryHighPrecisionAttackFired(); // Function ConZ.SentryAnimInstance2.AnimNotify_SentryHighPrecisionAttackFired // (Native|Event|Public|BlueprintEvent) // @ game+0x24eb180
	void AnimNotify_RFootDown(); // Function ConZ.SentryAnimInstance2.AnimNotify_RFootDown // (Native|Event|Public|BlueprintEvent) // @ game+0x24eb160
	void AnimNotify_LFootDown(); // Function ConZ.SentryAnimInstance2.AnimNotify_LFootDown // (Native|Event|Public|BlueprintEvent) // @ game+0x24eb160
};

// Class ConZ.SentryFirstPersonViewComponent
// Size: 0xd0 (Inherited: 0xd0)
struct USentryFirstPersonViewComponent : UPrisonerViewComponent {
};

// Class ConZ.SentryGuardVolume2
// Size: 0x2b8 (Inherited: 0x258)
struct ASentryGuardVolume2 : AVolume {
	char pad_258[0x20]; // 0x258(0x20)
	struct TArray<struct FVector> _hotZonesLocalLocations; // 0x278(0x10)
	char pad_288[0x10]; // 0x288(0x10)
	struct TArray<struct ABuilding*> _hotZonesBuildings; // 0x298(0x10)
	struct TArray<struct FSentryHotZoneVolumeData> _hotZonesVolumes; // 0x2a8(0x10)
};

// Class ConZ.SentryMovementComponent
// Size: 0xdf0 (Inherited: 0xda0)
struct USentryMovementComponent : UConZCharacterMovementComponent {
	struct UCurveFloat* MaxRotationRateCurve; // 0xda0(0x08)
	float RotationInterpolationSpeed; // 0xda8(0x04)
	bool CorrectServerReceivedZ; // 0xdac(0x01)
	char pad_DAD[0x23]; // 0xdad(0x23)
	float _movementPauseAfterLandingTime; // 0xdd0(0x04)
	char pad_DD4[0xc]; // 0xdd4(0x0c)
	float _timeNeededToBeConsideredFalling; // 0xde0(0x04)
	char pad_DE4[0xc]; // 0xde4(0x0c)
};

// Class ConZ.SentryHotZoneBoxComponent
// Size: 0x480 (Inherited: 0x480)
struct USentryHotZoneBoxComponent : UBoxComponent {
};

// Class ConZ.SentrySpawner2
// Size: 0x2b8 (Inherited: 0x220)
struct ASentrySpawner2 : AActor {
	float ActivationDistance; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct TSoftClassPtr<UObject> SentryClass; // 0x228(0x28)
	struct TArray<struct FSentryPatrolPoint> PatrolPoints; // 0x250(0x10)
	struct UBillboardComponent* Sprite; // 0x260(0x08)
	float SentryOperatingRange; // 0x268(0x04)
	bool ForceUndergroundSentry; // 0x26c(0x01)
	char pad_26D[0x27]; // 0x26d(0x27)
	bool _shouldSaveAndLoadSentry; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	float _autosaveTime; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	bool _canEverRespawnSentry; // 0x2a0(0x01)
	char pad_2A1[0x17]; // 0x2a1(0x17)
};

// Class ConZ.SentryThirdPersonViewComponent
// Size: 0x100 (Inherited: 0xd0)
struct USentryThirdPersonViewComponent : UPrisonerViewComponent {
	struct FName StandingSubviewName; // 0xd0(0x08)
	struct FName StandingAimingSubviewName; // 0xd8(0x08)
	char pad_E0[0x20]; // 0xe0(0x20)
};

// Class ConZ.SerializationStatics
// Size: 0x28 (Inherited: 0x28)
struct USerializationStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.ServerBrowser
// Size: 0x510 (Inherited: 0x268)
struct UServerBrowser : UBaseMenu {
	char pad_268[0x70]; // 0x268(0x70)
	struct UVerticalBox* PasswordPopup; // 0x2d8(0x08)
	struct UEditableTextBox* PasswordPopupTextBox; // 0x2e0(0x08)
	struct UVerticalBox* MenuVerticalBox; // 0x2e8(0x08)
	struct UConZStandardButton* Back; // 0x2f0(0x08)
	struct UEditableTextBox* DirectConnectTextBox; // 0x2f8(0x08)
	struct UVerticalBox* MainVerticalBox; // 0x300(0x08)
	struct UConZStandardButton* PasswordPopupCancelButton; // 0x308(0x08)
	struct UConZStandardButton* PasswordPopupOkButton; // 0x310(0x08)
	struct UConZStandardButton* Refresh; // 0x318(0x08)
	struct UConZStandardButton* ServerHosting; // 0x320(0x08)
	struct UEditableTextBox* _searchBox; // 0x328(0x08)
	struct UOverlay* ServersCategoryOverlay; // 0x330(0x08)
	struct USortByButton* SortByHost; // 0x338(0x08)
	struct USortByButton* SortByOfficial; // 0x340(0x08)
	struct USortByButton* SortByPassword; // 0x348(0x08)
	struct USortByButton* SortByPing; // 0x350(0x08)
	struct USortByButton* SortByPlayers; // 0x358(0x08)
	struct USortByButton* SortByVersion; // 0x360(0x08)
	struct UServerBrowserCheckboxWidget* _hideEmptyCB; // 0x368(0x08)
	struct UServerBrowserCheckboxWidget* _hideFullCB; // 0x370(0x08)
	struct UServerBrowserCheckboxWidget* _passwordProtectedCB; // 0x378(0x08)
	struct UServerBrowserCheckboxWidget* _favoritesCB; // 0x380(0x08)
	struct UServerBrowserDropdownWidget* _typeDropdown; // 0x388(0x08)
	struct UServerBrowserDropdownWidget* _activityDropdown; // 0x390(0x08)
	struct UServerBrowserDropdownWidget* _regionDropdown; // 0x398(0x08)
	struct UServerBrowserDropdownWidget* _latencyDropdown; // 0x3a0(0x08)
	struct UCheckBox* _sortFavorites; // 0x3a8(0x08)
	struct UCursedScrollBar* UI_ScrollBar; // 0x3b0(0x08)
	struct UCircularThrobber* CircularThrobber_53; // 0x3b8(0x08)
	struct UServerInfoWidget* SelectedServer; // 0x3c0(0x08)
	char pad_3C8[0x78]; // 0x3c8(0x78)
	struct UConZStandardButton* _lastButton; // 0x440(0x08)
	struct UWidget* _lastWidget; // 0x448(0x08)
	struct UVerticalBox* _serverList; // 0x450(0x08)
	struct UConZStandardButton* _connectButton; // 0x458(0x08)
	char pad_460[0x68]; // 0x460(0x68)
	struct UServerInfoWidget* _serverInfoWidgetClass; // 0x4c8(0x08)
	char pad_4D0[0x40]; // 0x4d0(0x40)

	void UpdateList(); // Function ConZ.ServerBrowser.UpdateList // (Final|Native|Private) // @ game+0x24eb9f0
	void OnSortFavoritesStateChanged(bool checked); // Function ConZ.ServerBrowser.OnSortFavoritesStateChanged // (Final|Native|Private) // @ game+0x24eb8b0
	void OnSearchBoxTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.ServerBrowser.OnSearchBoxTextCommitted // (Final|Native|Private|HasOutParms) // @ game+0x24eb790
	void OnSearchBoxTextChanged(struct FText& Text); // Function ConZ.ServerBrowser.OnSearchBoxTextChanged // (Final|Native|Private|HasOutParms) // @ game+0x24eb6c0
	void OnPasswordPopupTextBoxTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.ServerBrowser.OnPasswordPopupTextBoxTextCommitted // (Final|Native|Private|HasOutParms) // @ game+0x24eb5a0
	void OnDirectConnectTextBoxTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.ServerBrowser.OnDirectConnectTextBoxTextCommitted // (Final|Native|Private|HasOutParms) // @ game+0x24eb480
	void OnDirectConnectTextBoxTextChanged(struct FText& Text); // Function ConZ.ServerBrowser.OnDirectConnectTextBoxTextChanged // (Final|Native|Private|HasOutParms) // @ game+0x24eb3b0
	void OnClickedServerHosting(); // Function ConZ.ServerBrowser.OnClickedServerHosting // (Final|Native|Private) // @ game+0x24eb390
};

// Class ConZ.ServerBrowserCheckboxWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UServerBrowserCheckboxWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UCheckBox* _checkBox; // 0x280(0x08)
	struct UTextBlock* _label; // 0x288(0x08)
	struct FLinearColor _uncheckedLabelColor; // 0x290(0x10)
	struct FLinearColor _checkedLabelColor; // 0x2a0(0x10)
	struct FText _labelText; // 0x2b0(0x18)
	bool _isCheckedByDefault; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void OnCheckStateChanged(bool IsChecked); // Function ConZ.ServerBrowserCheckboxWidget.OnCheckStateChanged // (Final|Native|Private) // @ game+0x24efd10
};

// Class ConZ.ServerBrowserDropdownEntryWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UServerBrowserDropdownEntryWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _icon; // 0x280(0x08)
	struct UTextBlock* _label; // 0x288(0x08)
	struct FLinearColor _regularIconColor; // 0x290(0x10)
	struct FLinearColor _hoveredIconColor; // 0x2a0(0x10)
	struct FLinearColor _selectedIconColor; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class ConZ.ServerBrowserDropdownWidget
// Size: 0x2e0 (Inherited: 0x268)
struct UServerBrowserDropdownWidget : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UImage* _backgroundImage; // 0x298(0x08)
	struct UTextBlock* _label; // 0x2a0(0x08)
	struct USizeBox* _entriesSizeBox; // 0x2a8(0x08)
	struct UVerticalBox* _entriesVerticalBox; // 0x2b0(0x08)
	struct TArray<struct FText> _entryUIData; // 0x2b8(0x10)
	struct UServerBrowserDropdownEntryWidget* _entryWidgetClass; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)
};

// Class ConZ.ServerInfoWidget
// Size: 0x3f0 (Inherited: 0x268)
struct UServerInfoWidget : UUserWidget {
	char pad_268[0x60]; // 0x268(0x60)
	struct FServerInfo _serverInfo; // 0x2c8(0x50)
	int32_t FontSize; // 0x318(0x04)
	char pad_31C[0xc]; // 0x31c(0x0c)
	struct UAkAudioEvent* ClickSound; // 0x328(0x08)
	struct UButton* DeleteServerButton; // 0x330(0x08)
	struct UButton* Button_1; // 0x338(0x08)
	struct UTextBlock* NameText; // 0x340(0x08)
	struct UTextBlock* PingText; // 0x348(0x08)
	struct UTextBlock* PlayersText; // 0x350(0x08)
	struct UImage* _passwordIcon; // 0x358(0x08)
	struct UImage* _officialIcon; // 0x360(0x08)
	struct UImage* _backgroundImage; // 0x368(0x08)
	struct UTextBlock* VersionText; // 0x370(0x08)
	struct UWidgetSwitcher* _favoriteButtonSwitcher; // 0x378(0x08)
	struct UButton* _favoriteServerButton; // 0x380(0x08)
	struct UThrobber* Throbber_1; // 0x388(0x08)
	struct FLinearColor _regularColor; // 0x390(0x10)
	struct FLinearColor _invertedColor; // 0x3a0(0x10)
	struct FLinearColor _transparentColor; // 0x3b0(0x10)
	struct FLinearColor _lowPingColor; // 0x3c0(0x10)
	struct FLinearColor _mediumPingColor; // 0x3d0(0x10)
	struct FLinearColor _highPingColor; // 0x3e0(0x10)

	void OnFavoriteClicked(); // Function ConZ.ServerInfoWidget.OnFavoriteClicked // (Final|Native|Private) // @ game+0x24efde0
	void OnDeleteClicked(); // Function ConZ.ServerInfoWidget.OnDeleteClicked // (Final|Native|Private) // @ game+0x24efdc0
	void OnClickedButton_1(); // Function ConZ.ServerInfoWidget.OnClickedButton_1 // (Final|Native|Private) // @ game+0x24efda0
};

// Class ConZ.ServerPriceCache
// Size: 0x228 (Inherited: 0x28)
struct UServerPriceCache : UObject {
	char pad_28[0x200]; // 0x28(0x200)
};

// Class ConZ.ServerSettingsMenu
// Size: 0x610 (Inherited: 0x608)
struct UServerSettingsMenu : UConZSettingsMenu {
	char pad_608[0x8]; // 0x608(0x08)
};

// Class ConZ.ServerSettingsUIController
// Size: 0x288 (Inherited: 0x1e8)
struct UServerSettingsUIController : UConZSettingsUIController {
	char pad_1E8[0xa0]; // 0x1e8(0xa0)
};

// Class ConZ.Shark
// Size: 0x8c0 (Inherited: 0x890)
struct AShark : ALargeAquaticAnimal {
	struct UParticleSystem* _sharkBiteBloodPS; // 0x888(0x08)
	struct UParticleSystemComponent* _sharkBiteBloodPSC; // 0x890(0x08)
	float _biteParticlesScale; // 0x898(0x04)
	struct FName _spawnBiteAttackParticlesSocketName; // 0x89c(0x08)
	struct UParticleSystem* _onDeathPS; // 0x8a8(0x08)
	struct UParticleSystemComponent* _onDeathPSC; // 0x8b0(0x08)
	struct FName _onDeathParticlesSocketName; // 0x8b8(0x08)
};

// Class ConZ.SharkAIController
// Size: 0x598 (Inherited: 0x450)
struct ASharkAIController : AConZAIController {
	float _minDistanceToMovementTarget; // 0x450(0x04)
	int32_t _maxMovementAttemptsAllowed; // 0x454(0x04)
	char pad_458[0x8]; // 0x458(0x08)
	float _surfaceOffset; // 0x460(0x04)
	float _movementRecoveryAcceleration; // 0x464(0x04)
	float _aboveWaterRecoveryTurningSpeed; // 0x468(0x04)
	float _moveToTargetUpdatePeriod; // 0x46c(0x04)
	char pad_470[0x4]; // 0x470(0x04)
	float _minVictimDepth; // 0x474(0x04)
	float _beginPursuitTimeMin; // 0x478(0x04)
	float _beginPursuitTimeMax; // 0x47c(0x04)
	char pad_480[0x4]; // 0x480(0x04)
	float _aggressiveBehaviorChance; // 0x484(0x04)
	float _aggressiveBehaviorChanceWhenTargetBleeding; // 0x488(0x04)
	float _distanceToAdjustAttackAngle; // 0x48c(0x04)
	float _desiredAttackAngleDegrees; // 0x490(0x04)
	char pad_494[0x4]; // 0x494(0x04)
	float _desiredAttackAngleTime; // 0x498(0x04)
	float _returnToWanderingTime; // 0x49c(0x04)
	char pad_4A0[0x4]; // 0x4a0(0x04)
	float _dealDamageTime; // 0x4a4(0x04)
	char pad_4A8[0x4]; // 0x4a8(0x04)
	float _damagePerInterval; // 0x4ac(0x04)
	char pad_4B0[0x4]; // 0x4b0(0x04)
	int32_t _numOfIntervals; // 0x4b4(0x04)
	char pad_4B8[0x4]; // 0x4b8(0x04)
	float _startMovingAfterBiteTime; // 0x4bc(0x04)
	char pad_4C0[0xc]; // 0x4c0(0x0c)
	float _changeDirectionChance; // 0x4cc(0x04)
	float _circlingAngleDegrees; // 0x4d0(0x04)
	float _circlingDistanceMin; // 0x4d4(0x04)
	float _circlingDistanceMax; // 0x4d8(0x04)
	float _circlingAggressionCheckInterval; // 0x4dc(0x04)
	char pad_4E0[0x4]; // 0x4e0(0x04)
	float _minDamageToReact; // 0x4e4(0x04)
	float _fleeingDuration; // 0x4e8(0x04)
	char pad_4EC[0x8]; // 0x4ec(0x08)
	float _maxTimeAboveWater; // 0x4f4(0x04)
	char pad_4F8[0x4]; // 0x4f8(0x04)
	float _minDistanceToNextPrimaryTarget; // 0x4fc(0x04)
	float _changePrimaryTargetTime; // 0x500(0x04)
	char pad_504[0xc]; // 0x504(0x0c)
	struct TMap<enum class ESharkState, struct FFishStateParameters> _behaviorMap; // 0x510(0x50)
	char pad_560[0x30]; // 0x560(0x30)
	struct UGrappleActionParameters* _grappleActionParameter; // 0x590(0x08)

	void SetReadyForNextPrimaryTarget(); // Function ConZ.SharkAIController.SetReadyForNextPrimaryTarget // (Final|Native|Private) // @ game+0x24f0010
};

// Class ConZ.SharkAnimInstance
// Size: 0x360 (Inherited: 0x2c0)
struct USharkAnimInstance : UAnimInstance {
	char pad_2C0[0x8]; // 0x2c0(0x08)
	struct FName _mouthTargetName; // 0x2c8(0x08)
	float _mouthMorphValueChangePerSecond; // 0x2d0(0x04)
	struct FName _teethTargetName; // 0x2d4(0x08)
	float _teethMorphValueChangePerSecond; // 0x2dc(0x04)
	struct FName _eyesTargetName; // 0x2e0(0x08)
	float _eyesMorphValueChangePerSecond; // 0x2e8(0x04)
	struct FVector _velocity; // 0x2ec(0x0c)
	float _angularVelocityYaw; // 0x2f8(0x04)
	float _angularVelocityPitch; // 0x2fc(0x04)
	enum class EFishBehavior _behaviorMode; // 0x300(0x01)
	bool _isAlive; // 0x301(0x01)
	char pad_302[0x5e]; // 0x302(0x5e)

	bool IsAlive(); // Function ConZ.SharkAnimInstance.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24efce0
};

// Class ConZ.SharpMeleeWeaponItemTag
// Size: 0x30 (Inherited: 0x30)
struct USharpMeleeWeaponItemTag : UBaseItemTag {
};

// Class ConZ.ShelterItem
// Size: 0x9c0 (Inherited: 0x9b0)
struct AShelterItem : AItem {
	bool _canBeAddedToInventory; // 0x9a8(0x01)
	char pad_9B1[0xf]; // 0x9b1(0x0f)
};

// Class ConZ.ShotsFiredTrackerWidget
// Size: 0x270 (Inherited: 0x268)
struct UShotsFiredTrackerWidget : UUserWidget {
	struct UTextBlock* _widgetText; // 0x268(0x08)
};

// Class ConZ.SilentAlarmTrapItem
// Size: 0xb10 (Inherited: 0xae0)
struct ASilentAlarmTrapItem : ATrapItem {
	struct UAkAudioEvent* _triggerSound; // 0xae0(0x08)
	float _detonationDelay; // 0xae8(0x04)
	char pad_AEC[0x4]; // 0xaec(0x04)
	struct UNameableItemComponent* _nameableItemComponent; // 0xaf0(0x08)
	char pad_AF8[0x18]; // 0xaf8(0x18)

	void Detonate(); // Function ConZ.SilentAlarmTrapItem.Detonate // (Final|Native|Private) // @ game+0x24efc90
};

// Class ConZ.SimpleDropdownEntryCategoryTitle
// Size: 0x270 (Inherited: 0x268)
struct USimpleDropdownEntryCategoryTitle : UUserWidget {
	struct UTextBlock* _label; // 0x268(0x08)
};

// Class ConZ.SimpleTextDropdownEntry
// Size: 0x2b0 (Inherited: 0x268)
struct USimpleTextDropdownEntry : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _background; // 0x278(0x08)
	struct UTextBlock* _label; // 0x280(0x08)
	struct FLinearColor _black; // 0x288(0x10)
	struct FLinearColor _white; // 0x298(0x10)
	int32_t _singleIndentationValue; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
};

// Class ConZ.SimpleTextDropdownEntryWithCheckBox
// Size: 0x2c8 (Inherited: 0x2b0)
struct USimpleTextDropdownEntryWithCheckBox : USimpleTextDropdownEntry {
	char pad_2B0[0x10]; // 0x2b0(0x10)
	struct USquareCheckbox* _checkBox; // 0x2c0(0x08)
};

// Class ConZ.SimulatedShooter
// Size: 0x28 (Inherited: 0x28)
struct USimulatedShooter : UInterface {
};

// Class ConZ.SimulatedShooterFiringStrategy
// Size: 0x40 (Inherited: 0x28)
struct USimulatedShooterFiringStrategy : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.SimulatedShooterFiringStrategy_Flamethrower
// Size: 0x58 (Inherited: 0x40)
struct USimulatedShooterFiringStrategy_Flamethrower : USimulatedShooterFiringStrategy {
	char pad_40[0x10]; // 0x40(0x10)
	float _fuelUsagePerHour; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)

	void OnResourceComponentDeactivated(struct UActorComponent* Component); // Function ConZ.SimulatedShooterFiringStrategy_Flamethrower.OnResourceComponentDeactivated // (Final|Native|Private) // @ game+0x24efe00
};

// Class ConZ.SimulatedShooterFiringStrategy_Projectile
// Size: 0x68 (Inherited: 0x40)
struct USimulatedShooterFiringStrategy_Projectile : USimulatedShooterFiringStrategy {
	float _rateOfFire; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	float _maxRateOfFire; // 0x48(0x04)
	float _timeToMaxFireRate; // 0x4c(0x04)
	char pad_50[0x4]; // 0x50(0x04)
	float _firingConeAngle; // 0x54(0x04)
	float _spread; // 0x58(0x04)
	char pad_5C[0xc]; // 0x5c(0x0c)
};

// Class ConZ.SimulatedShooterFiringStrategy_Hitscan
// Size: 0x70 (Inherited: 0x68)
struct USimulatedShooterFiringStrategy_Hitscan : USimulatedShooterFiringStrategy_Projectile {
	float _range; // 0x68(0x04)
	bool _useWeaponTrace; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class ConZ.SimulatedShooterFiringStrategy_SpawnProjectile
// Size: 0x68 (Inherited: 0x68)
struct USimulatedShooterFiringStrategy_SpawnProjectile : USimulatedShooterFiringStrategy_Projectile {
};

// Class ConZ.SingletonStatics
// Size: 0x28 (Inherited: 0x28)
struct USingletonStatics : UBlueprintFunctionLibrary {

	struct UDataSingleton* GetDataSingleton(); // Function ConZ.SingletonStatics.GetDataSingleton // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x24efcb0
};

// Class ConZ.SkeletalWeaponAttachment
// Size: 0x9e0 (Inherited: 0x9e0)
struct ASkeletalWeaponAttachment : AWeaponAttachment {
	struct USkeletalMeshComponent* _skeletalMesh; // 0x9d8(0x08)
};

// Class ConZ.SkillClasses
// Size: 0x38 (Inherited: 0x28)
struct USkillClasses : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class ConZ.SkillEventHandler
// Size: 0x30 (Inherited: 0x28)
struct USkillEventHandler : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.SkydivingHUD
// Size: 0x268 (Inherited: 0x268)
struct USkydivingHUD : UUserWidget {
};

// Class ConZ.SliderWithLabelAndNumber
// Size: 0x14d0 (Inherited: 0xdc0)
struct USliderWithLabelAndNumber : UConZSlider {
	char pad_DC0[0x18]; // 0xdc0(0x18)
	struct UTextBlock* _name; // 0xdd8(0x08)
	struct UTextBlock* _valueDisplay; // 0xde0(0x08)
	struct UImage* _focusBackgroundImage; // 0xde8(0x08)
	struct FSliderWithLabelAndNumberStyle _selectedAndFocusedSWNANStyle; // 0xdf0(0x158)
	struct FSliderWithLabelAndNumberStyle _selectedAndUnfocusedSWNANStyle; // 0xf48(0x158)
	struct FSliderWithLabelAndNumberStyle _unselectedSWNANStyle; // 0x10a0(0x158)
	struct FSliderWithLabelAndNumberStyle _highlightedSWNANStyle; // 0x11f8(0x158)
	struct FSliderWithLabelAndNumberStyle _disabledSWNANStyle; // 0x1350(0x158)
	struct FText _label; // 0x14a8(0x18)
	int32_t _decimalPlacesShown; // 0x14c0(0x04)
	int32_t _decimalPlacesShifted; // 0x14c4(0x04)
	bool _showAsPercentage; // 0x14c8(0x01)
	char pad_14C9[0x7]; // 0x14c9(0x07)
};

// Class ConZ.SlidingDoorStatic
// Size: 0x5a0 (Inherited: 0x580)
struct ASlidingDoorStatic : ADoor {
	struct USceneComponent* ClosedPositionComponent; // 0x580(0x08)
	struct USceneComponent* OpenPositionComponent; // 0x588(0x08)
	bool _shouldAllowRotation; // 0x590(0x01)
	bool _shouldAllowScaling; // 0x591(0x01)
	char pad_592[0xe]; // 0x592(0x0e)
};

// Class ConZ.SmokableItemComponent
// Size: 0x280 (Inherited: 0x198)
struct USmokableItemComponent : UIgnitableItemComponent {
	char pad_198[0x10]; // 0x198(0x10)
	struct TArray<struct FSmokableSubstance> _smokableSubstances; // 0x1a8(0x10)
	float _exhaustionRecoveryAmount; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)
	struct UTexture2D* _burningIcon; // 0x1c0(0x08)
	float _minEmissivity; // 0x1c8(0x04)
	float _maxEmissivity; // 0x1cc(0x04)
	struct UMaterialInterface* _burningMaterial; // 0x1d0(0x08)
	float _timeBetweenExhalation; // 0x1d8(0x04)
	struct FName _itemInHandsSocketName; // 0x1dc(0x08)
	struct FName _itemEquippedSocketName; // 0x1e4(0x08)
	char pad_1EC[0x14]; // 0x1ec(0x14)
	struct FTransform _offsetWhenEquipped; // 0x200(0x30)
	char pad_230[0x50]; // 0x230(0x50)
};

// Class ConZ.SmokableTag
// Size: 0x30 (Inherited: 0x30)
struct USmokableTag : UBaseItemTag {
};

// Class ConZ.SmokeGrenadeItem
// Size: 0xaa0 (Inherited: 0xa70)
struct ASmokeGrenadeItem : AGrenadeItem {
	struct UParticleSystem* _smokeParticle; // 0xa70(0x08)
	struct UAkAudioEvent* _smokeStartedAudioEvent; // 0xa78(0x08)
	struct UAkAudioEvent* _smokeStoppedAudioEvent; // 0xa80(0x08)
	float _smokeSoundDuration; // 0xa88(0x04)
	char pad_A8C[0x4]; // 0xa8c(0x04)
	struct UAkComponent* _smokeAudioComponent; // 0xa90(0x08)
	char pad_A98[0x8]; // 0xa98(0x08)
};

// Class ConZ.SnipingSkill
// Size: 0x1c8 (Inherited: 0xb0)
struct USnipingSkill : UIntelligenceSkill {
	float _distanceLimit; // 0xb0(0x04)
	char pad_B4[0xc]; // 0xb4(0x0c)
	struct FSnipingSkillExperienceAwards NoSkillExperienceAwards; // 0xc0(0x34)
	struct FSnipingSkillExperienceAwards BasicSkillExperienceAwards; // 0xf4(0x34)
	struct FSnipingSkillExperienceAwards MediumSkillExperienceAwards; // 0x128(0x34)
	struct FSnipingSkillExperienceAwards AdvancedSkillExperienceAwards; // 0x15c(0x34)
	struct FSnipingSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0x190(0x34)
	char pad_1C4[0x4]; // 0x1c4(0x04)
};

// Class ConZ.SortByButton
// Size: 0x2c0 (Inherited: 0x268)
struct USortByButton : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UButton* Button_1; // 0x280(0x08)
	struct USizeBox* SizeBox_1; // 0x288(0x08)
	struct UTextBlock* TextBlock_1; // 0x290(0x08)
	float Size; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct FText Text; // 0x2a0(0x18)
	enum class ESortByType Type; // 0x2b8(0x01)
	bool _shouldTextBeCentered; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)

	void SetType(enum class ESortByType sortType); // Function ConZ.SortByButton.SetType // (Final|Native|Public|BlueprintCallable) // @ game+0x24f3c10
	void OnTheButtonClicked(); // Function ConZ.SortByButton.OnTheButtonClicked // (Final|Native|Public) // @ game+0x24f38e0
};

// Class ConZ.SoundEmitter
// Size: 0x228 (Inherited: 0x220)
struct ASoundEmitter : AActor {
	struct UAkAudioEvent* AudioEvent; // 0x220(0x08)
};

// Class ConZ.SoundNotification
// Size: 0x30 (Inherited: 0x30)
struct USoundNotification : UConZNotification {
};

// Class ConZ.SoundNotificationDescription
// Size: 0x58 (Inherited: 0x40)
struct USoundNotificationDescription : UNotificationDescription {
	struct UAkAudioEvent* AudioEvent; // 0x40(0x08)
	struct AActor* Actor; // 0x48(0x08)
	bool stopWhenAttachedToDestroyed; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class ConZ.SoundReducingItemTag
// Size: 0x30 (Inherited: 0x30)
struct USoundReducingItemTag : UBaseItemTag {
};

// Class ConZ.Spline
// Size: 0x230 (Inherited: 0x220)
struct ASpline : AActor {
	struct USceneComponent* SceneComponent; // 0x220(0x08)
	struct USplineComponent* SplineComponent; // 0x228(0x08)
};

// Class ConZ.SoundSpline
// Size: 0x288 (Inherited: 0x230)
struct ASoundSpline : ASpline {
	float MinCameraLocationDeltaForUpdate; // 0x230(0x04)
	float WorldStreamedCheckInterval; // 0x234(0x04)
	float MaxCameraDistance; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct UAkAudioEvent* AudioEvent; // 0x240(0x08)
	struct UAkAudioEvent* InsideSplineAudioEvent; // 0x248(0x08)
	struct UAkAudioEvent* OutsideSplineAudioEvent; // 0x250(0x08)
	char pad_258[0x30]; // 0x258(0x30)
};

// Class ConZ.SpawnChoiceWidget
// Size: 0x2e8 (Inherited: 0x268)
struct USpawnChoiceWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _progressBar; // 0x278(0x08)
	struct UMaterialInstanceDynamic* _progressMaterial; // 0x280(0x08)
	struct UButton* _choiceButton; // 0x288(0x08)
	struct UTextBlock* _optionText; // 0x290(0x08)
	struct UTextBlock* _prohibitedText; // 0x298(0x08)
	struct UTextBlock* _priceText; // 0x2a0(0x08)
	struct UImage* SelectionArrow; // 0x2a8(0x08)
	struct UBorder* Border_1; // 0x2b0(0x08)
	float _borderFill; // 0x2b8(0x04)
	int32_t _price; // 0x2bc(0x04)
	enum class ECurrencyType _priceCurrency; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
	struct FText _optionTextBlockText; // 0x2c8(0x18)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void Update(); // Function ConZ.SpawnChoiceWidget.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x24f3c90
	void OnChoiceButtonClicked(); // Function ConZ.SpawnChoiceWidget.OnChoiceButtonClicked // (Final|Native|Private) // @ game+0x24f3860
};

// Class ConZ.SpawnDecalWhenParticleCollides
// Size: 0x38 (Inherited: 0x28)
struct USpawnDecalWhenParticleCollides : UParticleModuleEventSendToGame {
	struct TArray<struct FParticleCollisionDecalData> Decals; // 0x28(0x10)
};

// Class ConZ.SpawnMenuWidget
// Size: 0x380 (Inherited: 0x268)
struct USpawnMenuWidget : UUserWidget {
	struct USpawnChoiceWidget* _randomLocationButton; // 0x268(0x08)
	struct USpawnChoiceWidget* _sectorLocationButton; // 0x270(0x08)
	struct USpawnChoiceWidget* _shelterLocationButton; // 0x278(0x08)
	struct USpawnChoiceWidget* _squadLocationButton; // 0x280(0x08)
	struct UVerticalBox* _locationOptions; // 0x288(0x08)
	struct UBorder* _respawnDisabledLabel; // 0x290(0x08)
	struct UBorder* _combatLabel; // 0x298(0x08)
	struct UBorder* _noAvailableLabel; // 0x2a0(0x08)
	struct UBorder* _limitExceededLabel; // 0x2a8(0x08)
	struct UOverlay* _deathTitlePanel; // 0x2b0(0x08)
	struct UTextBlock* _deathTitleLabel; // 0x2b8(0x08)
	struct UOverlay* _comaTitlePanel; // 0x2c0(0x08)
	struct UTextBlock* _comatoseTitleLabel; // 0x2c8(0x08)
	struct UOverlay* _timerPanel; // 0x2d0(0x08)
	struct UTextBlock* _timerLabel; // 0x2d8(0x08)
	struct UTextBlock* _timer; // 0x2e0(0x08)
	struct UOverlay* _wakeUpPanel; // 0x2e8(0x08)
	struct UButton* _wakeUpButton; // 0x2f0(0x08)
	struct UTextBlock* _healthCriticalLabel; // 0x2f8(0x08)
	struct USpawnSectorSelectorWidget* _spawnSectorSelector; // 0x300(0x08)
	struct FText _suddenDeathText; // 0x308(0x18)
	struct FText _permadeathText; // 0x320(0x18)
	char pad_338[0x20]; // 0x338(0x20)
	struct UTextBlock* TotalPriceText; // 0x358(0x08)
	struct UBorder* Border_2; // 0x360(0x08)
	struct UTextBlock* CurrentCurrencyText; // 0x368(0x08)
	struct UTextBlock* RemainingCurrencyText; // 0x370(0x08)
	struct UTextBlock* MainStateLabel; // 0x378(0x08)

	void SelectLocation(struct USpawnChoiceWidget* Button); // Function ConZ.SpawnMenuWidget.SelectLocation // (Final|Native|Public) // @ game+0x24f3af0
	float Prisoner_GetHealthRatio(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_GetHealthRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24f3a50
	float Prisoner_GetComaDuration(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_GetComaDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24f39b0
	void Prisoner_Die(struct APrisoner* Prisoner); // Function ConZ.SpawnMenuWidget.Prisoner_Die // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x24f3920
	void OnWakeUpButtonClicked(); // Function ConZ.SpawnMenuWidget.OnWakeUpButtonClicked // (Final|Native|Private) // @ game+0x24f3900
	struct FSectorId GetSectorId(int32_t X, int32_t Y); // Function ConZ.SpawnMenuWidget.GetSectorId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24f3770
};

// Class ConZ.SpawnScreen
// Size: 0x2d0 (Inherited: 0x268)
struct USpawnScreen : UUserWidget {
	struct UButton* _mainMenuButton; // 0x268(0x08)
	struct UButton* _respawnButton; // 0x270(0x08)
	struct UButton* _scoreBoardButton; // 0x278(0x08)
	struct UOverlay* _screen; // 0x280(0x08)
	struct UOverlay* _scoreboard; // 0x288(0x08)
	struct UGameEventLoadoutMenuWidget* _gameEventLoadoutMenuWidget; // 0x290(0x08)
	struct USpawnMenuWidget* _spawnMenuWidget; // 0x298(0x08)
	struct UBorder* _blackout; // 0x2a0(0x08)
	char pad_2A8[0x18]; // 0x2a8(0x18)
	struct UTextBlock* WaitTimeText; // 0x2c0(0x08)
	struct UBorder* PenaltyCountdown; // 0x2c8(0x08)

	void OnSpawnAccept(); // Function ConZ.SpawnScreen.OnSpawnAccept // (Final|Native|Public) // @ game+0x24f38c0
	void OnScoreBoardButtonClicked(); // Function ConZ.SpawnScreen.OnScoreBoardButtonClicked // (Final|Native|Private) // @ game+0x24f38a0
	void OnExitToMainMenuClicked(); // Function ConZ.SpawnScreen.OnExitToMainMenuClicked // (Final|Native|Private) // @ game+0x24f3880
};

// Class ConZ.SpawnSectorSelectorWidget
// Size: 0x278 (Inherited: 0x268)
struct USpawnSectorSelectorWidget : UUserWidget {
	struct UImage* _selectorImage; // 0x268(0x08)
	struct UImage* _deathImage; // 0x270(0x08)

	void SelectSector(struct UButton* Button); // Function ConZ.SpawnSectorSelectorWidget.SelectSector // (Final|Native|Public|BlueprintCallable) // @ game+0x24f3b80
};

// Class ConZ.SphereMotionTriggerComponent
// Size: 0x550 (Inherited: 0x530)
struct USphereMotionTriggerComponent : UMotionTriggerComponent {
	struct USphereComponent* SphereCollisionComponent; // 0x528(0x08)
	struct UStaticMeshComponent* VisualizationMeshComponent; // 0x530(0x08)
	float _triggerRadius; // 0x538(0x04)
	struct UStaticMesh* _visualizationMesh; // 0x540(0x08)
	char pad_54C[0x4]; // 0x54c(0x04)

	void SphereComponent_OnComponentEndOverlap(struct UPrimitiveComponent* activatedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentEndOverlap // (Final|Native|Private) // @ game+0x23642f0
	void SphereComponent_OnComponentBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function ConZ.SphereMotionTriggerComponent.SphereComponent_OnComponentBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x23640c0
};

// Class ConZ.SplineSnagGeneratedActor
// Size: 0x220 (Inherited: 0x220)
struct ASplineSnagGeneratedActor : AActor {
};

// Class ConZ.SplineZone
// Size: 0x238 (Inherited: 0x230)
struct ASplineZone : ASpline {
	struct UZoneConfigurationDataAsset* configuration; // 0x230(0x08)
};

// Class ConZ.SprayPaintItemTag
// Size: 0x38 (Inherited: 0x30)
struct USprayPaintItemTag : UBaseItemTag {
	char ColorIndex; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.SquadEditor
// Size: 0x378 (Inherited: 0x268)
struct USquadEditor : UUserWidget {
	struct UDropdownMenuSelectionWidget* _dropdownMenuTextureSelectionWidgetClass; // 0x268(0x08)
	struct UDropdownMenuSelectionWidget* _dropdownMenuColorSelectionWidgetClass; // 0x270(0x08)
	struct UUniformGridPanel* BackgroundGrid; // 0x278(0x08)
	struct UUniformGridPanel* SymbolGrid; // 0x280(0x08)
	struct UUniformGridPanel* ColorGrid; // 0x288(0x08)
	struct UDropdownMenuTextureSelectionWidget* BackgroundSelector; // 0x290(0x08)
	struct UImage* BackgroundDropdownBackground; // 0x298(0x08)
	struct UDropdownMenuWidget* BackgroundDropdownMenu; // 0x2a0(0x08)
	struct UImage* BackgroundDropdownBorder; // 0x2a8(0x08)
	struct UDropdownMenuTextureSelectionWidget* SymbolSelector; // 0x2b0(0x08)
	struct UImage* SymbolDropdownBackground; // 0x2b8(0x08)
	struct UDropdownMenuWidget* SymbolDropdownMenu; // 0x2c0(0x08)
	struct UImage* SymbolDropdownBorder; // 0x2c8(0x08)
	struct UDropdownMenuColorSelectionWidget* BackgroundPrimaryColorSelector; // 0x2d0(0x08)
	struct UDropdownMenuColorSelectionWidget* BackgroundSecondaryColorSelector; // 0x2d8(0x08)
	struct UDropdownMenuColorSelectionWidget* BackgroundTertiaryColorSelector; // 0x2e0(0x08)
	struct UImage* ColorDropdownBackground; // 0x2e8(0x08)
	struct UDropdownMenuWidget* ColorDropdownMenu; // 0x2f0(0x08)
	struct UImage* ColorDropdownBorder; // 0x2f8(0x08)
	struct UDropdownMenuColorSelectionWidget* SymbolPrimaryColorSelector; // 0x300(0x08)
	struct UDropdownMenuColorSelectionWidget* SymbolSecondaryColorSelector; // 0x308(0x08)
	struct UDropdownMenuColorSelectionWidget* SymbolTertiaryColorSelector; // 0x310(0x08)
	struct USquadEmblemWidget* UI_SquadEmblem; // 0x318(0x08)
	struct UEditableTextBox* NameTextBox; // 0x320(0x08)
	struct UMultiLineEditableText* MessageTextBox; // 0x328(0x08)
	struct UMultiLineEditableText* InformationTextBox; // 0x330(0x08)
	struct UVerticalBox* InformationBox; // 0x338(0x08)
	struct UVerticalBox* MessageBoxBox; // 0x340(0x08)
	struct USizeBox* EmblemBox; // 0x348(0x08)
	struct UButton* AcceptButton; // 0x350(0x08)
	struct UButton* CancelButton; // 0x358(0x08)
	char pad_360[0x18]; // 0x360(0x18)

	void OnTextCommittedNameTextBox(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.SquadEditor.OnTextCommittedNameTextBox // (Final|Native|Private|HasOutParms) // @ game+0x24f8580
	void OnTextChangedMessageTextBox(struct FText& Text); // Function ConZ.SquadEditor.OnTextChangedMessageTextBox // (Final|Native|Private|HasOutParms) // @ game+0x24f84b0
	void OnTextChangedInformationTextBox(struct FText& Text); // Function ConZ.SquadEditor.OnTextChangedInformationTextBox // (Final|Native|Private|HasOutParms) // @ game+0x24f83e0
	void OnSymbolClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnSymbolClicked // (Final|Native|Private) // @ game+0x24f8350
	void OnReleasedCancelButton(); // Function ConZ.SquadEditor.OnReleasedCancelButton // (Final|Native|Private) // @ game+0x24f8240
	void OnReleasedAcceptButton(); // Function ConZ.SquadEditor.OnReleasedAcceptButton // (Final|Native|Private) // @ game+0x24f8220
	void OnEmblemUpdate(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnEmblemUpdate // (Final|Native|Private) // @ game+0x24f8050
	void OnColorClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnColorClicked // (Final|Native|Private) // @ game+0x24f7f80
	void OnBackgroundClicked(struct UDropdownMenuSelectionWidget* Widget); // Function ConZ.SquadEditor.OnBackgroundClicked // (Final|Native|Private) // @ game+0x24f7eb0
};

// Class ConZ.SquadEmblemWidget
// Size: 0x288 (Inherited: 0x268)
struct USquadEmblemWidget : UUserWidget {
	struct UImage* _symbol; // 0x268(0x08)
	struct UImage* _background; // 0x270(0x08)
	struct UMaterialInterface* _material; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)

	void SetEmblemData(struct FConZSquadEmblem& Value); // Function ConZ.SquadEmblemWidget.SetEmblemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24f86c0
	struct FConZSquadEmblem GetEmblemData(); // Function ConZ.SquadEmblemWidget.GetEmblemData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24f7ca0
};

// Class ConZ.SquadLeftPanel
// Size: 0x3b0 (Inherited: 0x268)
struct USquadLeftPanel : UTabMenuPanel {
	char pad_268[0x88]; // 0x268(0x88)
	struct UTextBlock* SquadName; // 0x2f0(0x08)
	struct UTextBlock* SquadMessage; // 0x2f8(0x08)
	struct UTextBlock* MemberCount; // 0x300(0x08)
	struct USquadEmblemWidget* SquadEmblem; // 0x308(0x08)
	struct UButton* EditButton; // 0x310(0x08)
	struct UPrimaryButton* LeaveButton; // 0x318(0x08)
	struct UPrimaryButton* CreateButton; // 0x320(0x08)
	struct UScrollBox* MemberListBox; // 0x328(0x08)
	struct UWidgetSwitcher* _mainSwitcher; // 0x330(0x08)
	struct UGenericTooltip* _genericTooltipClass; // 0x338(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x340(0x08)
	struct FText _leaveSquadTooltipText; // 0x348(0x18)
	struct FText _createSquadTooltipText; // 0x360(0x18)
	struct USquadMemberPanel* _squadMemberPanelClass; // 0x378(0x08)
	char pad_380[0x30]; // 0x380(0x30)

	void OnReleasedLeaveButton(); // Function ConZ.SquadLeftPanel.OnReleasedLeaveButton // (Final|Native|Private) // @ game+0x24f82a0
	void OnReleasedEditButton(); // Function ConZ.SquadLeftPanel.OnReleasedEditButton // (Final|Native|Private) // @ game+0x24f8280
	void OnReleasedCreateButton(); // Function ConZ.SquadLeftPanel.OnReleasedCreateButton // (Final|Native|Private) // @ game+0x24f8260
	void OnAnyButtonHovered(); // Function ConZ.SquadLeftPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x24f7e90
};

// Class ConZ.SquadListing
// Size: 0x2f8 (Inherited: 0x268)
struct USquadListing : UUserWidget {
	struct UTextBlock* SquadName; // 0x268(0x08)
	struct UTextBlock* squadRank; // 0x270(0x08)
	struct UTextBlock* SquadScore; // 0x278(0x08)
	struct UImage* Highlight; // 0x280(0x08)
	struct UHorizontalBox* ContentBox; // 0x288(0x08)
	struct UHorizontalBox* SeparatorBox; // 0x290(0x08)
	struct USizeBox* _emblemSizeBox; // 0x298(0x08)
	struct USquadEmblemWidget* _squadEmblemWidget; // 0x2a0(0x08)
	struct USquadTooltip* _squadTooltipClass; // 0x2a8(0x08)
	char pad_2B0[0x48]; // 0x2b0(0x48)
};

// Class ConZ.SquadMemberPanel
// Size: 0x3d8 (Inherited: 0x268)
struct USquadMemberPanel : UUserWidget {
	struct UTextBlock* PlayerName; // 0x268(0x08)
	struct UTextBlock* FameText; // 0x270(0x08)
	struct UTextBlock* FPText; // 0x278(0x08)
	struct UImage* RankIcon; // 0x280(0x08)
	struct UButton* HoverButton; // 0x288(0x08)
	struct UButton* MakeLeaderButton; // 0x290(0x08)
	struct UButton* PromoteButton; // 0x298(0x08)
	struct UButton* DemoteButton; // 0x2a0(0x08)
	struct UButton* KickButton; // 0x2a8(0x08)
	struct UHorizontalBox* CommandBox; // 0x2b0(0x08)
	struct UHorizontalBox* FamePointBox; // 0x2b8(0x08)
	struct TMap<enum class EConZSquadMemberRank, struct UTexture2D*> _memberTextures; // 0x2c0(0x50)
	struct FSlateBrush _probationTexture; // 0x310(0x88)
	struct UTextOnlyTooltip* _tooltipClass; // 0x398(0x08)
	char pad_3A0[0x10]; // 0x3a0(0x10)
	struct UTextOnlyTooltip* _toolTip; // 0x3b0(0x08)
	char pad_3B8[0x20]; // 0x3b8(0x20)

	void OnReleasePromoteButton(); // Function ConZ.SquadMemberPanel.OnReleasePromoteButton // (Final|Native|Private) // @ game+0x24f8200
	void OnReleaseMakeLeaderButton(); // Function ConZ.SquadMemberPanel.OnReleaseMakeLeaderButton // (Final|Native|Private) // @ game+0x24f81e0
	void OnReleaseKickButton(); // Function ConZ.SquadMemberPanel.OnReleaseKickButton // (Final|Native|Private) // @ game+0x24f81c0
	void OnReleaseDemoteButton(); // Function ConZ.SquadMemberPanel.OnReleaseDemoteButton // (Final|Native|Private) // @ game+0x24f81a0
	void OnButtonUnhovered(); // Function ConZ.SquadMemberPanel.OnButtonUnhovered // (Final|Native|Private) // @ game+0x24f7f60
	void OnButtonHovered(); // Function ConZ.SquadMemberPanel.OnButtonHovered // (Final|Native|Private) // @ game+0x24f7f40
};

// Class ConZ.SquadPenaltyManager
// Size: 0x140 (Inherited: 0x28)
struct USquadPenaltyManager : UObject {
	char pad_28[0x118]; // 0x28(0x118)

	void OnSquadDestroyed(struct AActor* squadActor); // Function ConZ.SquadPenaltyManager.OnSquadDestroyed // (Final|Native|Private) // @ game+0x24f82c0
};

// Class ConZ.SquadRankingsCache
// Size: 0xe8 (Inherited: 0xb0)
struct USquadRankingsCache : UActorComponent {
	char pad_B0[0x38]; // 0xb0(0x38)
};

// Class ConZ.SquadRightPanel
// Size: 0x348 (Inherited: 0x268)
struct USquadRightPanel : UTabMenuPanel {
	char pad_268[0x88]; // 0x268(0x88)
	struct UVerticalBox* RankingBox; // 0x2f0(0x08)
	struct USquadListing* _squadListingClass; // 0x2f8(0x08)
	char pad_300[0x18]; // 0x300(0x18)
	struct FLinearColor _darkListingBackgroundColor; // 0x318(0x10)
	struct FLinearColor _lightListingBackgroundColor; // 0x328(0x10)
	struct FLinearColor _selectedListingBackgroundColor; // 0x338(0x10)
};

// Class ConZ.SquadTooltip
// Size: 0x280 (Inherited: 0x268)
struct USquadTooltip : UUserWidget {
	struct UTextBlock* SquadName; // 0x268(0x08)
	struct UTextBlock* SquadInformation; // 0x270(0x08)
	struct USquadEmblemWidget* SquadEmblem; // 0x278(0x08)
};

// Class ConZ.SquadUIController
// Size: 0x60 (Inherited: 0x28)
struct USquadUIController : UObject {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class ConZ.SquareCheckbox
// Size: 0x288 (Inherited: 0x268)
struct USquareCheckbox : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UWidgetAnimation* _selectAnimation; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.StartLocation
// Size: 0x258 (Inherited: 0x250)
struct AStartLocation : APlayerStart {
	char TypeFlags; // 0x250(0x01)
	bool IsDisabled; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
};

// Class ConZ.StartLocationManager
// Size: 0x230 (Inherited: 0x220)
struct AStartLocationManager : AActor {
	struct TArray<struct FStartLocationDescription> _startLocationDescriptions; // 0x220(0x10)
};

// Class ConZ.StaticDoorReplicator
// Size: 0x120 (Inherited: 0xb0)
struct UStaticDoorReplicator : UActorComponent {
	char pad_B0[0x60]; // 0xb0(0x60)
	struct TArray<struct ULockData*> _queuedInitialSyncLockData; // 0x110(0x10)

	void NetMulticast_OnDoorRepDataChanged(int32_t dataVersion, struct FVector doorLocationZeroOrigin, struct FDoorRepData RepData); // Function ConZ.StaticDoorReplicator.NetMulticast_OnDoorRepDataChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x24f7cd0
};

// Class ConZ.StaticRadioItem
// Size: 0x9d0 (Inherited: 0x9d0)
struct AStaticRadioItem : ARadioItem {
};

// Class ConZ.StatisticsDetailsWidget
// Size: 0x398 (Inherited: 0x268)
struct UStatisticsDetailsWidget : UUserWidget {
	struct UStatisticsSubcategoryTab* _generalSubcategoryTab; // 0x268(0x08)
	struct UStatisticsSubcategoryTab* _foodSubcategoryTab; // 0x270(0x08)
	struct UStatisticsSubcategoryTab* _huntingSubcategoryTab; // 0x278(0x08)
	struct UStatisticsSubcategoryTab* _fishingSubcategoryTab; // 0x280(0x08)
	struct UStatisticsSubcategoryTab* _travelSubcategoryTab; // 0x288(0x08)
	struct UStatisticsSubcategoryTab* _metabolismSubcategoryTab; // 0x290(0x08)
	struct UStatisticsSubcategoryTab* _craftingSubcategoryTab; // 0x298(0x08)
	struct UStatisticsSubcategoryTab* _combatSubcategoryTab; // 0x2a0(0x08)
	struct UStatisticsSubcategoryTab* _eventsSubcategoryTab; // 0x2a8(0x08)
	struct UWidgetSwitcher* _subcategorySwitcher; // 0x2b0(0x08)
	char pad_2B8[0x98]; // 0x2b8(0x98)
	struct UStatisticsListWidget* _generalStatisticsList; // 0x350(0x08)
	struct UStatisticsListWidget* _foodStatisticsList; // 0x358(0x08)
	struct UStatisticsListWidget* _huntingStatisticsList; // 0x360(0x08)
	struct UStatisticsListWidget* _fishingStatisticsList; // 0x368(0x08)
	struct UStatisticsListWidget* _travelStatisticsList; // 0x370(0x08)
	struct UStatisticsListWidget* _metabolismStatisticsList; // 0x378(0x08)
	struct UStatisticsListWidget* _craftingStatisticsList; // 0x380(0x08)
	struct UStatisticsListWidget* _combatStatisticsList; // 0x388(0x08)
	struct UStatisticsListWidget* _eventsStatisticsList; // 0x390(0x08)

	void OnTravelSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnTravelSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f86a0
	void OnMetabolismSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnMetabolismSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8180
	void OnHuntingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnHuntingSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8160
	void OnGeneralSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnGeneralSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8140
	void OnFoodSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnFoodSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8120
	void OnFishingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnFishingSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8100
	void OnEventsSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnEventsSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f80e0
	void OnCraftingSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnCraftingSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8030
	void OnCombatSubcategoryButtonClicked(); // Function ConZ.StatisticsDetailsWidget.OnCombatSubcategoryButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x24f8010
};

// Class ConZ.StatisticsListRow
// Size: 0x280 (Inherited: 0x268)
struct UStatisticsListRow : UUserWidget {
	struct UTextBlock* _statNameTextBox; // 0x268(0x08)
	struct UTextBlock* _statValueTextBox; // 0x270(0x08)
	struct UTextBlock* _statUnitTextBox; // 0x278(0x08)
};

// Class ConZ.StatisticsListWidget
// Size: 0x290 (Inherited: 0x268)
struct UStatisticsListWidget : UUserWidget {
	struct FText _subcategoryName; // 0x268(0x18)
	struct UTextBlock* _subcategoryTextBox; // 0x280(0x08)
	struct UScrollBox* _scrollBox; // 0x288(0x08)
};

// Class ConZ.StatisticsPanelWidget
// Size: 0x278 (Inherited: 0x268)
struct UStatisticsPanelWidget : UBaseMenu {
	struct UStatisticsDetailsWidget* _survivalDetailsWidget; // 0x268(0x08)
	struct UConZStandardButton* _backButton; // 0x270(0x08)

	void CloseMenu(); // Function ConZ.StatisticsPanelWidget.CloseMenu // (Final|Native|Protected) // @ game+0x24f7c80
};

// Class ConZ.StatisticsSubcategoryTab
// Size: 0x2a8 (Inherited: 0x268)
struct UStatisticsSubcategoryTab : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UTexture2D* _subcategoryIcon; // 0x280(0x08)
	struct UImage* _tabSelectionImage; // 0x288(0x08)
	struct UImage* _subcategoryImage; // 0x290(0x08)
	struct UTexture2D* _selectedTabTexture; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class ConZ.StealthSkill
// Size: 0xd8 (Inherited: 0xb0)
struct UStealthSkill : UDexteritySkill {
	struct FStealthSkillExperienceAwards NoSkillExperienceAwards; // 0xb0(0x08)
	struct FStealthSkillExperienceAwards BasicSkillExperienceAwards; // 0xb8(0x08)
	struct FStealthSkillExperienceAwards MediumSkillExperienceAwards; // 0xc0(0x08)
	struct FStealthSkillExperienceAwards AdvancedSkillExperienceAwards; // 0xc8(0x08)
	struct FStealthSkillExperienceAwards AboveAdvancedSkillExperienceAwards; // 0xd0(0x08)
};

// Class ConZ.SubtitleWidget
// Size: 0x278 (Inherited: 0x268)
struct USubtitleWidget : UUserWidget {
	struct UTextBlock* _subtitle; // 0x268(0x08)
	struct UOverlay* _subtitleOverlay; // 0x270(0x08)
};

// Class ConZ.SurfaceHardnessData
// Size: 0x88 (Inherited: 0x30)
struct USurfaceHardnessData : UDataAsset {
	float DefaultSurfaceHardness; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TMap<enum class EPhysicalSurface, float> SurfaceHardnessMap; // 0x38(0x50)
};

// Class ConZ.SurvivalSkill
// Size: 0xb8 (Inherited: 0xb0)
struct USurvivalSkill : UIntelligenceSkill {
	struct FCompassSkillParametersPerSkillLevel NoSkillParameters; // 0xb0(0x01)
	struct FCompassSkillParametersPerSkillLevel BasicSkillParameters; // 0xb1(0x01)
	struct FCompassSkillParametersPerSkillLevel MediumSkillParameters; // 0xb2(0x01)
	struct FCompassSkillParametersPerSkillLevel AdvancedSkillParameters; // 0xb3(0x01)
	struct FCompassSkillParametersPerSkillLevel AboveAdvancedSkillParameters; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
};

// Class ConZ.SurvivalStatsHandler
// Size: 0x298 (Inherited: 0x220)
struct ASurvivalStatsHandler : AActor {
	char pad_220[0x78]; // 0x220(0x78)
};

// Class ConZ.SurvivalTipEventListener
// Size: 0x70 (Inherited: 0x28)
struct USurvivalTipEventListener : UObject {
	struct TArray<struct FTipAndItems> _tipsAndNeededItems; // 0x28(0x10)
	float _staminaNormAmountForSurvivalTip; // 0x38(0x04)
	char pad_3C[0x34]; // 0x3c(0x34)

	void OnAssociatedPrisonerDestroyed(struct AActor* Prisoner); // Function ConZ.SurvivalTipEventListener.OnAssociatedPrisonerDestroyed // (Final|Native|Private) // @ game+0x24fc060
	void ItemEquipped(struct UPrisonerInventoryComponent* sender, struct AItem* Item); // Function ConZ.SurvivalTipEventListener.ItemEquipped // (Final|Native|Private) // @ game+0x24fbec0
};

// Class ConZ.SurvivalTipManager
// Size: 0x190 (Inherited: 0x28)
struct USurvivalTipManager : UObject {
	char pad_28[0x150]; // 0x28(0x150)
	struct UDataTable* _survivalTipsTable; // 0x178(0x08)
	char pad_180[0x10]; // 0x180(0x10)
};

// Class ConZ.SurvivalTipsView
// Size: 0x318 (Inherited: 0x268)
struct USurvivalTipsView : UUserWidget {
	struct USurvivalTipWidget* _widgetClassToSpawn; // 0x268(0x08)
	float _distanceBetweenWidgets; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UVerticalBox* _widgetList; // 0x278(0x08)
	struct FUserWidgetPool _widgetPool; // 0x280(0x80)
	struct TArray<struct USurvivalTipWidget*> _activeWidgets; // 0x300(0x10)
	struct UDataTable* _survivalTipsTable; // 0x310(0x08)
};

// Class ConZ.SurvivalTipWidget
// Size: 0x338 (Inherited: 0x268)
struct USurvivalTipWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct URichTextBlock* _tipText; // 0x280(0x08)
	struct URetainerBox* _tipRetainerBox; // 0x288(0x08)
	struct USizeBox* _rootSizeBox; // 0x290(0x08)
	struct UProgressBar* _progressBar; // 0x298(0x08)
	struct FName _dpiMaterialParameterName; // 0x2a0(0x08)
	struct FName _widgetPixelSizeParameterName; // 0x2a8(0x08)
	struct FName _horizontalRolloutPercentParameterName; // 0x2b0(0x08)
	struct FVector2D _animationDuration; // 0x2b8(0x08)
	struct UCurveFloat* _animationCurve; // 0x2c0(0x08)
	struct UAkAudioEvent* _onSurvivalTipActivated; // 0x2c8(0x08)
	char pad_2D0[0x68]; // 0x2d0(0x68)
};

// Class ConZ.SwimmingSkill
// Size: 0xc8 (Inherited: 0xc8)
struct USwimmingSkill : UConstitutionSkill {
};

// Class ConZ.SwingItemComponent
// Size: 0x338 (Inherited: 0xc8)
struct USwingItemComponent : UItemComponent {
	char pad_C8[0x18]; // 0xc8(0x18)
	struct FRuntimeFloatCurve _swingSpeedLevelVsInputSpeed; // 0xe0(0x88)
	struct FRuntimeFloatCurve _prisonerActionDifficultyVsSwingSpeedLevel; // 0x168(0x88)
	enum class EPrisonerMovementPace _maxAllowedPrisonerMovementPaceWhenInHands; // 0x1f0(0x01)
	bool _shouldCoolDownPrisonerWhileSwinging; // 0x1f1(0x01)
	char pad_1F2[0x6]; // 0x1f2(0x06)
	struct FRuntimeFloatCurve _bodyTemperatureCoolingRatesVsSwingSpeedLevel; // 0x1f8(0x88)
	struct UAnimMontage* _itemSwingAnimMontage; // 0x280(0x08)
	struct UAnimMontage* _prisonerSwingAnimMontage; // 0x288(0x08)
	struct FName _prisonerSwingAnimMontageStartSectionName; // 0x290(0x08)
	struct FName _prisonerSwingAnimMontageLoopSectionName; // 0x298(0x08)
	struct FName _prisonerSwingAnimMontageEndSectionName; // 0x2a0(0x08)
	float _prisonerSwingAnimMontageInterpolationSpeed; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FRuntimeFloatCurve _animMontagePlayRateVsSwingSpeedLevel; // 0x2b0(0x88)

	void Server_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection); // Function ConZ.SwingItemComponent.Server_SetSwingSpeedLevel // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24fc130
	void NetMulticast_SetSwingSpeedLevel(int32_t Value, bool shouldPlaySwingMontageEndSection); // Function ConZ.SwingItemComponent.NetMulticast_SetSwingSpeedLevel // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24fbf90
};

// Class ConZ.Switch
// Size: 0x268 (Inherited: 0x220)
struct ASwitch : AActor {
	char pad_220[0x28]; // 0x220(0x28)
	struct UStaticMeshComponent* Mesh; // 0x248(0x08)
	struct FText _interactionText; // 0x250(0x18)
};

// Class ConZ.SwitchboardComponent
// Size: 0x1c8 (Inherited: 0xb0)
struct USwitchboardComponent : UActorComponent {
	char pad_B0[0x100]; // 0xb0(0x100)
	struct TArray<uint16_t> _repSwitchStates; // 0x1b0(0x10)
	bool _shouldControlParentMeshEmissiveColor; // 0x1c0(0x01)
	char pad_1C1[0x7]; // 0x1c1(0x07)

	void OnRep_SwitchStates(); // Function ConZ.SwitchboardComponent.OnRep_SwitchStates // (Final|Native|Private) // @ game+0x24fc110
	void Multicast_SyncSwitchOverrides(struct TArray<uint16_t> overrideIndices); // Function ConZ.SwitchboardComponent.Multicast_SyncSwitchOverrides // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x24415e0
};

// Class ConZ.SwitchboardMinigame
// Size: 0x400 (Inherited: 0x340)
struct ASwitchboardMinigame : AMinigame {
	struct USwitchboardComponent* _switchboardComponent; // 0x340(0x08)
	struct UGaugeClusterComponent* _gaugeClusterComponent; // 0x348(0x08)
	struct FComponentReference _schematicMeshRef; // 0x350(0x28)
	float _safetyDuration; // 0x378(0x04)
	float _switchUseTimeRestriction; // 0x37c(0x04)
	struct FVector _zoomStartLocation; // 0x380(0x0c)
	struct FVector _zoomEndLocation; // 0x38c(0x0c)
	struct UCurveFloat* _zoomCurve; // 0x398(0x08)
	struct UCurveFloat* _fadeCurve; // 0x3a0(0x08)
	struct FComponentReference _fuseBurnedParticlesRef; // 0x3a8(0x28)
	float _durationToShutOff; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct UStaticMeshComponent* _fuseMeshComponent; // 0x3d8(0x08)
	char pad_3E0[0x20]; // 0x3e0(0x20)
};

// Class ConZ.SwitchboardMinigameConfiguration
// Size: 0x110 (Inherited: 0x50)
struct USwitchboardMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x18]; // 0x50(0x18)
	struct UStaticMesh* SchematicMesh; // 0x68(0x08)
	char pad_70[0xa0]; // 0x70(0xa0)
};

// Class ConZ.SwitchboardSwitchAssetData
// Size: 0xc0 (Inherited: 0x28)
struct USwitchboardSwitchAssetData : UAssetUserData {
	struct FGameplayTag ActivationTag; // 0x28(0x08)
	struct FTransform OffRelativeTransform; // 0x30(0x30)
	struct FTransform OnRelativeTransform; // 0x60(0x30)
	float TransitionDuration; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct UAkAudioEvent* ToggleAudio; // 0x98(0x08)
	struct TArray<struct FSwitchMaterialEmissiveColorProperties> EmissiveControlProperties; // 0xa0(0x10)
	enum class ESwitchboardSwitch Switch; // 0xb0(0x01)
	char pad_B1[0xf]; // 0xb1(0x0f)
};

// Class ConZ.TabButton
// Size: 0xc88 (Inherited: 0x290)
struct UTabButton : UConZUserWidget {
	char pad_290[0x60]; // 0x290(0x60)
	bool PreviewSelectedState; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct UButton* _button; // 0x2f8(0x08)
	struct UTextBlock* _text; // 0x300(0x08)
	struct USizeBox* _sizeBox; // 0x308(0x08)
	struct FText _initialTitle; // 0x310(0x18)
	struct FTabButtonStyle _selectedButtonStyle; // 0x328(0x288)
	struct FTabButtonStyle _selectedUnfocusedButtonStyle; // 0x5b0(0x288)
	struct FTabButtonStyle _deselectedButtonStyle; // 0x838(0x288)
	struct FTabTextStyle _selectedTextStyle; // 0xac0(0x98)
	struct FTabTextStyle _selectedUnfocusedTextStyle; // 0xb58(0x98)
	struct FTabTextStyle _deselectedTextStyle; // 0xbf0(0x98)

	void OnClick(); // Function ConZ.TabButton.OnClick // (Final|Native|Private) // @ game+0x24fc0f0
};

// Class ConZ.TabButtonAlertable
// Size: 0xd08 (Inherited: 0xc88)
struct UTabButtonAlertable : UTabButton {
	struct FDataTableRowHandle _alertedTextColorHandle; // 0xc88(0x10)
	struct FDataTableRowHandle _alertedBackgroundColorHandle; // 0xc98(0x10)
	float _blinkSpeed; // 0xca8(0x04)
	char pad_CAC[0x5c]; // 0xcac(0x5c)
};

// Class ConZ.TabButtonInterface
// Size: 0x28 (Inherited: 0x28)
struct UTabButtonInterface : UConZButton {
};

// Class ConZ.TabContainer
// Size: 0x2d8 (Inherited: 0x268)
struct UTabContainer : UUserWidget {
	char pad_268[0x48]; // 0x268(0x48)
	struct UNamedSlot* _containerContent; // 0x2b0(0x08)
	enum class EUINavigation _previous; // 0x2b8(0x01)
	enum class EUINavigation _next; // 0x2b9(0x01)
	enum class EUINavigation _in; // 0x2ba(0x01)
	bool _canWrap; // 0x2bb(0x01)
	char pad_2BC[0x1c]; // 0x2bc(0x1c)
};

// Class ConZ.TabElement
// Size: 0x2b8 (Inherited: 0x268)
struct UTabElement : UUserWidget {
	struct UWidget* CategoryNameWidget; // 0x268(0x08)
	char MaxIndex; // 0x270(0x01)
	char Index; // 0x271(0x01)
	char pad_272[0x2]; // 0x272(0x02)
	struct FVector2D _initialPosition; // 0x274(0x08)
	struct FVector2D _oldPosition; // 0x27c(0x08)
	struct FVector2D _newPosition; // 0x284(0x08)
	struct FVector2D _initialSize; // 0x28c(0x08)
	struct FVector2D _oldSize; // 0x294(0x08)
	struct FVector2D _newSize; // 0x29c(0x08)
	float _oldAlpha; // 0x2a4(0x04)
	float _newAlpha; // 0x2a8(0x04)
	float _interpolationTime; // 0x2ac(0x04)
	float _interpolationDuration; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)

	void Update(bool Up, struct FVector2D Offset); // Function ConZ.TabElement.Update // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x24fc200
	int32_t GetNextIndex(bool Up); // Function ConZ.TabElement.GetNextIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x24fbe20
};

// Class ConZ.TabGroup
// Size: 0x2c0 (Inherited: 0x268)
struct UTabGroup : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UPanelWidget* _tabPanel; // 0x298(0x08)
	enum class EUINavigation _previous; // 0x2a0(0x01)
	enum class EUINavigation _next; // 0x2a1(0x01)
	enum class EUINavigation _in; // 0x2a2(0x01)
	bool _canWrap; // 0x2a3(0x01)
	enum class EHorizontalAlignment _tabHorizontalAlignment; // 0x2a4(0x01)
	enum class EVerticalAlignment _tabVerticalAlignment; // 0x2a5(0x01)
	char pad_2A6[0x1a]; // 0x2a6(0x1a)
};

// Class ConZ.TabMenu
// Size: 0x468 (Inherited: 0x268)
struct UTabMenu : UUserWidget {
	struct UTabModeTab* _inventoryTab; // 0x268(0x08)
	struct UTabModeTab* _craftingTab; // 0x270(0x08)
	struct UTabModeTab* _healthTab; // 0x278(0x08)
	struct UTabModeTab* _metabolismTab; // 0x280(0x08)
	struct UTabModeTab* _squadTab; // 0x288(0x08)
	struct UTabModeTab* _gameEventsTab; // 0x290(0x08)
	struct UTabModeTab* _manualTab; // 0x298(0x08)
	struct UTabModeTab* _tradingTab; // 0x2a0(0x08)
	struct UTabModeTab* _journalTab; // 0x2a8(0x08)
	struct UWidgetSwitcher* _centralSwitcher; // 0x2b0(0x08)
	struct UWidgetSwitcher* _leftSwitcher; // 0x2b8(0x08)
	struct UWidgetSwitcher* _rightSwitcher; // 0x2c0(0x08)
	struct UTabMenuPanel* _inventoryLeftPanel; // 0x2c8(0x08)
	struct UTabMenuPanel* _metabolismLeftPanel; // 0x2d0(0x08)
	struct UTabMenuPanel* _squadLeftPanel; // 0x2d8(0x08)
	struct UTabMenuPanel* _gameEventsLeftPanel; // 0x2e0(0x08)
	struct UTabMenuPanel* _emptyLeftPanel; // 0x2e8(0x08)
	struct UTabMenuPanel* _inventoryCentralPanel; // 0x2f0(0x08)
	struct UTabMenuPanel* _buildingCentralPanel; // 0x2f8(0x08)
	struct UTabMenuPanel* _manualCentralPanel; // 0x300(0x08)
	struct UTabMenuPanel* _journalCentralPanel; // 0x308(0x08)
	struct UTabMenuPanel* _emptyCentralPanel; // 0x310(0x08)
	struct UTabMenuPanel* _inventoryRightPanel; // 0x318(0x08)
	struct UTabMenuPanel* _craftingRightPanel; // 0x320(0x08)
	struct UTabMenuPanel* _healthRightPanel; // 0x328(0x08)
	struct UTabMenuPanel* _metabolismRightPanel; // 0x330(0x08)
	struct UTabMenuPanel* _squadRightPanel; // 0x338(0x08)
	struct UTabMenuPanel* _gameEventsRightPanel; // 0x340(0x08)
	struct UTabMenuPanel* _tradingRightPanel; // 0x348(0x08)
	struct UTabMenuPanel* _emptyRightPanel; // 0x350(0x08)
	struct USquadEditor* _squadEditor; // 0x358(0x08)
	char pad_360[0xf0]; // 0x360(0xf0)
	struct UTabModeTab* _tabClass; // 0x450(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x458(0x08)
	char pad_460[0x8]; // 0x460(0x08)
};

// Class ConZ.TabMenuUIController
// Size: 0x258 (Inherited: 0x28)
struct UTabMenuUIController : UObject {
	char pad_28[0x230]; // 0x28(0x230)
};

// Class ConZ.TabModeTab
// Size: 0x490 (Inherited: 0x290)
struct UTabModeTab : UConZUserWidget {
	char pad_290[0x78]; // 0x290(0x78)
	struct USizeBox* _mainSizeBox; // 0x308(0x08)
	struct UImage* _backgroundImage; // 0x310(0x08)
	struct UTextBlock* _title; // 0x318(0x08)
	struct UTextBlock* _hotkey; // 0x320(0x08)
	struct FText _titleText; // 0x328(0x18)
	struct FText _hotkeyText; // 0x340(0x18)
	struct FSlateBrush _backgroundTextureActive; // 0x358(0x88)
	struct FSlateBrush _backgroundTextureInactive; // 0x3e0(0x88)
	struct FLinearColor _inactiveUnalertedColor; // 0x468(0x10)
	struct FLinearColor _inactiveAlertedColor; // 0x478(0x10)
	float _alertBlinkTime; // 0x488(0x04)
	char pad_48C[0x4]; // 0x48c(0x04)
};

// Class ConZ.TacticsSkill
// Size: 0x160 (Inherited: 0xb0)
struct UTacticsSkill : UIntelligenceSkill {
	char pad_B0[0x50]; // 0xb0(0x50)
	float _updateTime; // 0x100(0x04)
	float _serverUpdateTime; // 0x104(0x04)
	float _noSkillDetectionRange; // 0x108(0x04)
	float _basicDetectionRange; // 0x10c(0x04)
	float _mediumDetectionRange; // 0x110(0x04)
	float _advancedDetectionRange; // 0x114(0x04)
	float _aboveAdvancedDetectionRange; // 0x118(0x04)
	float _noSkillDetectionTime; // 0x11c(0x04)
	float _basicDetectionTime; // 0x120(0x04)
	float _mediumDetectionTime; // 0x124(0x04)
	float _advancedDetectionTime; // 0x128(0x04)
	float _aboveAdvancedDetectionTime; // 0x12c(0x04)
	float _fadeOutTime; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct UCurveFloat* _detectionTimeDistanceScale; // 0x138(0x08)
	float _noSkillExperiencePerSecond; // 0x140(0x04)
	float _basicExperiencePerSecond; // 0x144(0x04)
	float _mediumExperiencePerSecond; // 0x148(0x04)
	float _advancedExperiencePerSecond; // 0x14c(0x04)
	float _tacticsDetectionCurveCoefficient1; // 0x150(0x04)
	float _tacticsDetectionCurveCoefficient2; // 0x154(0x04)
	float _tacticsDetectionCurveCoefficient3; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)

	bool ShouldDetectPrisoner(struct APrisoner* Prisoner); // Function ConZ.TacticsSkill.ShouldDetectPrisoner // (Final|Native|Public|BlueprintCallable) // @ game+0x24ff980
	bool IsPrisonerDetected(struct APrisoner* Prisoner); // Function ConZ.TacticsSkill.IsPrisonerDetected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x24ff770
};

// Class ConZ.HandsCorrectionsData
// Size: 0x1b8 (Inherited: 0x30)
struct UHandsCorrectionsData : UDataAsset {
	struct FHandsPoseCorrections Corrections[0x3]; // 0x30(0xc0)
	struct FHandsPoseCorrections FirstPersonCorrections[0x3]; // 0xf0(0xc0)
	bool OverrideFingersOnlyInProne; // 0x1b0(0x01)
	char pad_1B1[0x7]; // 0x1b1(0x07)
};

// Class ConZ.ItemFirstPersonAnimationsDataAsset
// Size: 0x98 (Inherited: 0x30)
struct UItemFirstPersonAnimationsDataAsset : UDataAsset {
	struct FItemFirstPersonUpperBodyAnimationsData UpperBody; // 0x30(0x50)
	struct UBlendSpace* AimOffsetStanding; // 0x80(0x08)
	struct UBlendSpace* AimOffsetCrouching; // 0x88(0x08)
	struct UBlendSpace* AimOffsetProne; // 0x90(0x08)
};

// Class ConZ.TakeInHandsAssetData
// Size: 0x150 (Inherited: 0x30)
struct UTakeInHandsAssetData : UInteractionAssetData {
	struct UAttachmentSocketMountType* AttachmentSocketMountType; // 0x30(0x08)
	struct FName GripSocketName; // 0x38(0x08)
	struct FName SupportingHandIKSocketName; // 0x40(0x08)
	struct UAnimMontage* TakeInHandsMontage; // 0x48(0x08)
	struct UAnimMontage* RemoveFromHandsMontage; // 0x50(0x08)
	struct UMeleeSkillAnimationsPreset* MeleeSkillAnimationsPreset; // 0x58(0x08)
	struct UHandsCorrectionsData* HandsCorrectionssData; // 0x60(0x08)
	struct UItemFirstPersonAnimationsDataAsset* FirstPersonAnimationsData; // 0x68(0x08)
	bool ShouldOverrideMaxPace; // 0x70(0x01)
	bool ShouldOverrideMovementSpeedMultiplier; // 0x71(0x01)
	enum class EPrisonerMovementPace MaxPaceOverride; // 0x72(0x01)
	char pad_73[0x1]; // 0x73(0x01)
	float MovementSpeedMultiplierOverride; // 0x74(0x04)
	float SwimmingMovementSpeedModifier; // 0x78(0x04)
	float DivingMovementSpeedModifier; // 0x7c(0x04)
	float BuoyancyMultiplier; // 0x80(0x04)
	bool IsCarriedWithTwoHands; // 0x84(0x01)
	bool ShouldDropWhenEnteringCombatMode; // 0x85(0x01)
	bool ShouldActionConstrainStance; // 0x86(0x01)
	bool ShouldActionConstrainMove; // 0x87(0x01)
	bool ShouldActionConstrainTurn; // 0x88(0x01)
	bool ShouldActionForceStance; // 0x89(0x01)
	enum class EPrisonerGroundStance ActionStance; // 0x8a(0x01)
	enum class EStanceChangeFlag ActionStanceFlag; // 0x8b(0x01)
	bool IsCarried; // 0x8c(0x01)
	enum class EPrisonerGroundStance StanceWhileCarrying; // 0x8d(0x01)
	enum class EStanceChangeFlag CarryStanceFlag; // 0x8e(0x01)
	bool ShouldDropWhenEnteringCombatModeWhileCarrying; // 0x8f(0x01)
	enum class EPrisonerMovementPace MaxPaceWhileCarrying; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UAnimSequenceBase* CarryItemIdleAnimationFP; // 0x98(0x08)
	struct UAnimSequenceBase* CarryItemIdleAnimationTP; // 0xa0(0x08)
	struct UAnimMontage* PlayerLongThrowMontage; // 0xa8(0x08)
	struct UAnimMontage* PlayerLongThrowLoopMontage; // 0xb0(0x08)
	struct UAnimMontage* PlayerShortThrowMontage; // 0xb8(0x08)
	struct UAnimMontage* PlayerThrowbackMontage; // 0xc0(0x08)
	struct UAnimMontage* ThrowingItemToWeaponMontage; // 0xc8(0x08)
	struct UAnimMontage* WeaponToThrowingItemMontage; // 0xd0(0x08)
	struct TMap<enum class EThrowingAnimationType, struct FThrowingAnimationSet> ThrowingAnimationSets; // 0xd8(0x50)
	float MaxObstructedDepenetrationDepth; // 0x128(0x04)
	float MaxObstructedDepenetrationDepthProne; // 0x12c(0x04)
	struct UAnimSequenceBase* LeftObstructedIdleAnimationFP; // 0x130(0x08)
	struct UAnimSequenceBase* RightObstructedIdleAnimationFP; // 0x138(0x08)
	struct UAnimSequenceBase* ObstructedIdleAnimationTP; // 0x140(0x08)
	struct UAnimSequenceBase* ObstructedIdleAnimationProneTP; // 0x148(0x08)
};

// Class ConZ.TaskEntriesDropdownWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UTaskEntriesDropdownWidget : UUserWidget {
	struct UImage* _background; // 0x268(0x08)
	struct UTextBlock* _categoryNameTextBlock; // 0x270(0x08)
	struct UCheckBox* _chbSwitchDropdownState; // 0x278(0x08)
	struct UVerticalBox* _entriesContainer; // 0x280(0x08)
	struct UOverlay* _titleOverlay; // 0x288(0x08)
	int32_t _unopenedFontSize; // 0x290(0x04)
	int32_t _openedFontSize; // 0x294(0x04)
	struct FLinearColor _unopenedBackgroundColorAndOpacity; // 0x298(0x10)
	struct FLinearColor _openedBackgroundColorAndOpacity; // 0x2a8(0x10)
	enum class ETaskCategory _taskCategory; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct UImage* _categoryIcon; // 0x2c0(0x08)

	void OnDropdownStateChanged(bool isCollapsed); // Function ConZ.TaskEntriesDropdownWidget.OnDropdownStateChanged // (Final|Native|Private) // @ game+0x24ff830
};

// Class ConZ.TaskEntriesPanelWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UTaskEntriesPanelWidget : UUserWidget {
	struct USearchBox* _searchBox; // 0x268(0x08)
	struct UVerticalBox* _activeEntriesVerticalBox; // 0x270(0x08)
	struct UVerticalBox* _activeEntryContainer; // 0x278(0x08)
	struct UVerticalBox* _entriesVerticalBox; // 0x280(0x08)
	struct UVerticalBox* _entryContainer; // 0x288(0x08)
	struct UTaskEntriesDropdownWidget* _dropdownWidgetClass; // 0x290(0x08)
	struct UTaskEntryWidget* _entryWidgetClass; // 0x298(0x08)
	char pad_2A0[0x20]; // 0x2a0(0x20)
	struct UConZCustomInteractionButton* _collapseAllButton; // 0x2c0(0x08)
	struct UConZCustomInteractionButton* _expandAllButton; // 0x2c8(0x08)

	void OnAnyButtonHovered(); // Function ConZ.TaskEntriesPanelWidget.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x235cb50
	void HandleOnExpandAllClicked(); // Function ConZ.TaskEntriesPanelWidget.HandleOnExpandAllClicked // (Final|Native|Private) // @ game+0x24ff750
	void HandleOnCollapseAllClicked(); // Function ConZ.TaskEntriesPanelWidget.HandleOnCollapseAllClicked // (Final|Native|Private) // @ game+0x24ff730
};

// Class ConZ.TaskEntryDetailsPanelWidget
// Size: 0x430 (Inherited: 0x268)
struct UTaskEntryDetailsPanelWidget : UUserWidget {
	struct UOverlay* _mainOverlay; // 0x268(0x08)
	struct UScrollBox* _scrollBox; // 0x270(0x08)
	struct UTextBlock* _entryName; // 0x278(0x08)
	struct UTextBlock* _entryDescription; // 0x280(0x08)
	struct UVerticalBox* _entryTrackingDataContainer; // 0x288(0x08)
	struct UVerticalBox* _rewardsVerticalBox; // 0x290(0x08)
	struct UVerticalBox* _entryRewardsContainer; // 0x298(0x08)
	struct UPrimaryButton* _abandonTaskButton; // 0x2a0(0x08)
	struct UPrimaryButton* _startTaskButton; // 0x2a8(0x08)
	struct UQuestTrackingDataWidget* _trackingDataWidgetClass; // 0x2b0(0x08)
	struct FSlateFontInfo _dialogueTextFont; // 0x2b8(0x58)
	struct FText _abandonTaskTooltipText; // 0x310(0x18)
	struct FText _startTaskTooltipText; // 0x328(0x18)
	struct UTextOnlyTooltip* _tooltipClass; // 0x340(0x08)
	char pad_348[0xb8]; // 0x348(0xb8)
	struct FSlateColor _stepDialogueTextColor; // 0x400(0x28)
	char pad_428[0x8]; // 0x428(0x08)

	void OnStartTaskButtonClicked(); // Function ConZ.TaskEntryDetailsPanelWidget.OnStartTaskButtonClicked // (Final|Native|Private) // @ game+0x24ff8c0
	void OnAbandonTaskButtonClicked(); // Function ConZ.TaskEntryDetailsPanelWidget.OnAbandonTaskButtonClicked // (Final|Native|Private) // @ game+0x24ff810
};

// Class ConZ.TaskEntryWidget
// Size: 0x2d8 (Inherited: 0x268)
struct UTaskEntryWidget : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	struct UImage* _backgroundImage; // 0x278(0x08)
	struct UTextBlock* _entryName; // 0x280(0x08)
	struct UQuestTrackingCheckbox* _trackingCheckbox; // 0x288(0x08)
	struct FName _pixelSizeMaterialParameterName; // 0x290(0x08)
	struct FName _dpiMaterialParameterName; // 0x298(0x08)
	struct UMaterialInstance* _inactiveMaterialInstance; // 0x2a0(0x08)
	struct UMaterialInstance* _inactiveHoveredMaterialInstance; // 0x2a8(0x08)
	struct UMaterialInstance* _activeMaterialInstance; // 0x2b0(0x08)
	struct UImage* _entryCompletedIcon; // 0x2b8(0x08)
	char pad_2C0[0x18]; // 0x2c0(0x18)
};

// Class ConZ.TaskSetup
// Size: 0x208 (Inherited: 0x30)
struct UTaskSetup : UDataAsset {
	struct FText Title; // 0x30(0x18)
	enum class ETaskCategory Category; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct TArray<struct FText> DescriptionSegments; // 0x50(0x10)
	struct FName StartingDialogueName; // 0x60(0x08)
	bool CanBeAutoStarted; // 0x68(0x01)
	bool HiddenFromTaskList; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct TArray<struct UQuestCondition*> ConditionsSequence; // 0x70(0x10)
	struct TArray<struct TSoftObjectPtr<UTaskSetup>> TasksToUnlockWhenCompleted; // 0x80(0x10)
	struct FQuestRewards Rewards; // 0x90(0x128)
	struct TSoftClassPtr<UObject> AddBodyConditionWhenStartingTask; // 0x1b8(0x28)
	struct FString BodyConditionAdminCommandParams; // 0x1e0(0x10)
	bool EarlyFailOnDeath; // 0x1f0(0x01)
	char pad_1F1[0x3]; // 0x1f1(0x03)
	struct FName DialogueUponEarlyFailName; // 0x1f4(0x08)
	struct FName DialogueUponEarlyCompletionName; // 0x1fc(0x08)
	char pad_204[0x4]; // 0x204(0x04)
};

// Class ConZ.TeamDeathmatchParticipantStats
// Size: 0x48 (Inherited: 0x48)
struct UTeamDeathmatchParticipantStats : UGameEventParticipantStats {
};

// Class ConZ.TeamDeathmatchGameEvent
// Size: 0x5a8 (Inherited: 0x588)
struct ATeamDeathmatchGameEvent : AGameEventBase {
	struct FTeamDeathmatchParameters _teamDeathmatchParameters; // 0x588(0x14)
	char pad_59C[0xc]; // 0x59c(0x0c)

	void SetTeamDeathmatchParameters(struct FTeamDeathmatchParameters& Params); // Function ConZ.TeamDeathmatchGameEvent.SetTeamDeathmatchParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x24ff8e0
	void RestrictGameEventArea(); // Function ConZ.TeamDeathmatchGameEvent.RestrictGameEventArea // (Native|Public|BlueprintCallable) // @ game+0x23bdd30
	struct FTeamDeathmatchParameters GetTeamDeathmatchParameters(); // Function ConZ.TeamDeathmatchGameEvent.GetTeamDeathmatchParameters // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23bdc10
};

// Class ConZ.TeamDeathmatchLocationMarker
// Size: 0x440 (Inherited: 0x418)
struct ATeamDeathmatchLocationMarker : AGameEventLocationMarker {
	struct FTeamDeathmatchParameters TeamDeathmatchParameters; // 0x418(0x14)
	struct FVector FocusOffset; // 0x42c(0x0c)
	float MinimalRadius; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
};

// Class ConZ.TeamInvitationWidget
// Size: 0x2b8 (Inherited: 0x268)
struct UTeamInvitationWidget : UUserWidget {
	struct APrisoner* invitor; // 0x268(0x08)
	struct APrisoner* invited; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	struct UTextBlock* _flagWarningMessage; // 0x280(0x08)
	struct UTextBlock* TimerText; // 0x288(0x08)
	struct UTextBlock* InvitationMessage; // 0x290(0x08)
	struct UButton* Accept; // 0x298(0x08)
	struct UButton* Decline; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)
	struct UMessageBox* _confirmationMessageBox; // 0x2b0(0x08)

	void OnDecline(); // Function ConZ.TeamInvitationWidget.OnDecline // (Final|Native|Public) // @ game+0x2503720
	void OnAccept(); // Function ConZ.TeamInvitationWidget.OnAccept // (Final|Native|Public) // @ game+0x2503680
};

// Class ConZ.TearGasGrenadeItem
// Size: 0xad0 (Inherited: 0xaa0)
struct ATearGasGrenadeItem : ASmokeGrenadeItem {
	float _gasInfluenceMaxRadius; // 0xaa0(0x04)
	float _gasInfluenceFullRadiusTime; // 0xaa4(0x04)
	float _gasInfluenceDurationTime; // 0xaa8(0x04)
	char pad_AAC[0x24]; // 0xaac(0x24)
};

// Class ConZ.TelemetryCheckbox
// Size: 0x278 (Inherited: 0x268)
struct UTelemetryCheckbox : UUserWidget {
	struct UImage* _checkboxIcon; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class ConZ.TelemetryMenu
// Size: 0x2d8 (Inherited: 0x268)
struct UTelemetryMenu : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UWidgetSwitcher* _mainSwitcher; // 0x280(0x08)
	struct UButton* _buttonModify; // 0x288(0x08)
	struct UButton* _buttonAcceptAll; // 0x290(0x08)
	struct UButton* _buttonAbout; // 0x298(0x08)
	struct UButton* _buttonCancel; // 0x2a0(0x08)
	struct UButton* _buttonDone; // 0x2a8(0x08)
	struct UButton* _buttonBack; // 0x2b0(0x08)
	struct UButton* _buttonGamepiresPrivacyPolicy; // 0x2b8(0x08)
	struct UTelemetryCheckbox* _checkboxPAGA; // 0x2c0(0x08)
	struct UTelemetryCheckbox* _checkboxIBA; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)

	void OnModifyButtonClicked(); // Function ConZ.TelemetryMenu.OnModifyButtonClicked // (Final|Native|Private) // @ game+0x2503950
	void OnGamepiresPrivacyPolicyClicked(); // Function ConZ.TelemetryMenu.OnGamepiresPrivacyPolicyClicked // (Final|Native|Private) // @ game+0x2503760
	void OnDoneButtonClicked(); // Function ConZ.TelemetryMenu.OnDoneButtonClicked // (Final|Native|Private) // @ game+0x2503740
	void OnCancelButtonClicked(); // Function ConZ.TelemetryMenu.OnCancelButtonClicked // (Final|Native|Private) // @ game+0x25036e0
	void OnBackButtonClicked(); // Function ConZ.TelemetryMenu.OnBackButtonClicked // (Final|Native|Private) // @ game+0x25036c0
	void OnAcceptAllButtonClicked(); // Function ConZ.TelemetryMenu.OnAcceptAllButtonClicked // (Final|Native|Private) // @ game+0x25036a0
	void OnAboutButtonClicked(); // Function ConZ.TelemetryMenu.OnAboutButtonClicked // (Final|Native|Private) // @ game+0x2503660
};

// Class ConZ.TelemetrySetting
// Size: 0x278 (Inherited: 0x268)
struct UTelemetrySetting : UUserWidget {
	struct UButton* _modifyButton; // 0x268(0x08)
	struct UTelemetryMenu* _telementryMenuClass; // 0x270(0x08)

	void ShowTelemetryMenu(); // Function ConZ.TelemetrySetting.ShowTelemetryMenu // (Final|Native|Private) // @ game+0x25040a0
};

// Class ConZ.TeleportComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTeleportComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FTeleportRepData _repData; // 0xb8(0x30)
	char pad_E8[0x8]; // 0xe8(0x08)

	void Server_ReportClientReadyToFinishTeleport(char RequestID); // Function ConZ.TeleportComponent.Server_ReportClientReadyToFinishTeleport // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2504020
	void OnRep_Data(); // Function ConZ.TeleportComponent.OnRep_Data // (Native|Protected) // @ game+0x2503aa0
};

// Class ConZ.TeleportComponentOwner
// Size: 0x28 (Inherited: 0x28)
struct UTeleportComponentOwner : UInterface {
};

// Class ConZ.TeleportSubject
// Size: 0x28 (Inherited: 0x28)
struct UTeleportSubject : UInterface {
};

// Class ConZ.TempPlayerStart
// Size: 0x250 (Inherited: 0x250)
struct ATempPlayerStart : APlayerStart {
};

// Class ConZ.TextBoxWithLabel
// Size: 0x19f8 (Inherited: 0x268)
struct UTextBoxWithLabel : UUserWidget {
	char pad_268[0x68]; // 0x268(0x68)
	struct UTextBlock* _name; // 0x2d0(0x08)
	struct UEditableTextBox* _inputTextBox; // 0x2d8(0x08)
	struct UImage* _focusBackgroundImage; // 0x2e0(0x08)
	struct UImage* _showPasswordOff; // 0x2e8(0x08)
	struct UImage* _showPasswordOn; // 0x2f0(0x08)
	struct UOverlay* _showPasswordIconOverlay; // 0x2f8(0x08)
	struct FText _label; // 0x300(0x18)
	struct FTextBoxWithLabelStyle _selectedAndFocusedTWLStyle; // 0x318(0x158)
	struct FTextBoxWithLabelStyle _selectedAndUnfocusedTWLStyle; // 0x470(0x158)
	struct FTextBoxWithLabelStyle _unselectedTWLStyle; // 0x5c8(0x158)
	struct FTextBoxWithLabelStyle _highlightedTWLStyle; // 0x720(0x158)
	struct FTextBoxWithLabelStyle _disabledTWLStyle; // 0x878(0x158)
	struct FEditableTextBoxStyle _correctInputTextBoxStyle; // 0x9d0(0x7f8)
	struct FEditableTextBoxStyle _incorrectInputTextBoxStyle; // 0x11c8(0x7f8)
	char pad_19C0[0x38]; // 0x19c0(0x38)

	void OnTextChanged(struct FText& Text); // Function ConZ.TextBoxWithLabel.OnTextChanged // (Native|Protected|HasOutParms) // @ game+0x2503ec0
	struct FEventReply OnShowPasswordToggle(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.TextBoxWithLabel.OnShowPasswordToggle // (Native|Protected|HasOutParms) // @ game+0x2503ae0
};

// Class ConZ.TextInputWidget
// Size: 0x328 (Inherited: 0x268)
struct UTextInputWidget : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UButton* MainButton; // 0x280(0x08)
	struct UEditableTextBox* TextBox; // 0x288(0x08)
	struct UTextBlock* TextBlock_1; // 0x290(0x08)
	struct USizeBox* TitleSizeBox; // 0x298(0x08)
	struct USizeBox* InputSizeBox; // 0x2a0(0x08)
	struct UImage* InputImage; // 0x2a8(0x08)
	struct UImage* Image_1; // 0x2b0(0x08)
	struct UImage* Image_2; // 0x2b8(0x08)
	int32_t InputFontSize; // 0x2c0(0x04)
	int32_t TitleFontSize; // 0x2c4(0x04)
	int32_t TitleFontSizeHighlighted; // 0x2c8(0x04)
	float TitleWidth; // 0x2cc(0x04)
	float InputWidth; // 0x2d0(0x04)
	float Height; // 0x2d4(0x04)
	struct FText Title; // 0x2d8(0x18)
	struct FText DefaultValue; // 0x2f0(0x18)
	float InputPadding; // 0x308(0x04)
	enum class EHorizontalAlignment ValueJustification; // 0x30c(0x01)
	char pad_30D[0x3]; // 0x30d(0x03)
	struct FLinearColor InputBackgroundColor; // 0x310(0x10)
	enum class ETextInputType InputType; // 0x320(0x01)
	char pad_321[0x7]; // 0x321(0x07)

	void OnTextBoxTextCommitted(struct FText& Text, enum class ETextCommit CommitMethod); // Function ConZ.TextInputWidget.OnTextBoxTextCommitted // (Native|Public|HasOutParms) // @ game+0x2503d90
	void OnTextBoxTextChanged(struct FText& Text); // Function ConZ.TextInputWidget.OnTextBoxTextChanged // (Native|Public|HasOutParms) // @ game+0x2503cc0
	int32_t GetValueInt(); // Function ConZ.TextInputWidget.GetValueInt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2503490
	struct FText GetValue(); // Function ConZ.TextInputWidget.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25033f0
};

// Class ConZ.TextOnlyTooltip
// Size: 0x270 (Inherited: 0x268)
struct UTextOnlyTooltip : UUserWidget {
	struct UTextBlock* _textBlock; // 0x268(0x08)
};

// Class ConZ.TextStatics
// Size: 0x28 (Inherited: 0x28)
struct UTextStatics : UBlueprintFunctionLibrary {

	struct FText GetColorText(enum class EConZColor Color); // Function ConZ.TextStatics.GetColorText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2503310
};

// Class ConZ.Texture2DStatics
// Size: 0x28 (Inherited: 0x28)
struct UTexture2DStatics : UObject {
};

// Class ConZ.ThermalSensorComponent
// Size: 0x100 (Inherited: 0xb0)
struct UThermalSensorComponent : UActorComponent {
	float _temperature; // 0xb0(0x04)
	float _emissivity; // 0xb4(0x04)
	float _radius; // 0xb8(0x04)
	float _mass; // 0xbc(0x04)
	float _specificHeatCapacity; // 0xc0(0x04)
	float _thermalConductivity; // 0xc4(0x04)
	char pad_C8[0x20]; // 0xc8(0x20)
	char _packedTemperature; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	bool _temperatureReplicationEnabled; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	float _packTemperatureOffset; // 0xf4(0x04)
	float _packTemperatureScale; // 0xf8(0x04)
	float _packTemperatureGamma; // 0xfc(0x04)

	void OnRep_Temperature(); // Function ConZ.ThermalSensorComponent.OnRep_Temperature // (Final|Native|Private) // @ game+0x2503ac0
};

// Class ConZ.Thermometer
// Size: 0x9c0 (Inherited: 0x9b0)
struct AThermometer : AItem {
	struct UThermalSensorComponent* _thermalSensorComponent; // 0x9a8(0x08)
	int32_t _thermometerFluidMaterialId; // 0x9b0(0x04)
	char pad_9BC[0x4]; // 0x9bc(0x04)
};

// Class ConZ.ThieverySkill
// Size: 0xe0 (Inherited: 0xb0)
struct UThieverySkill : UDexteritySkill {
	struct UCurveFloat* _lockpickingDurationModifierCurve; // 0xb0(0x08)
	struct UCurveFloat* _lockpickingStartAngleModifierCurve; // 0xb8(0x08)
	struct UCurveFloat* _lockpickingAngleModifierCurve; // 0xc0(0x08)
	struct UCurveFloat* _lockpickingDurabilityModifierCurve; // 0xc8(0x08)
	struct UCurveFloat* _dialPadDurationModifierCurve; // 0xd0(0x08)
	struct UCurveFloat* _voltageMatchingDurationModifierCurve; // 0xd8(0x08)
};

// Class ConZ.ThrowableItemTag
// Size: 0x68 (Inherited: 0x30)
struct UThrowableItemTag : UBaseItemTag {
	struct FMeleeWeaponDesc WeaponDesc; // 0x30(0x38)
};

// Class ConZ.ThrowingComponent
// Size: 0x1610 (Inherited: 0x1e0)
struct UThrowingComponent : UProjectileMovementComponent {
	char pad_1E0[0x18]; // 0x1e0(0x18)
	enum class EItemThrowingBehavior ItemThrowingBehavior; // 0x1f8(0x01)
	char pad_1F9[0x3]; // 0x1f9(0x03)
	float Dispersion; // 0x1fc(0x04)
	float PierceMaxDensity; // 0x200(0x04)
	float ThrowEnergyMultiplier; // 0x204(0x04)
	struct FRotator InitialRotation; // 0x208(0x0c)
	struct FRotator UpdatedRotation; // 0x214(0x0c)
	struct FRotator MinRandomImpactRotation; // 0x220(0x0c)
	struct FRotator MaxRandomImpactRotation; // 0x22c(0x0c)
	float PenetrationDepth; // 0x238(0x04)
	bool IsFloatable; // 0x23c(0x01)
	enum class EPrisonerGroundStance MinStance; // 0x23d(0x01)
	char pad_23E[0x13ba]; // 0x23e(0x13ba)
	struct UParticleSystem* _splashParticleSystem; // 0x15f8(0x08)
	struct UAkAudioEvent* _splashAudioEvent; // 0x1600(0x08)
	char pad_1608[0x8]; // 0x1608(0x08)

	void OnProjectileBounced(struct FHitResult& ImpactResult, struct FVector& impactVelocity); // Function ConZ.ThrowingComponent.OnProjectileBounced // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x2503970
	void Multicast_ThrowingFinished(struct USceneComponent* thrownComponent, struct FHitResult HitResult, bool isPiercing, struct FVector impactVelocity); // Function ConZ.ThrowingComponent.Multicast_ThrowingFinished // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x25034c0
};

// Class ConZ.ThrowingQuickAccessItemWidget
// Size: 0x2c8 (Inherited: 0x268)
struct UThrowingQuickAccessItemWidget : UUserWidget {
	char MaxWidth; // 0x268(0x01)
	char MaxHeight; // 0x269(0x01)
	char pad_26A[0x6]; // 0x26a(0x06)
	struct UImage* _imageWidget; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)
	float DefaultWidth; // 0x280(0x04)
	float DefaultHeight; // 0x284(0x04)
	struct FVector2D DefaultPosition; // 0x288(0x08)
	struct UWidget* _itemWidget; // 0x290(0x08)
	struct USizeBox* SizeBox_1; // 0x298(0x08)
	struct UImage* _additionalIcon; // 0x2a0(0x08)
	struct UTextBlock* _additionalText; // 0x2a8(0x08)
	struct UTextBlock* TextBlockItemSlotNumber; // 0x2b0(0x08)
	char pad_2B8[0x10]; // 0x2b8(0x10)

	struct FEventReply OnImageWidgetMouseButtonDown(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function ConZ.ThrowingQuickAccessItemWidget.OnImageWidgetMouseButtonDown // (Final|Native|Private|HasOutParms) // @ game+0x2503780
};

// Class ConZ.TimeControllableLight
// Size: 0x248 (Inherited: 0x230)
struct ATimeControllableLight : ALight {
	bool _shouldExistOnDedicatedServer; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct UCurveFloat* _intensityVsTimeOfDayCurve; // 0x238(0x08)
	struct UPointLightComponent* _pointLightComponent; // 0x240(0x08)

	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.TimeControllableLight.OnTimeOfDayChanged // (Final|Native|Public) // @ game+0x2503f90
};

// Class ConZ.TimeControllableSpotLight
// Size: 0x248 (Inherited: 0x230)
struct ATimeControllableSpotLight : ALight {
	bool _shouldExistOnDedicatedServer; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct UCurveFloat* _intensityVsTimeOfDayCurve; // 0x238(0x08)
	struct USpotLightComponent* _pointLightComponent; // 0x240(0x08)

	void OnTimeOfDayChanged(struct AWeatherController2* sender); // Function ConZ.TimeControllableSpotLight.OnTimeOfDayChanged // (Final|Native|Public) // @ game+0x2503f90
};

// Class ConZ.TimedGiftSpawner
// Size: 0x288 (Inherited: 0x220)
struct ATimedGiftSpawner : AActor {
	int64_t _giftSpawnTime; // 0x220(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> _possibleGifts; // 0x228(0x10)
	struct TSoftClassPtr<UObject> _referenceItem; // 0x238(0x28)
	float _giftOffsetFromReferenceItem; // 0x260(0x04)
	char pad_264[0x24]; // 0x264(0x24)
};

// Class ConZ.TriggerComponentState
// Size: 0x28 (Inherited: 0x28)
struct UTriggerComponentState : UObject {
};

// Class ConZ.TimedTriggerComponentState
// Size: 0x30 (Inherited: 0x28)
struct UTimedTriggerComponentState : UTriggerComponentState {
	float CountdownRemainingTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class ConZ.TimedTriggerComponent
// Size: 0x510 (Inherited: 0x4e0)
struct UTimedTriggerComponent : UTriggerComponent {
	float _countdownDuration; // 0x4e0(0x04)
	char pad_4E4[0x4]; // 0x4e4(0x04)
	struct UAkAudioEvent* _countdownStartAudioEvent; // 0x4e8(0x08)
	struct UAkAudioEvent* _countdownStopAudioEvent; // 0x4f0(0x08)
	float _countdownRemainingTime; // 0x4f8(0x04)
	char pad_4FC[0x14]; // 0x4fc(0x14)

	void OnCountdownTimer(); // Function ConZ.TimedTriggerComponent.OnCountdownTimer // (Final|Native|Private) // @ game+0x2503700
};

// Class ConZ.TireToSurfaceAudioData
// Size: 0x268 (Inherited: 0x30)
struct UTireToSurfaceAudioData : UDataAsset {
	float _maxSoundRange; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UAkAudioEvent* _movementStarted; // 0x38(0x08)
	struct UAkAudioEvent* _movementStopped; // 0x40(0x08)
	struct UAkAudioEvent* _noSurface; // 0x48(0x08)
	struct UAkAudioEvent* _flatTireContinuousStart; // 0x50(0x08)
	struct UAkAudioEvent* _flatTireContinuousStop; // 0x58(0x08)
	struct TArray<struct FTireSurfaceAudioEntry> _soundGroups; // 0x60(0x10)
	char pad_70[0x1f8]; // 0x70(0x1f8)
};

// Class ConZ.TitleAndDescriptionTooltip
// Size: 0x278 (Inherited: 0x268)
struct UTitleAndDescriptionTooltip : UUserWidget {
	struct UTextBlock* _titleTextBlock; // 0x268(0x08)
	struct UTextBlock* _descriptionTextBlock; // 0x270(0x08)
};

// Class ConZ.ToggleCamouflageAction
// Size: 0xa8 (Inherited: 0xa0)
struct UToggleCamouflageAction : USkillAction {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class ConZ.TooltipBase
// Size: 0x2a0 (Inherited: 0x268)
struct UTooltipBase : UUserWidget {
	struct UImage* BackgroundImage; // 0x268(0x08)
	struct UImage* ItemImage; // 0x270(0x08)
	struct UVerticalBox* ItemImageBox; // 0x278(0x08)
	struct UTextBlock* NameText; // 0x280(0x08)
	struct UTextBlock* DescriptionText; // 0x288(0x08)
	struct UProgressBar* ProgressBar_1; // 0x290(0x08)
	struct AItem* _item; // 0x298(0x08)

	void InitFromItem(struct AItem* Item); // Function ConZ.TooltipBase.InitFromItem // (Final|Native|Public|BlueprintCallable) // @ game+0x2509640
	void InitFromCaptionAndDescription(struct FText& Caption, struct FText& Description); // Function ConZ.TooltipBase.InitFromCaptionAndDescription // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x25094d0
};

// Class ConZ.Tournament
// Size: 0x270 (Inherited: 0x220)
struct ATournament : AActor {
	char pad_220[0x10]; // 0x220(0x10)
	struct UAkAudioEvent* StartAnnouncement; // 0x230(0x08)
	struct UAkAudioEvent* SuddenDeathAnnouncement; // 0x238(0x08)
	struct UAkAudioEvent* EndAnnouncement; // 0x240(0x08)
	bool _inProgress; // 0x248(0x01)
	bool _inSuddenDeath; // 0x249(0x01)
	bool _hasEnded; // 0x24a(0x01)
	char pad_24B[0x5]; // 0x24b(0x05)
	struct TArray<struct FTournamentStats> _stats; // 0x250(0x10)
	struct UTournamentScoreboardWidget* _scoreboardWidget; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)

	void OnRep_Stats(); // Function ConZ.Tournament.OnRep_Stats // (Final|Native|Private) // @ game+0x2509850
	void Multicast_PlayAnnouncement(struct UAkAudioEvent* AudioEvent); // Function ConZ.Tournament.Multicast_PlayAnnouncement // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x23cdb90
	bool IsInSuddenDeath(); // Function ConZ.Tournament.IsInSuddenDeath // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xaceb20
	bool IsInProgress(); // Function ConZ.Tournament.IsInProgress // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25096d0
	bool HasEnded(); // Function ConZ.Tournament.HasEnded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25094a0
	void GetStatsOrderedByDeath(struct TArray<struct FTournamentStats>& Stats); // Function ConZ.Tournament.GetStatsOrderedByDeath // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x25093c0
	struct TArray<struct FTournamentStats> GetStats(); // Function ConZ.Tournament.GetStats // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25092b0
	struct UTournamentScoreboardWidget* GetScoreboardWidget(); // Function ConZ.Tournament.GetScoreboardWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2509280
};

// Class ConZ.TournamentScoreboardRowWidget
// Size: 0x290 (Inherited: 0x268)
struct UTournamentScoreboardRowWidget : UUserWidget {
	struct UTextBlock* _rankText; // 0x268(0x08)
	struct UTextBlock* _playerNameText; // 0x270(0x08)
	struct UTextBlock* _famePointsText; // 0x278(0x08)
	struct UTextBlock* _killsText; // 0x280(0x08)
	struct UImage* _deathIcon; // 0x288(0x08)
};

// Class ConZ.TournamentScoreboardWidget
// Size: 0x280 (Inherited: 0x268)
struct UTournamentScoreboardWidget : UUserWidget {
	struct UTextBlock* _instruction; // 0x268(0x08)
	struct UVerticalBox* _table; // 0x270(0x08)
	struct UTournamentScoreboardRowWidget* _rowClass; // 0x278(0x08)
};

// Class ConZ.TrackingMarker2
// Size: 0x288 (Inherited: 0x220)
struct ATrackingMarker2 : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct USceneComponent* SceneComponent; // 0x228(0x08)
	struct UArrowComponent* DirectionArrow; // 0x230(0x08)
	struct UDecalComponent* ConeDecal; // 0x238(0x08)
	struct UParticleSystemComponent* Particles; // 0x240(0x08)
	float TickFrequency; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct AAnimal2* AnimalClass; // 0x250(0x08)
	float Duration; // 0x258(0x04)
	struct FVector Direction; // 0x25c(0x0c)
	float health; // 0x268(0x04)
	enum class EBleedingSeverity BleedingSeverity; // 0x26c(0x01)
	bool ShowBleedingInfo; // 0x26d(0x01)
	bool ShowWoundInfo; // 0x26e(0x01)
	bool ShowBasicWoundInfo; // 0x26f(0x01)
	float MaxSevereBleedTime; // 0x270(0x04)
	float MaxHeavyBleedTime; // 0x274(0x04)
	float MaxModerateBleedTime; // 0x278(0x04)
	float MaxLightBleedTime; // 0x27c(0x04)
	char pad_280[0x8]; // 0x280(0x08)
};

// Class ConZ.Tradeable
// Size: 0x28 (Inherited: 0x28)
struct UTradeable : UInterface {
};

// Class ConZ.NPCInteractionBoxComponent
// Size: 0x490 (Inherited: 0x480)
struct UNPCInteractionBoxComponent : UBoxComponent {
	bool IsAreaForbidden; // 0x480(0x01)
	char pad_481[0xf]; // 0x481(0x0f)
};

// Class ConZ.TradeOutpostBuilding
// Size: 0x548 (Inherited: 0x4c8)
struct ATradeOutpostBuilding : ABuilding {
	char pad_4C8[0x30]; // 0x4c8(0x30)
	float _sedentaryNPCRelevancyDistance; // 0x4f8(0x04)
	char pad_4FC[0x4]; // 0x4fc(0x04)
	struct TArray<struct FSedentaryNPCMarker> _sedentaryNPCMarkers; // 0x500(0x10)
	struct TArray<struct ASedentaryNPC*> _spawnedSedentaryNPCs; // 0x510(0x10)
	char pad_520[0x18]; // 0x520(0x18)
	struct AQuestBook* _questBook; // 0x538(0x08)
	struct UQuestGiverComponent* _questGiverComponent; // 0x540(0x08)
};

// Class ConZ.TradeOutpostManager
// Size: 0x260 (Inherited: 0x220)
struct ATradeOutpostManager : AActor {
	struct UBillboardComponent* _sprite; // 0x220(0x08)
	struct UTradingOutpostDescriptionDataAsset* _outpostDescription; // 0x228(0x08)
	enum class ETradeOutpostProsperityLevel _startingProsperityLevel; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct TArray<struct ATradePost*> _assignedTradePosts; // 0x238(0x10)
	struct TArray<struct ATradeOutpostBuilding*> _otherAssignedTradeOutpostBuildings; // 0x248(0x10)
	char pad_258[0x8]; // 0x258(0x08)
};

// Class ConZ.VehicleSpawnBoxComponent
// Size: 0x490 (Inherited: 0x480)
struct UVehicleSpawnBoxComponent : UBoxComponent {
	int32_t SpawnPriority; // 0x480(0x04)
	char pad_484[0xc]; // 0x484(0x0c)
};

// Class ConZ.TradePost
// Size: 0x610 (Inherited: 0x548)
struct ATradePost : ATradeOutpostBuilding {
	char pad_548[0x18]; // 0x548(0x18)
	struct TArray<struct FTraderMarker> _traderMarkers; // 0x560(0x10)
	struct TArray<struct FTraderLocationMarker> _locationMarkers; // 0x570(0x10)
	struct TArray<struct ATrader*> _spawnedTraders; // 0x580(0x10)
	char pad_590[0x10]; // 0x590(0x10)
	struct TMap<struct FDbIntegerId, struct FSpawnedDepotsHelperStruct> _spawnedDepots; // 0x5a0(0x50)
	char pad_5F0[0x20]; // 0x5f0(0x20)
};

// Class ConZ.TraderBuyPanel
// Size: 0x4c8 (Inherited: 0x268)
struct UTraderBuyPanel : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UTraderItemButton* _traderItemButtonClass; // 0x280(0x08)
	struct UTabContainer* _cashOrCreditRadioBtn; // 0x288(0x08)
	struct UWidgetSwitcher* _subpanelSwitcher; // 0x290(0x08)
	struct UPanelWidget* _catResults; // 0x298(0x08)
	struct UWrapBox* _itemsOfChosenCategory; // 0x2a0(0x08)
	struct UTraderItemButton* _chosenItem; // 0x2a8(0x08)
	struct UWrapBox* _relatedItems; // 0x2b0(0x08)
	struct USearchBox* _itemSearchBox; // 0x2b8(0x08)
	struct UTraderDropdownMenu* _itemCategoryDropdown; // 0x2c0(0x08)
	struct UTraderDropdownMenu* _itemSortingDropdown; // 0x2c8(0x08)
	struct UTextBlock* _categoryTitle; // 0x2d0(0x08)
	struct UTraderFilterFamePointsButton* _btnFilterSufficientFP; // 0x2d8(0x08)
	struct UTraderFilterFamePointsButton* _btnFilterInsufficientFP; // 0x2e0(0x08)
	struct UTextBlock* _warningMessage; // 0x2e8(0x08)
	struct UTextBlock* _headerBannerPrisonerCashOnHand; // 0x2f0(0x08)
	struct UTextBlock* _headerBannerPrisonerCashInBank; // 0x2f8(0x08)
	struct UTextBlock* _prisonerCashOnHand; // 0x300(0x08)
	struct UTextBlock* _prisonerCashInBank; // 0x308(0x08)
	struct UTextBlock* _prisonerGoldInBank; // 0x310(0x08)
	struct UTextBlock* _prisonerFamePoints; // 0x318(0x08)
	struct UTextBlock* _buyTotal; // 0x320(0x08)
	struct UTextBlock* _buyTotalGold; // 0x328(0x08)
	struct UWidgetSwitcher* _exitBackSwitcher; // 0x330(0x08)
	struct UPrimaryButton* _btnExit; // 0x338(0x08)
	struct FText _exitTooltipText; // 0x340(0x18)
	struct UPrimaryButton* _btnBack; // 0x358(0x08)
	struct FText _backTooltipText; // 0x360(0x18)
	struct UWidgetSwitcher* _cartBuySwitcher; // 0x378(0x08)
	struct UPrimaryButton* _btnCart; // 0x380(0x08)
	struct FText _cartTooltipText; // 0x388(0x18)
	struct UPrimaryButton* _btnBuy; // 0x3a0(0x08)
	struct FText _buyTooltipText; // 0x3a8(0x18)
	int32_t _cashOrCreditFontSizeUnselected; // 0x3c0(0x04)
	int32_t _cashOrCreditFontSizeSelected; // 0x3c4(0x04)
	struct UTextOnlyTooltip* _tooltipClass; // 0x3c8(0x08)
	char pad_3D0[0x70]; // 0x3d0(0x70)
	struct FSlateColor _buyTotalZeroColor; // 0x440(0x28)
	struct FSlateColor _buyTotalNonZeroColor; // 0x468(0x28)
	struct FSlateColor _noOwnedCardInInventoryColor; // 0x490(0x28)
	struct TArray<struct FSlateBrush> _sortTypeBrushes; // 0x4b8(0x10)

	void OnExitButtonClicked(); // Function ConZ.TraderBuyPanel.OnExitButtonClicked // (Final|Native|Private) // @ game+0x2509810
	void OnCartButtonClicked(); // Function ConZ.TraderBuyPanel.OnCartButtonClicked // (Final|Native|Private) // @ game+0x2509760
	void OnBuyButtonClicked(); // Function ConZ.TraderBuyPanel.OnBuyButtonClicked // (Final|Native|Private) // @ game+0x2509740
	void OnBackButtonClicked(); // Function ConZ.TraderBuyPanel.OnBackButtonClicked // (Final|Native|Private) // @ game+0x2509720
	void OnAnyButtonHovered(); // Function ConZ.TraderBuyPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x2414f10
};

// Class ConZ.TraderBuyUIController
// Size: 0x218 (Inherited: 0x28)
struct UTraderBuyUIController : UObject {
	char pad_28[0x1f0]; // 0x28(0x1f0)
};

// Class ConZ.TraderForPlayerAndDepotItemRequest
// Size: 0x30 (Inherited: 0x28)
struct UTraderForPlayerAndDepotItemRequest : UPlayerRpcChannelServerRequest {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.TraderForPlayerAndDepotItemResponse
// Size: 0x30 (Inherited: 0x28)
struct UTraderForPlayerAndDepotItemResponse : UPlayerRpcChannelServerResponse {
	struct ATrader* _payload; // 0x28(0x08)
};

// Class ConZ.TraderDepotPanel
// Size: 0x2d0 (Inherited: 0x268)
struct UTraderDepotPanel : UUserWidget {
	struct UTextBlock* _prisonerCashOnHand; // 0x268(0x08)
	struct UTextBlock* _prisonerCashInBank; // 0x270(0x08)
	struct UTextBlock* _prisonerGoldInBank; // 0x278(0x08)
	struct UTextBlock* _prisonerFamePoints; // 0x280(0x08)
	struct UPrimaryButton* _btnExit; // 0x288(0x08)
	struct FText _exitTooltipText; // 0x290(0x18)
	struct UItemInventoryDepotWidget2* _inventoryDepotWidget2; // 0x2a8(0x08)
	struct UAkAudioEvent* _soundExitOnClick; // 0x2b0(0x08)
	struct UAkAudioEvent* _soundButtonOnHover; // 0x2b8(0x08)
	struct UTextOnlyTooltip* _tooltipClass; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void OnExitClicked(); // Function ConZ.TraderDepotPanel.OnExitClicked // (Final|Native|Private) // @ game+0x2509830
	void OnAnyButtonHover(); // Function ConZ.TraderDepotPanel.OnAnyButtonHover // (Final|Native|Private) // @ game+0x2509700
};

// Class ConZ.TraderDropdownMenu
// Size: 0x2e0 (Inherited: 0x268)
struct UTraderDropdownMenu : UUserWidget {
	bool PreviewSelectedState; // 0x268(0x01)
	char pad_269[0x37]; // 0x269(0x37)
	struct UWidgetSwitcher* _backgroundSwitcher; // 0x2a0(0x08)
	struct UComboBoxStringWithIndexing* _comboBox; // 0x2a8(0x08)
	struct UImage* _dropdownIcon; // 0x2b0(0x08)
	struct TArray<struct FTraderDropdownMenuEntry> _comboBoxEntries; // 0x2b8(0x10)
	char pad_2C8[0x18]; // 0x2c8(0x18)

	void OnComboBoXSelectionChanged(int32_t SelectedIndex); // Function ConZ.TraderDropdownMenu.OnComboBoXSelectionChanged // (Final|Native|Private) // @ game+0x2509780
};

// Class ConZ.TraderFilterFamePointsButton
// Size: 0x3d0 (Inherited: 0x268)
struct UTraderFilterFamePointsButton : UUserWidget {
	char pad_268[0x50]; // 0x268(0x50)
	struct UImage* _lockImage; // 0x2b8(0x08)
	struct FSlateBrush _selectedLookBrush; // 0x2c0(0x88)
	struct FSlateBrush _deselectedLookBrush; // 0x348(0x88)
};

// Class ConZ.TraderItemButton
// Size: 0x468 (Inherited: 0x268)
struct UTraderItemButton : UUserWidget {
	char pad_268[0x68]; // 0x268(0x68)
	struct UButton* _button; // 0x2d0(0x08)
	struct UImage* _icon; // 0x2d8(0x08)
	struct UImage* _saleIcon; // 0x2e0(0x08)
	struct UOverlay* _priceOverlay; // 0x2e8(0x08)
	struct UTextBlock* _title; // 0x2f0(0x08)
	struct UOverlay* _amountInStockOverlay; // 0x2f8(0x08)
	struct UTextBlock* _amountInStock; // 0x300(0x08)
	struct UOverlay* _tradeDataOverlay; // 0x308(0x08)
	struct UImage* _priceBackground; // 0x310(0x08)
	struct UTextBlock* _price; // 0x318(0x08)
	struct UTextBlock* _quantity; // 0x320(0x08)
	struct UTextBlock* _quantityFadeout; // 0x328(0x08)
	struct UImage* _quantityBackground; // 0x330(0x08)
	struct UImage* _quantityBackgroundFadeout; // 0x338(0x08)
	struct UOverlay* _lockedOverlay; // 0x340(0x08)
	struct UWidgetSwitcher* _lockedWidgetSwitcher; // 0x348(0x08)
	struct UTextBlock* _requiredFamePointsText; // 0x350(0x08)
	struct UWidgetAnimation* _changeQuantity; // 0x358(0x08)
	struct FLinearColor _salePriceBackgroundColor; // 0x360(0x10)
	char pad_370[0xd8]; // 0x370(0xd8)
	struct UTexture2D* _iconBlankTexture; // 0x448(0x08)
	struct UAkAudioEvent* _soundOnHover; // 0x450(0x08)
	struct UAkAudioEvent* _soundOnClick; // 0x458(0x08)
	char pad_460[0x8]; // 0x460(0x08)

	void OnClick(); // Function ConZ.TraderItemButton.OnClick // (Final|Native|Private) // @ game+0x23c7440
};

// Class ConZ.TraderItemCategoryButton
// Size: 0x340 (Inherited: 0x268)
struct UTraderItemCategoryButton : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UButton* _button; // 0x280(0x08)
	struct UImage* _icon; // 0x288(0x08)
	struct UTextBlock* _title; // 0x290(0x08)
	struct UOverlay* _lockedOverlay; // 0x298(0x08)
	struct UWidgetSwitcher* _lockedWidgetSwitcher; // 0x2a0(0x08)
	struct UTextBlock* _requiredFamePointsText; // 0x2a8(0x08)
	struct FText _titleValue; // 0x2b0(0x18)
	struct TSoftObjectPtr<UTexture> _iconTexture; // 0x2c8(0x28)
	struct UTexture2D* _iconBlankTexture; // 0x2f0(0x08)
	struct FVector2D _iconSize; // 0x2f8(0x08)
	struct FGameplayTagContainer _tradeCategories; // 0x300(0x20)
	struct UPanelWidget* _panelToOpenOnClick; // 0x320(0x08)
	struct UAkAudioEvent* _soundOnHover; // 0x328(0x08)
	struct UAkAudioEvent* _soundOnClick; // 0x330(0x08)
	char pad_338[0x8]; // 0x338(0x08)

	void UpdateIconTexture(); // Function ConZ.TraderItemCategoryButton.UpdateIconTexture // (Final|Native|Protected) // @ game+0x2509870
	void OnClick(); // Function ConZ.TraderItemCategoryButton.OnClick // (Native|Protected) // @ game+0x23c7440
};

// Class ConZ.TraderMainPanel
// Size: 0x2a8 (Inherited: 0x268)
struct UTraderMainPanel : UTabMenuPanel {
	struct UTabContainer* _tabRow; // 0x268(0x08)
	struct UWidgetSwitcher* _panelSwitcher; // 0x270(0x08)
	struct UTraderBuyPanel* _buyPanel; // 0x278(0x08)
	struct UTraderSellPanel* _sellPanel; // 0x280(0x08)
	struct UTraderDepotPanel* _depotPanel; // 0x288(0x08)
	struct UPanelWidget* _loadingScreen; // 0x290(0x08)
	char pad_298[0x10]; // 0x298(0x10)
};

// Class ConZ.TraderMainUIController
// Size: 0xd0 (Inherited: 0x28)
struct UTraderMainUIController : UObject {
	char pad_28[0x60]; // 0x28(0x60)
	struct UTraderBuyUIController* TraderBuyUIController; // 0x88(0x08)
	struct UTraderSellUIController* TraderSellUIController; // 0x90(0x08)
	char pad_98[0x38]; // 0x98(0x38)
};

// Class ConZ.TraderManagingComponent
// Size: 0x108 (Inherited: 0xb0)
struct UTraderManagingComponent : UActorComponent {
	char pad_B0[0x20]; // 0xb0(0x20)
	float _pawnRelevancyRange; // 0xd0(0x04)
	float _tradeOutpostsUpdateTime; // 0xd4(0x04)
	char pad_D8[0x4]; // 0xd8(0x04)
	float _outpostEconomyResetTimeHours; // 0xdc(0x04)
	float _outpostPriceDeltasRandomizationTimeHours; // 0xe0(0x04)
	float _tradeableRotationTimeIngameHoursMin; // 0xe4(0x04)
	float _tradeableRotationTimeIngameHoursMax; // 0xe8(0x04)
	float _tradeableRotationTimeOfDayMin; // 0xec(0x04)
	float _tradeableRotationTimeOfDayMax; // 0xf0(0x04)
	char pad_F4[0x14]; // 0xf4(0x14)
};

// Class ConZ.TraderPersonalityDataAsset
// Size: 0x68 (Inherited: 0x30)
struct UTraderPersonalityDataAsset : UDataAsset {
	struct FGuid TraderPersistentId; // 0x30(0x10)
	struct FString HumanReadableTraderName; // 0x40(0x10)
	enum class ETraderType TraderType; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct TArray<struct FTraderMarkerTradeableOverrideStruct> PurchasableTradeablesClassesOverride; // 0x58(0x10)
};

// Class ConZ.TraderSellListEntry
// Size: 0x310 (Inherited: 0x268)
struct UTraderSellListEntry : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UImage* _entryIcon; // 0x280(0x08)
	struct UTextBlock* _entryCaption; // 0x288(0x08)
	struct UTextBlock* _entryPrice; // 0x290(0x08)
	struct UButton* _btnCancel; // 0x298(0x08)
	char pad_2A0[0x68]; // 0x2a0(0x68)
	struct UTexture2D* _missingTextureIcon; // 0x308(0x08)

	void OnCancelClicked(); // Function ConZ.TraderSellListEntry.OnCancelClicked // (Final|Native|Private) // @ game+0x250dfa0
};

// Class ConZ.TraderSellPanel
// Size: 0x368 (Inherited: 0x268)
struct UTraderSellPanel : UUserWidget {
	struct UTabContainer* _cashOrCreditRadioBtn; // 0x268(0x08)
	struct UVerticalBox* _sellList; // 0x270(0x08)
	struct UTextBlock* _headerBannerPrisonerCashOnHand; // 0x278(0x08)
	struct UTextBlock* _headerBannerPrisonerCashInBank; // 0x280(0x08)
	struct UTextBlock* _prisonerCashOnHand; // 0x288(0x08)
	struct UTextBlock* _prisonerCashInBank; // 0x290(0x08)
	struct UTextBlock* _prisonerGoldInBank; // 0x298(0x08)
	struct UTextBlock* _prisonerFamePoints; // 0x2a0(0x08)
	struct UTextBlock* _traderFunds; // 0x2a8(0x08)
	struct UTextBlock* _saleTotal; // 0x2b0(0x08)
	struct UTextBlock* _warningMessage; // 0x2b8(0x08)
	struct UPrimaryButton* _btnExit; // 0x2c0(0x08)
	struct FText _exitTooltipText; // 0x2c8(0x18)
	struct UPrimaryButton* _btnSell; // 0x2e0(0x08)
	struct FText _sellTooltipText; // 0x2e8(0x18)
	struct UTextOnlyTooltip* _tooltipClass; // 0x300(0x08)
	struct UTraderSellListEntry* _sellListEntryWidgetClass; // 0x308(0x08)
	char pad_310[0x18]; // 0x310(0x18)
	struct FText _partialPriceSellText; // 0x328(0x18)
	struct FText _worthlessPriceSellText; // 0x340(0x18)
	float _sellWarningPopupTextWidth; // 0x358(0x04)
	int32_t _cashOrCreditFontSizeUnselected; // 0x35c(0x04)
	int32_t _cashOrCreditFontSizeSelected; // 0x360(0x04)
	char pad_364[0x4]; // 0x364(0x04)

	void OnSellClicked(); // Function ConZ.TraderSellPanel.OnSellClicked // (Final|Native|Private) // @ game+0x250e080
	void OnExitClicked(); // Function ConZ.TraderSellPanel.OnExitClicked // (Final|Native|Private) // @ game+0x250dfc0
	void OnAnyButtonHovered(); // Function ConZ.TraderSellPanel.OnAnyButtonHovered // (Final|Native|Private) // @ game+0x2414f10
};

// Class ConZ.TraderSellUIController
// Size: 0x88 (Inherited: 0x28)
struct UTraderSellUIController : UObject {
	char pad_28[0x60]; // 0x28(0x60)
};

// Class ConZ.EconomyManagerResponseData
// Size: 0x58 (Inherited: 0x28)
struct UEconomyManagerResponseData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct ADepotItem* _assignedDepotItem; // 0x30(0x08)
	struct TArray<struct FTradeablesResponseData> _tradeables; // 0x38(0x10)
	struct TArray<struct FTraderSpecialDeal> _specialDeals; // 0x48(0x10)
};

// Class ConZ.TradeStatics
// Size: 0x28 (Inherited: 0x28)
struct UTradeStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.TradingOutpostDescriptionDataAsset
// Size: 0x40 (Inherited: 0x30)
struct UTradingOutpostDescriptionDataAsset : UDataAsset {
	struct FGuid TradeOutpostPersistentId; // 0x30(0x10)
};

// Class ConZ.TrapData
// Size: 0x50 (Inherited: 0x30)
struct UTrapData : UDataAsset {
	struct USphereMotionTriggerComponent* SphereMotionTriggerComponentClass; // 0x30(0x08)
	struct UBoxMotionTriggerComponent* BoxMotionTriggerComponentClass; // 0x38(0x08)
	struct ULaserTriggerComponent* LaserTriggerComponentClass; // 0x40(0x08)
	struct UTimedTriggerComponent* TimedTriggerComponentClass; // 0x48(0x08)
};

// Class ConZ.TrapItemUserData
// Size: 0x38 (Inherited: 0x28)
struct UTrapItemUserData : UVirtualizedItemUserData {
	struct FDbIntegerId OwnerUserProfileId; // 0x28(0x08)
	bool IsOwnerUserProfileIdDirty; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.TrapItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UTrapItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.TrapRefuelItemTag
// Size: 0x38 (Inherited: 0x30)
struct UTrapRefuelItemTag : UBaseItemTag {
	int32_t UsesOnRefuel; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class ConZ.TrashCarouselWidget
// Size: 0x5a0 (Inherited: 0x2b8)
struct UTrashCarouselWidget : UUserWidgetWithDescription {
	char pad_2B8[0x30]; // 0x2b8(0x30)
	struct FSlateBrush _leftArrowIcon; // 0x2e8(0x88)
	struct FSlateBrush _rightArrowIcon; // 0x370(0x88)
	struct FSlateBrush _disabledLeftArrowIcon; // 0x3f8(0x88)
	struct FSlateBrush _disabledRightArrowIcon; // 0x480(0x88)
	struct UTextBlock* _selectionDisplay; // 0x508(0x08)
	struct UButton* _leftArrow; // 0x510(0x08)
	struct UButton* _rightArrow; // 0x518(0x08)
	struct FSlateFontInfo _font; // 0x520(0x58)
	struct TArray<struct FString> _possibleValues; // 0x578(0x10)
	struct TArray<struct FText> _carouselValues; // 0x588(0x10)
	bool _canWrap; // 0x598(0x01)
	char pad_599[0x7]; // 0x599(0x07)

	void OnValueChanged(int32_t NewValue); // Function ConZ.TrashCarouselWidget.OnValueChanged // (Final|Native|Private) // @ game+0x2511930
	void ClickRight(); // Function ConZ.TrashCarouselWidget.ClickRight // (Final|Native|Public) // @ game+0x2511440
	void ClickLeft(); // Function ConZ.TrashCarouselWidget.ClickLeft // (Final|Native|Public) // @ game+0x2511420
};

// Class ConZ.TrashNamedCarouselWidget
// Size: 0x410 (Inherited: 0x2b8)
struct UTrashNamedCarouselWidget : UUserWidgetWithDescription {
	char pad_2B8[0x30]; // 0x2b8(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x2e8(0x10)
	struct UTextBlock* _name; // 0x2f8(0x08)
	struct UTrashCarouselWidget* _carousel; // 0x300(0x08)
	struct USelectionOverlayWidget* _focusBackground; // 0x308(0x08)
	struct FString _label; // 0x310(0x10)
	struct FText _mainLabel; // 0x320(0x18)
	struct FSlateFontInfo _defaultFont; // 0x338(0x58)
	char pad_390[0x58]; // 0x390(0x58)
	struct TArray<struct FString> _possibleValues; // 0x3e8(0x10)
	struct TArray<struct FText> _carouselValues; // 0x3f8(0x10)
	char pad_408[0x8]; // 0x408(0x08)

	void SetValue(int32_t Value); // Function ConZ.TrashNamedCarouselWidget.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x2511e20
	void SetName(struct FText Name); // Function ConZ.TrashNamedCarouselWidget.SetName // (Final|Native|Public|BlueprintCallable) // @ game+0x2511c60
	void OnValueChanged(int32_t NewValue); // Function ConZ.TrashNamedCarouselWidget.OnValueChanged // (Final|Native|Private) // @ game+0x25119c0
	int32_t GetValue(); // Function ConZ.TrashNamedCarouselWidget.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25114c0
};

// Class ConZ.TrashNamedSliderWidget
// Size: 0x440 (Inherited: 0x2b8)
struct UTrashNamedSliderWidget : UUserWidgetWithDescription {
	char pad_2B8[0x30]; // 0x2b8(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x2e8(0x10)
	struct UScrollingSizeBox* _nameBox; // 0x2f8(0x08)
	struct UTextBlock* _name; // 0x300(0x08)
	struct USizeBox* _valueDisplayBox; // 0x308(0x08)
	struct UTextBlock* _valueDisplay; // 0x310(0x08)
	struct UTrashSliderWidget* _slider; // 0x318(0x08)
	struct USelectionOverlayWidget* _focusBackground; // 0x320(0x08)
	struct FString _label; // 0x328(0x10)
	struct FText _mainLabel; // 0x338(0x18)
	struct FSlateFontInfo _defaultFont; // 0x350(0x58)
	char pad_3A8[0x58]; // 0x3a8(0x58)
	float _stepSpeedTreshold; // 0x400(0x04)
	float _valueDisplayWidth; // 0x404(0x04)
	float _minValue; // 0x408(0x04)
	float _maxValue; // 0x40c(0x04)
	int32_t _stepCount; // 0x410(0x04)
	int32_t _decimalPlacesShown; // 0x414(0x04)
	char pad_418[0x1c]; // 0x418(0x1c)
	float _nameBoxWidth; // 0x434(0x04)
	char pad_438[0x8]; // 0x438(0x08)

	void SetValue(float Value); // Function ConZ.TrashNamedSliderWidget.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x2511eb0
	void SetName(struct FText Name); // Function ConZ.TrashNamedSliderWidget.SetName // (Final|Native|Public|BlueprintCallable) // @ game+0x2511d40
	void SetLimits(float MinValue, float MaxValue, int32_t stepCount); // Function ConZ.TrashNamedSliderWidget.SetLimits // (Native|Public|BlueprintCallable) // @ game+0x2511b50
	void OnValueChanged(float NewValue); // Function ConZ.TrashNamedSliderWidget.OnValueChanged // (Final|Native|Private) // @ game+0x2511a50
	float GetValue(); // Function ConZ.TrashNamedSliderWidget.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25114f0
	float GetMinValue(); // Function ConZ.TrashNamedSliderWidget.GetMinValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2511490
	float GetMaxValue(); // Function ConZ.TrashNamedSliderWidget.GetMaxValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2511460
};

// Class ConZ.TrashSliderWidget
// Size: 0x778 (Inherited: 0x2b8)
struct UTrashSliderWidget : UUserWidgetWithDescription {
	char pad_2B8[0x30]; // 0x2b8(0x30)
	struct FMulticastInlineDelegate ValueChangedTemp_DONOTUSE; // 0x2e8(0x10)
	struct FSlateBrush _emptySlider; // 0x2f8(0x88)
	struct FSlateBrush _filledSlider; // 0x380(0x88)
	struct FSlateBrush _selectedSlider; // 0x408(0x88)
	char pad_490[0x110]; // 0x490(0x110)
	struct FSlateBrush _normalThumb; // 0x5a0(0x88)
	struct FSlateBrush _selectedThumb; // 0x628(0x88)
	char pad_6B0[0x88]; // 0x6b0(0x88)
	struct USlider* _slider; // 0x738(0x08)
	struct UProgressBar* _progressBar; // 0x740(0x08)
	struct FDataTableRowHandle _selectedColor; // 0x748(0x10)
	struct FDataTableRowHandle _disabledColor; // 0x758(0x10)
	float _minValue; // 0x768(0x04)
	float _maxValue; // 0x76c(0x04)
	int32_t _stepCount; // 0x770(0x04)
	char pad_774[0x4]; // 0x774(0x04)

	void SetValue(float Value); // Function ConZ.TrashSliderWidget.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x2511f30
	void OnValueChanged(float NewValue); // Function ConZ.TrashSliderWidget.OnValueChanged // (Final|Native|Private) // @ game+0x2511ad0
	float GetValue(); // Function ConZ.TrashSliderWidget.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2511520
};

// Class ConZ.TriggerFailurePenalty
// Size: 0x30 (Inherited: 0x30)
struct UTriggerFailurePenalty : UFailurePenalty {
};

// Class ConZ.TriggerItemTag
// Size: 0x38 (Inherited: 0x30)
struct UTriggerItemTag : UBaseItemTag {
	enum class ETrapTriggerType TriggerType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.TurretInfluenceAreaVisualizer
// Size: 0x238 (Inherited: 0x230)
struct ATurretInfluenceAreaVisualizer : AInfluenceAreaVisualizer {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class ConZ.TurretItem
// Size: 0xc80 (Inherited: 0x9b0)
struct ATurretItem : AItem {
	struct USkeletalMeshComponent* _turretMeshComponent; // 0x9b0(0x08)
	struct UParticleSystemComponent* _muzzlePSC; // 0x9b8(0x08)
	struct UParticleSystemComponent* _smokeAfterShotFiredPSC; // 0x9c0(0x08)
	struct UAIPerceptionComponent* _perceptionComponent; // 0x9c8(0x08)
	struct URangedResourceConsumerComponentMultipleProviders* _rangedResourceConsumerComponent; // 0x9d0(0x08)
	struct UTurretPaintjobItemComponent* _paintjobComponent; // 0x9d8(0x08)
	char pad_9E0[0x8]; // 0x9e0(0x08)
	enum class EDayPeriod _spotlightTurnOnTime; // 0x9e8(0x01)
	enum class EDayPeriod _spotlightTurnOffTime; // 0x9e9(0x01)
	char pad_9EA[0x2]; // 0x9ea(0x02)
	float _perceptionTickInterval; // 0x9ec(0x04)
	char pad_9F0[0x4]; // 0x9f0(0x04)
	float _replicationTickInterval; // 0x9f4(0x04)
	char pad_9F8[0x4]; // 0x9f8(0x04)
	float _clientSynchronizationTickInterval; // 0x9fc(0x04)
	char pad_A00[0x8]; // 0xa00(0x08)
	struct TSoftClassPtr<UObject> _influenceAreaVisualizerClass; // 0xa08(0x28)
	char pad_A30[0x10]; // 0xa30(0x10)
	float _firingRadius; // 0xa40(0x04)
	int16_t _ammoCapacity; // 0xa44(0x02)
	char pad_A46[0xa]; // 0xa46(0x0a)
	struct FGameplayTagContainer _compatibleAmmoTypes; // 0xa50(0x20)
	struct TSoftClassPtr<UObject> _defaultFillAmmo; // 0xa70(0x28)
	struct TArray<struct FCountedAmmunitionData> _ammoRep; // 0xa98(0x10)
	char pad_AA8[0x6]; // 0xaa8(0x06)
	bool _isBaseBuildingTurret; // 0xaae(0x01)
	char pad_AAF[0x59]; // 0xaaf(0x59)
	float _explosionResistance; // 0xb08(0x04)
	struct FName _lightsEmissionParameterName; // 0xb0c(0x08)
	float _lightsEmissionParameterValue; // 0xb14(0x04)
	float _minTickRateForNormalFiringStrategy; // 0xb18(0x04)
	char pad_B1C[0x4]; // 0xb1c(0x04)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyAuthorityNormal; // 0xb20(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategyAuthorityOptimized; // 0xb28(0x08)
	struct USimulatedShooterFiringStrategy* _simulatedShooterFiringStrategySimulated; // 0xb30(0x08)
	char pad_B38[0x8]; // 0xb38(0x08)
	float _horizontalAngleLimit; // 0xb40(0x04)
	float _verticalAngleLimit; // 0xb44(0x04)
	float _maxAngleToFireAtTarget; // 0xb48(0x04)
	float _continueFiringTimeAfterTargetLost; // 0xb4c(0x04)
	char pad_B50[0x4]; // 0xb50(0x04)
	float _targetLostWaitTimeWhenOutOfLimits; // 0xb54(0x04)
	char pad_B58[0x4]; // 0xb58(0x04)
	float _spinUpTime; // 0xb5c(0x04)
	char pad_B60[0x5]; // 0xb60(0x05)
	bool _predictTargetPosition; // 0xb65(0x01)
	bool _calculateBulletDrop; // 0xb66(0x01)
	char pad_B67[0x1]; // 0xb67(0x01)
	float _horizontalRotationSpeed; // 0xb68(0x04)
	float _verticalRotationSpeed; // 0xb6c(0x04)
	struct FName _barrelBoneName; // 0xb70(0x08)
	struct FName _muzzleSocketName; // 0xb78(0x08)
	struct FVector _barrelOffset; // 0xb80(0x0c)
	float _barrelLength; // 0xb8c(0x04)
	float _activationTime; // 0xb90(0x04)
	float _deactivationTime; // 0xb94(0x04)
	struct UAkAudioEvent* _turnOnAudioEvent; // 0xb98(0x08)
	struct UAkAudioEvent* _turnOffAudioEvent; // 0xba0(0x08)
	struct UAkAudioEvent* _loadAmmoAudioEvent; // 0xba8(0x08)
	struct UAkAudioEvent* _unloadAmmoAudioEvent; // 0xbb0(0x08)
	struct UAkAudioEvent* _startSpinUpAudioEvent; // 0xbb8(0x08)
	struct UAkAudioEvent* _stopSpinUpAudioEvent; // 0xbc0(0x08)
	struct UAkAudioEvent* _fireSingleShotAudioEvent; // 0xbc8(0x08)
	struct UAkAudioEvent* _startAutoFireAudioEvent; // 0xbd0(0x08)
	struct UAkAudioEvent* _stopAutoFireAudioEvent; // 0xbd8(0x08)
	struct UAkAudioEvent* _destroyedAudioEvent; // 0xbe0(0x08)
	struct UAkAudioEvent* _startRotationAudioEvent; // 0xbe8(0x08)
	struct UAkAudioEvent* _stopRotationAudioEvent; // 0xbf0(0x08)
	struct UAkAudioEvent* _startActivatedAudioEvent; // 0xbf8(0x08)
	struct UAkAudioEvent* _stopActivatedAudioEvent; // 0xc00(0x08)
	bool _shouldUseContinuousFiringSound; // 0xc08(0x01)
	char pad_C09[0x57]; // 0xc09(0x57)
	struct FPackedState _packedState; // 0xc60(0x10)
	char pad_C70[0x10]; // 0xc70(0x10)

	void OnRep_PackedState(); // Function ConZ.TurretItem.OnRep_PackedState // (Final|Native|Private) // @ game+0x2511910
	void OnRep_AmmoRep(); // Function ConZ.TurretItem.OnRep_AmmoRep // (Final|Native|Private) // @ game+0x25118f0
	void OnRangedResourceConsumerComponentResourceAmountChanged(struct URangedResourceConsumerComponent* Component, float Amount); // Function ConZ.TurretItem.OnRangedResourceConsumerComponentResourceAmountChanged // (Final|Native|Private) // @ game+0x2511820
	void OnRangedResourceConsumerComponentActivated(struct UActorComponent* containerComponent, bool Reset); // Function ConZ.TurretItem.OnRangedResourceConsumerComponentActivated // (Final|Native|Private) // @ game+0x2511750
	struct TArray<struct FName> GetSocketNames(); // Function ConZ.TurretItem.GetSocketNames // (Final|Native|Private|Const) // @ game+0x24e4c50
	struct TArray<struct FName> GetBoneNames(); // Function ConZ.TurretItem.GetBoneNames // (Final|Native|Private|Const) // @ game+0x24e4c50
};

// Class ConZ.TurretItemAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UTurretItemAnimInstance : UAnimInstance {
	struct FRotator _barrelRotation; // 0x2b8(0x0c)
	int32_t _stateFlags; // 0x2c4(0x04)
};

// Class ConZ.TurretItemEntitySave
// Size: 0x38 (Inherited: 0x28)
struct UTurretItemEntitySave : UObject {
	struct TArray<struct FCountedAmmunitionData> AmmunitionData; // 0x28(0x10)
};

// Class ConZ.TurretItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UTurretItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.TurretPaintjobItemComponent
// Size: 0x128 (Inherited: 0xc8)
struct UTurretPaintjobItemComponent : UItemComponent {
	struct TArray<struct FTurretPaintjobPatternParams> _patterns; // 0xc8(0x10)
	bool _isActive; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	float _paintjobDecayDurationSeconds; // 0xdc(0x04)
	char pad_E0[0x48]; // 0xe0(0x48)

	void NetMulticast_SetPatternIndex(int32_t Index); // Function ConZ.TurretPaintjobItemComponent.NetMulticast_SetPatternIndex // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x25116a0
	void NetMulticast_SetColorAtIndex(int32_t Index, struct FColor Value); // Function ConZ.TurretPaintjobItemComponent.NetMulticast_SetColorAtIndex // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x25115d0
	void NetMulticast_RefreshColor(); // Function ConZ.TurretPaintjobItemComponent.NetMulticast_RefreshColor // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2353de0
	void NetMulticast_ClearPaintjob(struct FColor NewColor); // Function ConZ.TurretPaintjobItemComponent.NetMulticast_ClearPaintjob // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x2511550
};

// Class ConZ.TurretPaintjobCommonData
// Size: 0x40 (Inherited: 0x30)
struct UTurretPaintjobCommonData : UDataAsset {
	struct TArray<struct FTurretPaintjobPatternParams> Patterns; // 0x30(0x10)
};

// Class ConZ.TwitchDropsMainMenuButtonWidget
// Size: 0x4c0 (Inherited: 0x268)
struct UTwitchDropsMainMenuButtonWidget : UUserWidget {
	struct UButton* _button; // 0x268(0x08)
	struct UHorizontalBox* _backgroundHorizontalBox; // 0x270(0x08)
	struct UTextBlock* _displayText; // 0x278(0x08)
	struct UImage* _icon; // 0x280(0x08)
	struct FSlateBrush _notConnectedIcon; // 0x288(0x88)
	struct FSlateBrush _connectedIcon; // 0x310(0x88)
	struct FSlateBrush _invalidConnectionIcon; // 0x398(0x88)
	struct FSlateBrush _criticalErrorIcon; // 0x420(0x88)
	struct UTwitchDropsUIController* _twitchDropsUIController; // 0x4a8(0x08)
	char pad_4B0[0x10]; // 0x4b0(0x10)

	void OnClicked(); // Function ConZ.TwitchDropsMainMenuButtonWidget.OnClicked // (Final|Native|Private) // @ game+0x2511730
};

// Class ConZ.TwitchDropsManager
// Size: 0x1a0 (Inherited: 0x28)
struct UTwitchDropsManager : UObject {
	char pad_28[0x178]; // 0x28(0x178)
};

// Class ConZ.TwitchDropsUIController
// Size: 0x48 (Inherited: 0x28)
struct UTwitchDropsUIController : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.UIBaseContext
// Size: 0x28 (Inherited: 0x28)
struct UUIBaseContext : UObject {
};

// Class ConZ.UIContainerSubobject
// Size: 0x90 (Inherited: 0x28)
struct UUIContainerSubobject : UObject {
	char pad_28[0x48]; // 0x28(0x48)
	char _containerWidth; // 0x70(0x01)
	char _containerHeight; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float _maximumContainedWeight; // 0x74(0x04)
	char pad_78[0x18]; // 0x78(0x18)
};

// Class ConZ.UIROWidgetDragDropOperation
// Size: 0x90 (Inherited: 0x88)
struct UUIROWidgetDragDropOperation : UDragDropOperation {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class ConZ.UIRepresentableObjectWidget
// Size: 0x318 (Inherited: 0x268)
struct UUIRepresentableObjectWidget : UUserWidget {
	char pad_268[0x90]; // 0x268(0x90)
	struct USizeBox* _mainSizeBox; // 0x2f8(0x08)
	struct UScaleBox* _imageScaleBox; // 0x300(0x08)
	struct UImage* _image; // 0x308(0x08)
	char pad_310[0x8]; // 0x310(0x08)

	void OnDropOperation(struct UDragDropOperation* DragDropOperation); // Function ConZ.UIRepresentableObjectWidget.OnDropOperation // (Final|Native|Private) // @ game+0x25170b0
	void OnDragOperationCancelled(struct UDragDropOperation* DragDropOperation); // Function ConZ.UIRepresentableObjectWidget.OnDragOperationCancelled // (Final|Native|Private) // @ game+0x2517020
};

// Class ConZ.UIRepresentationSubobject
// Size: 0xb0 (Inherited: 0x28)
struct UUIRepresentationSubobject : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	char _inContainerWidth; // 0x30(0x01)
	char _inContainerHeight; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct TSoftObjectPtr<UTexture2D> _inContainerIcon; // 0x38(0x28)
	struct TSoftObjectPtr<UTexture2D> _inVicinityIcon; // 0x60(0x28)
	struct TSoftObjectPtr<UTexture2D> _inHandsOrHolstersIcon; // 0x88(0x28)
};

// Class ConZ.UISoundsData
// Size: 0x218 (Inherited: 0x30)
struct UUISoundsData : UDataAsset {
	struct FGenericUISounds Generic; // 0x30(0x40)
	struct FNotificationUISounds Notification; // 0x70(0x10)
	struct FBankATMUISounds BankATM; // 0x80(0x20)
	struct FTraderUISounds Trader; // 0xa0(0x18)
	struct FItemsCraftingUISounds ItemsCrafting; // 0xb8(0x20)
	struct FBaseBuildingUISounds BaseBuilding; // 0xd8(0x18)
	struct FCookingUISounds Cooking; // 0xf0(0x18)
	struct FJournalUISounds Journal; // 0x108(0x28)
	struct FManualUISounds Manual; // 0x130(0x18)
	struct FSquadUISounds Squad; // 0x148(0x18)
	struct FEventsUISounds Events; // 0x160(0x10)
	struct FQuestUISounds Quests; // 0x170(0x58)
	struct FSettingsUISounds Settings; // 0x1c8(0x50)
};

// Class ConZ.UIStatics
// Size: 0x28 (Inherited: 0x28)
struct UUIStatics : UBlueprintFunctionLibrary {

	bool ProjectWorldToScreen(struct APlayerController* Controller, struct FVector& WorldPosition, struct FVector2D& Size, struct FVector2D& screenPosition); // Function ConZ.UIStatics.ProjectWorldToScreen // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2517140
	struct UWidget* GetWidgetParentOfType(struct UWidget* Widget, struct UWidget* Type, bool includeUserWidgets); // Function ConZ.UIStatics.GetWidgetParentOfType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2516f20
	struct FVector GetMuscleLeanFatFactorsFromCoordinates(struct FVector2D Coordinates); // Function ConZ.UIStatics.GetMuscleLeanFatFactorsFromCoordinates // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2516e90
	struct UUserWidget* GetDesiredWidgetClass(enum class EWidgetType Type); // Function ConZ.UIStatics.GetDesiredWidgetClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2516e00
	struct FText GetDataForFieldName(struct FName Name, struct UStruct* Str, struct UStruct* Type); // Function ConZ.UIStatics.GetDataForFieldName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2516ca0
	struct FVector4 GetAttributesFromMuscularAndFatFactors(float muscular, float fat); // Function ConZ.UIStatics.GetAttributesFromMuscularAndFatFactors // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2516bc0
	struct FVector4 GetAgeModifiersFromAge(int32_t Age); // Function ConZ.UIStatics.GetAgeModifiersFromAge // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2516b30
	struct FString FilterNonNumbersFromString(struct FString& String); // Function ConZ.UIStatics.FilterNonNumbersFromString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2516a40
	void ColorToHex(struct FSlateColor& Color, struct FText& Text); // Function ConZ.UIStatics.ColorToHex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x25168e0
	bool CanDropIfDraggingItem(struct UObject* draggedObject, struct APawn* draggingPlayerPawn); // Function ConZ.UIStatics.CanDropIfDraggingItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2516810
};

// Class ConZ.UnarmedCombatInputRedirector
// Size: 0x60 (Inherited: 0x28)
struct UUnarmedCombatInputRedirector : UObject {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class ConZ.UnderwaterPostProcessVolume
// Size: 0x7d0 (Inherited: 0x7d0)
struct AUnderwaterPostProcessVolume : APostProcessVolume {
};

// Class ConZ.ItemUnpackingSpawnMethod
// Size: 0x28 (Inherited: 0x28)
struct UItemUnpackingSpawnMethod : UObject {
};

// Class ConZ.ItemUnpackingAmmunitionSpawnMethod
// Size: 0x28 (Inherited: 0x28)
struct UItemUnpackingAmmunitionSpawnMethod : UItemUnpackingSpawnMethod {
};

// Class ConZ.UnpackableTag
// Size: 0x60 (Inherited: 0x30)
struct UUnpackableTag : UBaseItemTag {
	enum class EItemUnpackingType _unpackingType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText _interactionCaption; // 0x38(0x18)
	struct TArray<struct FItemUnpackingSpawnedItem> _spawnedItems; // 0x50(0x10)
};

// Class ConZ.UnusableWorldItemTag
// Size: 0x38 (Inherited: 0x30)
struct UUnusableWorldItemTag : UBaseItemTag {
	struct AItem* UnusableItem; // 0x30(0x08)
};

// Class ConZ.UpdateableNotification
// Size: 0x30 (Inherited: 0x30)
struct UUpdateableNotification : UBasicNotification {
};

// Class ConZ.UpdateableNotificationDescription
// Size: 0x90 (Inherited: 0x78)
struct UUpdateableNotificationDescription : UBasicNotificationDescription {
	struct FString NotificationName; // 0x78(0x10)
	char pad_88[0x8]; // 0x88(0x08)
};

// Class ConZ.UserManager
// Size: 0xa0 (Inherited: 0x28)
struct UUserManager : UObject {
	char pad_28[0x78]; // 0x28(0x78)
};

// Class ConZ.User
// Size: 0x128 (Inherited: 0x28)
struct UUser : UObject {
	char pad_28[0x100]; // 0x28(0x100)
};

// Class ConZ.UserProfile
// Size: 0x178 (Inherited: 0x28)
struct UUserProfile : UObject {
	char pad_28[0xe0]; // 0x28(0xe0)
	struct USpamProtectionState* _globalSpamProtectionState; // 0x108(0x08)
	struct USpamProtectionState* _localSpamProtectionState; // 0x110(0x08)
	char pad_118[0x60]; // 0x118(0x60)
};

// Class ConZ.ValueProviderInteger
// Size: 0x28 (Inherited: 0x28)
struct UValueProviderInteger : UInterface {
};

// Class ConZ.ValueProviderString
// Size: 0x28 (Inherited: 0x28)
struct UValueProviderString : UInterface {
};

// Class ConZ.VehicleBaseSave
// Size: 0x58 (Inherited: 0x28)
struct UVehicleBaseSave : UObject {
	int64_t LastAccessTime; // 0x28(0x08)
	uint64_t PackedSimulationState; // 0x30(0x08)
	struct TArray<struct FVehicleAttachmentSave> VehicleAttachments; // 0x38(0x10)
	struct FVector LastSteadyLocation; // 0x48(0x0c)
	float VerticalSpawnOffset; // 0x54(0x04)
};

// Class ConZ.VehicleDamageRegionAssetData
// Size: 0x38 (Inherited: 0x28)
struct UVehicleDamageRegionAssetData : UAssetUserData {
	struct FGameplayTag Tag; // 0x28(0x08)
	bool TreatCapsuleAsCylinder; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class ConZ.VehicleAttachment
// Size: 0x570 (Inherited: 0x28)
struct UVehicleAttachment : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct FName ParentSocket; // 0x38(0x08)
	struct FVehicleAttachmentMeshSetup MeshSetup; // 0x40(0x80)
	char pad_C0[0x10]; // 0xc0(0x10)
	struct FVehicleAttachmentMeshSetup QueryMeshSetup; // 0xd0(0x80)
	char pad_150[0x8]; // 0x150(0x08)
	struct TArray<struct FVehicleAttachmentAdditionalSocket> AdditionalSockets; // 0x158(0x10)
	struct UWidgetComponent* HealthDisplay; // 0x168(0x08)
	struct TArray<struct FName> _associatedCollisionShapes; // 0x170(0x10)
	struct FText _displayName; // 0x180(0x18)
	bool _canEverBeRemoved; // 0x198(0x01)
	char pad_199[0x7]; // 0x199(0x07)
	struct TArray<struct FVehicleAttachmentSlot> _slots; // 0x1a0(0x10)
	bool _isIndestructible; // 0x1b0(0x01)
	bool _shouldBeRemovedFromVehicleWhenDestroyed; // 0x1b1(0x01)
	char pad_1B2[0x2]; // 0x1b2(0x02)
	struct FGameplayTag _requiredServiceToolTag; // 0x1b4(0x08)
	bool _uniquePerVehicle; // 0x1bc(0x01)
	char pad_1BD[0x13]; // 0x1bd(0x13)
	int32_t _parentId; // 0x1d0(0x04)
	int32_t _parentSlotIndex; // 0x1d4(0x04)
	struct TArray<struct UMaterialInstanceDynamic*> _regularMaterials; // 0x1d8(0x10)
	struct UMaterialInstanceDynamic* _serviceModeMaterial; // 0x1e8(0x08)
	char pad_1F0[0x10]; // 0x1f0(0x10)
	double _mileage; // 0x200(0x08)
	char pad_208[0x1]; // 0x208(0x01)
	bool _isSupportedForNetworking; // 0x209(0x01)
	char pad_20A[0x2]; // 0x20a(0x02)
	int32_t _id; // 0x20c(0x04)
	char pad_210[0x8]; // 0x210(0x08)
	float _maxHealth; // 0x218(0x04)
	float _health; // 0x21c(0x04)
	float _hardness; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	uint64_t _miscState; // 0x228(0x08)
	float _linearEnergyAbsorption; // 0x230(0x04)
	float _flatEnergyAbsorption; // 0x234(0x04)
	struct TSoftClassPtr<UObject> AttachmentItemClass; // 0x238(0x28)
	struct TSoftClassPtr<UObject> _tradeableClassOverride; // 0x260(0x28)
	char pad_288[0x20]; // 0x288(0x20)
	bool _isServiceRestrictedToAcceptableModes; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct TArray<struct FGameplayTag> _acceptableServiceModes; // 0x2b0(0x10)
	struct FGameplayTag _damageRegion; // 0x2c0(0x08)
	int32_t _damageRegionPriority; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct FRuntimeFloatCurve _damagePropagationVsArmorPiercing; // 0x2d0(0x88)
	struct FRuntimeFloatCurve _damagePropagationVsCollisionDamage; // 0x358(0x88)
	bool _useDamageRatiosForDamagePropagation; // 0x3e0(0x01)
	char pad_3E1[0x7]; // 0x3e1(0x07)
	struct TMap<enum class ECollisionDamageType, float> _damageRatios; // 0x3e8(0x50)
	float _explosionDamageRatio; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
	struct FRuntimeFloatCurve _burnDamagePerSecondVsTemperature; // 0x440(0x88)
	float _collisionDamageMultiplierToOthers; // 0x4c8(0x04)
	float _installDuration; // 0x4cc(0x04)
	float _repairDuration; // 0x4d0(0x04)
	char pad_4D4[0x4]; // 0x4d4(0x04)
	struct TSoftClassPtr<UObject> _repairSkill; // 0x4d8(0x28)
	float _repairExperience; // 0x500(0x04)
	float _removeDuration; // 0x504(0x04)
	struct FVehicleAttachmentDestructionEffect _destructionEffect; // 0x508(0x28)
	bool _isPaintable; // 0x530(0x01)
	char pad_531[0x3]; // 0x531(0x03)
	float _paintjobDecayDurationSeconds; // 0x534(0x04)
	int32_t _paintjobPatternIndex; // 0x538(0x04)
	float _paintjobDecaySeconds; // 0x53c(0x04)
	struct TArray<struct FColor> _paintJobColors; // 0x540(0x10)
	char pad_550[0x8]; // 0x550(0x08)
	struct TArray<struct FVehiclePaintjobPatternParams> _paintjobPatterns; // 0x558(0x10)
	char pad_568[0x8]; // 0x568(0x08)

	void OnRep_Paintjob(); // Function ConZ.VehicleAttachment.OnRep_Paintjob // (Final|Native|Private) // @ game+0x251b170
	void OnRep_MiscState(); // Function ConZ.VehicleAttachment.OnRep_MiscState // (Final|Native|Private) // @ game+0x251b150
	void OnRep_Health(); // Function ConZ.VehicleAttachment.OnRep_Health // (Final|Native|Private) // @ game+0x251b110
};

// Class ConZ.VehicleAttachment_Airfoil
// Size: 0x580 (Inherited: 0x570)
struct UVehicleAttachment_Airfoil : UVehicleAttachment {
	struct TArray<struct FAerodynamicSurface> AerodynamicSurfaces; // 0x568(0x10)
};

// Class ConZ.VehicleAttachment_Alternator
// Size: 0x580 (Inherited: 0x570)
struct UVehicleAttachment_Alternator : UVehicleAttachment {
	struct FVehicleAttachmentAlternatorSetup AlternatorSetup; // 0x570(0x08)
	char pad_578[0x8]; // 0x578(0x08)
};

// Class ConZ.VehicleAttachment_Armor
// Size: 0x570 (Inherited: 0x570)
struct UVehicleAttachment_Armor : UVehicleAttachment {
};

// Class ConZ.VehicleAttachment_Battery
// Size: 0x5a0 (Inherited: 0x570)
struct UVehicleAttachment_Battery : UVehicleAttachment {
	struct FVehicleAttachmentBatterySetup BatterySetup; // 0x568(0x30)
	struct FVehicleAttachmentBatterySimulationData _simulationData; // 0x598(0x04)
};

// Class ConZ.VehicleAttachment_Chassis
// Size: 0x5a0 (Inherited: 0x570)
struct UVehicleAttachment_Chassis : UVehicleAttachment {
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlotClasses; // 0x570(0x10)
	struct TArray<struct FVehicleServiceItemSlot> _serviceItemSlots; // 0x580(0x10)
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlots; // 0x590(0x10)
};

// Class ConZ.VehicleAttachment_StaticPart
// Size: 0x570 (Inherited: 0x570)
struct UVehicleAttachment_StaticPart : UVehicleAttachment {
	bool _isIndependentFromParent; // 0x568(0x01)
};

// Class ConZ.VehicleAttachment_Dashboard
// Size: 0x6b0 (Inherited: 0x570)
struct UVehicleAttachment_Dashboard : UVehicleAttachment_StaticPart {
	char pad_570[0x8]; // 0x570(0x08)
	struct FDashboardMaterialParameterCache _materialParameterCache; // 0x578(0x110)
	struct FGameplayTagContainer _lightsToggleTags; // 0x688(0x20)
	bool _isTurnedOn; // 0x6a8(0x01)
	char pad_6A9[0x7]; // 0x6a9(0x07)
};

// Class ConZ.VehicleAttachment_DashboardWithMountInteractions
// Size: 0x6b0 (Inherited: 0x6b0)
struct UVehicleAttachment_DashboardWithMountInteractions : UVehicleAttachment_Dashboard {
};

// Class ConZ.VehicleAttachment_Door
// Size: 0x5d0 (Inherited: 0x570)
struct UVehicleAttachment_Door : UVehicleAttachment {
	struct FVehicleAttachmentDoorSetup DoorSetup; // 0x570(0x30)
	enum class EVehicleAttachment_DoorFlags _flags; // 0x5a0(0x01)
	char pad_5A1[0x7]; // 0x5a1(0x07)
	struct UObject* _reservee; // 0x5a8(0x08)
	struct TArray<struct FGameplayTag> _mountPathObstructionTags; // 0x5b0(0x10)
	char pad_5C0[0x10]; // 0x5c0(0x10)

	void OnRep_Flags(); // Function ConZ.VehicleAttachment_Door.OnRep_Flags // (Final|Native|Private) // @ game+0x251b0f0
};

// Class ConZ.VehicleWithDoors
// Size: 0x28 (Inherited: 0x28)
struct UVehicleWithDoors : UInterface {
};

// Class ConZ.VehicleAttachment_EngineBlock
// Size: 0x770 (Inherited: 0x570)
struct UVehicleAttachment_EngineBlock : UVehicleAttachment {
	char pad_570[0x8]; // 0x570(0x08)
	struct FVehicleAttachmentEngineBlockSetup EngineSetup; // 0x578(0x168)
	struct FVehicleAttachmentEngineBlockSimulationData _simulationData; // 0x6e0(0x2c)
	char pad_70C[0x4]; // 0x70c(0x04)
	struct TSoftClassPtr<UObject> _tradeableClass; // 0x710(0x28)
	enum class EEngineBlockState _repEngineBlockState; // 0x738(0x01)
	char pad_739[0x27]; // 0x739(0x27)
	struct FGameplayTag _toggleOnTag; // 0x760(0x08)
	struct FGameplayTag _toggleOffTag; // 0x768(0x08)

	void OnRep_EngineBlockState(); // Function ConZ.VehicleAttachment_EngineBlock.OnRep_EngineBlockState // (Final|Native|Private) // @ game+0x251b0d0
};

// Class ConZ.VehicleWithEngineBlock
// Size: 0x28 (Inherited: 0x28)
struct UVehicleWithEngineBlock : UInterface {
};

// Class ConZ.VehicleAttachment_Gearbox
// Size: 0x5d0 (Inherited: 0x570)
struct UVehicleAttachment_Gearbox : UVehicleAttachment {
	struct FVehicleAttachmentGearboxSetup GearboxSetup; // 0x568(0x28)
	char pad_598[0x10]; // 0x598(0x10)
	struct FVehicleAttachmentGearboxSimulationData _simulationData; // 0x5a8(0x14)
	char pad_5BC[0x14]; // 0x5bc(0x14)
};

// Class ConZ.VehicleWithGearbox
// Size: 0x28 (Inherited: 0x28)
struct UVehicleWithGearbox : UInterface {
};

// Class ConZ.VehicleAttachment_InventoryExpansion
// Size: 0x590 (Inherited: 0x570)
struct UVehicleAttachment_InventoryExpansion : UVehicleAttachment_StaticPart {
	struct AVehicleItemContainer* _itemContainerClass; // 0x570(0x08)
	struct FEntityId _itemContainerEntityId; // 0x578(0x08)
	struct AVehicleItemContainer* _itemContainer; // 0x580(0x08)
	char pad_588[0x8]; // 0x588(0x08)

	void OnRep_ItemContainer(); // Function ConZ.VehicleAttachment_InventoryExpansion.OnRep_ItemContainer // (Native|Protected) // @ game+0x251b130
};

// Class ConZ.VehicleAttachment_Lights
// Size: 0x5b0 (Inherited: 0x570)
struct UVehicleAttachment_Lights : UVehicleAttachment {
	bool _affectMaterialsOnParent; // 0x570(0x01)
	char pad_571[0x7]; // 0x571(0x07)
	struct TArray<struct FVehicleLightsData> _lightsData; // 0x578(0x10)
	char pad_588[0x20]; // 0x588(0x20)
	struct FLightsAttachmentSimulationData _simulationData; // 0x5a8(0x01)
	char pad_5A9[0x7]; // 0x5a9(0x07)
};

// Class ConZ.VehicleAttachment_MountableInventoryExpansion
// Size: 0x640 (Inherited: 0x590)
struct UVehicleAttachment_MountableInventoryExpansion : UVehicleAttachment_InventoryExpansion {
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlotClasses; // 0x590(0x10)
	struct FVehicleAttachmentMeshSetup _inventoryVisualsMeshSetup; // 0x5a0(0x80)
	char pad_620[0x8]; // 0x620(0x08)
	struct FName _inventoryVisualsCollisionShapeName; // 0x628(0x08)
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlots; // 0x630(0x10)
};

// Class ConZ.VehicleAttachment_Radio
// Size: 0x660 (Inherited: 0x570)
struct UVehicleAttachment_Radio : UVehicleAttachment {
	struct URadioComponent* _radioComponent; // 0x570(0x08)
	struct FGameplayTagContainer _toggleTags; // 0x578(0x20)
	struct FGameplayTagContainer _changeStationTags; // 0x598(0x20)
	struct FGameplayTagContainer _increaseVolumeTags; // 0x5b8(0x20)
	struct FGameplayTagContainer _decreaseVolumeTags; // 0x5d8(0x20)
	char pad_5F8[0x28]; // 0x5f8(0x28)
	struct FTransform _radioComponentOffset; // 0x620(0x30)
	float _volumeChangeRate; // 0x650(0x04)
	bool _isHiFi; // 0x654(0x01)
	char pad_655[0x3]; // 0x655(0x03)
	float _electricityConsumption; // 0x658(0x04)
	bool _turnedOn; // 0x65c(0x01)
	char pad_65D[0x3]; // 0x65d(0x03)

	void OnRep_RadioComponent(struct URadioComponent* Component); // Function ConZ.VehicleAttachment_Radio.OnRep_RadioComponent // (Final|Native|Private) // @ game+0x251ec40
};

// Class ConZ.VehicleAttachment_Seat
// Size: 0x5a0 (Inherited: 0x570)
struct UVehicleAttachment_Seat : UVehicleAttachment {
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlotClasses; // 0x570(0x10)
	struct TArray<struct UVehicleBaseMountSlot*> _mountSlots; // 0x580(0x10)
	float _minimalHealthPercentWhenMounted; // 0x590(0x04)
	float _minimalHealthPercentToMounted; // 0x594(0x04)
	char pad_598[0x8]; // 0x598(0x08)
};

// Class ConZ.VehicleWithDashboard
// Size: 0x28 (Inherited: 0x28)
struct UVehicleWithDashboard : UInterface {
};

// Class ConZ.VehicleAttachment_WeaponMount
// Size: 0x580 (Inherited: 0x570)
struct UVehicleAttachment_WeaponMount : UVehicleAttachment {
	struct FEntityId WeaponId; // 0x568(0x08)
	struct TArray<struct FWeaponMountSetup> _supportedWeapons; // 0x570(0x10)
};

// Class ConZ.VehicleAttachment_Wheel
// Size: 0x5c0 (Inherited: 0x570)
struct UVehicleAttachment_Wheel : UVehicleAttachment {
	char pad_570[0x50]; // 0x570(0x50)
};

// Class ConZ.VehicleAttachment_DcxWheel
// Size: 0x5d0 (Inherited: 0x5c0)
struct UVehicleAttachment_DcxWheel : UVehicleAttachment_Wheel {
	struct TArray<int32_t> WheelIndices; // 0x5c0(0x10)
};

// Class ConZ.VehicleAttachment_ConstrainedWheel
// Size: 0x740 (Inherited: 0x5c0)
struct UVehicleAttachment_ConstrainedWheel : UVehicleAttachment_Wheel {
	struct FVehicleAttachmentWheelSetup WheelSetup; // 0x5c0(0x44)
	char pad_604[0xc]; // 0x604(0x0c)
	struct FVehicleAttachmentMeshSetup VisualMeshSetup; // 0x610(0x80)
	char pad_690[0x10]; // 0x690(0x10)
	struct FVehicleAttachmentMeshSetup SteeringMeshSetup; // 0x6a0(0x80)
	char pad_720[0x20]; // 0x720(0x20)
};

// Class ConZ.VehicleWithWheels
// Size: 0x28 (Inherited: 0x28)
struct UVehicleWithWheels : UInterface {
};

// Class ConZ.VehicleAttachmentDashboardAnimInstance
// Size: 0x2e0 (Inherited: 0x2c0)
struct UVehicleAttachmentDashboardAnimInstance : UAnimInstance {
	float _interpSteer; // 0x2b8(0x04)
	struct FRotator _steerRotator; // 0x2bc(0x0c)
	struct FVector _velocity; // 0x2c8(0x0c)
	float _rpm; // 0x2d4(0x04)
	float _fuelAmountPercentage; // 0x2d8(0x04)
	float _batteryAmountPercentage; // 0x2dc(0x04)
};

// Class ConZ.VehicleAttachmentHealthWidget
// Size: 0x298 (Inherited: 0x268)
struct UVehicleAttachmentHealthWidget : UUserWidget {
	struct UTextBlock* _text; // 0x268(0x08)
	struct UProgressBar* _progressBar; // 0x270(0x08)
	char pad_278[0x20]; // 0x278(0x20)
};

// Class ConZ.VehicleAttachmentItem
// Size: 0x9b0 (Inherited: 0x9b0)
struct AVehicleAttachmentItem : AItem {
	struct UVehiclePaintjobItemComponent* _paintjobComponent; // 0x9a8(0x08)
};

// Class ConZ.VehicleAttachmentParent
// Size: 0x28 (Inherited: 0x28)
struct UVehicleAttachmentParent : UInterface {
};

// Class ConZ.VehicleSlotIdAssetData
// Size: 0x40 (Inherited: 0x28)
struct UVehicleSlotIdAssetData : UAssetUserData {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class ConZ.MountableVehicleAttachment
// Size: 0x28 (Inherited: 0x28)
struct UMountableVehicleAttachment : UInterface {
};

// Class ConZ.VehicleAttachmentTag
// Size: 0x38 (Inherited: 0x30)
struct UVehicleAttachmentTag : UBaseItemTag {
	struct UVehicleAttachment* AttachmentClass; // 0x30(0x08)
};

// Class ConZ.VehicleBaseAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UVehicleBaseAnimInstance : UAnimInstance {
};

// Class ConZ.VehicleBasePushMountSlot
// Size: 0x1c0 (Inherited: 0x190)
struct UVehicleBasePushMountSlot : UVehicleBaseMountSlot {
	struct FText PushStartMountInteractionCaption; // 0x188(0x18)
	struct FName LeftHandIKSocketName; // 0x1a0(0x08)
	struct FName RightHandIKSocketName; // 0x1a8(0x08)
	bool SearchSocketsOnlyOnMainMesh; // 0x1b0(0x01)
	char pad_1B9[0x7]; // 0x1b9(0x07)
};

// Class ConZ.VehicleSystem
// Size: 0x30 (Inherited: 0x28)
struct UVehicleSystem : UObject {
	char pad_28[0x4]; // 0x28(0x04)
	bool _useReplication; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class ConZ.VehicleBuoyancySystem
// Size: 0x158 (Inherited: 0x30)
struct UVehicleBuoyancySystem : UVehicleSystem {
	struct FBuoyancy _buoyancy; // 0x30(0x70)
	bool _isAnchored; // 0xa0(0x01)
	bool _simulateRudder; // 0xa1(0x01)
	char pad_A2[0x2]; // 0xa2(0x02)
	struct FName _rudderInputName; // 0xa4(0x08)
	float _steerMultiplier; // 0xac(0x04)
	struct FRuntimeFloatCurve _rudderEfficiencyBySpeedKmH; // 0xb0(0x88)
	struct TArray<struct FWaterParticleTransform> _waterParticleTransforms; // 0x138(0x10)
	char pad_148[0x10]; // 0x148(0x10)
};

// Class ConZ.VehicleCameraComponent
// Size: 0x7d0 (Inherited: 0x7d0)
struct UVehicleCameraComponent : UCameraComponent {
};

// Class ConZ.VehicleCameraStabilizerComponent
// Size: 0x2a0 (Inherited: 0x200)
struct UVehicleCameraStabilizerComponent : USceneComponent {
	struct FVector _componentWorldOffset; // 0x1fc(0x0c)
	float _desiredDistance; // 0x208(0x04)
	float _probeSize; // 0x20c(0x04)
	float _speedFallbackIntensity; // 0x210(0x04)
	float _lateralMovementResponseIntensity; // 0x214(0x04)
	float _lockedHorizontalDampeningFactor; // 0x218(0x04)
	float _lockedHorizontalOscillationFactor; // 0x21c(0x04)
	float _lockedVerticalDampeningFactor; // 0x220(0x04)
	float _lockedVerticalOscillationFactor; // 0x224(0x04)
	float _maxFreeLookPitch; // 0x228(0x04)
	float _freeHorizontalDampeningFactor; // 0x22c(0x04)
	float _freeHorizontalOscillationFactor; // 0x230(0x04)
	float _freeVerticalDampeningFactor; // 0x234(0x04)
	float _freeVerticalOscillationFactor; // 0x238(0x04)
	char pad_240[0x60]; // 0x240(0x60)
};

// Class ConZ.VehicleCheatControllerComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UVehicleCheatControllerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class ConZ.VehicleCorpse
// Size: 0x2c0 (Inherited: 0x220)
struct AVehicleCorpse : AActor {
	char pad_220[0x8]; // 0x220(0x08)
	struct UStaticMeshComponent* _mesh; // 0x228(0x08)
	struct UParticleSystem* _explosionParticles; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct FTransform _explosionParticlesTransform; // 0x240(0x30)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x270(0x08)
	float _explosionForceMagnitude; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct TArray<struct FVehicleCorpseBurningParticles> _burningParticles; // 0x280(0x10)
	struct UAkAudioEvent* _burningAudioEvent; // 0x290(0x08)
	float _endOfLifeFadingTime; // 0x298(0x04)
	char pad_29C[0x24]; // 0x29c(0x24)

	struct UStaticMeshComponent* GetMesh(); // Function ConZ.VehicleCorpse.GetMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25228c0
};

// Class ConZ.VehicleCraftedItem
// Size: 0x9c0 (Inherited: 0x9b0)
struct AVehicleCraftedItem : AItem {
	struct FPrimaryAssetId _vehiclePrimaryAssetId; // 0x9a8(0x10)
};

// Class ConZ.VehicleDoorsComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UVehicleDoorsComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.VehicleElectricalDevice
// Size: 0x28 (Inherited: 0x28)
struct UVehicleElectricalDevice : UInterface {
};

// Class ConZ.VehicleElectricalSystem
// Size: 0x78 (Inherited: 0x30)
struct UVehicleElectricalSystem : UVehicleSystem {
	char pad_30[0x38]; // 0x30(0x38)
	float _chargeDrainWhenInactive; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	float _EMInterferenceMaxDisabledTime; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class ConZ.VehicleEntitySetup
// Size: 0x80 (Inherited: 0x80)
struct UVehicleEntitySetup : UEntitySetup {
};

// Class ConZ.VehicleForcePushComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UVehicleForcePushComponent : UActorComponent {
	struct TArray<struct FVehicleForcePushParams> _forcePushParams; // 0xb0(0x10)
	char pad_C0[0x18]; // 0xc0(0x18)
};

// Class ConZ.VehicleGroupSpawningPreset
// Size: 0x40 (Inherited: 0x30)
struct UVehicleGroupSpawningPreset : UDataAsset {
	struct TArray<struct UVehiclePreset*> VehiclePresets; // 0x30(0x10)
};

// Class ConZ.VehicleHudWidget
// Size: 0x318 (Inherited: 0x268)
struct UVehicleHudWidget : UUserWidget {
	struct UVehicleMountSlotIndicators* _mountSlotIndicators; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
	struct UTextBlock* Speed1s; // 0x278(0x08)
	struct UTextBlock* Speed10s; // 0x280(0x08)
	struct UTextBlock* Speed100s; // 0x288(0x08)
	struct UTextBlock* Gear; // 0x290(0x08)
	struct UProgressBar* HealthBar; // 0x298(0x08)
	struct UProgressBar* FuelBar; // 0x2a0(0x08)
	struct UProgressBar* BatteryBar; // 0x2a8(0x08)
	struct UImage* EngineBrokenIndicator; // 0x2b0(0x08)
	struct UWidgetAnimation* Blink; // 0x2b8(0x08)
	struct UOverlay* Overlay_1; // 0x2c0(0x08)
	struct UTextBlock* TextBlock_2; // 0x2c8(0x08)
	struct UTextBlock* TextBlock_3; // 0x2d0(0x08)
	struct USizeBox* SizeBox_3; // 0x2d8(0x08)
	struct USizeBox* SizeBox_4; // 0x2e0(0x08)
	struct UImage* Image_1; // 0x2e8(0x08)
	struct UImage* Image_2; // 0x2f0(0x08)
	struct UImage* Image_3; // 0x2f8(0x08)
	struct UImage* Image_4; // 0x300(0x08)
	struct UImage* Image_5; // 0x308(0x08)
	struct UTextBlock* kmh; // 0x310(0x08)
};

// Class ConZ.VehicleItemContainer
// Size: 0xbd0 (Inherited: 0xb90)
struct AVehicleItemContainer : AChestItem {
	char pad_B90[0x34]; // 0xb90(0x34)
	struct TWeakObjectPtr<struct UVehicleAttachment> _owningVehicleAttachment; // 0xbc4(0x08)
	char pad_BCC[0x4]; // 0xbcc(0x04)
};

// Class ConZ.VehicleManager
// Size: 0x680 (Inherited: 0x220)
struct AVehicleManager : AActor {
	float _maxAllowedTimeInForbiddenZones; // 0x220(0x04)
	float _forbiddenZoneCheckInterval; // 0x224(0x04)
	char pad_228[0x4]; // 0x228(0x04)
	float _relevantSpawnerGroupsUpdateTimeElapsed; // 0x22c(0x04)
	char pad_230[0x4]; // 0x230(0x04)
	float _minPlayerLocationDeltaToUpdateRelevantSpawners; // 0x234(0x04)
	float _relevantSpawnerGroupsUpdateTimeBudget; // 0x238(0x04)
	float _defaultSpawnerNetCullDistance; // 0x23c(0x04)
	bool _alwaysUseDefaultSpawnerNetCullDistance; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float _numDaysToKeepSpawnerAliveIfVehicleIsInactive; // 0x244(0x04)
	float _spawnerTasksProcessingTimeElapsed; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	float _spawnerTasksProcessingTimeBudget; // 0x250(0x04)
	float _addSpawnerUpdateInterval; // 0x254(0x04)
	char pad_258[0x4]; // 0x258(0x04)
	float _relevantSpawnersUpdateInterval; // 0x25c(0x04)
	char pad_260[0x4]; // 0x260(0x04)
	float _autoSaveCheckIntervalForMovingVehicles; // 0x264(0x04)
	char pad_268[0x4]; // 0x268(0x04)
	float _autoSaveIntervalForMovingVehicles; // 0x26c(0x04)
	float _autoSaveCheckIntervalForStationaryVehicles; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	float _autoSaveIntervalForStationaryVehicles; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct TMap<struct FPrimaryAssetId, struct FVehicleManualSpawnPresetArray> _manualSpawnPresetsMap; // 0x280(0x50)
	struct TMap<struct FPrimaryAssetId, struct UVehiclePreset*> _purchaseSpawnPresetsMap; // 0x2d0(0x50)
	char pad_320[0x50]; // 0x320(0x50)
	struct FGameplayTag _spawnGroupParentTag; // 0x370(0x08)
	struct TMap<struct FGameplayTag, struct FGameplayTagContainer> _spawnGroupsIgnoringPreferredDistanceBetweenSpawners; // 0x378(0x50)
	int32_t _defaultMaxNumSpawnersPerSpawnGroup; // 0x3c8(0x04)
	char pad_3CC[0xf4]; // 0x3cc(0xf4)
	float _minDistanceBetweenVisitorAndSpawnLocation; // 0x4c0(0x04)
	float _preferredDistanceBetweenSpawners; // 0x4c4(0x04)
	float _preferredDistanceBetweenSpawnersOfSameType; // 0x4c8(0x04)
	char pad_4CC[0x4]; // 0x4cc(0x04)
	struct TArray<struct FVehicleSpawnPointData> _vehicleSpawnPoints; // 0x4d0(0x10)
	char pad_4E0[0x1a0]; // 0x4e0(0x1a0)

	void OnVehicleActorDestroyed(struct AActor* vehicleActor); // Function ConZ.VehicleManager.OnVehicleActorDestroyed // (Final|Native|Private) // @ game+0x2522cb0
};

// Class ConZ.VehicleMeshComponent
// Size: 0xf00 (Inherited: 0xee0)
struct UVehicleMeshComponent : USkeletalMeshComponent {
	float _minCcdAdvanceCoefficient; // 0xed8(0x04)
	bool _useSimpleNavMesh; // 0xedc(0x01)
	struct FBox _navBoundingBox; // 0xee0(0x1c)
};

// Class ConZ.VehicleMountSlot
// Size: 0x28 (Inherited: 0x28)
struct UVehicleMountSlot : UMountSlot {
};

// Class ConZ.VehicleMountSlotIndicators
// Size: 0x288 (Inherited: 0x268)
struct UVehicleMountSlotIndicators : UUserWidget {
	struct UImage* _backgroundGradient; // 0x268(0x08)
	struct UContentWidget* _vehicleMountSlotsContainer; // 0x270(0x08)
	char pad_278[0x10]; // 0x278(0x10)
};

// Class ConZ.VehicleMountSlotsWidget
// Size: 0x278 (Inherited: 0x268)
struct UVehicleMountSlotsWidget : UUserWidget {
	struct UCanvasPanel* _mountSlotsCanvas; // 0x268(0x08)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class ConZ.VehicleMountSlotWidget
// Size: 0x278 (Inherited: 0x268)
struct UVehicleMountSlotWidget : UUserWidget {
	struct UWidgetSwitcher* _slotStateSwitcher; // 0x268(0x08)
	struct UTextBlock* _keybindLabel; // 0x270(0x08)
};

// Class ConZ.VehiclePaintjobItemComponent
// Size: 0x120 (Inherited: 0xc8)
struct UVehiclePaintjobItemComponent : UItemComponent {
	struct TArray<struct FVehiclePaintjobPatternParams> _patterns; // 0xc8(0x10)
	bool _isActive; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	float _paintjobDecayDurationSeconds; // 0xdc(0x04)
	char pad_E0[0x40]; // 0xe0(0x40)

	void NetMulticast_SetState(int32_t patternIndex, float decaySeconds, struct TArray<struct FColor> Colors); // Function ConZ.VehiclePaintjobItemComponent.NetMulticast_SetState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2522af0
	void NetMulticast_SetPatternIndex(int32_t Index); // Function ConZ.VehiclePaintjobItemComponent.NetMulticast_SetPatternIndex // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2522a60
	void NetMulticast_SetColorAtIndex(int32_t Index, struct FColor Value); // Function ConZ.VehiclePaintjobItemComponent.NetMulticast_SetColorAtIndex // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x2522990
	void NetMulticast_RefreshColor(); // Function ConZ.VehiclePaintjobItemComponent.NetMulticast_RefreshColor // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2522970
	void NetMulticast_ClearPaintjob(struct FColor NewColor); // Function ConZ.VehiclePaintjobItemComponent.NetMulticast_ClearPaintjob // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x25228f0
};

// Class ConZ.VehiclePaintjobCommonData
// Size: 0x40 (Inherited: 0x30)
struct UVehiclePaintjobCommonData : UDataAsset {
	struct TArray<struct FVehiclePaintjobPatternParams> Patterns; // 0x30(0x10)
};

// Class ConZ.VehiclePartDescriptionComponent
// Size: 0x480 (Inherited: 0x480)
struct UVehiclePartDescriptionComponent : UBoxComponent {
};

// Class ConZ.VehiclePowertrainComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UVehiclePowertrainComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
};

// Class ConZ.VehiclePresetNode
// Size: 0x70 (Inherited: 0x28)
struct UVehiclePresetNode : UObject {
	struct TArray<struct FPrimaryAssetId> PossibleAttachmentAssetIds; // 0x28(0x10)
	struct FPrimaryAssetId AttachmentAssetId; // 0x38(0x10)
	bool IsFunctionalityAttachment; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float SpawnChance; // 0x4c(0x04)
	struct FFloatRange SpawnHealthPercentageRange; // 0x50(0x10)
	struct TArray<struct UVehiclePresetNode*> Children; // 0x60(0x10)
};

// Class ConZ.VehiclePreset
// Size: 0xa0 (Inherited: 0x30)
struct UVehiclePreset : UDataAsset {
	bool Frobnicate; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FPrimaryAssetId VehicleAssetId; // 0x34(0x10)
	char pad_44[0x4]; // 0x44(0x04)
	struct UVehiclePresetNode* RootNode; // 0x48(0x08)
	struct FFloatRange FuelAmountSpawnPercentageRange; // 0x50(0x10)
	struct FFloatRange BatteryChargeSpawnPercentageRange; // 0x60(0x10)
	struct TSoftClassPtr<UObject> LockClass; // 0x70(0x28)
	float VerticalSpawnOffset; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class ConZ.VehicleServiceComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UVehicleServiceComponent : UActorComponent {
	struct AVehicleServiceStation* _serviceStation; // 0xb0(0x08)
	struct FDbIntegerId _serviceInitiatorId; // 0xb8(0x08)
	struct TWeakObjectPtr<struct UObject> _currentAction; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	void OnRep_ServiceStation(); // Function ConZ.VehicleServiceComponent.OnRep_ServiceStation // (Final|Native|Private) // @ game+0x2526ee0
};

// Class ConZ.VehicleServiceItemComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UVehicleServiceItemComponent : UActorComponent {
	struct APortableVehicleServiceStation* _serviceStationClass; // 0xb0(0x08)
	struct TArray<struct FGameplayTag> _supportedServiceTags; // 0xb8(0x10)
};

// Class ConZ.VehicleServiceRegistry
// Size: 0x110 (Inherited: 0xb0)
struct UVehicleServiceRegistry : UActorComponent {
	struct TArray<struct FVehicleServiceData> _serviceData; // 0xb0(0x10)
	char pad_C0[0x50]; // 0xc0(0x50)
};

// Class ConZ.VehicleServiceStationSaveObject
// Size: 0x28 (Inherited: 0x28)
struct UVehicleServiceStationSaveObject : UObject {
};

// Class ConZ.StaticVehicleServiceStationSaveObject
// Size: 0x30 (Inherited: 0x28)
struct UStaticVehicleServiceStationSaveObject : UVehicleServiceStationSaveObject {
	int64_t StaticId; // 0x28(0x08)
};

// Class ConZ.VehicleServiceStation
// Size: 0x2e0 (Inherited: 0x220)
struct AVehicleServiceStation : AActor {
	struct FGameplayTag _serviceMode; // 0x220(0x08)
	struct USkeletalMeshComponent* _mesh; // 0x228(0x08)
	struct FText _displayName; // 0x230(0x18)
	struct FName _vehicleAttachSocketName; // 0x248(0x08)
	struct FTransform _vehicleAttachTransformServerOnly; // 0x250(0x30)
	float _maxServiceDistanceSquared; // 0x280(0x04)
	float _minUpAlignmentAngleDeg; // 0x284(0x04)
	float _minForwardAbsAlignmentAngleDeg; // 0x288(0x04)
	struct FVector _blockCheckBoxExtent; // 0x28c(0x0c)
	struct UAkAudioEvent* _movingStartAudioEvent; // 0x298(0x08)
	struct UAkAudioEvent* _movingStopAudioEvent; // 0x2a0(0x08)
	struct ATradePost* _assignedTradePost; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct AVehicleBase* _servicedVehicle; // 0x2b8(0x08)
	int64_t _staticId; // 0x2c0(0x08)
	char pad_2C8[0x18]; // 0x2c8(0x18)

	void OnRep_ServicedVehicle(); // Function ConZ.VehicleServiceStation.OnRep_ServicedVehicle // (Final|Native|Private) // @ game+0x2526f00
	void OnAttachedVehicleDestroyed(struct AActor* DestroyedActor); // Function ConZ.VehicleServiceStation.OnAttachedVehicleDestroyed // (Final|Native|Private) // @ game+0x2526e30
	void NetMulticast_StartLowering(); // Function ConZ.VehicleServiceStation.NetMulticast_StartLowering // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x236c4d0
};

// Class ConZ.PortableVehicleServiceStationSaveObject
// Size: 0x88 (Inherited: 0x28)
struct UPortableVehicleServiceStationSaveObject : UVehicleServiceStationSaveObject {
	struct FPrimaryAssetId AssetId; // 0x28(0x10)
	struct FGameplayTag ServiceMode; // 0x38(0x08)
	struct FVector Location; // 0x40(0x0c)
	struct FRotator Rotation; // 0x4c(0x0c)
	struct TSoftClassPtr<UObject> OriginalItemClass; // 0x58(0x28)
	float HealthRatio; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class ConZ.PortableVehicleServiceStation
// Size: 0x340 (Inherited: 0x2e0)
struct APortableVehicleServiceStation : AVehicleServiceStation {
	struct FGameplayTag _serviceModeRep; // 0x2d8(0x08)
	struct TMap<struct FGameplayTag, struct UAnimSequenceBase*> _poseVsSericeModeMap; // 0x2e0(0x50)
	struct AItem* _originalItemClass; // 0x330(0x08)

	void OnRep_ServiceMode(); // Function ConZ.PortableVehicleServiceStation.OnRep_ServiceMode // (Final|Native|Private) // @ game+0x2526ec0
};

// Class ConZ.VehicleServiceStationAnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UVehicleServiceStationAnimInstance : UAnimInstance {
	float _liftTime; // 0x2b8(0x04)
	float _liftInterpValue; // 0x2bc(0x04)
	bool _isOnServer; // 0x2c0(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
};

// Class ConZ.VehicleServiceToolTag
// Size: 0x40 (Inherited: 0x30)
struct UVehicleServiceToolTag : UBaseItemTag {
	struct FGameplayTag GameplayTag; // 0x30(0x08)
	int32_t UsesPerService; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class ConZ.VehicleWeaponAimingParameters
// Size: 0x128 (Inherited: 0x28)
struct UVehicleWeaponAimingParameters : UObject {
	struct TArray<enum class EVehicleWeaponAimingStance> SupportedStance; // 0x28(0x10)
	struct FVehicleWeaponAimingStanceData StanceData[0x2]; // 0x38(0xf0)

	bool CanPrisonerTakeItemInHands(struct APrisoner* Prisoner, struct AItem* Item, enum class EVehicleWeaponAimingStance stance); // Function ConZ.VehicleWeaponAimingParameters.CanPrisonerTakeItemInHands // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2526d10
	bool CanPrisonerEnterCombatModeUsingItem(struct APrisoner* Prisoner, struct AItem* Item, enum class EVehicleWeaponAimingStance stance); // Function ConZ.VehicleWeaponAimingParameters.CanPrisonerEnterCombatModeUsingItem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2526bf0
	bool CanExecutePrisonerAction(struct APrisoner* Prisoner, struct UPrisonerActionDescription* desc); // Function ConZ.VehicleWeaponAimingParameters.CanExecutePrisonerAction // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2526b20
};

// Class ConZ.VehicleSpawner
// Size: 0x228 (Inherited: 0x220)
struct AVehicleSpawner : AActor {
	struct UVehicleSpawnerComponent* SpawnerComponent; // 0x220(0x08)
};

// Class ConZ.VehicleSpawnerComponent
// Size: 0x210 (Inherited: 0x200)
struct UVehicleSpawnerComponent : USceneComponent {
	struct TArray<struct FVehicleSpawnerMarker> SpawnerMarkers; // 0x1f8(0x10)
};

// Class ConZ.VehicleTrajectoryVisualizer
// Size: 0x250 (Inherited: 0x220)
struct AVehicleTrajectoryVisualizer : AActor {
	struct USplineComponent* _splineComponent; // 0x220(0x08)
	struct USkeletalMeshComponent* _meshComponent; // 0x228(0x08)
	char pad_230[0x20]; // 0x230(0x20)
};

// Class ConZ.VehicleUIDataController
// Size: 0xb8 (Inherited: 0x28)
struct UVehicleUIDataController : UObject {
	char pad_28[0x90]; // 0x28(0x90)
};

// Class ConZ.VehicleWeaponsSystem
// Size: 0x50 (Inherited: 0x30)
struct UVehicleWeaponsSystem : UVehicleSystem {
	char pad_30[0x10]; // 0x30(0x10)
	struct TArray<struct FWeaponMountData> _weaponMountDataArray; // 0x40(0x10)

	void OnRep_WeaponMountDataArray(); // Function ConZ.VehicleWeaponsSystem.OnRep_WeaponMountDataArray // (Final|Native|Private) // @ game+0x2529ec0
};

// Class ConZ.VerificationStatics
// Size: 0x28 (Inherited: 0x28)
struct UVerificationStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.VerticalScrollBoxDropdownContent
// Size: 0x278 (Inherited: 0x268)
struct UVerticalScrollBoxDropdownContent : UUserWidget {
	struct UScrollBox* _entriesScrollBox; // 0x268(0x08)
	struct USimpleDropdownEntryCategoryTitle* _simpleDropdownEntryCategoryTitle; // 0x270(0x08)
};

// Class ConZ.VicinityContainer3
// Size: 0x2a8 (Inherited: 0x268)
struct UVicinityContainer3 : UUserWidget {
	char pad_268[0x18]; // 0x268(0x18)
	struct UItemInventoryWidget2* _container; // 0x280(0x08)
	struct UScrollBox* _containerScrollBox; // 0x288(0x08)
	char pad_290[0x18]; // 0x290(0x18)

	void OnContainerScrollBoxScrolled(float CurrentOffset); // Function ConZ.VicinityContainer3.OnContainerScrollBoxScrolled // (Final|Native|Private) // @ game+0x2529db0
};

// Class ConZ.VicinityContainerRowItemWidget
// Size: 0x5d0 (Inherited: 0x520)
struct UVicinityContainerRowItemWidget : UItemWidget2 {
	struct UTextBlock* _caption; // 0x520(0x08)
	struct UTextBlock* PlayerGivenName; // 0x528(0x08)
	struct UWidgetSwitcher* _titleSwitcher; // 0x530(0x08)
	struct UImage* Image_1; // 0x538(0x08)
	struct UImage* Image_3; // 0x540(0x08)
	struct UImage* Image_10; // 0x548(0x08)
	struct UTextBlock* TextBlock_21; // 0x550(0x08)
	struct UImage* UpperLeftIcon; // 0x558(0x08)
	struct UProgressBar* ProgressBarLeftFirst; // 0x560(0x08)
	struct UProgressBar* ProgressBarLeftSecond; // 0x568(0x08)
	struct USizeBox* SizeBox_1; // 0x570(0x08)
	struct FLinearColor _openedBackgroundColor; // 0x578(0x10)
	struct FLinearColor _closedBackgroundColor; // 0x588(0x10)
	struct FLinearColor _selectedBackgroundColor; // 0x598(0x10)
	struct FLinearColor _openedFontColor; // 0x5a8(0x10)
	struct FLinearColor _closedFontColor; // 0x5b8(0x10)
	char pad_5C8[0x8]; // 0x5c8(0x08)
};

// Class ConZ.VicinityPanel3
// Size: 0x520 (Inherited: 0x268)
struct UVicinityPanel3 : UUserWidget {
	char pad_268[0x10]; // 0x268(0x10)
	bool _isTradingThingy; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
	struct UWrapBox* _searchedItemsBox; // 0x280(0x08)
	struct UWrapBox* _vicinityBox; // 0x288(0x08)
	struct UHorizontalBox* _vicinityContainersBox; // 0x290(0x08)
	struct UHorizontalBox* _tradingBox; // 0x298(0x08)
	struct UOverlay* _tradingBoxOverlay; // 0x2a0(0x08)
	struct UBadAdjustableSeparator* _adjustableSeparator; // 0x2a8(0x08)
	struct TMap<struct UObject*, struct UWidget*> _searchedItems; // 0x2b0(0x50)
	struct TMap<struct UObject*, struct UWidget*> _vicinityItems; // 0x300(0x50)
	struct TMap<struct UObject*, struct UWidget*> _vicinityContainers; // 0x350(0x50)
	struct TMap<struct UObject*, struct UWidget*> _tradingItems; // 0x3a0(0x50)
	char pad_3F0[0xa0]; // 0x3f0(0xa0)
	struct TMap<struct FName, enum class EVicinityFilterType> _filterCheckboxesNames; // 0x490(0x50)
	struct FMargin _vicinityContainersPadding; // 0x4e0(0x10)
	char pad_4F0[0x10]; // 0x4f0(0x10)
	struct TArray<struct UForeignSubstance*> _medicalFilterClasses; // 0x500(0x10)
	struct TArray<struct UBaseItemTag*> _toolFilterItemTags; // 0x510(0x10)

	void OnVicinityContainerInitialized(struct TScriptInterface<IInventoryNode>& Item, struct UItemWidget2* Widget); // Function ConZ.VicinityPanel3.OnVicinityContainerInitialized // (Final|Native|Private|HasOutParms) // @ game+0x2529f70
	void OnVicinityContainerClosed(struct UItemWidget2* Widget); // Function ConZ.VicinityPanel3.OnVicinityContainerClosed // (Final|Native|Private) // @ game+0x2529ee0
	void OnItemActorDestroyed(struct AActor* Actor); // Function ConZ.VicinityPanel3.OnItemActorDestroyed // (Final|Native|Private) // @ game+0x2529e30
	void OnCheckBoxCheckedChanged(bool checked); // Function ConZ.VicinityPanel3.OnCheckBoxCheckedChanged // (Final|Native|Private) // @ game+0x2529d20
};

// Class ConZ.VideoSettingsManager
// Size: 0x28 (Inherited: 0x28)
struct UVideoSettingsManager : UObject {
};

// Class ConZ.VisionEffectsComponent
// Size: 0x1560 (Inherited: 0xb0)
struct UVisionEffectsComponent : UActorComponent {
	char pad_B0[0x38]; // 0xb0(0x38)
	float PostProcessPriority; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UMaterialInterface* FadeOutMaterial; // 0xf0(0x08)
	struct UMaterialInterface* LowLightVisionMaterial; // 0xf8(0x08)
	struct UMaterialInterface* NightVisionMaterial; // 0x100(0x08)
	float NightVisionBlendInDuration; // 0x108(0x04)
	float NightVisionBlendOutDuration; // 0x10c(0x04)
	struct UMaterialParameterCollection* AnimalEyesMaterialParameterCollection; // 0x110(0x08)
	struct FName AnimalEyesEmissiveMaterialName; // 0x118(0x08)
	float AnimalEyesEmissiveValueWhenNightVisionIsEnabled; // 0x120(0x04)
	struct FName NightVisionGlitchStrengthParameterName; // 0x124(0x08)
	char pad_12C[0x4]; // 0x12c(0x04)
	struct UMaterialInterface* FlashbangEffectMaterial; // 0x130(0x08)
	struct UMaterialInterface* FallingBlurMaterial; // 0x138(0x08)
	struct UMaterialInterface* TakenDamageMaterial; // 0x140(0x08)
	struct UMaterialParameterCollection* TakenDamageMaterialParameterCollection; // 0x148(0x08)
	struct FName TakenDamageBlurIntensityParameterName; // 0x150(0x08)
	struct FName TakenDamageStainsIntensityParameterName; // 0x158(0x08)
	struct FName TakenDamageVignetteIntensityParameterName; // 0x160(0x08)
	struct UCurveFloat* TakenDamageBlurShapeCurve; // 0x168(0x08)
	struct UCurveFloat* TakenDamageBlurIntensityCurve; // 0x170(0x08)
	struct UCurveFloat* TakenDamageBlurDurationCurve; // 0x178(0x08)
	struct UCurveFloat* TakenDamageStainsShapeCurve; // 0x180(0x08)
	struct UCurveFloat* TakenDamageStainsIntensityCurve; // 0x188(0x08)
	struct UCurveFloat* TakenDamageStainsDurationCurve; // 0x190(0x08)
	struct UCurveFloat* TakenDamageVignetteShapeCurve; // 0x198(0x08)
	struct UCurveFloat* TakenDamageVignetteIntensityCurve; // 0x1a0(0x08)
	struct UCurveFloat* TakenDamageVignetteDurationCurve; // 0x1a8(0x08)
	float TakenDamageMaxChromaticAberration; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct UMatineeCameraShake* TakenDamageCameraShakeClass; // 0x1b8(0x08)
	struct UCurveFloat* TakenDamageCameraShakeScaleCurve; // 0x1c0(0x08)
	struct UMaterialInterface* TacticsEffectMaterial; // 0x1c8(0x08)
	struct UMaterialInterface* FocusModeMaterial; // 0x1d0(0x08)
	struct UMaterialInterface* DoubleVisionMaterial; // 0x1d8(0x08)
	struct FName DoubleVisionIntensityParameterName; // 0x1e0(0x08)
	struct UMaterialInterface* BlurredVisionMaterial; // 0x1e8(0x08)
	struct FName BlurredVisionIntensityParameterName; // 0x1f0(0x08)
	struct UMaterialInterface* UnderwaterBlurMaterial; // 0x1f8(0x08)
	struct UMaterialInterface* PhotoModeTransitionMaterial; // 0x200(0x08)
	struct UMaterialInterface* ScopeZoomMaterial; // 0x208(0x08)
	struct FName ScopeZoomBlendPPParameterName; // 0x210(0x08)
	struct FName ScopeZoomBlackoutDensityParameterName; // 0x218(0x08)
	struct FName ScopeZoomChromaticAberrationDampeningParameterName; // 0x220(0x08)
	struct FName ScopeZoomCrosshairBaseScaleParameterName; // 0x228(0x08)
	struct FName ScopeZoomCrosshairDepthOffsetMultiplierParameterName; // 0x230(0x08)
	struct FName ScopeZoomCrosshairScaleMultiplierParameterName; // 0x238(0x08)
	struct FName ScopeZoomDistortionPowerParameterName; // 0x240(0x08)
	struct FName ScopeZoomDistortionScaleParameterName; // 0x248(0x08)
	struct FName ScopeZoomEyeDistanceBlackoutMultiplierParameterName; // 0x250(0x08)
	struct FName ScopeZoomGlowIntensityAtNightParameterName; // 0x258(0x08)
	struct FName ScopeZoomLensDepthOffsetMultiplierParameterName; // 0x260(0x08)
	struct FName ScopeZoomLensScaleParameterName; // 0x268(0x08)
	struct FName ScopeZoomLensUIScaleParameterName; // 0x270(0x08)
	struct FName ScopeZoomLensZoomParameterName; // 0x278(0x08)
	struct FName ScopeZoomOptimalEyeDistanceParameterName; // 0x280(0x08)
	struct FName ScopeZoomCrosshairCenterScreenOffsetParameterName; // 0x288(0x08)
	struct FName ScopeZoomLensCenterScreenOffsetParameterName; // 0x290(0x08)
	struct FName ScopeZoomCrosshairParameterName; // 0x298(0x08)
	struct FName ScopeZoomCrosshairColorParameterName; // 0x2a0(0x08)
	struct FName ScopeZoomCrosshairColorAtNightParameterName; // 0x2a8(0x08)
	struct FName ScopeZoomCrosshairGlowColorParameterName; // 0x2b0(0x08)
	struct FName ScopeZoomDirtMaskParameterName; // 0x2b8(0x08)
	struct FName ScopeZoomDirtinessParameterName; // 0x2c0(0x08)
	struct FName ScopeZoomDarkeningParameterName; // 0x2c8(0x08)
	struct FName ScopeZoomLensNormalMapParameterName; // 0x2d0(0x08)
	struct FName ScopeZoomLensUIParameterName; // 0x2d8(0x08)
	struct FName IsNightVisionActiveOnScopeParameterName; // 0x2e0(0x08)
	struct UMaterialInterface* ScopeInHandsNightVisionMaterial; // 0x2e8(0x08)
	struct UMaterialInterface* InjuryMaterial; // 0x2f0(0x08)
	struct UMaterialInterface* TraumaMaterial; // 0x2f8(0x08)
	struct UMaterialInterface* BulletHitMaterial; // 0x300(0x08)
	struct UMaterialInterface* SickMaterial; // 0x308(0x08)
	struct UMaterialInterface* ColdMaterial; // 0x310(0x08)
	struct UMaterialInterface* HotMaterial; // 0x318(0x08)
	struct UMaterialInterface* FatigueMaterial; // 0x320(0x08)
	struct UMaterialInterface* HallucinationMaterial; // 0x328(0x08)
	struct UMaterialInterface* EyePressureMaterial; // 0x330(0x08)
	struct UMaterialInterface* BloodyEyesMaterial; // 0x338(0x08)
	struct UMaterialInterface* RadiationMaterial; // 0x340(0x08)
	struct UMaterialInterface* DepthOfFieldMaterial; // 0x348(0x08)
	struct UMaterialInterface* PhoenixTearsMaterial; // 0x350(0x08)
	char pad_358[0x8]; // 0x358(0x08)
	struct FVector4 HeightenedSensesSaturationColor; // 0x360(0x10)
	struct FPostProcessSettings _postProcessSettings; // 0x370(0x560)
	char pad_8D0[0x690]; // 0x8d0(0x690)
	struct UMaterialInstanceDynamic* _blurredVisionMaterialInstance; // 0xf60(0x08)
	char pad_F68[0x50]; // 0xf68(0x50)
	struct UMaterialInstanceDynamic* _doubleVisionIntensityMaterialInstance; // 0xfb8(0x08)
	struct UMaterialInterface* _headgearOverlayMaterialInstance; // 0xfc0(0x08)
	struct UMaterialInstanceDynamic* _scopeZoomMaterialInstance; // 0xfc8(0x08)
	struct UMaterialInstanceDynamic* _nightVisionMaterialInstance; // 0xfd0(0x08)
	struct UMaterialInstanceDynamic* _scopeInHandsNightVisionMaterialInstance; // 0xfd8(0x08)
	struct UMaterialInstanceDynamic* _fallingBlurMaterialInstance; // 0xfe0(0x08)
	struct UMaterialInterface* _underwaterPostProcessingCurrent; // 0xfe8(0x08)
	struct UMaterialInterface* _underwaterPostProcessingLast; // 0xff0(0x08)
	float _underwaterPostProcessingBlendTime; // 0xff8(0x04)
	char pad_FFC[0x8]; // 0xffc(0x08)
	float _DOFBlurTime; // 0x1004(0x04)
	float _DOFClearBlurTime; // 0x1008(0x04)
	float _DOFScopingBlurTime; // 0x100c(0x04)
	float _DOFBlurDistanceADS; // 0x1010(0x04)
	float _DOFFstopADS; // 0x1014(0x04)
	struct UMaterialInstanceDynamic* _injuryMaterial; // 0x1018(0x08)
	char pad_1020[0x8]; // 0x1020(0x08)
	struct UMaterialInstanceDynamic* _traumaMaterial; // 0x1028(0x08)
	char pad_1030[0x8]; // 0x1030(0x08)
	struct UMaterialInstanceDynamic* _hallucinationMaterial; // 0x1038(0x08)
	char pad_1040[0x8]; // 0x1040(0x08)
	struct UMaterialInstanceDynamic* _eyePressureMaterial; // 0x1048(0x08)
	char pad_1050[0x8]; // 0x1050(0x08)
	struct UMaterialInstanceDynamic* _bloodyEyesMaterial; // 0x1058(0x08)
	char pad_1060[0x8]; // 0x1060(0x08)
	struct UMaterialInstanceDynamic* _bulletHitMaterial; // 0x1068(0x08)
	char pad_1070[0x8]; // 0x1070(0x08)
	struct UMaterialInstanceDynamic* _sickMaterial; // 0x1078(0x08)
	char pad_1080[0x8]; // 0x1080(0x08)
	struct UMaterialInstanceDynamic* _coldMaterial; // 0x1088(0x08)
	char pad_1090[0x8]; // 0x1090(0x08)
	struct UMaterialInstanceDynamic* _hotMaterial; // 0x1098(0x08)
	char pad_10A0[0x8]; // 0x10a0(0x08)
	struct UMaterialInstanceDynamic* _fatigueMaterial; // 0x10a8(0x08)
	char pad_10B0[0x8]; // 0x10b0(0x08)
	struct UMaterialInstanceDynamic* _radiationMaterial; // 0x10b8(0x08)
	char pad_10C0[0x8]; // 0x10c0(0x08)
	struct UMaterialInstanceDynamic* _depthOfFieldMaterial; // 0x10c8(0x08)
	char pad_10D0[0x8]; // 0x10d0(0x08)
	struct UMaterialInstanceDynamic* _phoenixTearsMaterial; // 0x10d8(0x08)
	char pad_10E0[0x480]; // 0x10e0(0x480)
};

// Class ConZ.VisualOverlayItemTag
// Size: 0x40 (Inherited: 0x30)
struct UVisualOverlayItemTag : UBaseItemTag {
	struct UMaterialInterface* OverlayMaterial; // 0x30(0x08)
	int32_t Priority; // 0x38(0x04)
	bool ShouldBeVisibleInFirstPersonView; // 0x3c(0x01)
	bool ShouldBeVisibleInThirdPersonView; // 0x3d(0x01)
	char pad_3E[0x2]; // 0x3e(0x02)
};

// Class ConZ.VoiceAudioComponent
// Size: 0x880 (Inherited: 0x860)
struct UVoiceAudioComponent : UAudioComponent {
	char pad_860[0x8]; // 0x860(0x08)
	struct UVoiceDecoder* VoiceDecoder; // 0x868(0x08)
	char pad_870[0x10]; // 0x870(0x10)

	void QueueVoiceData(struct TArray<char>& CompressedVoiceData); // Function ConZ.VoiceAudioComponent.QueueVoiceData // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x252a060
	void InitializeVoiceAudioComponent(); // Function ConZ.VoiceAudioComponent.InitializeVoiceAudioComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x2529d00
};

// Class ConZ.VoiceChatComponent
// Size: 0x130 (Inherited: 0xb0)
struct UVoiceChatComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	float MaxVoiceDistance; // 0xb8(0x04)
	bool ActiveTalker; // 0xbc(0x01)
	char pad_BD[0x3]; // 0xbd(0x03)
	float StopTalkingTimeThreshold; // 0xc0(0x04)
	char pad_C4[0x6c]; // 0xc4(0x6c)

	void ServerProcessVoiceChatData(struct TArray<char> compressedVoiceDataBuffer); // Function ConZ.VoiceChatComponent.ServerProcessVoiceChatData // (Final|Net|Native|Event|Private|NetServer|Const) // @ game+0x252a110
	bool GetIsActiveTalker(); // Function ConZ.VoiceChatComponent.GetIsActiveTalker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2529cd0
	bool GetCompressedVoiceData(struct TArray<char>& OutBuffer); // Function ConZ.VoiceChatComponent.GetCompressedVoiceData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2529c10
	void GetAllVoiceChatComponentsInRange(struct TArray<struct UVoiceChatComponent*>& pawnList); // Function ConZ.VoiceChatComponent.GetAllVoiceChatComponentsInRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2529b60
	void ClientReceiveVoiceData(struct UVoiceChatComponent* from, struct TArray<char> compressedVoiceDataBuffer); // Function ConZ.VoiceChatComponent.ClientReceiveVoiceData // (Final|Net|Native|Event|Private|NetClient|Const) // @ game+0x2529830
};

// Class ConZ.VoiceDecoder
// Size: 0x38 (Inherited: 0x28)
struct UVoiceDecoder : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	void DecompressVoiceData(struct TArray<char>& InCompressedVoiceData, int32_t InCompressedVoiceBytes, struct TArray<char>& OutDecompressedVoiceData, int32_t& OutDecompressedVoiceBytes); // Function ConZ.VoiceDecoder.DecompressVoiceData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x25299a0
	struct UVoiceDecoder* CreateVoiceDecoder(struct UObject* Owner); // Function ConZ.VoiceDecoder.CreateVoiceDecoder // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2529910
};

// Class ConZ.VoltageMatchingMinigame
// Size: 0x4e8 (Inherited: 0x340)
struct AVoltageMatchingMinigame : AMinigame {
	char pad_340[0x20]; // 0x340(0x20)
	struct USwitchboardComponent* _switchboardComponent; // 0x360(0x08)
	struct UStaticMeshComponent* _bodyMesh; // 0x368(0x08)
	struct UStaticMeshComponent* _leftDoor; // 0x370(0x08)
	struct UStaticMeshComponent* _rightDoor; // 0x378(0x08)
	struct UStaticMeshComponent* _screens; // 0x380(0x08)
	struct UWidgetComponent* _screenWidget; // 0x388(0x08)
	struct UMaterialInstance* _screenMaterialInstance; // 0x390(0x08)
	struct FName _baseColorMaterialParameterName; // 0x398(0x08)
	struct FGameplayTag _masterSwitchTag; // 0x3a0(0x08)
	int32_t _masterSwitchLightMaterialIndex; // 0x3a8(0x04)
	struct FName _masterSwitchLightColorPropertyName; // 0x3ac(0x08)
	struct FLinearColor _masterSwitchLightOffColor; // 0x3b4(0x10)
	struct FLinearColor _masterSwitchLightOnColor; // 0x3c4(0x10)
	float _masterSwitchLightBlinkingFrequency; // 0x3d4(0x04)
	struct UStaticMesh* _neutralMesh; // 0x3d8(0x08)
	struct UStaticMesh* _plusMesh; // 0x3e0(0x08)
	struct UStaticMesh* _minusMesh; // 0x3e8(0x08)
	struct UStaticMesh* _multiplicationMesh; // 0x3f0(0x08)
	struct UStaticMesh* _divisionMesh; // 0x3f8(0x08)
	struct TArray<struct FVoltageMatchingSwitchElementsPairing> _switchPairings; // 0x400(0x10)
	struct TArray<struct UStaticMeshComponent*> _electricalElementsMeshComponents; // 0x410(0x10)
	struct TArray<struct FVoltageMatchingElementRow> _elementRows; // 0x420(0x10)
	float _timeLimit; // 0x430(0x04)
	float _waitingForPlayerTimeLimit; // 0x434(0x04)
	struct UAkAudioEvent* _switchFlipAudioEvent; // 0x438(0x08)
	struct UAkAudioEvent* _failAudioEvent; // 0x440(0x08)
	struct UAkAudioEvent* _successAudioEvent; // 0x448(0x08)
	struct TArray<uint32_t> _additionValues; // 0x450(0x10)
	struct TArray<uint32_t> _subtractionValues; // 0x460(0x10)
	struct TArray<uint32_t> _multiplicationValues; // 0x470(0x10)
	struct TArray<uint32_t> _divisionValues; // 0x480(0x10)
	struct TArray<uint32_t> _inputValues; // 0x490(0x10)
	int32_t _maximumNumberOfElementsPerType; // 0x4a0(0x04)
	int32_t _minActiveSwitches; // 0x4a4(0x04)
	int32_t _maxActiveSwitches; // 0x4a8(0x04)
	char pad_4AC[0x3c]; // 0x4ac(0x3c)
};

// Class ConZ.VoltageMatchingMinigameConfiguration
// Size: 0x58 (Inherited: 0x50)
struct UVoltageMatchingMinigameConfiguration : UMinigameConfiguration {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class ConZ.VoltageMatchingScreensWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UVoltageMatchingScreensWidget : UUserWidget {
	struct UTextBlock* _input; // 0x268(0x08)
	struct UTextBlock* _timer; // 0x270(0x08)
	struct TArray<struct FName> _correctOutputsWidgetNames; // 0x278(0x10)
	struct TArray<struct FName> _currentOutputWidgetNames; // 0x288(0x10)
	struct TArray<struct FVoltageMatchingElementIndicator> _elementIndicators; // 0x298(0x10)
};

// Class ConZ.VoltageMatchingWidget
// Size: 0x288 (Inherited: 0x280)
struct UVoltageMatchingWidget : UMinigameWidget {
	struct UUserWidget* _instructionsOverlay; // 0x280(0x08)
};

// Class ConZ.VolumeZone
// Size: 0x260 (Inherited: 0x258)
struct AVolumeZone : AVolume {
	struct UZoneConfigurationDataAsset* configuration; // 0x258(0x08)
};

// Class ConZ.VoteSystemManager
// Size: 0x2c8 (Inherited: 0x220)
struct AVoteSystemManager : AActor {
	struct TArray<struct UVoteTopic*> VoteTopics; // 0x220(0x10)
	struct UUpdateableNotificationDescription* _activeTopicDesc; // 0x230(0x08)
	struct UVoteTopic* _activeTopic; // 0x238(0x08)
	char pad_240[0x88]; // 0x240(0x88)
};

// Class ConZ.VoteTopic
// Size: 0x48 (Inherited: 0x28)
struct UVoteTopic : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class ConZ.VoteTopic_InitiateCargoDrop
// Size: 0x48 (Inherited: 0x48)
struct UVoteTopic_InitiateCargoDrop : UVoteTopic {
};

// Class ConZ.VoteTopic_SetTimeOfDay
// Size: 0x50 (Inherited: 0x48)
struct UVoteTopic_SetTimeOfDay : UVoteTopic {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class ConZ.VoteTopic_SetWeather
// Size: 0x50 (Inherited: 0x48)
struct UVoteTopic_SetWeather : UVoteTopic {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class ConZ.Warning
// Size: 0x278 (Inherited: 0x268)
struct UWarning : UUserWidget {
	struct TArray<struct FMessageStruct> MessageQueue; // 0x268(0x10)
};

// Class ConZ.WarningNotification
// Size: 0x30 (Inherited: 0x30)
struct UWarningNotification : UConZNotification {
};

// Class ConZ.WarningNotificationDescription
// Size: 0x58 (Inherited: 0x40)
struct UWarningNotificationDescription : UNotificationDescription {
	struct FString Message; // 0x40(0x10)
	float Duration; // 0x50(0x04)
	struct FColor Color; // 0x54(0x04)
};

// Class ConZ.WarningSignWidget
// Size: 0x270 (Inherited: 0x268)
struct UWarningSignWidget : UUserWidget {
	enum class EWarningType _type; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)

	void InitFromWarningType(enum class EWarningType warningType); // Function ConZ.WarningSignWidget.InitFromWarningType // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.WaterDetectionComponent
// Size: 0x110 (Inherited: 0xc8)
struct UWaterDetectionComponent : UItemComponent {
	char pad_C8[0x30]; // 0xc8(0x30)
	float _waterImmersionDepthLimitWhenEquipped; // 0xf8(0x04)
	char pad_FC[0x14]; // 0xfc(0x14)
};

// Class ConZ.WaterSurfaceAssetData
// Size: 0x28 (Inherited: 0x28)
struct UWaterSurfaceAssetData : UAssetUserData {
};

// Class ConZ.WaypointScreenWidget
// Size: 0x288 (Inherited: 0x268)
struct UWaypointScreenWidget : UUserWidget {
	struct UWaypointWidgetBase* WaypointClass; // 0x268(0x08)
	struct TArray<struct UWaypointWidgetBase*> _waypoints; // 0x270(0x10)
	struct UCanvasPanel* WaypointPanel; // 0x280(0x08)
};

// Class ConZ.WaypointWidget
// Size: 0x398 (Inherited: 0x340)
struct UWaypointWidget : UWaypointWidgetBase {
	struct UImage* Emphasis; // 0x340(0x08)
	struct UImage* BarBG; // 0x348(0x08)
	struct UImage* Bar; // 0x350(0x08)
	struct UImage* Background; // 0x358(0x08)
	struct UImage* BigPointer; // 0x360(0x08)
	struct UImage* SmallPointer; // 0x368(0x08)
	struct UImage* Icon; // 0x370(0x08)
	struct UImage* Accent; // 0x378(0x08)
	struct UTextBlock* Label; // 0x380(0x08)
	struct UTextBlock* Distance; // 0x388(0x08)
	struct UMaterialInterface* _barBrushMaterial; // 0x390(0x08)
};

// Class ConZ.WeaponAccuracyGroup
// Size: 0x60 (Inherited: 0x30)
struct UWeaponAccuracyGroup : UDataAsset {
	float NormalStandFrom; // 0x30(0x04)
	float NormalStandTo; // 0x34(0x04)
	float NormalCrouchFrom; // 0x38(0x04)
	float NormalCrouchTo; // 0x3c(0x04)
	float NormalProneFrom; // 0x40(0x04)
	float NormalProneTo; // 0x44(0x04)
	float ScopedStandFrom; // 0x48(0x04)
	float ScopedStandTo; // 0x4c(0x04)
	float ScopedCrouchFrom; // 0x50(0x04)
	float ScopedCrouchTo; // 0x54(0x04)
	float ScopedProneFrom; // 0x58(0x04)
	float ScopedProneTo; // 0x5c(0x04)
};

// Class ConZ.WeaponActionSequence
// Size: 0x68 (Inherited: 0x28)
struct UWeaponActionSequence : UWeaponAction {
	char pad_28[0x18]; // 0x28(0x18)
	struct FBodyWeaponAnimation Animations; // 0x40(0x10)
	bool CanBeInterrupted; // 0x50(0x01)
	char pad_51[0x17]; // 0x51(0x17)

	void SetNextMontageSectionFromPrevious(struct FName previousSection, struct FName NextSection); // Function ConZ.WeaponActionSequence.SetNextMontageSectionFromPrevious // (Final|Native|Public|BlueprintCallable) // @ game+0x2535e60
	void SetNextMontageSection(struct FName NextSection); // Function ConZ.WeaponActionSequence.SetNextMontageSection // (Final|Native|Public|BlueprintCallable) // @ game+0x2535b60
	void OnMontageEnded(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionSequence.OnMontageEnded // (Native|Protected) // @ game+0x25356a0
	void OnMontageBlendingOutStarted(struct UAnimMontage* Montage, bool interrupted); // Function ConZ.WeaponActionSequence.OnMontageBlendingOutStarted // (Native|Protected) // @ game+0x25355d0
	struct UAnimMontage* GetActiveAnimationWeapon(); // Function ConZ.WeaponActionSequence.GetActiveAnimationWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534f10
	struct UAnimMontage* GetActiveAnimationBody(); // Function ConZ.WeaponActionSequence.GetActiveAnimationBody // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2534e50
	float Execute(); // Function ConZ.WeaponActionSequence.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x2534be0
	void End(bool Regular); // Function ConZ.WeaponActionSequence.End // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2534a30
	bool CanInterrupt(); // Function ConZ.WeaponActionSequence.CanInterrupt // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x115be80
	bool CanExecute(); // Function ConZ.WeaponActionSequence.CanExecute // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x25347b0
};

// Class ConZ.WeaponActionRocketLauncherArmSequence
// Size: 0x68 (Inherited: 0x68)
struct UWeaponActionRocketLauncherArmSequence : UWeaponActionSequence {
};

// Class ConZ.WeaponActionRocketLauncherUnarmSequence
// Size: 0x68 (Inherited: 0x68)
struct UWeaponActionRocketLauncherUnarmSequence : UWeaponActionSequence {
};

// Class ConZ.WeaponActionWornOutFiringConditions
// Size: 0x28 (Inherited: 0x28)
struct UWeaponActionWornOutFiringConditions : UWeaponAction {

	bool CanExecuteForWeapon(struct AWeapon* Weapon); // Function ConZ.WeaponActionWornOutFiringConditions.CanExecuteForWeapon // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2534870
};

// Class ConZ.WeaponAmmoDisplayContainerWidget
// Size: 0x290 (Inherited: 0x268)
struct UWeaponAmmoDisplayContainerWidget : UUserWidget {
	struct UUserWidget* _ammoDisplayWidgetClass; // 0x268(0x08)
	struct UVerticalBox* _displayList; // 0x270(0x08)
	struct UVerticalBox* _displayListCentered; // 0x278(0x08)
	char pad_280[0x10]; // 0x280(0x10)

	void Init(struct AWeapon* Weapon, float onScreenDuration, bool displayOnCenter, struct UTexture2D* iconOverride); // Function ConZ.WeaponAmmoDisplayContainerWidget.Init // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x25350a0
};

// Class ConZ.WeaponAmmoDisplayWidget
// Size: 0x278 (Inherited: 0x268)
struct UWeaponAmmoDisplayWidget : UUserWidget {
	struct UTextBlock* _ammoCountText; // 0x268(0x08)
	struct UImage* _ammoIcon; // 0x270(0x08)
};

// Class ConZ.WeaponAnimInstance
// Size: 0x310 (Inherited: 0x2d0)
struct UWeaponAnimInstance : UItemAnimInstance {
	char pad_2D0[0x8]; // 0x2d0(0x08)
	float _owningPrisonerWeaponBreathFactor; // 0x2d8(0x04)
	float _owningPrisonerWeaponAimDownTheSightsStillBlendFactor; // 0x2dc(0x04)
	bool _isOwningPrisonerAimingDownTheSights; // 0x2e0(0x01)
	bool _isChamberOpened; // 0x2e1(0x01)
	char pad_2E2[0x2]; // 0x2e2(0x02)
	int32_t _ammoCount; // 0x2e4(0x04)
	int32_t _loadedAmmoCount; // 0x2e8(0x04)
	bool _shouldPlayChamberOpenedIdle; // 0x2ec(0x01)
	bool _isInGameEvent; // 0x2ed(0x01)
	enum class EWeaponMalfunction _malfunction; // 0x2ee(0x01)
	bool _useFiringModeBoneRotation; // 0x2ef(0x01)
	struct FRotator _firingModeBoneRotation; // 0x2f0(0x0c)
	float _hideBoneCurveValue; // 0x2fc(0x04)
	float _zeroRange; // 0x300(0x04)
	enum class EWeaponDownTheSightsMode _aiminDownTheSightsMode; // 0x304(0x01)
	bool _hasUnusedLoadedAmmo; // 0x305(0x01)
	char pad_306[0xa]; // 0x306(0x0a)
};

// Class ConZ.WeaponAttachmentMagazine
// Size: 0xaa0 (Inherited: 0x9e0)
struct AWeaponAttachmentMagazine : ASkeletalWeaponAttachment {
	struct FGameplayTagContainer AmmunitionTags; // 0x9e0(0x20)
	bool RequiresFullCapacityOnLoad; // 0xa00(0x01)
	char pad_A01[0x7]; // 0xa01(0x07)
	struct AAmmunitionItem* DefaultFillAmmo; // 0xa08(0x08)
	int32_t InitialAmmo; // 0xa10(0x04)
	char pad_A14[0x4]; // 0xa14(0x04)
	struct TArray<struct FAmmunitionData> _ammoData; // 0xa18(0x10)
	struct TArray<struct FAmmunitionData> _ammoOwnerHelper; // 0xa28(0x10)
	char pad_A38[0x4]; // 0xa38(0x04)
	int32_t _capacity; // 0xa3c(0x04)
	char pad_A40[0x8]; // 0xa40(0x08)
	struct TArray<struct UStaticMeshComponent*> _cartridgeMeshComponents; // 0xa48(0x10)
	struct TArray<struct UItemActionSequenceLoadMagazine*> _loadAmmoSequences; // 0xa58(0x10)
	struct URangedWeaponsSkill* _rangedWeaponsSkillClass; // 0xa68(0x08)
	float _loadMagazineActionSpeedMultiplier; // 0xa70(0x04)
	char pad_A74[0x4]; // 0xa74(0x04)
	struct TSoftObjectPtr<UTexture2D> _inventoryIconFull; // 0xa78(0x28)

	void UpdateAmmunitionMeshes(struct TArray<int32_t>& ammoIndices, bool showReversed); // Function ConZ.WeaponAttachmentMagazine.UpdateAmmunitionMeshes // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x253a2f0
	void SetAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.SetAmmo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x253a120
	void Server_InsertCartridgeIntoMagazine(struct AAmmunitionItem* ammo); // Function ConZ.WeaponAttachmentMagazine.Server_InsertCartridgeIntoMagazine // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x2539ec0
	void Server_InsertAmmoSingle(struct AAmmunitionItem* ammoItem); // Function ConZ.WeaponAttachmentMagazine.Server_InsertAmmoSingle // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2539da0
	void Server_EmptyAmmo(); // Function ConZ.WeaponAttachmentMagazine.Server_EmptyAmmo // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc100
	struct FAmmunitionData RemoveAmmo(); // Function ConZ.WeaponAttachmentMagazine.RemoveAmmo // (Native|Public|BlueprintCallable) // @ game+0x2539cc0
	void OnRep_AmmoOwnerHelper(); // Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoOwnerHelper // (Final|Native|Private) // @ game+0x2539c40
	void OnRep_AmmoData(); // Function ConZ.WeaponAttachmentMagazine.OnRep_AmmoData // (Final|Native|Private) // @ game+0x2539c20
	void OnAmmoChangedEvent(); // Function ConZ.WeaponAttachmentMagazine.OnAmmoChangedEvent // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void Multicast_SetLoadedVariables(struct TArray<struct FAmmunitionData> ammo); // Function ConZ.WeaponAttachmentMagazine.Multicast_SetLoadedVariables // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2539b60
	bool IsAmmoSupported(struct AAmmunitionItem* ammo); // Function ConZ.WeaponAttachmentMagazine.IsAmmoSupported // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x2539a30
	struct AProjectile* GetTopmostProjectileClass(); // Function ConZ.WeaponAttachmentMagazine.GetTopmostProjectileClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25398f0
	bool GetTopmostAmmunitionData(struct FAmmunitionData& Data); // Function ConZ.WeaponAttachmentMagazine.GetTopmostAmmunitionData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539840
	int32_t GetCapacity(); // Function ConZ.WeaponAttachmentMagazine.GetCapacity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25394c0
	int32_t GetAmmoCount(); // Function ConZ.WeaponAttachmentMagazine.GetAmmoCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539490
	void GetAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.GetAmmo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x25393e0
	void FillWithDefaultAmmo(int32_t Count); // Function ConZ.WeaponAttachmentMagazine.FillWithDefaultAmmo // (Final|Native|Public|BlueprintCallable) // @ game+0x2539350
	void EmptyAmmo(); // Function ConZ.WeaponAttachmentMagazine.EmptyAmmo // (Final|Native|Public|BlueprintCallable) // @ game+0x2539210
	void DestroyAmmunitionMeshes(); // Function ConZ.WeaponAttachmentMagazine.DestroyAmmunitionMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x25391f0
	void CreateAmmunitionMeshes(); // Function ConZ.WeaponAttachmentMagazine.CreateAmmunitionMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x25391d0
	void AddAmmoSingle(struct FAmmunitionData& ammo); // Function ConZ.WeaponAttachmentMagazine.AddAmmoSingle // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2539060
	void AddAmmo(struct TArray<struct FAmmunitionData>& ammo); // Function ConZ.WeaponAttachmentMagazine.AddAmmo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2538fb0
};

// Class ConZ.WeaponAttachmentAutoCrossbowMagazine
// Size: 0xaa0 (Inherited: 0xaa0)
struct AWeaponAttachmentAutoCrossbowMagazine : AWeaponAttachmentMagazine {

	float GetFollowerBoneLocationOffset(); // Function ConZ.WeaponAttachmentAutoCrossbowMagazine.GetFollowerBoneLocationOffset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539680
};

// Class ConZ.WeaponAttachmentBayonet
// Size: 0x9e0 (Inherited: 0x9e0)
struct AWeaponAttachmentBayonet : AWeaponAttachment {
};

// Class ConZ.WeaponAttachmentCharm
// Size: 0x9f0 (Inherited: 0x9e0)
struct AWeaponAttachmentCharm : ASkeletalWeaponAttachment {
	float _decayMultiplierForNonDLCPlayer; // 0x9e0(0x04)
	char pad_9E4[0xc]; // 0x9e4(0x0c)
};

// Class ConZ.WeaponAttachmentFlashlight
// Size: 0xa10 (Inherited: 0x9e0)
struct AWeaponAttachmentFlashlight : AWeaponAttachment {
	struct FName _lightSocketName; // 0x9e0(0x08)
	struct UBasicGameResourceSlotItemComponent* _batterySlot; // 0x9e8(0x08)
	struct UResourcePoweredLightItemComponent* _batteryPoweredLightItemComponent; // 0x9f0(0x08)
	char pad_9F8[0x18]; // 0x9f8(0x18)
};

// Class ConZ.WeaponAttachmentGhillie
// Size: 0xa30 (Inherited: 0x9e0)
struct AWeaponAttachmentGhillie : AWeaponAttachment {
	struct USkeletalMeshComponent* EquippedSkeletalMeshComponent; // 0x9d8(0x08)
	struct TMap<struct AWeapon*, struct FMeshMaterialPair> WeaponToSkeletalMeshMapping; // 0x9e0(0x50)
};

// Class ConZ.WeaponAttachmentSight
// Size: 0x9e0 (Inherited: 0x9e0)
struct AWeaponAttachmentSight : AWeaponAttachment {
	struct UWeaponSightItemComponent* _weaponSightItemComponent; // 0x9d8(0x08)
};

// Class ConZ.WeaponAttachmentScope
// Size: 0x9f0 (Inherited: 0x9e0)
struct AWeaponAttachmentScope : AWeaponAttachmentSight {
	struct UWeaponScopeItemComponent* _weaponScopeItemComponent; // 0x9e0(0x08)
	char pad_9E8[0x8]; // 0x9e8(0x08)
};

// Class ConZ.WeaponAttachmentNightVisionScope
// Size: 0xa00 (Inherited: 0x9f0)
struct AWeaponAttachmentNightVisionScope : AWeaponAttachmentScope {
	struct UBasicGameResourceSlotItemComponent* _batterySlot; // 0x9f0(0x08)
	char pad_9F8[0x8]; // 0x9f8(0x08)

	void Server_ToggleActivity(); // Function ConZ.WeaponAttachmentNightVisionScope.Server_ToggleActivity // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x23dc100
};

// Class ConZ.WeaponAttachmentScopeRail
// Size: 0x9e0 (Inherited: 0x9e0)
struct AWeaponAttachmentScopeRail : AWeaponAttachment {
	struct FName ScopeSocketName; // 0x9d8(0x08)
};

// Class ConZ.WeaponAttachmentSuppressor
// Size: 0x9f0 (Inherited: 0x9e0)
struct AWeaponAttachmentSuppressor : AWeaponAttachment {
	struct FName MuzzleSocketName; // 0x9d8(0x08)
	float NoiseMultiplier; // 0x9e0(0x04)
	bool IsImprovised; // 0x9e4(0x01)
	char pad_9ED[0x3]; // 0x9ed(0x03)

	void OnAttachedWeaponShot(); // Function ConZ.WeaponAttachmentSuppressor.OnAttachedWeaponShot // (Final|Native|Private) // @ game+0x2539c00
};

// Class ConZ.WeaponAttachmentUniversalFlashlight
// Size: 0xa60 (Inherited: 0xa10)
struct AWeaponAttachmentUniversalFlashlight : AWeaponAttachmentFlashlight {
	struct TMap<struct TSoftClassPtr<UObject>, struct UStaticMesh*> WeaponToStaticMeshMapping; // 0xa08(0x50)
};

// Class ConZ.WeaponAutoCrossbow
// Size: 0x4430 (Inherited: 0x3010)
struct AWeaponAutoCrossbow : AWeapon {
	struct UWeaponStateFiring* FireState; // 0x3010(0x08)
	float _muzzleVelocity; // 0x3018(0x04)
	float _probabilityForLaughingSoundEffect; // 0x301c(0x04)
	struct FCharacterAndItemAnimation _autoCrossbowFireAnimation; // 0x3020(0x10)
	struct UAkAudioEvent* _autoCrossbowLaughingAudioEvent; // 0x3030(0x08)
	struct UWeaponState* _autoCrossbowActiveState; // 0x3038(0x08)
	char pad_3040[0x13a0]; // 0x3040(0x13a0)
	struct UGameResourceType* _fuelType; // 0x43e0(0x08)
	struct FGameplayTagContainer _inFuelingSocketTypes; // 0x43e8(0x20)
	float _maxFuelAmount; // 0x4408(0x04)
	float _fuelUsagePerHour; // 0x440c(0x04)
	float _fuelUsagePerHourWhenDamaged; // 0x4410(0x04)
	float _fuelFillingDurationPerAmountFilled; // 0x4414(0x04)
	float _fuelFillingDurationPerAmountFilledWhenDamaged; // 0x4418(0x04)
	float _fuelFillingExperiencePerAmount; // 0x441c(0x04)
	float _currentFuelAmount; // 0x4420(0x04)
	char pad_4424[0xc]; // 0x4424(0x0c)

	void SetFollowerBoneLocationOffset(float LocationOffset); // Function ConZ.WeaponAutoCrossbow.SetFollowerBoneLocationOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x253a250
	void Server_PlayLaughingSoundEffect(); // Function ConZ.WeaponAutoCrossbow.Server_PlayLaughingSoundEffect // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2539f50
	void Server_HandleFiringEffects(bool Active); // Function ConZ.WeaponAutoCrossbow.Server_HandleFiringEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2539d10
	void Multicast_PlayLaughingSoundEffect(); // Function ConZ.WeaponAutoCrossbow.Multicast_PlayLaughingSoundEffect // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24731d0
	void Multicast_HandleFiringEffects(bool Active); // Function ConZ.WeaponAutoCrossbow.Multicast_HandleFiringEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2539ad0
};

// Class ConZ.WeaponAutoCrossbowAnimInstance
// Size: 0x320 (Inherited: 0x310)
struct UWeaponAutoCrossbowAnimInstance : UWeaponAnimInstance {
	float _followerBoneLocationOffset; // 0x310(0x04)
	char pad_314[0xc]; // 0x314(0x0c)
};

// Class ConZ.WeaponBow
// Size: 0x3450 (Inherited: 0x3010)
struct AWeaponBow : AWeapon {
	struct FBodyWeaponAnimation InsertArrowAnimations; // 0x3008(0x10)
	struct FBodyWeaponAnimation RemoveArrowAnimations; // 0x3018(0x10)
	struct FBodyWeaponAnimation UnableToDrawAnimations; // 0x3028(0x10)
	struct FBodyWeaponAnimation DrawAnimations2[0x3]; // 0x3038(0x30)
	struct FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations2[0x3]; // 0x3068(0x30)
	struct FBodyWeaponAnimation CancelDrawAnimations2[0x3]; // 0x3098(0x30)
	struct FBodyWeaponAnimation LooseAnimations2[0x3]; // 0x30c8(0x30)
	struct FBodyWeaponAnimation LooseLastShotAnimations2[0x3]; // 0x30f8(0x30)
	struct FWeaponBowAimOffsets AimOffsets[0x7]; // 0x3128(0xa8)
	struct FWeaponBowArmsShake ArmsShakeAnimamtion[0x3]; // 0x31d0(0x90)
	struct FBodyWeaponAnimation DrawAnimations; // 0x3260(0x10)
	struct FBodyWeaponAnimation DrawWhileAnticipatingDrawAnimations; // 0x3270(0x10)
	struct FBodyWeaponAnimation CancelDrawAnimations; // 0x3280(0x10)
	struct FBodyWeaponAnimation LooseAnimations; // 0x3290(0x10)
	struct FBodyWeaponAnimation LooseLastShotAnimations; // 0x32a0(0x10)
	struct UAnimSequenceBase* WeaponAimingDownTheSightsAnimationPose; // 0x32b0(0x08)
	struct UAnimSequenceBase* WeaponAimingDownTheSightsStillAnimationPose; // 0x32b8(0x08)
	struct UWeaponState* AnticipateDrawState2; // 0x32c0(0x08)
	struct UWeaponState* DrawState3; // 0x32c8(0x08)
	struct UWeaponState* CancelFiringState; // 0x32d0(0x08)
	struct UWeaponState* AnticipateFiringState; // 0x32d8(0x08)
	struct UWeaponState* FireState; // 0x32e0(0x08)
	struct UWeaponState* FireAndInsertArrowState; // 0x32e8(0x08)
	char pad_32F8[0x10]; // 0x32f8(0x10)
	struct UAkAudioEvent* _fireNoArrowAudioEvent; // 0x3308(0x08)
	struct FName _arrowSocketName; // 0x3310(0x08)
	float _muzzleVelocity; // 0x3318(0x04)
	float _drawWeight; // 0x331c(0x04)
	float _compoundBowFullDrawHoldTime; // 0x3320(0x04)
	float _armShakeTimerDecreaseRate; // 0x3324(0x04)
	float _damageOnUsage; // 0x3328(0x04)
	char pad_332C[0x4]; // 0x332c(0x04)
	struct UWeaponState* _bowActiveState2; // 0x3330(0x08)
	struct UWeaponState* _bowInsertArrowState; // 0x3338(0x08)
	struct UWeaponState* _bowRemoveArrowState; // 0x3340(0x08)
	struct UWeaponStateFiring* _bowFiringState2; // 0x3348(0x08)
	char pad_3350[0x2c]; // 0x3350(0x2c)
	struct FWeaponBowStateDataReplicated _weaponBowStateDataReplicated; // 0x337c(0x0c)
	struct UStaticMeshComponent* _arrowMeshComponent; // 0x3388(0x08)
	struct FProjectileArrowData _projectileArrowData; // 0x3390(0x20)
	char pad_33B0[0x50]; // 0x33b0(0x50)
	bool _isCompound; // 0x3400(0x01)
	char pad_3401[0x7]; // 0x3401(0x07)
	struct UStaticMeshComponent* _handTriggerMeshComponent; // 0x3408(0x08)
	bool _ignoreArrowStiffness; // 0x3410(0x01)
	char pad_3411[0x3]; // 0x3411(0x03)
	float _letOff; // 0x3414(0x04)
	struct FName _handTriggerBoneName; // 0x3418(0x08)
	char pad_3420[0x30]; // 0x3420(0x30)

	void SetDrawWeight(float drawWeight); // Function ConZ.WeaponBow.SetDrawWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x253a1d0
	void Server_SetPendingArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.Server_SetPendingArrow // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x253a090
	void Server_SetDrawAmount(float drawAmount); // Function ConZ.WeaponBow.Server_SetDrawAmount // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253a000
	void Server_SetBowStateData(struct FWeaponBowStateDataReplicated State); // Function ConZ.WeaponBow.Server_SetBowStateData // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2539f70
	void Server_RemoveArrow(); // Function ConZ.WeaponBow.Server_RemoveArrow // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x24731d0
	void Server_InsertArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.Server_InsertArrow // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2539e30
	void ReloadArrow(); // Function ConZ.WeaponBow.ReloadArrow // (Final|Native|Public|BlueprintCallable) // @ game+0x2539ca0
	void OnRep_BowStateData(); // Function ConZ.WeaponBow.OnRep_BowStateData // (Final|Native|Private) // @ game+0x2539c80
	void OnRep_Arrow(); // Function ConZ.WeaponBow.OnRep_Arrow // (Final|Native|Private) // @ game+0x2539c60
	void GotoInsertArrowState(); // Function ConZ.WeaponBow.GotoInsertArrowState // (Final|Native|Public|BlueprintCallable) // @ game+0x2539a10
	struct AAmmunitionArrow* GetPendingArrow(); // Function ConZ.WeaponBow.GetPendingArrow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539770
	float GetOwnersTotalDrawWeight(); // Function ConZ.WeaponBow.GetOwnersTotalDrawWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539710
	float GetOwnersDrawWeightByStrength(); // Function ConZ.WeaponBow.GetOwnersDrawWeightByStrength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25396e0
	float GetOwnersDrawWeightBySkill(); // Function ConZ.WeaponBow.GetOwnersDrawWeightBySkill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25396b0
	float GetDrawWeightDefaultsByStrength(float Strength); // Function ConZ.WeaponBow.GetDrawWeightDefaultsByStrength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x25395f0
	float GetDrawWeight(); // Function ConZ.WeaponBow.GetDrawWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25395c0
	float GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight); // Function ConZ.WeaponBow.GetDrawPercentageDefaultsForParameters // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x25394f0
	void EquipArrowByClass(struct UObject* arrowClass); // Function ConZ.WeaponBow.EquipArrowByClass // (Final|Native|Public|BlueprintCallable) // @ game+0x25392c0
	void EquipArrow(struct AAmmunitionArrow* arrow); // Function ConZ.WeaponBow.EquipArrow // (Final|Native|Public|BlueprintCallable) // @ game+0x2539230
	bool CanInsertArrow(struct AAmmunitionArrow* arrowItem); // Function ConZ.WeaponBow.CanInsertArrow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2539130
};

// Class ConZ.WeaponBowAnimInstance
// Size: 0x330 (Inherited: 0x310)
struct UWeaponBowAnimInstance : UWeaponAnimInstance {
	float _armsShakeValue; // 0x310(0x04)
	bool _useArrowLookAt; // 0x314(0x01)
	char pad_315[0x3]; // 0x315(0x03)
	struct UAnimSequenceBase* _aimingDownTheSightsAnimation; // 0x318(0x08)
	struct UAnimSequenceBase* _aimingDownTheSightsStillAnimation; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)
};

// Class ConZ.WeaponCrossbow
// Size: 0x3060 (Inherited: 0x3010)
struct AWeaponCrossbow : AWeapon {
	struct UWeaponStateFiring* FireState; // 0x3008(0x08)
	struct UWeaponState* FireAndInsertArrowState; // 0x3010(0x08)
	float _muzzleVelocity; // 0x3018(0x04)
	struct FCharacterAndItemAnimation _crossbowFireAnimation; // 0x3020(0x10)
	struct UAkAudioEvent* _crossbowFireAudioEvent; // 0x3030(0x08)
	struct UAkAudioEvent* _crossbowDryFireAudioEvent; // 0x3038(0x08)
	struct UWeaponState* _crossbowActiveState; // 0x3040(0x08)
	bool _isCocked; // 0x3048(0x01)
	char pad_304D[0x13]; // 0x304d(0x13)

	void SetIsCocked(bool Value); // Function ConZ.WeaponCrossbow.SetIsCocked // (Final|Native|Public|BlueprintCallable) // @ game+0x253e420
	void Server_HandleFiringEffects(bool shotFired); // Function ConZ.WeaponCrossbow.Server_HandleFiringEffects // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e180
	void NetMulticast_SetLoadedVariablesForCrossbow(bool isCocked); // Function ConZ.WeaponCrossbow.NetMulticast_SetLoadedVariablesForCrossbow // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2539ad0
	void Multicast_HandleFiringEffects(bool shotFired); // Function ConZ.WeaponCrossbow.Multicast_HandleFiringEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x253dbe0
	bool GetIsCocked(); // Function ConZ.WeaponCrossbow.GetIsCocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253d9f0
	enum class EWeaponCrossbowDrawCategory GetDrawCategory(); // Function ConZ.WeaponCrossbow.GetDrawCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253d9c0
	void EquipArrowByClass(struct UObject* arrowClass); // Function ConZ.WeaponCrossbow.EquipArrowByClass // (Final|Native|Public|BlueprintCallable) // @ game+0x253d930
};

// Class ConZ.WeaponCrossbowAnimInstance
// Size: 0x320 (Inherited: 0x310)
struct UWeaponCrossbowAnimInstance : UWeaponAnimInstance {
	bool _isCocked; // 0x310(0x01)
	char pad_311[0xf]; // 0x311(0x0f)
};

// Class ConZ.WeaponDamageGroup
// Size: 0x50 (Inherited: 0x30)
struct UWeaponDamageGroup : UDataAsset {
	float Head; // 0x30(0x04)
	float Neck; // 0x34(0x04)
	float Torso; // 0x38(0x04)
	float ArmUpper; // 0x3c(0x04)
	float Abdomen; // 0x40(0x04)
	float LegUpper; // 0x44(0x04)
	float OtherLimbs; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class ConZ.WeaponDamageStatics
// Size: 0x28 (Inherited: 0x28)
struct UWeaponDamageStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.WeaponDisassemblyToolItemTag
// Size: 0x30 (Inherited: 0x30)
struct UWeaponDisassemblyToolItemTag : UBaseItemTag {
};

// Class ConZ.WeaponFlamethrower
// Size: 0x3100 (Inherited: 0x3010)
struct AWeaponFlamethrower : AWeapon {
	struct UFlamethrowerComponent* _flamethrowerComponent; // 0x3010(0x08)
	float _turnOffDelay; // 0x3018(0x04)
	char pad_301C[0xc]; // 0x301c(0x0c)
	float _sendDataRPCInterval; // 0x3028(0x04)
	char pad_302C[0x54]; // 0x302c(0x54)
	float _dataToSendRetainTime; // 0x3080(0x04)
	char pad_3084[0x4]; // 0x3084(0x04)
	struct UGameResourceType* _fuelType; // 0x3088(0x08)
	float _fuelDensity; // 0x3090(0x04)
	float _maxFuelAmount; // 0x3094(0x04)
	float _initialFuelAmount; // 0x3098(0x04)
	float _fuelUsagePerHour; // 0x309c(0x04)
	struct UAnimMontage* _fuelFillingMontage; // 0x30a0(0x08)
	struct FGameplayTagContainer _inFuelingSocketTypes; // 0x30a8(0x20)
	float _fuelFillingDurationPerAmountFilled; // 0x30c8(0x04)
	float _fuelFillingExperiencePerAmount; // 0x30cc(0x04)
	struct UAkAudioEvent* _fuelStartFillingAudioEvent; // 0x30d0(0x08)
	struct UAkAudioEvent* _fuelStopFillingAudioEvent; // 0x30d8(0x08)
	struct FCharacterAndItemAnimation _checkFuelStatus; // 0x30e0(0x10)
	float _currentFuelAmount; // 0x30f0(0x04)
	char pad_30F4[0xc]; // 0x30f4(0x0c)

	void NetMulticast_SetFlamethrowerActive(bool Active); // Function ConZ.WeaponFlamethrower.NetMulticast_SetFlamethrowerActive // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x253dbe0
};

// Class ConZ.WeaponHandler
// Size: 0x28 (Inherited: 0x28)
struct UWeaponHandler : UInterface {

	void SetPendingReload(bool Value); // Function ConZ.WeaponHandler.SetPendingReload // (Native|Public|BlueprintCallable) // @ game+0x253e540
	void SetPendingFire(bool Value); // Function ConZ.WeaponHandler.SetPendingFire // (Native|Public|BlueprintCallable) // @ game+0x253e4b0
	void ReloadWeaponInHands(); // Function ConZ.WeaponHandler.ReloadWeaponInHands // (Native|Public|BlueprintCallable) // @ game+0x253e140
	void ReloadWeapon(struct AWeapon* Weapon, struct FWeaponReloadData& reloadData); // Function ConZ.WeaponHandler.ReloadWeapon // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x253e040
	bool IsFireShotAuthority(); // Function ConZ.WeaponHandler.IsFireShotAuthority // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253dbb0
	bool HasInfiniteAmmo(); // Function ConZ.WeaponHandler.HasInfiniteAmmo // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253dab0
	enum class EPrisonerGroundStance GetStance2(); // Function ConZ.WeaponHandler.GetStance2 // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253da80
	bool GetPendingReload(); // Function ConZ.WeaponHandler.GetPendingReload // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253da50
	bool GetPendingFire(); // Function ConZ.WeaponHandler.GetPendingFire // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253da20
};

// Class ConZ.WeaponHolsterItem
// Size: 0xa90 (Inherited: 0xa50)
struct AWeaponHolsterItem : AClothesItem {
	struct AItem* _holsteredWeaponRep; // 0xa50(0x08)
	struct FName _maxLocationSocketName; // 0xa58(0x08)
	struct FName _minLocationSocketName; // 0xa60(0x08)
	struct FName _fatLocationSocketName; // 0xa68(0x08)
	struct FName _muscleLocationSocketName; // 0xa70(0x08)
	struct FName _leanLocationSocketName; // 0xa78(0x08)
	struct FName _staticMeshSocketName; // 0xa80(0x08)
	char pad_A88[0x8]; // 0xa88(0x08)

	void OnRep_HolsteredWeapon(); // Function ConZ.WeaponHolsterItem.OnRep_HolsteredWeapon // (Final|Native|Private) // @ game+0x253e000
	bool HolsterWeapon(struct AItem* Weapon); // Function ConZ.WeaponHolsterItem.HolsterWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x253dae0
};

// Class ConZ.WeaponItemEntitySetup
// Size: 0x90 (Inherited: 0x90)
struct UWeaponItemEntitySetup : UItemEntitySetup {
};

// Class ConZ.WeaponScopeItemComponent
// Size: 0x270 (Inherited: 0x120)
struct UWeaponScopeItemComponent : UScopeableItemComponent {
	struct FVector ScopeViewOffset; // 0x120(0x0c)
	struct FName IronSightsViewSocket; // 0x12c(0x08)
	char pad_134[0xc]; // 0x134(0x0c)
	struct UMaterialInterface* ScopeLensPostProcess; // 0x140(0x08)
	struct FName LensZoomParameterName; // 0x148(0x08)
	bool FrontFocalPlane; // 0x150(0x01)
	bool HasCrosshairParallax; // 0x151(0x01)
	char pad_152[0x6]; // 0x152(0x06)
	struct UStaticMesh* ScopeViewMesh; // 0x158(0x08)
	struct UStaticMesh* ScopeViewLensMesh; // 0x160(0x08)
	bool _canToggleDownTheSightsMode; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
	struct UTextureRenderTarget2D* TextRenderTarget; // 0x170(0x08)
	int32_t WindageInitialOffset; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct UAkAudioEvent* WindageClickAudioEvent; // 0x180(0x08)
	struct UStaticMeshComponent* _scopeViewMesh; // 0x188(0x08)
	struct UStaticMeshComponent* _scopeViewLensMesh; // 0x190(0x08)
	float _fakeGlassMinOpacity; // 0x198(0x04)
	char pad_19C[0x60]; // 0x19c(0x60)
	float _displayBrightnessMultiplier; // 0x1fc(0x04)
	char pad_200[0x70]; // 0x200(0x70)

	void Server_SetWindage(int32_t Windage); // Function ConZ.WeaponScopeItemComponent.Server_SetWindage // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2522a60
	void Server_SetDisplayBrightnessMultiplier(float Value); // Function ConZ.WeaponScopeItemComponent.Server_SetDisplayBrightnessMultiplier // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x2543670
	void Client_SetLoadedVariables(int32_t Windage, float displayBrightnessMultiplier); // Function ConZ.WeaponScopeItemComponent.Client_SetLoadedVariables // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x25433e0
};

// Class ConZ.WeaponNightVisionScopeItemComponent
// Size: 0x310 (Inherited: 0x270)
struct UWeaponNightVisionScopeItemComponent : UWeaponScopeItemComponent {
	struct UAkAudioEvent* _activatedSound; // 0x270(0x08)
	struct UAkAudioEvent* _deactivatedSound; // 0x278(0x08)
	struct FRuntimeFloatCurve _batteryPercentageToGlitchStrengthCurve; // 0x280(0x88)
	char pad_308[0x8]; // 0x308(0x08)

	void OnBatteryDeactivated(struct UActorComponent* containerComponent); // Function ConZ.WeaponNightVisionScopeItemComponent.OnBatteryDeactivated // (Final|Native|Public) // @ game+0x253df70
	void OnBatteryActivated(struct UActorComponent* batteryComponent, bool bReset); // Function ConZ.WeaponNightVisionScopeItemComponent.OnBatteryActivated // (Final|Native|Public) // @ game+0x253dea0
};

// Class ConZ.WeaponPaintjobCommonData
// Size: 0x40 (Inherited: 0x30)
struct UWeaponPaintjobCommonData : UDataAsset {
	struct TArray<struct FWeaponPaintjobPatternParams> Patterns; // 0x30(0x10)
};

// Class ConZ.WeaponPaintjobItemComponent
// Size: 0x120 (Inherited: 0xc8)
struct UWeaponPaintjobItemComponent : UItemComponent {
	struct TArray<struct FWeaponPaintjobPatternParams> _patterns; // 0xc8(0x10)
	float _paintjobDecayDurationSeconds; // 0xd8(0x04)
	char pad_DC[0x44]; // 0xdc(0x44)

	void OnAttachmentsChanged(struct AWeapon* sender, struct AWeaponAttachment* Attachment); // Function ConZ.WeaponPaintjobItemComponent.OnAttachmentsChanged // (Final|Native|Private) // @ game+0x253ddd0
	void NetMulticast_SetPatternIndex(int32_t Index); // Function ConZ.WeaponPaintjobItemComponent.NetMulticast_SetPatternIndex // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x25116a0
	void NetMulticast_SetColorAtIndex(int32_t Index, struct FColor Value); // Function ConZ.WeaponPaintjobItemComponent.NetMulticast_SetColorAtIndex // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x25115d0
	void NetMulticast_RefreshColor(); // Function ConZ.WeaponPaintjobItemComponent.NetMulticast_RefreshColor // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2353de0
	void NetMulticast_ClearPaintjob(struct FColor NewColor); // Function ConZ.WeaponPaintjobItemComponent.NetMulticast_ClearPaintjob // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x2511550
};

// Class ConZ.WeaponRecoilGroup
// Size: 0x40 (Inherited: 0x30)
struct UWeaponRecoilGroup : UDataAsset {
	float Up; // 0x30(0x04)
	float Down; // 0x34(0x04)
	float Left; // 0x38(0x04)
	float Right; // 0x3c(0x04)
};

// Class ConZ.WeaponRevolver
// Size: 0x3070 (Inherited: 0x3010)
struct AWeaponRevolver : AWeapon {
	struct UWeaponStateFiring* FireState; // 0x3008(0x08)
	struct UWeaponState* _revolverActiveState; // 0x3010(0x08)
	struct FCharacterAndItemAnimation _fireAnimation; // 0x3018(0x10)
	struct FCharacterAndItemAnimation _dryFireAnimation; // 0x3028(0x10)
	struct FCharacterAndItemAnimation _rollDrumAnimation; // 0x3038(0x10)
	struct UAnimMontage* _russianRouletteMontage; // 0x3048(0x08)
	float _drumRotationOffset; // 0x3050(0x04)
	int32_t _firingIndex; // 0x3054(0x04)
	char pad_3060[0x8]; // 0x3060(0x08)
	float _drumRotationInterpolatorSpeed; // 0x3068(0x04)
	enum class ERotationDirection _drumRotationDirection; // 0x306c(0x01)
	char pad_306D[0x3]; // 0x306d(0x03)

	void Server_UseAmmoAtIndex(int32_t Index); // Function ConZ.WeaponRevolver.Server_UseAmmoAtIndex // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e390
	void Server_RollDrum(int32_t Index); // Function ConZ.WeaponRevolver.Server_RollDrum // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e2e0
	void Server_PlayFiringAnimation(int32_t ammoIndex, bool dryFire); // Function ConZ.WeaponRevolver.Server_PlayFiringAnimation // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e210
	void NetMulticast_SetLoadedVariablesForRevolver(int32_t ammoIndex); // Function ConZ.WeaponRevolver.NetMulticast_SetLoadedVariablesForRevolver // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x253dd40
	void NetMulticast_PlayFiringAnimation(int32_t ammoIndex, bool dryFire); // Function ConZ.WeaponRevolver.NetMulticast_PlayFiringAnimation // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x253dc70
};

// Class ConZ.WeaponRevolverAnimInstance
// Size: 0x320 (Inherited: 0x310)
struct UWeaponRevolverAnimInstance : UWeaponAnimInstance {
	bool _useDrumRotation; // 0x310(0x01)
	char pad_311[0x3]; // 0x311(0x03)
	float _drumRotation; // 0x314(0x04)
	char pad_318[0x8]; // 0x318(0x08)
};

// Class ConZ.WeaponRocketLauncher
// Size: 0x3070 (Inherited: 0x3010)
struct AWeaponRocketLauncher : AWeapon {
	struct UWeaponState* ArmState; // 0x3008(0x08)
	struct UWeaponState* UnarmState; // 0x3010(0x08)
	struct UWeaponState* ArmedState; // 0x3018(0x08)
	struct UWeaponActionRocketLauncherArmSequence* _armActionSequenceClass; // 0x3020(0x08)
	struct UWeaponActionRocketLauncherUnarmSequence* _unarmActionSequenceClass; // 0x3028(0x08)
	bool _needsToBeArmedToFire; // 0x3030(0x01)
	bool _spawnWithLoadedProjectile; // 0x3031(0x01)
	struct FName _backMuzzlerSocketName; // 0x3034(0x08)
	struct UParticleSystem* _baskMuzzlePS; // 0x3040(0x08)
	struct UWeaponActionRocketLauncherArmSequence* _armActionSequence; // 0x3048(0x08)
	struct UWeaponActionRocketLauncherUnarmSequence* _unarmActionSequence; // 0x3050(0x08)
	struct UWeaponState* _unarmedState; // 0x3058(0x08)
	bool _isArmed; // 0x3060(0x01)
	char pad_3063[0xd]; // 0x3063(0x0d)

	void Server_Unarm(); // Function ConZ.WeaponRocketLauncher.Server_Unarm // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e370
	void Server_Arm(); // Function ConZ.WeaponRocketLauncher.Server_Arm // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x253e160
	void OnRep_IsArmed(); // Function ConZ.WeaponRocketLauncher.OnRep_IsArmed // (Final|Native|Private) // @ game+0x253e020
	void OnRep_ActiveState(); // Function ConZ.WeaponRocketLauncher.OnRep_ActiveState // (Final|Native|Private) // @ game+0xbbc480
	void NetMulticast_Unarm(); // Function ConZ.WeaponRocketLauncher.NetMulticast_Unarm // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x24731d0
	void NetMulticast_Arm(); // Function ConZ.WeaponRocketLauncher.NetMulticast_Arm // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x2539f50
	bool IsArmed(); // Function ConZ.WeaponRocketLauncher.IsArmed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x253db80
};

// Class ConZ.WeaponRocketLauncherAnimInstance
// Size: 0x320 (Inherited: 0x310)
struct UWeaponRocketLauncherAnimInstance : UWeaponAnimInstance {
	bool _isArmed; // 0x310(0x01)
	char pad_311[0xf]; // 0x311(0x0f)
};

// Class ConZ.WeaponScopeWidget
// Size: 0x280 (Inherited: 0x268)
struct UWeaponScopeWidget : UUserWidget {
	struct UTexture2D* ReticleTexture; // 0x268(0x08)
	struct UTextureRenderTarget2D* TextRenderTarget; // 0x270(0x08)
	float FadeFactor; // 0x278(0x04)
	float OnHideDelay; // 0x27c(0x04)

	void OnShowElements(); // Function ConZ.WeaponScopeWidget.OnShowElements // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnHideElements(); // Function ConZ.WeaponScopeWidget.OnHideElements // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnFadeOutComplete(); // Function ConZ.WeaponScopeWidget.OnFadeOutComplete // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnFadeInComplete(); // Function ConZ.WeaponScopeWidget.OnFadeInComplete // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void OnConstructFinished(); // Function ConZ.WeaponScopeWidget.OnConstructFinished // (Event|Public|BlueprintEvent) // @ game+0x297fc00
	void BeginFadeIn(); // Function ConZ.WeaponScopeWidget.BeginFadeIn // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.WeaponFirstPersonAnimationsDataAsset
// Size: 0xe8 (Inherited: 0x98)
struct UWeaponFirstPersonAnimationsDataAsset : UItemFirstPersonAnimationsDataAsset {
	struct FItemFirstPersonUpperBodyAnimationsData UpperBodyAimingHip; // 0x98(0x50)
};

// Class ConZ.WeaponSightItemComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UWeaponSightItemComponent : UItemComponent {
	struct FName ViewCenterSocketName; // 0xc8(0x08)
	struct FVector AimingDownTheSightsLocationOffset; // 0xd0(0x0c)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class ConZ.WeaponState
// Size: 0x30 (Inherited: 0x28)
struct UWeaponState : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class ConZ.WeaponStateActive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateActive : UWeaponState {
};

// Class ConZ.WeaponStateActiveManualFiring
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateActiveManualFiring : UWeaponState {
};

// Class ConZ.WeaponStateAutoCrossbowActive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateAutoCrossbowActive : UWeaponState {
};

// Class ConZ.WeaponStateFiring
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateFiring : UWeaponState {
};

// Class ConZ.WeaponStateAutoCrossbowFire
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateAutoCrossbowFire : UWeaponStateFiring {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateBowActive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateBowActive : UWeaponState {
};

// Class ConZ.WeaponStateBowAnticipateDraw
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateBowAnticipateDraw : UWeaponState {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeaponStateBowAnticipateFiring
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateBowAnticipateFiring : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateBowCancelFiring
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateBowCancelFiring : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateBowDraw
// Size: 0x50 (Inherited: 0x30)
struct UWeaponStateBowDraw : UWeaponState {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class ConZ.WeaponStateBowFire
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateBowFire : UWeaponStateFiring {
};

// Class ConZ.WeaponStateBowFireAndInsertArrow
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateBowFireAndInsertArrow : UWeaponStateFiring {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeaponStateBowFiring
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateBowFiring : UWeaponStateFiring {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateBowInsertArrow
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateBowInsertArrow : UWeaponState {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeaponStateBowRemoveArrow
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateBowRemoveArrow : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateChamberBullet
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateChamberBullet : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateCheckAmmo
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateCheckAmmo : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateClearMalfunction
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateClearMalfunction : UWeaponState {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeaponStateCrossbowActive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateCrossbowActive : UWeaponState {
};

// Class ConZ.WeaponStateCrossbowFire
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateCrossbowFire : UWeaponStateFiring {
};

// Class ConZ.WeaponStateCrossbowFireAndInsertArrow
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateCrossbowFireAndInsertArrow : UWeaponStateFiring {
};

// Class ConZ.WeaponStateEquipping
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateEquipping : UWeaponState {
};

// Class ConZ.WeaponStateFiringAutomatic
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateFiringAutomatic : UWeaponStateFiring {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeaponStateFiringBurst
// Size: 0x40 (Inherited: 0x40)
struct UWeaponStateFiringBurst : UWeaponStateFiringAutomatic {
};

// Class ConZ.WeaponStateFiringManual
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateFiringManual : UWeaponStateFiring {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateFiringSemiAutomatic
// Size: 0x48 (Inherited: 0x40)
struct UWeaponStateFiringSemiAutomatic : UWeaponStateFiringAutomatic {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class ConZ.WeaponStateInactive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateInactive : UWeaponState {
};

// Class ConZ.WeaponStateReload
// Size: 0x68 (Inherited: 0x30)
struct UWeaponStateReload : UWeaponState {
	struct UWeaponActionReloadSequence* _currentReloadActionSequence; // 0x30(0x08)
	struct FWeaponReloadData _reloadData; // 0x38(0x30)
};

// Class ConZ.WeaponStateRevolverActive
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateRevolverActive : UWeaponState {
};

// Class ConZ.WeaponStateRevolverFire
// Size: 0x38 (Inherited: 0x38)
struct UWeaponStateRevolverFire : UWeaponStateFiringManual {
};

// Class ConZ.WeaponStateRocketLauncherActiveArmed
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateRocketLauncherActiveArmed : UWeaponState {
};

// Class ConZ.WeaponStateRocketLauncherActiveUnarmed
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateRocketLauncherActiveUnarmed : UWeaponState {
};

// Class ConZ.WeaponStateRocketLauncherArm
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateRocketLauncherArm : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateRocketLauncherUnarm
// Size: 0x38 (Inherited: 0x30)
struct UWeaponStateRocketLauncherUnarm : UWeaponState {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class ConZ.WeaponStateUnEquipping
// Size: 0x30 (Inherited: 0x30)
struct UWeaponStateUnEquipping : UWeaponState {
};

// Class ConZ.WeaponStateUnloadAmmo
// Size: 0x40 (Inherited: 0x30)
struct UWeaponStateUnloadAmmo : UWeaponState {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class ConZ.WeatherAmbientSounds
// Size: 0x258 (Inherited: 0x220)
struct AWeatherAmbientSounds : AActor {
	float WeatherRTPCsUpdateInterval; // 0x220(0x04)
	float TimeOfDayRTPCUpdateInterval; // 0x224(0x04)
	float TimeOfDayRTPCInterpolationSpeed; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct UAkAudioEvent* RainAudioEvent; // 0x230(0x08)
	struct UAkAudioEvent* WindAudioEvent; // 0x238(0x08)
	char pad_240[0x18]; // 0x240(0x18)
};

// Class ConZ.WeatherController2
// Size: 0x16c0 (Inherited: 0x220)
struct AWeatherController2 : AActor {
	char pad_220[0x60]; // 0x220(0x60)
	float _maxHeightAboveSeaLevel; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UDirectionalLightComponent* _sun; // 0x288(0x08)
	float _timeOfDay; // 0x290(0x04)
	bool _canStartTimeOfDayBeOverridenByConfig; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	float _timeOfDaySpeed; // 0x298(0x04)
	bool _canTimeOfDaySpeedBeOverridenByConfig; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float _sunIntensity; // 0x2a0(0x04)
	float _sunFullEclipseMult; // 0x2a4(0x04)
	float _sunAzimuthDegrees; // 0x2a8(0x04)
	float _sunLightSourceAngle; // 0x2ac(0x04)
	float _sunTurnOffAngle; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	float _sunriseTime; // 0x2b8(0x04)
	bool _canSunriseTimeBeOverridenByConfig; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	float _sunsetTime; // 0x2c0(0x04)
	bool _canSunsetTimeBeOverridenByConfig; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	float _dawnDuskTresholdAngle; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	float _maxSolarIrradiance; // 0x2d0(0x04)
	bool _useQuantizedSunMovement; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)
	struct FFloatInterval _quantizedSunMovementLevelsPerSunHeight; // 0x2d8(0x08)
	struct UDirectionalLightComponent* _moon; // 0x2e0(0x08)
	float _moonRotation; // 0x2e8(0x04)
	float _moonIntensityMult; // 0x2ec(0x04)
	struct FLinearColor _moonLightTint; // 0x2f0(0x10)
	float _shadowTurnOffAngle; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
	float _shadowResoultionHalfScaleAngle; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	float _shadowCascadeLimitAngle; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	int32_t _shadowCascadeLimitValue; // 0x318(0x04)
	char pad_31C[0x1c]; // 0x31c(0x1c)
	struct UMaterialInterface* _moonStarsMaterial; // 0x338(0x08)
	struct UMaterialInstanceDynamic* _moonStarsMaterialDynamic; // 0x340(0x08)
	struct UStaticMeshComponent* _starsSphere; // 0x348(0x08)
	float _starsSphereDistance; // 0x350(0x04)
	struct FRotator _starsSphereRotation; // 0x354(0x0c)
	bool _useNightDirectionalLightComponent; // 0x360(0x01)
	char pad_361[0x7]; // 0x361(0x07)
	struct UDirectionalLightComponent* _nightLight; // 0x368(0x08)
	float _nightLightIntensity; // 0x370(0x04)
	struct FFloatInterval _nightLightIntensityRange; // 0x374(0x08)
	struct FLinearColor _nightLightColor; // 0x37c(0x10)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct USkyLightComponent* _skyAmbientReflEnv; // 0x390(0x08)
	struct USkyAtmosphereComponent* _skyAtmosphere; // 0x398(0x08)
	float _skyAmbientIntensity; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct FRuntimeFloatCurve _skyAmbientOcclusionTint; // 0x3a8(0x88)
	struct FLinearColor _skyAmbientReflEnvLowerHemisphereColor; // 0x430(0x10)
	struct FRuntimeFloatCurve _skyAmbientReflEnvLowerHemisphereIntensitySun; // 0x440(0x88)
	struct FRuntimeFloatCurve _skyAmbientReflEnvLowerHemisphereIntensityMoon; // 0x4c8(0x88)
	struct FRuntimeFloatCurve _skyAmbientReflEnvLowerHemisphereIntensityCloudCoverage; // 0x550(0x88)
	struct FRuntimeFloatCurve _skyAmbientReflEnvUpperHemisphereAdditiveIntensityCloudCoverage; // 0x5d8(0x88)
	struct FLinearColor _skyAmbientReflEnvUpperHemisphereAdditiveColor; // 0x660(0x10)
	bool _applyAdditiveAmbientCubemapIntensity; // 0x670(0x01)
	char pad_671[0x7]; // 0x671(0x07)
	struct FRuntimeFloatCurve _additiveAmbientCubemapIntensity; // 0x678(0x88)
	struct FLinearColor _skyRayleighScattering; // 0x700(0x10)
	float _skyRayleightScatteringScale; // 0x710(0x04)
	float _mieScatteringBaseScale; // 0x714(0x04)
	float _mieScatteringScaleByHumidity; // 0x718(0x04)
	struct FFloatInterval _mieExponentialDistribution; // 0x71c(0x08)
	float _skyLuminanceIntensity; // 0x724(0x04)
	struct UVolumetricCloudComponent* _volumetricClouds; // 0x728(0x08)
	struct UMaterialInterface* _volumetricCloudsMaterialLQ; // 0x730(0x08)
	struct UMaterialInterface* _volumetricCloudsMaterialHQ; // 0x738(0x08)
	struct TMap<struct UMaterialInterface*, struct UMaterialInstanceDynamic*> _volumetricCloudsMaterialDynamic; // 0x740(0x50)
	int32_t _volumetricCloudsQuality; // 0x790(0x04)
	float _cirrostratusCoverage; // 0x794(0x04)
	float _cirrostratusSunlightThroughput; // 0x798(0x04)
	char pad_79C[0x4]; // 0x79c(0x04)
	struct FRuntimeFloatCurve _cirrostratusCoverageMaterialParamRemap; // 0x7a0(0x88)
	float _cumulonimbusCoverage; // 0x828(0x04)
	float _cumulonimbusSunlightThroughput; // 0x82c(0x04)
	struct FRuntimeFloatCurve _cumulonimbusCoverageMaterialParamRemap; // 0x830(0x88)
	float _nimbostratusCoverage; // 0x8b8(0x04)
	float _nimbostratusSunlightThroughput; // 0x8bc(0x04)
	struct FRuntimeFloatCurve _nimbostratusCoverageMaterialParamRemap; // 0x8c0(0x88)
	float _cloudsBaseSpeed; // 0x948(0x04)
	float _cloudsWindSpeed; // 0x94c(0x04)
	char pad_950[0x8]; // 0x950(0x08)
	struct FFloatInterval _volumetricCloudsViewSampleCount; // 0x958(0x08)
	struct FFloatInterval _volumetricCloudsReflectionSampleCount; // 0x960(0x08)
	struct FFloatInterval _volumetricCloudsShadowViewSampleCount; // 0x968(0x08)
	struct FFloatInterval _volumetricCloudsShadowReflectionSampleCount; // 0x970(0x08)
	struct FFloatInterval _sunCloudShadowRaySampleCount; // 0x978(0x08)
	struct FFloatInterval _moonCloudShadowRaySampleCount; // 0x980(0x08)
	struct UParticleSystem* _lightningParticleSystem; // 0x988(0x08)
	struct FFloatInterval _lightningParticleLifetime; // 0x990(0x08)
	struct UAkAudioEvent* _thunderSoundEmitter; // 0x998(0x08)
	struct FFloatInterval _thunderSoundDuration; // 0x9a0(0x08)
	float _lightningRate; // 0x9a8(0x04)
	float _lightningMaxDistance; // 0x9ac(0x04)
	float _lightningAltitudeOffsetFromPlayer; // 0x9b0(0x04)
	float _lightningAltitudeBandThickness; // 0x9b4(0x04)
	char pad_9B8[0x20]; // 0x9b8(0x20)
	struct USceneComponent* _precipitationEmittersRoot; // 0x9d8(0x08)
	struct UChildActorComponent* _precipitationMaskCapture; // 0x9e0(0x08)
	float _precipitationMaskUpdateInterval; // 0x9e8(0x04)
	char pad_9EC[0x4]; // 0x9ec(0x04)
	float _precipitationEmittersUpOffset; // 0x9f0(0x04)
	float _precipitationEmittersForwardOffset; // 0x9f4(0x04)
	float _precipitationEmittersVelocityOffset; // 0x9f8(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct UNiagaraSystem* _rainParticleSystem; // 0xa00(0x08)
	struct UNiagaraComponent* _rainEmitter; // 0xa08(0x08)
	int32_t _maxParticleCount; // 0xa10(0x04)
	char pad_A14[0xc]; // 0xa14(0x0c)
	struct FVector4 _rainSpriteSizeAtLowRain; // 0xa20(0x10)
	struct FVector4 _rainSpriteSizeAtHighRain; // 0xa30(0x10)
	struct FVector4 _rainSpriteSplashSizeAtLowRain; // 0xa40(0x10)
	struct FVector4 _rainSpriteSplashSizeAtHighRain; // 0xa50(0x10)
	float _rainMinSpeed; // 0xa60(0x04)
	float _rainMaxSpeed; // 0xa64(0x04)
	float _rainMaxAngleAtHighWind; // 0xa68(0x04)
	float _rainDirectionOffsetAtLowWind; // 0xa6c(0x04)
	float _rainDirectionOffsetAtHighWind; // 0xa70(0x04)
	char pad_A74[0x4]; // 0xa74(0x04)
	struct UStaticMesh* _rainCylinderMesh; // 0xa78(0x08)
	struct FVector2D _rainCylinderScaleWidthHeight; // 0xa80(0x08)
	float _rainCylinderUpOffset; // 0xa88(0x04)
	char pad_A8C[0x4]; // 0xa8c(0x04)
	struct UStaticMeshComponent* _rainCylinder; // 0xa90(0x08)
	float _rainIntensity; // 0xa98(0x04)
	float _maxRainMilimeterPerHour; // 0xa9c(0x04)
	float _surfaceWetnessAccumulationSpeed; // 0xaa0(0x04)
	char pad_AA4[0x4]; // 0xaa4(0x04)
	struct FRuntimeFloatCurve _surfaceWetnessEvaporationSpeedVsSunHeigth; // 0xaa8(0x88)
	struct FRuntimeFloatCurve _surfaceWetnessEvaporationSpeedVsCloudCoverageMult; // 0xb30(0x88)
	float _surfaceWetnessEvaporationDiffExponent; // 0xbb8(0x04)
	char pad_BBC[0x4]; // 0xbbc(0x04)
	struct UMaterialInterface* _surfaceRaindropsPostProcess; // 0xbc0(0x08)
	struct UMaterialInstanceDynamic* _surfaceRaindropsPostProcessDynamicInstance; // 0xbc8(0x08)
	struct TArray<struct UParticleSystem*> _snowParticleSystems; // 0xbd0(0x10)
	struct TArray<struct UParticleSystemComponent*> _snowEmitters; // 0xbe0(0x10)
	float _snowIntensity; // 0xbf0(0x04)
	char pad_BF4[0xc]; // 0xbf4(0x0c)
	struct UMaterialParameterCollection* _mainMPC; // 0xc00(0x08)
	struct UMaterialParameterCollection* _foliageMPC; // 0xc08(0x08)
	struct FRuntimeFloatCurve _foliageMPCSubsurfaceColorIntensityCurve; // 0xc10(0x88)
	struct UMaterialParameterCollection* _wetnessMPC; // 0xc98(0x08)
	struct FRuntimeFloatCurve _wetnessMPCEmissiveIntensityCurve; // 0xca0(0x88)
	struct UMaterialParameterCollection* _particlesMPC; // 0xd28(0x08)
	struct FRuntimeCurveLinearColor _particlesMPCGlobalParticlesColorCurve; // 0xd30(0x208)
	float _baseAirTemperature; // 0xf38(0x04)
	struct FFloatInterval _baseAirTemperatureRange; // 0xf3c(0x08)
	float _airTemperatureHeightModifier; // 0xf44(0x04)
	float _waterTemperature; // 0xf48(0x04)
	struct FFloatInterval _waterTemperatureRange; // 0xf4c(0x08)
	float _waterTemperatureInterpSpeed; // 0xf54(0x04)
	float _waterTemperatureHeightModifier; // 0xf58(0x04)
	float _temperatureDifferenceBetweenShadeAndOnSun; // 0xf5c(0x04)
	struct FRuntimeFloatCurve _waterEvaporationRate; // 0xf60(0x88)
	float _airRelativeHumidity; // 0xfe8(0x04)
	char pad_FEC[0x4]; // 0xfec(0x04)
	struct UWindDirectionalSourceComponent* _windSourceComponent; // 0xff0(0x08)
	float _windAzimuth; // 0xff8(0x04)
	float _windIntensity; // 0xffc(0x04)
	float _windAzimuthForWaves; // 0x1000(0x04)
	float _windIntensityForWaves; // 0x1004(0x04)
	float _maxWindSpeedKph; // 0x1008(0x04)
	char pad_100C[0x4]; // 0x100c(0x04)
	struct UExponentialHeightFogComponent* _heightFog; // 0x1010(0x08)
	float _fogDensity; // 0x1018(0x04)
	float _fogFalloff; // 0x101c(0x04)
	float _fogHeightOffset; // 0x1020(0x04)
	struct FLinearColor _fogBaseInscatteringColor; // 0x1024(0x10)
	struct FLinearColor _fogBaseDirectionalInscatteringColor; // 0x1034(0x10)
	char pad_1044[0x4]; // 0x1044(0x04)
	struct UChildActorComponent* _postProcessVolume; // 0x1048(0x08)
	struct FRuntimeFloatCurve _exposureMinBrightness; // 0x1050(0x88)
	struct FRuntimeFloatCurve _exposureMaxBrightness; // 0x10d8(0x88)
	struct FRuntimeFloatCurve _exposureSpeedUp; // 0x1160(0x88)
	struct FRuntimeFloatCurve _exposureSpeedDown; // 0x11e8(0x88)
	bool _applyAmbientOcclusionSettings; // 0x1270(0x01)
	char pad_1271[0x3]; // 0x1271(0x03)
	struct FAmbientOcclusionPostProcessSettings _ambientOcclusionPostProcessSettings; // 0x1274(0x38)
	char pad_12AC[0x4]; // 0x12ac(0x04)
	struct FMultistageRandomRoll _windAzimuthRandom; // 0x12b0(0x68)
	struct FMultistageRandomRoll _windIntensityRandom; // 0x1318(0x68)
	struct FMultistageRandomRoll _cirrostratusCoverageRandom; // 0x1380(0x68)
	struct FMultistageRandomRoll _cumulonimbusCoverageRandom; // 0x13e8(0x68)
	struct FMultistageRandomRoll _nimbostratusCoverageRandom; // 0x1450(0x68)
	struct FRuntimeFloatCurve _baseAirTemperatureVsTimeOfDay; // 0x14b8(0x88)
	struct FRuntimeFloatCurve _fogDensityVsSunIntensity; // 0x1540(0x88)
	float _fogDensityMultiplierWhenRaining; // 0x15c8(0x04)
	float _fogDensityInterpSpeed; // 0x15cc(0x04)
	float _autoSaveInterval; // 0x15d0(0x04)
	char pad_15D4[0x4]; // 0x15d4(0x04)
	bool _shouldSerializeState; // 0x15d8(0x01)
	char pad_15D9[0x3]; // 0x15d9(0x03)
	float _sendReplicatedStateSnapshotInterval; // 0x15dc(0x04)
	char pad_15E0[0x24]; // 0x15e0(0x24)
	float _nighttimeDarkness; // 0x1604(0x04)
	char pad_1608[0xb8]; // 0x1608(0xb8)

	void UnregisterWeatherMask(struct UPrimitiveComponent* WeatherMaskComponent); // Function ConZ.WeatherController2.UnregisterWeatherMask // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2543700
	void RegisterWeatherMask(struct UPrimitiveComponent* WeatherMaskComponent); // Function ConZ.WeatherController2.RegisterWeatherMask // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x25435f0
	void OnRep_NighttimeDarkness(); // Function ConZ.WeatherController2.OnRep_NighttimeDarkness // (Final|Native|Private) // @ game+0x25435d0
	void NetMulticast_SendStateSnapshot(struct FWeatherReplicatedStateSnapshot Snapshot); // Function ConZ.WeatherController2.NetMulticast_SendStateSnapshot // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x2543540
	void NetMulticast_ResetStateSnapshots(struct FWeatherReplicatedStateSnapshot Snapshot); // Function ConZ.WeatherController2.NetMulticast_ResetStateSnapshots // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x25434b0
};

// Class ConZ.WeedRemovalToolItemTag
// Size: 0x30 (Inherited: 0x30)
struct UWeedRemovalToolItemTag : UBaseItemTag {
};

// Class ConZ.WetnessManager
// Size: 0x270 (Inherited: 0x220)
struct AWetnessManager : AActor {
	int32_t MaxNumberOfActiveWettables; // 0x220(0x04)
	float MaxWettableLifeTime; // 0x224(0x04)
	float WeatherAndWettableObjectParametersUpdateInterval; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
	struct UCurveFloat* WettingRateFromRainVsRainIntensity; // 0x230(0x08)
	float WettingRateFromWaterImmersion; // 0x238(0x04)
	float WettingRateFromWetSurfaces; // 0x23c(0x04)
	float DryingRate; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct UCurveFloat* DryingRateModifierVsTemperature; // 0x248(0x08)
	struct UCurveFloat* DryingRateModifierVsRelativeHumidity; // 0x250(0x08)
	float AirTemperatureModifierWhenNotExposedToSunlight; // 0x258(0x04)
	char pad_25C[0x14]; // 0x25c(0x14)
};

// Class ConZ.WetnessStatics
// Size: 0x28 (Inherited: 0x28)
struct UWetnessStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.Wettable
// Size: 0x28 (Inherited: 0x28)
struct UWettable : UInterface {

	void SetWaterWeight(float Value); // Function ConZ.Wettable.SetWaterWeight // (Native|Public|BlueprintCallable) // @ game+0x25473e0
	float GetWaterWeight(); // Function ConZ.Wettable.GetWaterWeight // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2546ce0
	float GetMaxPossibleWaterWeight(); // Function ConZ.Wettable.GetMaxPossibleWaterWeight // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2546bd0
};

// Class ConZ.WheelBarrow
// Size: 0x1a40 (Inherited: 0x12f0)
struct AWheelBarrow : AVehicleBase {
	char pad_12F0[0x18]; // 0x12f0(0x18)
	float _driverCapsuleMaxDepenetrationVelocity; // 0x1308(0x04)
	struct FVector _driverCapsuleRelativeLocation; // 0x130c(0x0c)
	float _driverCapsuleMass; // 0x1318(0x04)
	float _driverCapsuleLinearDamping; // 0x131c(0x04)
	float _driverCapsuleAngularDamping; // 0x1320(0x04)
	struct FVector _driverCapsuleConstraintRelativeLocation; // 0x1324(0x0c)
	float _driverCapsuleConstraintSwingLimit; // 0x1330(0x04)
	float _driverCapsuleConstraintTwistLimit; // 0x1334(0x04)
	char pad_1338[0x8]; // 0x1338(0x08)
	struct FTransform _driverTransformRelativeToCapsule; // 0x1340(0x30)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeed; // 0x1370(0x88)
	struct FRuntimeFloatCurve _driverActionDifficultyVsSpeedWhenLimping; // 0x13f8(0x88)
	struct FRuntimeFloatCurve _driverBaseConstitutionChangeRateModifierVsSpeed; // 0x1480(0x88)
	struct FRuntimeFloatCurve _driverBaseConstitutionChangeRateModifierVsSpeedWhenLimping; // 0x1508(0x88)
	struct FRuntimeFloatCurve _driverStrengthGainSpeedInfluenceVsSpeed; // 0x1590(0x88)
	struct FRuntimeFloatCurve _driverStrengthGainSpeedInfluenceVsSpeedWhenLimping; // 0x1618(0x88)
	struct FFloatInterval _loadModifierInterpedWithDriverStrength; // 0x16a0(0x08)
	struct FWheelBarrowParametersPerMovementPace _parametersPerMovementPace[0x3]; // 0x16a8(0x60)
	struct FFloatInterval _maxSpeedModifierInterpedWithDriverDexterity; // 0x1708(0x08)
	struct FRuntimeFloatCurve _weightLoadFactorVsFloorSlopeAngle; // 0x1710(0x88)
	float _forwardDriveForceMagnitude; // 0x1798(0x04)
	float _reverseDriveForceMagnitude; // 0x179c(0x04)
	float _steerForceMagnitude; // 0x17a0(0x04)
	float _steerForceMagnitudeWhenLimping; // 0x17a4(0x04)
	float _steerRollTorqueMagnitude; // 0x17a8(0x04)
	float _meshBrakeForceScale; // 0x17ac(0x04)
	float _meshBrakeForceMagnitudeWhenCloseToMaxSpeed; // 0x17b0(0x04)
	float _meshSidewaysBrakeForceScale; // 0x17b4(0x04)
	float _driverCapsuleBrakeForceScale; // 0x17b8(0x04)
	float _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed; // 0x17bc(0x04)
	float _driverCapsuleSidewaysBrakeForceScale; // 0x17c0(0x04)
	float _physicsMaterialFrictionWhenDriven; // 0x17c4(0x04)
	float _physicsMaterialRestitutionWhenDriven; // 0x17c8(0x04)
	bool _stickyFrictionEnabled; // 0x17cc(0x01)
	char pad_17CD[0x3]; // 0x17cd(0x03)
	float _stickyFrictionSpeedThreshold; // 0x17d0(0x04)
	float _stickyFriction; // 0x17d4(0x04)
	float _healthDrainPerSpeed; // 0x17d8(0x04)
	float _healthDrainPerLoad; // 0x17dc(0x04)
	float _healthDrainUpdateInterval; // 0x17e0(0x04)
	char pad_17E4[0x4]; // 0x17e4(0x04)
	float _speedThresholdToEvictAllMountees; // 0x17e8(0x04)
	float _vertSpeedThresholdToEvictAllMountees; // 0x17ec(0x04)
	struct UAkAudioEvent* _startedMovingAudioEvent; // 0x17f0(0x08)
	struct UAkAudioEvent* _stoppedMovingAudioEvent; // 0x17f8(0x08)
	char pad_1800[0x4]; // 0x1800(0x04)
	float _sendStateFrequency; // 0x1804(0x04)
	struct UPhysicsConstraintComponent* _driverPhysicsConstraintComponent; // 0x1808(0x08)
	char pad_1810[0x8]; // 0x1810(0x08)
	struct UPhysicalMaterial* _physicsMaterialWhenDriven; // 0x1818(0x08)
	char pad_1820[0x1a8]; // 0x1820(0x1a8)
	struct UWheelBarrowDriverCapsuleComponent* _driverPhysicsCapsuleComponent; // 0x19c8(0x08)
	struct TArray<struct TWeakObjectPtr<struct UVehicleAttachment_Wheel>> _attachedWheels; // 0x19d0(0x10)
	char pad_19E0[0x40]; // 0x19e0(0x40)
	struct UStaticMeshComponent* _wheelMesh; // 0x1a20(0x08)
	char pad_1A28[0x18]; // 0x1a28(0x18)

	struct UWheelBarrowDriverCapsuleComponent* GetDriverPhysicsCapsuleComponent(); // Function ConZ.WheelBarrow.GetDriverPhysicsCapsuleComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x25469e0
};

// Class ConZ.WheelBarrowDriverCapsuleComponent
// Size: 0x4b0 (Inherited: 0x480)
struct UWheelBarrowDriverCapsuleComponent : UCapsuleComponent {
	char pad_480[0x30]; // 0x480(0x30)
};

// Class ConZ.WheelBarrowMountSlot
// Size: 0x190 (Inherited: 0x190)
struct UWheelBarrowMountSlot : UVehicleBaseMountSlot {
};

// Class ConZ.WheelBarrowDriverMountSlot
// Size: 0x190 (Inherited: 0x190)
struct UWheelBarrowDriverMountSlot : UWheelBarrowMountSlot {
	struct UBlendSpace* _walkJogLimpingAnimation; // 0x188(0x08)
};

// Class ConZ.WinCounterWidget
// Size: 0x268 (Inherited: 0x268)
struct UWinCounterWidget : UUserWidget {
};

// Class ConZ.WindowFortificationsType
// Size: 0x80 (Inherited: 0x30)
struct UWindowFortificationsType : UDataAsset {
	struct TMap<struct UObject*, struct UStaticMesh*> MeshForFortification; // 0x30(0x50)
};

// Class ConZ.WindowMarkersComponent
// Size: 0x260 (Inherited: 0x200)
struct UWindowMarkersComponent : USceneComponent {
	struct TArray<struct FWindowMarker> _windowMarkers; // 0x1f8(0x10)
	char pad_210[0x50]; // 0x210(0x50)
};

// Class ConZ.WindowMarkersRegistry
// Size: 0x200 (Inherited: 0xb0)
struct UWindowMarkersRegistry : UActorComponent {
	char pad_B0[0x150]; // 0xb0(0x150)
};

// Class ConZ.WindVane
// Size: 0x250 (Inherited: 0x220)
struct AWindVane : AActor {
	struct UStaticMeshComponent* _column; // 0x220(0x08)
	struct UStaticMeshComponent* _body; // 0x228(0x08)
	struct UStaticMeshComponent* _propeller; // 0x230(0x08)
	float _bodyRotationRate; // 0x238(0x04)
	float _propellerSpinRate; // 0x23c(0x04)
	struct FName _rotationRateRTPC; // 0x240(0x08)
	char pad_248[0x8]; // 0x248(0x08)
};

// Class ConZ.WorldCraftingMarkerWidget
// Size: 0x378 (Inherited: 0x340)
struct UWorldCraftingMarkerWidget : UWaypointWidgetBase {
	struct UCraftingInfoWidget* _craftingInfo; // 0x340(0x08)
	struct UTextBlock* Label; // 0x348(0x08)
	struct UTextBlock* Distance; // 0x350(0x08)
	struct UImage* SmallPointer; // 0x358(0x08)
	struct UImage* Icon; // 0x360(0x08)
	struct UImage* Emphasis; // 0x368(0x08)
	struct UWidgetSwitcher* Switcher; // 0x370(0x08)
};

// Class ConZ.WorldDoorOwnershipManager
// Size: 0x100 (Inherited: 0xb0)
struct UWorldDoorOwnershipManager : UActorComponent {
	char pad_B0[0x50]; // 0xb0(0x50)
};

// Class ConZ.WorldEventManager
// Size: 0x250 (Inherited: 0x220)
struct AWorldEventManager : AActor {
	struct TArray<struct AWorldEvent*> EventTypes; // 0x220(0x10)
	float TimeBetweenEventsMin; // 0x230(0x04)
	float TimeBetweenEventsMax; // 0x234(0x04)
	char pad_238[0x8]; // 0x238(0x08)
	struct TArray<struct AWorldEvent*> _events; // 0x240(0x10)
};

// Class ConZ.WorldItemSpawner
// Size: 0x228 (Inherited: 0x220)
struct AWorldItemSpawner : AActor {
	struct UWorldItemSpawnerComponent* _spawnerComponent; // 0x220(0x08)
};

// Class ConZ.WorldItemSpawnerComponent
// Size: 0x4c0 (Inherited: 0x460)
struct UWorldItemSpawnerComponent : UPrimitiveComponent {
	char pad_460[0x10]; // 0x460(0x10)
	struct TSoftClassPtr<UObject> _item; // 0x470(0x28)
	float _chanceToBeUsable; // 0x498(0x04)
	char pad_49C[0x24]; // 0x49c(0x24)
};

// Class ConZ.WorldQuestMarkerWidget
// Size: 0x378 (Inherited: 0x340)
struct UWorldQuestMarkerWidget : UWaypointWidgetBase {
	struct UTextBlock* _distance; // 0x340(0x08)
	struct UVerticalBox* _verticalBox; // 0x348(0x08)
	struct UImage* _icon; // 0x350(0x08)
	struct UImage* _pointer; // 0x358(0x08)
	struct UImage* _emphasis; // 0x360(0x08)
	char pad_368[0x10]; // 0x368(0x10)
};

// Class ConZ.WorldStatics
// Size: 0x28 (Inherited: 0x28)
struct UWorldStatics : UBlueprintFunctionLibrary {

	struct FVector TransformWorldPositionToTargetFOV(struct UObject* WorldContextObject, float FieldOfView, struct FVector& WorldPosition); // Function ConZ.WorldStatics.TransformWorldPositionToTargetFOV // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2547490
	bool IsZeroOriginLocationWithinMapLimits(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsZeroOriginLocationWithinMapLimits // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2547300
	bool IsWorldStreamed(struct UObject* WorldContextObject); // Function ConZ.WorldStatics.IsWorldStreamed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2547270
	bool IsLocationNearSentrySpawn(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationNearSentrySpawn // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2547190
	bool IsLocationInNormalBunker(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationInNormalBunker // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x25470b0
	bool IsLocationInAbandonedBunker(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocationInAbandonedBunker // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546fd0
	bool IsLocalOriginLocationWithinMapLimits(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsLocalOriginLocationWithinMapLimits // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546ef0
	bool IsEveryStreamedLevelLoadedAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.IsEveryStreamedLevelLoadedAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546e10
	bool IsEnvironmentClassOutdoor(enum class EEnvironmentClass Value); // Function ConZ.WorldStatics.IsEnvironmentClassOutdoor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2546d90
	bool IsEnvironmentClassIndoor(enum class EEnvironmentClass Value); // Function ConZ.WorldStatics.IsEnvironmentClassIndoor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2546d10
	float GetRadiationAmountIncreaseRateAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetRadiationAmountIncreaseRateAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546c00
	float GetExtraAirTemperatureFromHeatSourcesAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetExtraAirTemperatureFromHeatSourcesAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546af0
	struct FEnvironmentDescription GetEnvironmentDescriptionAtLocation(struct UObject* WorldContextObject, struct FVector Location); // Function ConZ.WorldStatics.GetEnvironmentDescriptionAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2546a10
	float GetDistanceToClosestPlayerPawnOrSpectator(struct UWorld* World, struct FVector& Location); // Function ConZ.WorldStatics.GetDistanceToClosestPlayerPawnOrSpectator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2546910
	float GetDistanceSquaredToClosestPlayerPawnOrSpectator(struct UWorld* World, struct FVector& Location); // Function ConZ.WorldStatics.GetDistanceSquaredToClosestPlayerPawnOrSpectator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2546840
	bool FindTeleportSpotInArea(struct AActor* Actor, struct FVector& Location, struct FRotator& Rotation, float MinRadius, float MaxRadius, int32_t numIterationsPerRadius, int32_t numIterationsPerSlice); // Function ConZ.WorldStatics.FindTeleportSpotInArea // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2546610
};

// Class ConZ.Wristwatch
// Size: 0x2b8 (Inherited: 0x220)
struct AWristwatch : AActor {
	struct USkeletalMeshComponent* SkeletalMesh; // 0x220(0x08)
	struct UTextureRenderTarget2D* TextRenderTarget; // 0x228(0x08)
	struct UFont* TimeFont; // 0x230(0x08)
	float TextScaleX; // 0x238(0x04)
	float TextScaleY; // 0x23c(0x04)
	struct UAkAudioEvent* AlarmSound; // 0x240(0x08)
	struct USkeletalMesh* _maleWristwatchMesh; // 0x248(0x08)
	struct USkeletalMesh* _femaleWristwatchMesh; // 0x250(0x08)
	char pad_258[0x60]; // 0x258(0x60)

	void SetDisplayBrightness(float Value); // Function ConZ.Wristwatch.SetDisplayBrightness // (Event|Public|BlueprintEvent) // @ game+0x297fc00
};

// Class ConZ.XMLStatics
// Size: 0x28 (Inherited: 0x28)
struct UXMLStatics : UBlueprintFunctionLibrary {
};

// Class ConZ.YesNoDialog
// Size: 0x2c8 (Inherited: 0x268)
struct UYesNoDialog : UUserWidget {
	char pad_268[0x30]; // 0x268(0x30)
	struct UTextBlock* _textDialog; // 0x298(0x08)
	struct UConZStandardButton* _buttonYes; // 0x2a0(0x08)
	struct UConZStandardButton* _buttonNo; // 0x2a8(0x08)
	struct FText _dialogMessage; // 0x2b0(0x18)

	void SetDialogMessage(struct FText& Value); // Function ConZ.YesNoDialog.SetDialogMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2549d30
	void OnButtonYesClicked(); // Function ConZ.YesNoDialog.OnButtonYesClicked // (Final|Native|Private) // @ game+0x23b33a0
	void OnButtonNoClicked(); // Function ConZ.YesNoDialog.OnButtonNoClicked // (Final|Native|Private) // @ game+0x23b3380
};

// Class ConZ.Zombie2EncounterSaveState
// Size: 0x48 (Inherited: 0x38)
struct UZombie2EncounterSaveState : UConZCharacterEncounterSaveState {
	float health; // 0x38(0x04)
	int32_t ZombieVariationIndices; // 0x3c(0x04)
	bool IsSearched; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class ConZ.Zombie2AIControllerEncounterSaveState
// Size: 0x88 (Inherited: 0x80)
struct UZombie2AIControllerEncounterSaveState : UConZAIControllerEncounterSaveState {
	enum class EZombie2AIState ZombieState; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class ConZ.ZombieAIController2
// Size: 0x910 (Inherited: 0x450)
struct AZombieAIController2 : AConZAIController {
	struct UAISenseConfig_Sight* _lyingSightSenseConfig; // 0x450(0x08)
	struct UAISenseConfig_Hearing* _lyingHearingSenseConfig; // 0x458(0x08)
	struct UAISenseConfig_Damage* _lyingDamageSenseConfig; // 0x460(0x08)
	float _wakeUpThreshold; // 0x468(0x04)
	float _sleepingAccumulatedNoiseDropRate; // 0x46c(0x04)
	char pad_470[0x4]; // 0x470(0x04)
	float _playerDistanceForInstantWakeUp; // 0x474(0x04)
	float _playerHeightDifferenceForInstantWakeUp; // 0x478(0x04)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct TMap<struct FName, float> _noiseAccumulationMultiplierPerNoiseTag; // 0x480(0x50)
	float _timeUntilMovementComponentIsDeactivated; // 0x4d0(0x04)
	char pad_4D4[0x4]; // 0x4d4(0x04)
	float _stateMachineTickIntervalWhenInRelaxedState; // 0x4d8(0x04)
	bool _shouldWander; // 0x4dc(0x01)
	bool _shouldWanderAroundWanderOrigin; // 0x4dd(0x01)
	char pad_4DE[0x2]; // 0x4de(0x02)
	float _maxWanderingRadius; // 0x4e0(0x04)
	float _minTimeToRestBeforeWandering; // 0x4e4(0x04)
	float _maxTimeToRestBeforeWandering; // 0x4e8(0x04)
	bool _shouldBecomeAlertedBySight; // 0x4ec(0x01)
	char pad_4ED[0x3]; // 0x4ed(0x03)
	float _minLineOfSightDurationToBecomeAlerted; // 0x4f0(0x04)
	float _maxLineOfSightDurationToBecomeAlerted; // 0x4f4(0x04)
	bool _shouldBecomeAlertedByHearing; // 0x4f8(0x01)
	char pad_4F9[0x3]; // 0x4f9(0x03)
	float _minDelayBeforeBecomingAlertedByHearing; // 0x4fc(0x04)
	float _maxDelayBeforeBecomingAlertedByHearing; // 0x500(0x04)
	float _timeBeforeDestinationIsConsideredUnreachable; // 0x504(0x04)
	float _livelyRelaxedMovementDelay; // 0x508(0x04)
	float _timeBeforeLivelyRelaxedStateIsForcefullyEnded; // 0x50c(0x04)
	struct UAISenseConfig_Sight* _relaxedIdleSightSenseConfig; // 0x510(0x08)
	struct UAISenseConfig_Hearing* _relaxedIdleHearingSenseConfig; // 0x518(0x08)
	struct UAISenseConfig_Damage* _relaxedIdleDamageSenseConfig; // 0x520(0x08)
	struct UAISenseConfig_Sight* _relaxedWanderSightSenseConfig; // 0x528(0x08)
	struct UAISenseConfig_Hearing* _relaxedWanderHearingSenseConfig; // 0x530(0x08)
	struct UAISenseConfig_Damage* _relaxedWanderDamageSenseConfig; // 0x538(0x08)
	float _LPCModeRelaxedHearingSenseRangeMultiplier; // 0x540(0x04)
	float _stateMachineTickIntervalWhenInAlertedState; // 0x544(0x04)
	float _minObservingForLineOfSightStartDelay; // 0x548(0x04)
	float _maxObservingForLineOfSightStartDelay; // 0x54c(0x04)
	float _minInvestigateStimulusDelay; // 0x550(0x04)
	float _maxInvestigateStimulusDelay; // 0x554(0x04)
	float _stimulusInvestigationLocationRadius; // 0x558(0x04)
	float _minEnterCombatModeDelay; // 0x55c(0x04)
	float _maxEnterCombatModeDelay; // 0x560(0x04)
	float _distanceAtWhichToIgnoreEnterCombatModeDelay; // 0x564(0x04)
	struct UCurveVector* _observingCurve; // 0x568(0x08)
	float _observingCurvePeriod; // 0x570(0x04)
	float _observingCurveMaxYaw; // 0x574(0x04)
	float _observingCurveMaxPitch; // 0x578(0x04)
	char pad_57C[0x4]; // 0x57c(0x04)
	struct UAISenseConfig_Sight* _alertedSightSenseConfig; // 0x580(0x08)
	struct UAISenseConfig_Hearing* _alertedHearingSenseConfig; // 0x588(0x08)
	struct UAISenseConfig_Damage* _alertedDamageSenseConfig; // 0x590(0x08)
	float _stateMachineTickIntervalWhenInCombatState; // 0x598(0x04)
	bool _shouldAttack; // 0x59c(0x01)
	bool _shouldBackOffIfTooCloseToFoe; // 0x59d(0x01)
	bool _shouldPredictFoeLocation; // 0x59e(0x01)
	char pad_59F[0x1]; // 0x59f(0x01)
	struct UCurveFloat* _foeLocationPredictionStrengthVsDistanceToFoe; // 0x5a0(0x08)
	int32_t _minNumConsecutiveInflictedMeleeHitsToIntimidate; // 0x5a8(0x04)
	int32_t _maxNumConsecutiveInflictedMeleeHitsToIntimidate; // 0x5ac(0x04)
	float _minTimeBeforeFoeIsConsideredUnreachable; // 0x5b0(0x04)
	float _maxTimeBeforeFoeIsConsideredUnreachable; // 0x5b4(0x04)
	float _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x5b8(0x04)
	float _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x5bc(0x04)
	float _minSpeedToIgnoreTurnAnimationsDuringCombatMode; // 0x5c0(0x04)
	float _agitatedIntimidateScreamChance; // 0x5c4(0x04)
	float _zombieFoeDistanceXYToGiveUpBangingOnDoors; // 0x5c8(0x04)
	float _zombieFoeDistanceZToGiveUpBangingOnDoors; // 0x5cc(0x04)
	float _distanceToMoveAwayFromMountedPlayer; // 0x5d0(0x04)
	float _zombieAttackMovementMaxSpeed; // 0x5d4(0x04)
	float _zombieFoeAllowedAttackHeightDifference; // 0x5d8(0x04)
	bool _useDistanceInTimeCheck; // 0x5dc(0x01)
	char pad_5DD[0x3]; // 0x5dd(0x03)
	float _maxDistanceForTimeCheck; // 0x5e0(0x04)
	float _maxAcceleractionForTimeCheck; // 0x5e4(0x04)
	float _costOfJumpingInPathLength; // 0x5e8(0x04)
	float _minPathPointDistance; // 0x5ec(0x04)
	float _durationOfBeingObstructedByObstacleBeforeJump; // 0x5f0(0x04)
	struct FDetectionDelayTimerData _detectionDelayTimerData; // 0x5f4(0x10)
	float _hearingRangeMultiplierIfSpawnedUnderground; // 0x604(0x04)
	float _forceKeepStimulusAliveTime; // 0x608(0x04)
	float _stimulusTrackOwnerPositionInterval; // 0x60c(0x04)
	struct AZombie2* _zombie; // 0x610(0x08)
	char pad_618[0x264]; // 0x618(0x264)
	float _navLinkAcceptanceRadius; // 0x87c(0x04)
	char pad_880[0x90]; // 0x880(0x90)

	void SensingComponent_OnActorSensed(struct TArray<struct AActor*>& actorsPercepted); // Function ConZ.ZombieAIController2.SensingComponent_OnActorSensed // (Final|Native|Private|HasOutParms) // @ game+0x2549a10
	void OnHitReactStateChanged(); // Function ConZ.ZombieAIController2.OnHitReactStateChanged // (Final|Native|Private) // @ game+0x25498c0
	void OnDoorBreakdownInterrupted(); // Function ConZ.ZombieAIController2.OnDoorBreakdownInterrupted // (Final|Native|Private) // @ game+0x25498a0
};

// Class ConZ.ZombieAnimInstance2
// Size: 0x3b0 (Inherited: 0x2c0)
struct UZombieAnimInstance2 : UAnimInstance {
	bool HasOwnerBegunPlay; // 0x2b8(0x01)
	bool IsAlive; // 0x2b9(0x01)
	bool IsInRagdoll; // 0x2ba(0x01)
	bool IsDeadAndCompletelyInRagdoll; // 0x2bb(0x01)
	enum class EZombieStance stance; // 0x2bc(0x01)
	int32_t NumRelaxedIdleVariations; // 0x2c0(0x04)
	int32_t RelaxedIdleVariationIndex; // 0x2c4(0x04)
	struct FVector Acceleration; // 0x2c8(0x0c)
	bool WantsToMove; // 0x2d4(0x01)
	struct FVector Velocity; // 0x2d8(0x0c)
	float Speed; // 0x2e4(0x04)
	float SpeedXY; // 0x2e8(0x04)
	float WalkStoppingDistance; // 0x2ec(0x04)
	float WalkStoppingTime; // 0x2f0(0x04)
	bool IsFalling; // 0x2f4(0x01)
	bool IsJumping; // 0x2f5(0x01)
	float JumpApex; // 0x2f8(0x04)
	float JumpDuration; // 0x2fc(0x04)
	struct FRotator AimOffset; // 0x300(0x0c)
	bool CanStartGoToLoop; // 0x30c(0x01)
	char pad_30D[0x3]; // 0x30d(0x03)
	struct UAnimSequenceBase* RelaxedWalkLoopAnimation; // 0x310(0x08)
	float RelaxedWalkLoopAnimationPlayRate; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct UAnimSequenceBase* CombatRunStartAnimation; // 0x320(0x08)
	float CombatRunStartAnimationPlayRate; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct UAnimSequenceBase* CombatRunLoopAnimation; // 0x330(0x08)
	float CombatRunLoopAnimationPlayRate; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UAnimSequenceBase* CombatRunStopAnimation; // 0x340(0x08)
	float CombatRunStopAnimationStartTime; // 0x348(0x04)
	float CombatRunStopAnimationPlayRate; // 0x34c(0x04)
	float MinUpperBodyBlendWeight; // 0x350(0x04)
	float UpperBodyBlendMaxSpeedXY; // 0x354(0x04)
	float UpperBodyBlendWeight; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
	struct UAnimSequenceBase* SleepingLoopAnimation; // 0x360(0x08)
	enum class ECharacterHiddenSpawnType _hiddenSpawnType; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	struct FVector _hiddenSpawnMeshOffset; // 0x36c(0x0c)
	float _hiddenSpawnMeshMaxOffsetDistance; // 0x378(0x04)
	struct FVector _hiddenSpawnMeshScale; // 0x37c(0x0c)
	char pad_388[0xc]; // 0x388(0x0c)
	struct FVector _hiddenSpawnMeshStartScale; // 0x394(0x0c)
	float _offsetReturnToOriginalTime; // 0x3a0(0x04)
	char pad_3A4[0xc]; // 0x3a4(0x0c)

	void AnimNotify_Scream(); // Function ConZ.ZombieAnimInstance2.AnimNotify_Scream // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed40
	void AnimNotify_RFootDown(); // Function ConZ.ZombieAnimInstance2.AnimNotify_RFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x2549020
	void AnimNotify_LFootDown(); // Function ConZ.ZombieAnimInstance2.AnimNotify_LFootDown // (Native|Event|Protected|BlueprintEvent) // @ game+0x2549000
	void AnimNotify_HordeScream(); // Function ConZ.ZombieAnimInstance2.AnimNotify_HordeScream // (Native|Event|Protected|BlueprintEvent) // @ game+0x234ed60
	void AnimNotify_GoToRagdoll(); // Function ConZ.ZombieAnimInstance2.AnimNotify_GoToRagdoll // (Native|Event|Protected|BlueprintEvent) // @ game+0x2548fe0
};

// Class ConZ.ZombieArmorDamageReductionAssetData
// Size: 0x58 (Inherited: 0x28)
struct UZombieArmorDamageReductionAssetData : UAssetUserData {
	float CollisionDamageMultiplierPerBodyPart[0xc]; // 0x28(0x30)
};

// Class ConZ.ZombieImpersonatingItemTag
// Size: 0x30 (Inherited: 0x30)
struct UZombieImpersonatingItemTag : UBaseItemTag {
};

// Class ConZ.ZombieKamikazeComponent
// Size: 0x1f8 (Inherited: 0xb0)
struct UZombieKamikazeComponent : UActorComponent {
	struct AConZCharacter* _owningCharacter; // 0xb0(0x08)
	float _initialDelay; // 0xb8(0x04)
	float _beepingDistance; // 0xbc(0x04)
	float _explosionDistance; // 0xc0(0x04)
	float _autoExplosionTime; // 0xc4(0x04)
	float _postMortemExplosionTime; // 0xc8(0x04)
	float _criticalPostMortemExplosionTime; // 0xcc(0x04)
	float _baseDamage; // 0xd0(0x04)
	float _minimumDamage; // 0xd4(0x04)
	float _damageInnerRadius; // 0xd8(0x04)
	float _damageOuterRadius; // 0xdc(0x04)
	float _damageFalloff; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct FTargetTypeDamageMultiplier _targetTypeMultiplier; // 0xe8(0x10)
	float _netCullDistanceSquaredMeters; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UAkAudioEvent* _explosionAudioEvent; // 0x100(0x08)
	struct UAkAudioEvent* _beepingStartAudioEvent; // 0x108(0x08)
	struct UAkAudioEvent* _beepingEndAudioEvent; // 0x110(0x08)
	struct UAkComponent* _beepingAudioComponent; // 0x118(0x08)
	struct UParticleSystem* _explosionPS; // 0x120(0x08)
	struct UMatineeCameraShake* _explosionCameraShakeClass; // 0x128(0x08)
	struct UMaterialInterface* _sootDecal; // 0x130(0x08)
	float _minSootDecalSize; // 0x138(0x04)
	float _maxSootDecalSize; // 0x13c(0x04)
	float _minSootScalarParamValue; // 0x140(0x04)
	float _maxSootScalarParamValue; // 0x144(0x04)
	struct FName _sootScalarParameterValueName; // 0x148(0x08)
	float _decalsLifeSpan; // 0x150(0x04)
	float _decalFadeFactor; // 0x154(0x04)
	int32_t _maximumNumberOfChunksSpawned; // 0x158(0x04)
	float _minVelocityMagnitude; // 0x15c(0x04)
	float _maxVelocityMagnitude; // 0x160(0x04)
	float _velocityHalfAngle; // 0x164(0x04)
	float _timeAfterChunksAreDeleted; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct TArray<struct UStaticMesh*> _bodyPartChunks; // 0x170(0x10)
	struct AMinigame* _minigameClass; // 0x180(0x08)
	struct UBaseItemTag* _minigameToolTag; // 0x188(0x08)
	struct AZombieKamikazeDummyTrap* _dummyTrapItemClass; // 0x190(0x08)
	struct TArray<struct UItemSpawnerPreset*> _spawnerPresets; // 0x198(0x10)
	struct TArray<struct UItemSpawnerPreset2*> _spawnerPresets2; // 0x1a8(0x10)
	char pad_1B8[0xe]; // 0x1b8(0x0e)
	bool _isCriticalPostMortemPhase; // 0x1c6(0x01)
	bool _isDisarmed; // 0x1c7(0x01)
	char pad_1C8[0x20]; // 0x1c8(0x20)
	bool _shouldExplodeOnDeath; // 0x1e8(0x01)
	char pad_1E9[0x3]; // 0x1e9(0x03)
	float _dummyTrapItemDestroyDelay; // 0x1ec(0x04)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	void OnRep_IsDisarmed(); // Function ConZ.ZombieKamikazeComponent.OnRep_IsDisarmed // (Final|Native|Private) // @ game+0x254b5d0
	void OnRep_IsCriticalPostMortemPhase(); // Function ConZ.ZombieKamikazeComponent.OnRep_IsCriticalPostMortemPhase // (Final|Native|Private) // @ game+0xbbc480
	void NetMulticast_HandleExplosion(); // Function ConZ.ZombieKamikazeComponent.NetMulticast_HandleExplosion // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x236cc10
	void Explode(); // Function ConZ.ZombieKamikazeComponent.Explode // (Final|Native|Public) // @ game+0x254b5b0
	void Disarm(); // Function ConZ.ZombieKamikazeComponent.Disarm // (Final|Native|Public) // @ game+0x254b590
};

// Class ConZ.ZombieKamikazeDummyTrap
// Size: 0xaf0 (Inherited: 0xae0)
struct AZombieKamikazeDummyTrap : ATrapItem {
	struct TWeakObjectPtr<struct UZombieKamikazeComponent> _owningComponent; // 0xae0(0x08)
	char pad_AE8[0x8]; // 0xae8(0x08)

	void OnRep_OwningComponent(); // Function ConZ.ZombieKamikazeDummyTrap.OnRep_OwningComponent // (Final|Native|Private) // @ game+0x254b5f0
};

// Class ConZ.ZombieMovementComponent2
// Size: 0xf30 (Inherited: 0xda0)
struct UZombieMovementComponent2 : UConZCharacterMovementComponent {
	char pad_DA0[0x188]; // 0xda0(0x188)
	float _maxAbsoluteVelocityZAfterClimb; // 0xf28(0x04)
	char pad_F2C[0x4]; // 0xf2c(0x04)
};

// Class ConZ.ZombieSoundComponent2
// Size: 0x168 (Inherited: 0x128)
struct UZombieSoundComponent2 : UCharacterSoundComponent {
	struct UAkAudioEvent* RelaxedStanceEnteredAudioEvent; // 0x128(0x08)
	struct UAkAudioEvent* AlertedStanceEnteredAudioEvent; // 0x130(0x08)
	struct UAkAudioEvent* CombatStanceEnteredAudioEvent; // 0x138(0x08)
	struct UAkAudioEvent* FootstepAudioEvent; // 0x140(0x08)
	struct UAkAudioEvent* StopAllAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* DeathAudioEvent; // 0x150(0x08)
	struct UAkAudioEvent* StartSearchCorpseAudioEvent; // 0x158(0x08)
	struct UAkAudioEvent* StopSearchCorpseAudioEvent; // 0x160(0x08)
};

// Class ConZ.ZoneConfigurationDataAsset
// Size: 0x48 (Inherited: 0x30)
struct UZoneConfigurationDataAsset : UDataAsset {
	struct FZoneConfiguration configuration; // 0x30(0x18)
};

// Class ConZ.ZoneRegistry
// Size: 0xb8 (Inherited: 0xb0)
struct UZoneRegistry : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

